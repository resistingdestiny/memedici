{"id":"ad1f03011f0f59c2c588fe07d19f6fb6","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (governance/utils/IVotes.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n */\ninterface IVotes {\n    /**\n     * @dev The signature used has expired.\n     */\n    error VotesExpiredSignature(uint256 expiry);\n\n    /**\n     * @dev Emitted when an account changes their delegate.\n     */\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /**\n     * @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\n     */\n    event DelegateVotesChanged(address indexed delegate, uint256 previousVotes, uint256 newVotes);\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     */\n    function getPastVotes(address account, uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     */\n    function getPastTotalSupply(uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) external view returns (address);\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) external;\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) external;\n}\n"},"@openzeppelin/contracts/governance/utils/Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (governance/utils/Votes.sol)\npragma solidity ^0.8.20;\n\nimport {IERC5805} from \"../../interfaces/IERC5805.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Nonces} from \"../../utils/Nonces.sol\";\nimport {EIP712} from \"../../utils/cryptography/EIP712.sol\";\nimport {Checkpoints} from \"../../utils/structs/Checkpoints.sol\";\nimport {SafeCast} from \"../../utils/math/SafeCast.sol\";\nimport {ECDSA} from \"../../utils/cryptography/ECDSA.sol\";\nimport {Time} from \"../../utils/types/Time.sol\";\n\n/**\n * @dev This is a base abstract contract that tracks voting units, which are a measure of voting power that can be\n * transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of\n * \"representative\" that will pool delegated voting units from different accounts and can then use it to vote in\n * decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to\n * delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative.\n *\n * This contract is often combined with a token contract such that voting units correspond to token units. For an\n * example, see {ERC721Votes}.\n *\n * The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed\n * at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the\n * cost of this history tracking optional.\n *\n * When using this module the derived contract must implement {_getVotingUnits} (for example, make it return\n * {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the\n * previous example, it would be included in {ERC721-_update}).\n */\nabstract contract Votes is Context, EIP712, Nonces, IERC5805 {\n    using Checkpoints for Checkpoints.Trace208;\n\n    bytes32 private constant DELEGATION_TYPEHASH =\n        keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    mapping(address account => address) private _delegatee;\n\n    mapping(address delegatee => Checkpoints.Trace208) private _delegateCheckpoints;\n\n    Checkpoints.Trace208 private _totalCheckpoints;\n\n    /**\n     * @dev The clock was incorrectly modified.\n     */\n    error ERC6372InconsistentClock();\n\n    /**\n     * @dev Lookup to future votes is not available.\n     */\n    error ERC5805FutureLookup(uint256 timepoint, uint48 clock);\n\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based\n     * checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\n     */\n    function clock() public view virtual returns (uint48) {\n        return Time.blockNumber();\n    }\n\n    /**\n     * @dev Machine-readable description of the clock as specified in ERC-6372.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() public view virtual returns (string memory) {\n        // Check that the clock was not modified\n        if (clock() != Time.blockNumber()) {\n            revert ERC6372InconsistentClock();\n        }\n        return \"mode=blocknumber&from=default\";\n    }\n\n    /**\n     * @dev Validate that a timepoint is in the past, and return it as a uint48.\n     */\n    function _validateTimepoint(uint256 timepoint) internal view returns (uint48) {\n        uint48 currentTimepoint = clock();\n        if (timepoint >= currentTimepoint) revert ERC5805FutureLookup(timepoint, currentTimepoint);\n        return SafeCast.toUint48(timepoint);\n    }\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) public view virtual returns (uint256) {\n        return _delegateCheckpoints[account].latest();\n    }\n\n    /**\n     * @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\n     */\n    function getPastVotes(address account, uint256 timepoint) public view virtual returns (uint256) {\n        return _delegateCheckpoints[account].upperLookupRecent(_validateTimepoint(timepoint));\n    }\n\n    /**\n     * @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\n     */\n    function getPastTotalSupply(uint256 timepoint) public view virtual returns (uint256) {\n        return _totalCheckpoints.upperLookupRecent(_validateTimepoint(timepoint));\n    }\n\n    /**\n     * @dev Returns the current total supply of votes.\n     */\n    function _getTotalSupply() internal view virtual returns (uint256) {\n        return _totalCheckpoints.latest();\n    }\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) public view virtual returns (address) {\n        return _delegatee[account];\n    }\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) public virtual {\n        address account = _msgSender();\n        _delegate(account, delegatee);\n    }\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > expiry) {\n            revert VotesExpiredSignature(expiry);\n        }\n        address signer = ECDSA.recover(\n            _hashTypedDataV4(keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry))),\n            v,\n            r,\n            s\n        );\n        _useCheckedNonce(signer, nonce);\n        _delegate(signer, delegatee);\n    }\n\n    /**\n     * @dev Delegate all of `account`'s voting units to `delegatee`.\n     *\n     * Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}.\n     */\n    function _delegate(address account, address delegatee) internal virtual {\n        address oldDelegate = delegates(account);\n        _delegatee[account] = delegatee;\n\n        emit DelegateChanged(account, oldDelegate, delegatee);\n        _moveDelegateVotes(oldDelegate, delegatee, _getVotingUnits(account));\n    }\n\n    /**\n     * @dev Transfers, mints, or burns voting units. To register a mint, `from` should be zero. To register a burn, `to`\n     * should be zero. Total supply of voting units will be adjusted with mints and burns.\n     */\n    function _transferVotingUnits(address from, address to, uint256 amount) internal virtual {\n        if (from == address(0)) {\n            _push(_totalCheckpoints, _add, SafeCast.toUint208(amount));\n        }\n        if (to == address(0)) {\n            _push(_totalCheckpoints, _subtract, SafeCast.toUint208(amount));\n        }\n        _moveDelegateVotes(delegates(from), delegates(to), amount);\n    }\n\n    /**\n     * @dev Moves delegated votes from one delegate to another.\n     */\n    function _moveDelegateVotes(address from, address to, uint256 amount) internal virtual {\n        if (from != to && amount > 0) {\n            if (from != address(0)) {\n                (uint256 oldValue, uint256 newValue) = _push(\n                    _delegateCheckpoints[from],\n                    _subtract,\n                    SafeCast.toUint208(amount)\n                );\n                emit DelegateVotesChanged(from, oldValue, newValue);\n            }\n            if (to != address(0)) {\n                (uint256 oldValue, uint256 newValue) = _push(\n                    _delegateCheckpoints[to],\n                    _add,\n                    SafeCast.toUint208(amount)\n                );\n                emit DelegateVotesChanged(to, oldValue, newValue);\n            }\n        }\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function _numCheckpoints(address account) internal view virtual returns (uint32) {\n        return SafeCast.toUint32(_delegateCheckpoints[account].length());\n    }\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function _checkpoints(\n        address account,\n        uint32 pos\n    ) internal view virtual returns (Checkpoints.Checkpoint208 memory) {\n        return _delegateCheckpoints[account].at(pos);\n    }\n\n    function _push(\n        Checkpoints.Trace208 storage store,\n        function(uint208, uint208) view returns (uint208) op,\n        uint208 delta\n    ) private returns (uint208 oldValue, uint208 newValue) {\n        return store.push(clock(), op(store.latest(), delta));\n    }\n\n    function _add(uint208 a, uint208 b) private pure returns (uint208) {\n        return a + b;\n    }\n\n    function _subtract(uint208 a, uint208 b) private pure returns (uint208) {\n        return a - b;\n    }\n\n    /**\n     * @dev Must return the voting units held by an account.\n     */\n    function _getVotingUnits(address) internal view virtual returns (uint256);\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5805.sol)\n\npragma solidity ^0.8.20;\n\nimport {IVotes} from \"../governance/utils/IVotes.sol\";\nimport {IERC6372} from \"./IERC6372.sol\";\n\ninterface IERC5805 is IERC6372, IVotes {}\n"},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC6372.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC6372 {\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\n     */\n    function clock() external view returns (uint48);\n\n    /**\n     * @dev Description of the clock\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC-20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Votes.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Votes} from \"../../../governance/utils/Votes.sol\";\nimport {Checkpoints} from \"../../../utils/structs/Checkpoints.sol\";\n\n/**\n * @dev Extension of ERC-20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n * and supports token supply up to 2^208^ - 1, while COMP is limited to 2^96^ - 1.\n *\n * NOTE: This contract does not provide interface compatibility with Compound's COMP token.\n *\n * This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n * by calling the {Votes-delegate} function directly, or by providing a signature to be used with {Votes-delegateBySig}. Voting\n * power can be queried through the public accessors {Votes-getVotes} and {Votes-getPastVotes}.\n *\n * By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n * requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n */\nabstract contract ERC20Votes is ERC20, Votes {\n    /**\n     * @dev Total supply cap has been exceeded, introducing a risk of votes overflowing.\n     */\n    error ERC20ExceededSafeSupply(uint256 increasedSupply, uint256 cap);\n\n    /**\n     * @dev Maximum token supply. Defaults to `type(uint208).max` (2^208^ - 1).\n     *\n     * This maximum is enforced in {_update}. It limits the total supply of the token, which is otherwise a uint256,\n     * so that checkpoints can be stored in the Trace208 structure used by {Votes}. Increasing this value will not\n     * remove the underlying limitation, and will cause {_update} to fail because of a math overflow in\n     * {Votes-_transferVotingUnits}. An override could be used to further restrict the total supply (to a lower value) if\n     * additional logic requires it. When resolving override conflicts on this function, the minimum should be\n     * returned.\n     */\n    function _maxSupply() internal view virtual returns (uint256) {\n        return type(uint208).max;\n    }\n\n    /**\n     * @dev Move voting power when tokens are transferred.\n     *\n     * Emits a {IVotes-DelegateVotesChanged} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override {\n        super._update(from, to, value);\n        if (from == address(0)) {\n            uint256 supply = totalSupply();\n            uint256 cap = _maxSupply();\n            if (supply > cap) {\n                revert ERC20ExceededSafeSupply(supply, cap);\n            }\n        }\n        _transferVotingUnits(from, to, value);\n    }\n\n    /**\n     * @dev Returns the voting units of an `account`.\n     *\n     * WARNING: Overriding this function may compromise the internal vote accounting.\n     * `ERC20Votes` assumes tokens map to voting units 1:1 and this is not easy to change.\n     */\n    function _getVotingUnits(address account) internal view virtual override returns (uint256) {\n        return balanceOf(account);\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function numCheckpoints(address account) public view virtual returns (uint32) {\n        return _numCheckpoints(account);\n    }\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function checkpoints(address account, uint32 pos) public view virtual returns (Checkpoints.Checkpoint208 memory) {\n        return _checkpoints(account, pos);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    // slither-disable-next-line constable-states\n    string private _nameFallback;\n    // slither-disable-next-line constable-states\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @inheritdoc IERC5267\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32.\n     */\n    function toDataWithIntendedValidatorHash(\n        address validator,\n        bytes32 messageHash\n    ) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, hex\"19_00\")\n            mstore(0x02, shl(96, validator))\n            mstore(0x16, messageHash)\n            digest := keccak256(0x00, 0x36)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {toShortStringWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/Checkpoints.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/structs/Checkpoints.sol)\n// This file was procedurally generated from scripts/generate/templates/Checkpoints.js.\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"../math/Math.sol\";\n\n/**\n * @dev This library defines the `Trace*` struct, for checkpointing values as they change at different points in\n * time, and later looking up past values by block number. See {Votes} as an example.\n *\n * To create a history of checkpoints define a variable type `Checkpoints.Trace*` in your contract, and store a new\n * checkpoint for the current transaction block using the {push} function.\n */\nlibrary Checkpoints {\n    /**\n     * @dev A value was attempted to be inserted on a past checkpoint.\n     */\n    error CheckpointUnorderedInsertion();\n\n    struct Trace224 {\n        Checkpoint224[] _checkpoints;\n    }\n\n    struct Checkpoint224 {\n        uint32 _key;\n        uint224 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace224 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     *\n     * IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint32).max` key set will disable the\n     * library.\n     */\n    function push(\n        Trace224 storage self,\n        uint32 key,\n        uint224 value\n    ) internal returns (uint224 oldValue, uint224 newValue) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n     * there is none.\n     */\n    function lowerLookup(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     */\n    function upperLookup(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     *\n     * NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n     * keys).\n     */\n    function upperLookupRecent(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace224 storage self) internal view returns (uint224) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace224 storage self) internal view returns (bool exists, uint32 _key, uint224 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint224 storage ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoints.\n     */\n    function length(Trace224 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Returns checkpoint at given position.\n     */\n    function at(Trace224 storage self, uint32 pos) internal view returns (Checkpoint224 memory) {\n        return self._checkpoints[pos];\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint224 value\n    ) private returns (uint224 oldValue, uint224 newValue) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            Checkpoint224 storage last = _unsafeAccess(self, pos - 1);\n            uint32 lastKey = last._key;\n            uint224 lastValue = last._value;\n\n            // Checkpoint keys must be non-decreasing.\n            if (lastKey > key) {\n                revert CheckpointUnorderedInsertion();\n            }\n\n            // Update or push new checkpoint\n            if (lastKey == key) {\n                last._value = value;\n            } else {\n                self.push(Checkpoint224({_key: key, _value: value}));\n            }\n            return (lastValue, value);\n        } else {\n            self.push(Checkpoint224({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key strictly bigger than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key greater or equal than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(\n        Checkpoint224[] storage self,\n        uint256 pos\n    ) private pure returns (Checkpoint224 storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n\n    struct Trace208 {\n        Checkpoint208[] _checkpoints;\n    }\n\n    struct Checkpoint208 {\n        uint48 _key;\n        uint208 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace208 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     *\n     * IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint48).max` key set will disable the\n     * library.\n     */\n    function push(\n        Trace208 storage self,\n        uint48 key,\n        uint208 value\n    ) internal returns (uint208 oldValue, uint208 newValue) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n     * there is none.\n     */\n    function lowerLookup(Trace208 storage self, uint48 key) internal view returns (uint208) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     */\n    function upperLookup(Trace208 storage self, uint48 key) internal view returns (uint208) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     *\n     * NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n     * keys).\n     */\n    function upperLookupRecent(Trace208 storage self, uint48 key) internal view returns (uint208) {\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace208 storage self) internal view returns (uint208) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace208 storage self) internal view returns (bool exists, uint48 _key, uint208 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint208 storage ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoints.\n     */\n    function length(Trace208 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Returns checkpoint at given position.\n     */\n    function at(Trace208 storage self, uint32 pos) internal view returns (Checkpoint208 memory) {\n        return self._checkpoints[pos];\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(\n        Checkpoint208[] storage self,\n        uint48 key,\n        uint208 value\n    ) private returns (uint208 oldValue, uint208 newValue) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            Checkpoint208 storage last = _unsafeAccess(self, pos - 1);\n            uint48 lastKey = last._key;\n            uint208 lastValue = last._value;\n\n            // Checkpoint keys must be non-decreasing.\n            if (lastKey > key) {\n                revert CheckpointUnorderedInsertion();\n            }\n\n            // Update or push new checkpoint\n            if (lastKey == key) {\n                last._value = value;\n            } else {\n                self.push(Checkpoint208({_key: key, _value: value}));\n            }\n            return (lastValue, value);\n        } else {\n            self.push(Checkpoint208({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key strictly bigger than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint208[] storage self,\n        uint48 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key greater or equal than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint208[] storage self,\n        uint48 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(\n        Checkpoint208[] storage self,\n        uint256 pos\n    ) private pure returns (Checkpoint208 storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n\n    struct Trace160 {\n        Checkpoint160[] _checkpoints;\n    }\n\n    struct Checkpoint160 {\n        uint96 _key;\n        uint160 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace160 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     *\n     * IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint96).max` key set will disable the\n     * library.\n     */\n    function push(\n        Trace160 storage self,\n        uint96 key,\n        uint160 value\n    ) internal returns (uint160 oldValue, uint160 newValue) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n     * there is none.\n     */\n    function lowerLookup(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     */\n    function upperLookup(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     *\n     * NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n     * keys).\n     */\n    function upperLookupRecent(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace160 storage self) internal view returns (uint160) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace160 storage self) internal view returns (bool exists, uint96 _key, uint160 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint160 storage ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoints.\n     */\n    function length(Trace160 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Returns checkpoint at given position.\n     */\n    function at(Trace160 storage self, uint32 pos) internal view returns (Checkpoint160 memory) {\n        return self._checkpoints[pos];\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint160 value\n    ) private returns (uint160 oldValue, uint160 newValue) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            Checkpoint160 storage last = _unsafeAccess(self, pos - 1);\n            uint96 lastKey = last._key;\n            uint160 lastValue = last._value;\n\n            // Checkpoint keys must be non-decreasing.\n            if (lastKey > key) {\n                revert CheckpointUnorderedInsertion();\n            }\n\n            // Update or push new checkpoint\n            if (lastKey == key) {\n                last._value = value;\n            } else {\n                self.push(Checkpoint160({_key: key, _value: value}));\n            }\n            return (lastValue, value);\n        } else {\n            self.push(Checkpoint160({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key strictly bigger than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key greater or equal than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(\n        Checkpoint160[] storage self,\n        uint256 pos\n    ) private pure returns (Checkpoint160 storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/types/Time.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/types/Time.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"../math/Math.sol\";\nimport {SafeCast} from \"../math/SafeCast.sol\";\n\n/**\n * @dev This library provides helpers for manipulating time-related objects.\n *\n * It uses the following types:\n * - `uint48` for timepoints\n * - `uint32` for durations\n *\n * While the library doesn't provide specific types for timepoints and duration, it does provide:\n * - a `Delay` type to represent duration that can be programmed to change value automatically at a given point\n * - additional helper functions\n */\nlibrary Time {\n    using Time for *;\n\n    /**\n     * @dev Get the block timestamp as a Timepoint.\n     */\n    function timestamp() internal view returns (uint48) {\n        return SafeCast.toUint48(block.timestamp);\n    }\n\n    /**\n     * @dev Get the block number as a Timepoint.\n     */\n    function blockNumber() internal view returns (uint48) {\n        return SafeCast.toUint48(block.number);\n    }\n\n    // ==================================================== Delay =====================================================\n    /**\n     * @dev A `Delay` is a uint32 duration that can be programmed to change value automatically at a given point in the\n     * future. The \"effect\" timepoint describes when the transitions happens from the \"old\" value to the \"new\" value.\n     * This allows updating the delay applied to some operation while keeping some guarantees.\n     *\n     * In particular, the {update} function guarantees that if the delay is reduced, the old delay still applies for\n     * some time. For example if the delay is currently 7 days to do an upgrade, the admin should not be able to set\n     * the delay to 0 and upgrade immediately. If the admin wants to reduce the delay, the old delay (7 days) should\n     * still apply for some time.\n     *\n     *\n     * The `Delay` type is 112 bits long, and packs the following:\n     *\n     * ```\n     *   | [uint48]: effect date (timepoint)\n     *   |           | [uint32]: value before (duration)\n     *   ↓           ↓       ↓ [uint32]: value after (duration)\n     * 0xAAAAAAAAAAAABBBBBBBBCCCCCCCC\n     * ```\n     *\n     * NOTE: The {get} and {withUpdate} functions operate using timestamps. Block number based delays are not currently\n     * supported.\n     */\n    type Delay is uint112;\n\n    /**\n     * @dev Wrap a duration into a Delay to add the one-step \"update in the future\" feature\n     */\n    function toDelay(uint32 duration) internal pure returns (Delay) {\n        return Delay.wrap(duration);\n    }\n\n    /**\n     * @dev Get the value at a given timepoint plus the pending value and effect timepoint if there is a scheduled\n     * change after this timepoint. If the effect timepoint is 0, then the pending value should not be considered.\n     */\n    function _getFullAt(\n        Delay self,\n        uint48 timepoint\n    ) private pure returns (uint32 valueBefore, uint32 valueAfter, uint48 effect) {\n        (valueBefore, valueAfter, effect) = self.unpack();\n        return effect <= timepoint ? (valueAfter, 0, 0) : (valueBefore, valueAfter, effect);\n    }\n\n    /**\n     * @dev Get the current value plus the pending value and effect timepoint if there is a scheduled change. If the\n     * effect timepoint is 0, then the pending value should not be considered.\n     */\n    function getFull(Delay self) internal view returns (uint32 valueBefore, uint32 valueAfter, uint48 effect) {\n        return _getFullAt(self, timestamp());\n    }\n\n    /**\n     * @dev Get the current value.\n     */\n    function get(Delay self) internal view returns (uint32) {\n        (uint32 delay, , ) = self.getFull();\n        return delay;\n    }\n\n    /**\n     * @dev Update a Delay object so that it takes a new duration after a timepoint that is automatically computed to\n     * enforce the old delay at the moment of the update. Returns the updated Delay object and the timestamp when the\n     * new delay becomes effective.\n     */\n    function withUpdate(\n        Delay self,\n        uint32 newValue,\n        uint32 minSetback\n    ) internal view returns (Delay updatedDelay, uint48 effect) {\n        uint32 value = self.get();\n        uint32 setback = uint32(Math.max(minSetback, value > newValue ? value - newValue : 0));\n        effect = timestamp() + setback;\n        return (pack(value, newValue, effect), effect);\n    }\n\n    /**\n     * @dev Split a delay into its components: valueBefore, valueAfter and effect (transition timepoint).\n     */\n    function unpack(Delay self) internal pure returns (uint32 valueBefore, uint32 valueAfter, uint48 effect) {\n        uint112 raw = Delay.unwrap(self);\n\n        valueAfter = uint32(raw);\n        valueBefore = uint32(raw >> 32);\n        effect = uint48(raw >> 64);\n\n        return (valueBefore, valueAfter, effect);\n    }\n\n    /**\n     * @dev pack the components into a Delay object.\n     */\n    function pack(uint32 valueBefore, uint32 valueAfter, uint48 effect) internal pure returns (Delay) {\n        return Delay.wrap((uint112(effect) << 64) | (uint112(valueBefore) << 32) | uint112(valueAfter));\n    }\n}\n"},"contracts/AgentLaunchpadCoreV2Minimal.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"./AgentToken.sol\";\n\ninterface ISimpleAMM {\n    function createLiquidityPool(uint256 agentId, address tokenAddress, uint256 tokenAmount, string calldata agentConfigJSON) external payable returns (address lpPair);\n}\n\ncontract AgentLaunchpadCoreV2Minimal is Ownable, ReentrancyGuard {\n    \n    struct AgentConfig {\n        string name;\n        string symbol;\n        string agentName;\n        uint256 fundingTarget;\n        uint256 tokenSupply;\n        address creator;\n        bool isBonded;\n        uint256 totalRaised;\n        address tokenAddress;\n        address lpPairAddress;\n        string agentConfigJSON;\n    }\n    \n    uint256 private _agentIdCounter;\n    mapping(uint256 => AgentConfig) public agents;\n    mapping(uint256 => mapping(address => uint256)) public contributions;\n    uint256[] public bondedAgentIds;\n    uint256[] public inProgressAgentIds;\n    mapping(address => uint256) public tokenToAgentId;\n    \n    address public treasuryAddress;\n    address public liquidityManager;\n    uint256 public protocolFeePercentage = 300;\n    uint256 public constant BASIS_POINTS = 10000;\n    uint256 public defaultLiquidityPercentage = 8000;\n    uint256 public defaultTokenLPPercentage = 9000;\n    \n    event AgentCreated(uint256 indexed agentId, address indexed creator, address tokenAddress);\n    event Contributed(uint256 indexed agentId, address indexed contributor, uint256 amount);\n    event AgentBonded(uint256 indexed agentId, address indexed tokenAddress, address indexed lpPairAddress);\n    \n    constructor(address _treasuryAddress) Ownable(msg.sender) {\n        require(_treasuryAddress != address(0), \"Invalid treasury\");\n        treasuryAddress = _treasuryAddress;\n    }\n    \n    function createAgent(\n        string calldata name,\n        string calldata symbol,\n        string calldata agentName,\n        string calldata archetype,\n        string calldata metadataURI,\n        uint256 fundingTarget,\n        uint256 tokenSupply,\n        string calldata agentConfigJSON\n    ) external returns (uint256 agentId) {\n        require(fundingTarget > 0 && tokenSupply > 0, \"Invalid params\");\n        \n        agentId = _agentIdCounter++;\n        \n        AgentToken agentToken = new AgentToken(name, symbol, agentName, archetype, metadataURI, tokenSupply, address(this), agentConfigJSON);\n        \n        agents[agentId] = AgentConfig({\n            name: name,\n            symbol: symbol,\n            agentName: agentName,\n            fundingTarget: fundingTarget,\n            tokenSupply: tokenSupply,\n            creator: msg.sender,\n            isBonded: false,\n            totalRaised: 0,\n            tokenAddress: address(agentToken),\n            lpPairAddress: address(0),\n            agentConfigJSON: agentConfigJSON\n        });\n        \n        inProgressAgentIds.push(agentId);\n        tokenToAgentId[address(agentToken)] = agentId;\n        \n        emit AgentCreated(agentId, msg.sender, address(agentToken));\n    }\n    \n    function contribute(uint256 agentId) external payable nonReentrant {\n        AgentConfig storage agent = agents[agentId];\n        require(agent.creator != address(0), \"Agent not found\");\n        require(!agent.isBonded, \"Already bonded\");\n        require(msg.value > 0, \"No value\");\n        require(agent.totalRaised + msg.value <= agent.fundingTarget, \"Exceeds target\");\n        \n        contributions[agentId][msg.sender] += msg.value;\n        agent.totalRaised += msg.value;\n        \n        emit Contributed(agentId, msg.sender, msg.value);\n        \n        if (agent.totalRaised >= agent.fundingTarget) {\n            _bondAgent(agentId);\n        }\n    }\n    \n    function _bondAgent(uint256 agentId) internal {\n        AgentConfig storage agent = agents[agentId];\n        \n        uint256 protocolFee = (agent.totalRaised * protocolFeePercentage) / BASIS_POINTS;\n        uint256 liquidityETH = ((agent.totalRaised - protocolFee) * defaultLiquidityPercentage) / BASIS_POINTS;\n        uint256 remainingETH = agent.totalRaised - protocolFee - liquidityETH;\n        \n        agent.isBonded = true;\n        \n        _removeFromInProgress(agentId);\n        bondedAgentIds.push(agentId);\n        \n        if (protocolFee > 0) {\n            payable(treasuryAddress).transfer(protocolFee);\n        }\n        \n        if (remainingETH > 0) {\n            payable(agent.creator).transfer(remainingETH);\n        }\n        \n        address lpPair = address(0);\n        if (liquidityManager != address(0) && liquidityETH > 0) {\n            uint256 liquidityTokens = (agent.tokenSupply * defaultTokenLPPercentage) / BASIS_POINTS;\n            \n            AgentToken agentToken = AgentToken(agent.tokenAddress);\n            agentToken.approve(liquidityManager, agent.tokenSupply);\n            \n            try ISimpleAMM(liquidityManager).createLiquidityPool{value: liquidityETH}(agentId, agent.tokenAddress, liquidityTokens, agent.agentConfigJSON) returns (address _lpPair) {\n                lpPair = _lpPair;\n                agent.lpPairAddress = lpPair;\n            } catch {\n                agentToken.transfer(treasuryAddress, agent.tokenSupply);\n            }\n        } else {\n            AgentToken(agent.tokenAddress).transfer(treasuryAddress, agent.tokenSupply);\n        }\n        \n        emit AgentBonded(agentId, agent.tokenAddress, lpPair);\n    }\n    \n    function _removeFromInProgress(uint256 agentId) internal {\n        for (uint256 i = 0; i < inProgressAgentIds.length; i++) {\n            if (inProgressAgentIds[i] == agentId) {\n                inProgressAgentIds[i] = inProgressAgentIds[inProgressAgentIds.length - 1];\n                inProgressAgentIds.pop();\n                break;\n            }\n        }\n    }\n    \n    // Essential view functions\n    function getAllBondedTokens() external view returns (address[] memory tokenAddresses, string[] memory names, string[] memory symbols, address[] memory lpPairs, uint256[] memory agentIds) {\n        uint256 bondedCount = bondedAgentIds.length;\n        tokenAddresses = new address[](bondedCount);\n        names = new string[](bondedCount);\n        symbols = new string[](bondedCount);\n        lpPairs = new address[](bondedCount);\n        agentIds = new uint256[](bondedCount);\n        \n        for (uint256 i = 0; i < bondedCount; i++) {\n            uint256 agentId = bondedAgentIds[i];\n            AgentConfig storage agent = agents[agentId];\n            tokenAddresses[i] = agent.tokenAddress;\n            names[i] = agent.name;\n            symbols[i] = agent.symbol;\n            lpPairs[i] = agent.lpPairAddress;\n            agentIds[i] = agentId;\n        }\n    }\n    \n    function getInProgressAgents() external view returns (uint256[] memory agentIds, string[] memory agentNames, uint256[] memory fundingTargets, uint256[] memory totalRaised, address[] memory tokenAddresses) {\n        uint256 inProgressCount = inProgressAgentIds.length;\n        agentIds = new uint256[](inProgressCount);\n        agentNames = new string[](inProgressCount);\n        fundingTargets = new uint256[](inProgressCount);\n        totalRaised = new uint256[](inProgressCount);\n        tokenAddresses = new address[](inProgressCount);\n        \n        for (uint256 i = 0; i < inProgressCount; i++) {\n            uint256 agentId = inProgressAgentIds[i];\n            AgentConfig storage agent = agents[agentId];\n            agentIds[i] = agentId;\n            agentNames[i] = agent.agentName;\n            fundingTargets[i] = agent.fundingTarget;\n            totalRaised[i] = agent.totalRaised;\n            tokenAddresses[i] = agent.tokenAddress;\n        }\n    }\n    \n    function getAgentByTokenAddress(address tokenAddress) external view returns (uint256) {\n        return tokenToAgentId[tokenAddress];\n    }\n    \n    function getTotalCounts() external view returns (uint256 totalAgents, uint256 bondedAgents, uint256 inProgressAgents) {\n        totalAgents = _agentIdCounter;\n        bondedAgents = bondedAgentIds.length;\n        inProgressAgents = inProgressAgentIds.length;\n    }\n    \n    function getAgentInfo(uint256 agentId) external view returns (string memory name, string memory agentName, uint256 fundingTarget, uint256 totalRaised, bool isBonded, address creator, address tokenAddress, address lpPairAddress, string memory agentConfigJSON) {\n        AgentConfig storage agent = agents[agentId];\n        require(agent.creator != address(0), \"Agent not found\");\n        return (agent.name, agent.agentName, agent.fundingTarget, agent.totalRaised, agent.isBonded, agent.creator, agent.tokenAddress, agent.lpPairAddress, agent.agentConfigJSON);\n    }\n    \n    function getCurrentAgentId() external view returns (uint256) {\n        return _agentIdCounter;\n    }\n    \n    function isAgentBonded(uint256 agentId) external view returns (bool) {\n        return agents[agentId].isBonded;\n    }\n    \n    function getLiquidityPool(uint256 agentId) external view returns (address) {\n        return agents[agentId].lpPairAddress;\n    }\n    \n    // Admin functions\n    function setLiquidityManager(address _liquidityManager) external onlyOwner {\n        liquidityManager = _liquidityManager;\n    }\n    \n    function setTreasuryAddress(address _treasuryAddress) external onlyOwner {\n        require(_treasuryAddress != address(0), \"Invalid address\");\n        treasuryAddress = _treasuryAddress;\n    }\n    \n    function setProtocolFeePercentage(uint256 _feePercentage) external onlyOwner {\n        require(_feePercentage <= 1000, \"Fee too high\");\n        protocolFeePercentage = _feePercentage;\n    }\n    \n    function emergencyWithdraw() external onlyOwner {\n        payable(owner()).transfer(address(this).balance);\n    }\n    \n    receive() external payable {}\n} "},"contracts/AgentToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/Nonces.sol\";\n\n/**\n * @title AgentToken\n * @dev ERC20 token representing ownership in an AI creative agent\n * Features revenue distribution and governance capabilities\n */\ncontract AgentToken is ERC20, ERC20Votes, ERC20Permit, Ownable, ReentrancyGuard {\n    \n    // Agent Identity & Metadata\n    string private _agentName;\n    string private _archetype;\n    string private _metadataURI;\n    string private _agentConfigJSON;  // Complete agent configuration JSON\n    \n    // Revenue Distribution\n    uint256 public totalRevenue;\n    uint256 public totalDistributedRevenue;\n    mapping(address => uint256) public claimedRevenue;\n    mapping(address => uint256) private lastClaimSnapshot;\n    \n    // Revenue tracking for pro-rata distribution\n    uint256 private constant PRECISION = 1e18;\n    uint256 public revenuePerToken;\n    \n    // Revenue source authorization\n    mapping(address => bool) public authorizedRevenueSources;\n    \n    // Events\n    event RevenueDeposited(uint256 amount, address indexed source);\n    event RevenueClaimed(address indexed user, uint256 amount);\n    event MetadataUpdated(string newMetadataURI);\n    event AgentConfigUpdated(string newAgentConfigJSON);\n    event RevenueSourceAuthorized(address indexed source, bool authorized);\n    \n    // Errors\n    error NoClaimableRevenue();\n    error UnauthorizedRevenueSource();\n    error InvalidMetadataURI();\n    error InvalidAgentConfig();\n    error TransferFailed();\n    \n    constructor(\n        string memory name_,\n        string memory symbol_,\n        string memory agentName_,\n        string memory archetype_,\n        string memory metadataURI_,\n        uint256 totalSupply_,\n        address owner_,\n        string memory agentConfigJSON_\n    ) \n        ERC20(name_, symbol_) \n        ERC20Permit(name_)\n        Ownable(owner_)\n    {\n        _agentName = agentName_;\n        _archetype = archetype_;\n        _metadataURI = metadataURI_;\n        _agentConfigJSON = agentConfigJSON_;\n        \n        // Mint total supply to owner (launchpad contract)\n        _mint(owner_, totalSupply_);\n        \n        // Initialize ERC20Votes\n        _delegate(owner_, owner_);\n    }\n    \n    // Agent Identity Functions\n    \n    /**\n     * @dev Returns the agent's creative name\n     */\n    function agentName() external view returns (string memory) {\n        return _agentName;\n    }\n    \n    /**\n     * @dev Returns the agent's archetype (e.g., \"Digital Painter\", \"Music Producer\")\n     */\n    function archetype() external view returns (string memory) {\n        return _archetype;\n    }\n    \n    /**\n     * @dev Returns the metadata URI (IPFS hash containing agent config)\n     */\n    function metadataURI() external view returns (string memory) {\n        return _metadataURI;\n    }\n    \n    /**\n     * @dev Returns the complete agent configuration JSON\n     */\n    function agentConfigJSON() external view returns (string memory) {\n        return _agentConfigJSON;\n    }\n    \n    /**\n     * @dev Updates the metadata URI (onlyOwner)\n     */\n    function setMetadataURI(string calldata newMetadataURI) external onlyOwner {\n        if (bytes(newMetadataURI).length == 0) revert InvalidMetadataURI();\n        _metadataURI = newMetadataURI;\n        emit MetadataUpdated(newMetadataURI);\n    }\n    \n    /**\n     * @dev Updates the agent configuration JSON (onlyOwner)\n     */\n    function setAgentConfigJSON(string calldata newAgentConfigJSON) external onlyOwner {\n        if (bytes(newAgentConfigJSON).length == 0) revert InvalidAgentConfig();\n        _agentConfigJSON = newAgentConfigJSON;\n        emit AgentConfigUpdated(newAgentConfigJSON);\n    }\n    \n    // Revenue Distribution Functions\n    \n    /**\n     * @dev Deposits revenue to be distributed among token holders\n     * Can be called by authorized sources (e.g., royalty contracts, licensing)\n     */\n    function depositRevenue() external payable {\n        if (!authorizedRevenueSources[msg.sender] && msg.sender != owner()) {\n            revert UnauthorizedRevenueSource();\n        }\n        \n        if (msg.value > 0) {\n            totalRevenue += msg.value;\n            \n            // Update revenue per token for pro-rata distribution\n            uint256 supply = totalSupply();\n            if (supply > 0) {\n                revenuePerToken += (msg.value * PRECISION) / supply;\n            }\n            \n            emit RevenueDeposited(msg.value, msg.sender);\n        }\n    }\n    \n    /**\n     * @dev Claims accumulated revenue for the caller\n     */\n    function claimRevenue() external nonReentrant {\n        uint256 claimable = getClaimableRevenue(msg.sender);\n        if (claimable == 0) revert NoClaimableRevenue();\n        \n        claimedRevenue[msg.sender] += claimable;\n        lastClaimSnapshot[msg.sender] = revenuePerToken;\n        totalDistributedRevenue += claimable;\n        \n        (bool success, ) = payable(msg.sender).call{value: claimable}(\"\");\n        if (!success) revert TransferFailed();\n        \n        emit RevenueClaimed(msg.sender, claimable);\n    }\n    \n    /**\n     * @dev Returns claimable revenue for a specific address\n     */\n    function getClaimableRevenue(address account) public view returns (uint256) {\n        uint256 balance = balanceOf(account);\n        if (balance == 0) return 0;\n        \n        uint256 revenuePerTokenDiff = revenuePerToken - lastClaimSnapshot[account];\n        return (balance * revenuePerTokenDiff) / PRECISION;\n    }\n    \n    /**\n     * @dev Returns total unclaimed revenue for an address\n     */\n    function unclaimedRevenue(address account) external view returns (uint256) {\n        return getClaimableRevenue(account);\n    }\n    \n    /**\n     * @dev Authorizes or deauthorizes a revenue source\n     */\n    function setRevenueSource(address source, bool authorized) external onlyOwner {\n        authorizedRevenueSources[source] = authorized;\n        emit RevenueSourceAuthorized(source, authorized);\n    }\n    \n    // Override required functions for ERC20Votes compatibility\n    \n    function _update(\n        address from,\n        address to,\n        uint256 amount\n    ) internal override(ERC20, ERC20Votes) {\n        super._update(from, to, amount);\n        \n        // Update revenue snapshots for transfers\n        if (from != address(0) && to != address(0)) {\n            // Update snapshots to current revenuePerToken\n            lastClaimSnapshot[from] = revenuePerToken;\n            lastClaimSnapshot[to] = revenuePerToken;\n        } else if (to != address(0)) {\n            // Minting - set snapshot for new holder\n            lastClaimSnapshot[to] = revenuePerToken;\n        }\n    }\n    \n    function nonces(address owner) public view virtual override(ERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n    \n    // Emergency Functions\n    \n    /**\n     * @dev Emergency withdrawal function (onlyOwner)\n     */\n    function emergencyWithdraw() external onlyOwner {\n        uint256 balance = address(this).balance;\n        (bool success, ) = payable(owner()).call{value: balance}(\"\");\n        if (!success) revert TransferFailed();\n    }\n    \n    /**\n     * @dev Returns contract's ETH balance\n     */\n    function contractBalance() external view returns (uint256) {\n        return address(this).balance;\n    }\n    \n    // View Functions\n    \n    /**\n     * @dev Returns comprehensive agent info\n     */\n    function getAgentInfo() external view returns (\n        string memory name_,\n        string memory symbol_,\n        string memory agentName_,\n        string memory archetype_,\n        string memory metadataURI_,\n        uint256 totalSupply_,\n        uint256 totalRevenue_,\n        uint256 totalDistributedRevenue_,\n        string memory agentConfigJSON_\n    ) {\n        return (\n            name(),\n            symbol(),\n            _agentName,\n            _archetype,\n            _metadataURI,\n            totalSupply(),\n            totalRevenue,\n            totalDistributedRevenue,\n            _agentConfigJSON\n        );\n    }\n} "}},"settings":{"optimizer":{"enabled":true,"runs":5000},"viaIR":true,"metadata":{"bytecodeHash":"none"},"outputSelection":{"*":{"*":["evm.bytecode","evm.deployedBytecode","abi","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}},"evmVersion":"paris"}},"output":{"errors":[{"component":"general","errorCode":"5574","formattedMessage":"Warning: Contract code size is 27668 bytes and exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on Mainnet. Consider enabling the optimizer (with a low \"runs\" value!), turning off revert strings, or using libraries.\n  --> contracts/AgentLaunchpadCoreV2Minimal.sol:12:1:\n   |\n12 | contract AgentLaunchpadCoreV2Minimal is Ownable, ReentrancyGuard {\n   | ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Contract code size is 27668 bytes and exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on Mainnet. Consider enabling the optimizer (with a low \"runs\" value!), turning off revert strings, or using libraries.","severity":"warning","sourceLocation":{"end":9826,"file":"contracts/AgentLaunchpadCoreV2Minimal.sol","start":394},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1932],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1933,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1932,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1932],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","exportedSymbols":{"IVotes":[230]},"id":231,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"110:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IVotes","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"136:102:1","text":" @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts."},"fullyImplemented":false,"id":230,"linearizedBaseContracts":[230],"name":"IVotes","nameLocation":"249:6:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"262:55:1","text":" @dev The signature used has expired."},"errorSelector":"4683af0e","id":155,"name":"VotesExpiredSignature","nameLocation":"328:21:1","nodeType":"ErrorDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"expiry","nameLocation":"358:6:1","nodeType":"VariableDeclaration","scope":155,"src":"350:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":152,"name":"uint256","nodeType":"ElementaryTypeName","src":"350:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"349:16:1"},"src":"322:44:1"},{"anonymous":false,"documentation":{"id":156,"nodeType":"StructuredDocumentation","src":"372:71:1","text":" @dev Emitted when an account changes their delegate."},"eventSelector":"3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f","id":164,"name":"DelegateChanged","nameLocation":"454:15:1","nodeType":"EventDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":158,"indexed":true,"mutability":"mutable","name":"delegator","nameLocation":"486:9:1","nodeType":"VariableDeclaration","scope":164,"src":"470:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":157,"name":"address","nodeType":"ElementaryTypeName","src":"470:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":160,"indexed":true,"mutability":"mutable","name":"fromDelegate","nameLocation":"513:12:1","nodeType":"VariableDeclaration","scope":164,"src":"497:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":159,"name":"address","nodeType":"ElementaryTypeName","src":"497:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":162,"indexed":true,"mutability":"mutable","name":"toDelegate","nameLocation":"543:10:1","nodeType":"VariableDeclaration","scope":164,"src":"527:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"527:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"469:85:1"},"src":"448:107:1"},{"anonymous":false,"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"561:131:1","text":" @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units."},"eventSelector":"dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724","id":173,"name":"DelegateVotesChanged","nameLocation":"703:20:1","nodeType":"EventDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"indexed":true,"mutability":"mutable","name":"delegate","nameLocation":"740:8:1","nodeType":"VariableDeclaration","scope":173,"src":"724:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"724:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":169,"indexed":false,"mutability":"mutable","name":"previousVotes","nameLocation":"758:13:1","nodeType":"VariableDeclaration","scope":173,"src":"750:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":168,"name":"uint256","nodeType":"ElementaryTypeName","src":"750:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":171,"indexed":false,"mutability":"mutable","name":"newVotes","nameLocation":"781:8:1","nodeType":"VariableDeclaration","scope":173,"src":"773:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":170,"name":"uint256","nodeType":"ElementaryTypeName","src":"773:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"723:67:1"},"src":"697:94:1"},{"documentation":{"id":174,"nodeType":"StructuredDocumentation","src":"797:79:1","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":181,"implemented":false,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"890:8:1","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"mutability":"mutable","name":"account","nameLocation":"907:7:1","nodeType":"VariableDeclaration","scope":181,"src":"899:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":175,"name":"address","nodeType":"ElementaryTypeName","src":"899:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"898:17:1"},"returnParameters":{"id":180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":181,"src":"939:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":178,"name":"uint256","nodeType":"ElementaryTypeName","src":"939:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"938:9:1"},"scope":230,"src":"881:67:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":182,"nodeType":"StructuredDocumentation","src":"954:230:1","text":" @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block."},"functionSelector":"3a46b1a8","id":191,"implemented":false,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"1198:12:1","nodeType":"FunctionDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"account","nameLocation":"1219:7:1","nodeType":"VariableDeclaration","scope":191,"src":"1211:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":183,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":186,"mutability":"mutable","name":"timepoint","nameLocation":"1236:9:1","nodeType":"VariableDeclaration","scope":191,"src":"1228:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":185,"name":"uint256","nodeType":"ElementaryTypeName","src":"1228:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:36:1"},"returnParameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":191,"src":"1270:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":188,"name":"uint256","nodeType":"ElementaryTypeName","src":"1270:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1269:9:1"},"scope":230,"src":"1189:90:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":192,"nodeType":"StructuredDocumentation","src":"1285:481:1","text":" @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote."},"functionSelector":"8e539e8c","id":199,"implemented":false,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"1780:18:1","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":194,"mutability":"mutable","name":"timepoint","nameLocation":"1807:9:1","nodeType":"VariableDeclaration","scope":199,"src":"1799:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":193,"name":"uint256","nodeType":"ElementaryTypeName","src":"1799:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1798:19:1"},"returnParameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":199,"src":"1841:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":196,"name":"uint256","nodeType":"ElementaryTypeName","src":"1841:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1840:9:1"},"scope":230,"src":"1771:79:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"1856:71:1","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":207,"implemented":false,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"1941:9:1","nodeType":"FunctionDefinition","parameters":{"id":203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"mutability":"mutable","name":"account","nameLocation":"1959:7:1","nodeType":"VariableDeclaration","scope":207,"src":"1951:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"1951:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1950:17:1"},"returnParameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":207,"src":"1991:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":204,"name":"address","nodeType":"ElementaryTypeName","src":"1991:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1990:9:1"},"scope":230,"src":"1932:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":208,"nodeType":"StructuredDocumentation","src":"2006:71:1","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":213,"implemented":false,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"2091:8:1","nodeType":"FunctionDefinition","parameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"delegatee","nameLocation":"2108:9:1","nodeType":"VariableDeclaration","scope":213,"src":"2100:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":209,"name":"address","nodeType":"ElementaryTypeName","src":"2100:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2099:19:1"},"returnParameters":{"id":212,"nodeType":"ParameterList","parameters":[],"src":"2127:0:1"},"scope":230,"src":"2082:46:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":214,"nodeType":"StructuredDocumentation","src":"2134:67:1","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":229,"implemented":false,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"2215:13:1","nodeType":"FunctionDefinition","parameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":216,"mutability":"mutable","name":"delegatee","nameLocation":"2237:9:1","nodeType":"VariableDeclaration","scope":229,"src":"2229:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":215,"name":"address","nodeType":"ElementaryTypeName","src":"2229:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":218,"mutability":"mutable","name":"nonce","nameLocation":"2256:5:1","nodeType":"VariableDeclaration","scope":229,"src":"2248:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":217,"name":"uint256","nodeType":"ElementaryTypeName","src":"2248:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":220,"mutability":"mutable","name":"expiry","nameLocation":"2271:6:1","nodeType":"VariableDeclaration","scope":229,"src":"2263:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":219,"name":"uint256","nodeType":"ElementaryTypeName","src":"2263:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"v","nameLocation":"2285:1:1","nodeType":"VariableDeclaration","scope":229,"src":"2279:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":221,"name":"uint8","nodeType":"ElementaryTypeName","src":"2279:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"r","nameLocation":"2296:1:1","nodeType":"VariableDeclaration","scope":229,"src":"2288:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":223,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2288:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":226,"mutability":"mutable","name":"s","nameLocation":"2307:1:1","nodeType":"VariableDeclaration","scope":229,"src":"2299:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2299:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2228:81:1"},"returnParameters":{"id":228,"nodeType":"ParameterList","parameters":[],"src":"2318:0:1"},"scope":230,"src":"2206:113:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":231,"src":"239:2082:1","usedErrors":[155],"usedEvents":[164,173]}],"src":"110:2212:1"},"id":1},"@openzeppelin/contracts/governance/utils/Votes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/utils/Votes.sol","exportedSymbols":{"Checkpoints":[9636],"Context":[1932],"ECDSA":[4212],"EIP712":[4439],"IERC5805":[809],"Nonces":[2000],"SafeCast":[7911],"Time":[9910],"Votes":[773]},"id":774,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":232,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5805.sol","file":"../../interfaces/IERC5805.sol","id":234,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":774,"sourceUnit":810,"src":"135:55:2","symbolAliases":[{"foreign":{"id":233,"name":"IERC5805","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"143:8:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":236,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":774,"sourceUnit":1933,"src":"191:48:2","symbolAliases":[{"foreign":{"id":235,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"199:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../utils/Nonces.sol","id":238,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":774,"sourceUnit":2001,"src":"240:46:2","symbolAliases":[{"foreign":{"id":237,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"248:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../utils/cryptography/EIP712.sol","id":240,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":774,"sourceUnit":4440,"src":"287:59:2","symbolAliases":[{"foreign":{"id":239,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"295:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/Checkpoints.sol","file":"../../utils/structs/Checkpoints.sol","id":242,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":774,"sourceUnit":9637,"src":"347:64:2","symbolAliases":[{"foreign":{"id":241,"name":"Checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9636,"src":"355:11:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../../utils/math/SafeCast.sol","id":244,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":774,"sourceUnit":7912,"src":"412:55:2","symbolAliases":[{"foreign":{"id":243,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"420:8:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../utils/cryptography/ECDSA.sol","id":246,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":774,"sourceUnit":4213,"src":"468:57:2","symbolAliases":[{"foreign":{"id":245,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"476:5:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/types/Time.sol","file":"../../utils/types/Time.sol","id":248,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":774,"sourceUnit":9911,"src":"526:48:2","symbolAliases":[{"foreign":{"id":247,"name":"Time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9910,"src":"534:4:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":250,"name":"Context","nameLocations":["1919:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1932,"src":"1919:7:2"},"id":251,"nodeType":"InheritanceSpecifier","src":"1919:7:2"},{"baseName":{"id":252,"name":"EIP712","nameLocations":["1928:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":4439,"src":"1928:6:2"},"id":253,"nodeType":"InheritanceSpecifier","src":"1928:6:2"},{"baseName":{"id":254,"name":"Nonces","nameLocations":["1936:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":2000,"src":"1936:6:2"},"id":255,"nodeType":"InheritanceSpecifier","src":"1936:6:2"},{"baseName":{"id":256,"name":"IERC5805","nameLocations":["1944:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":809,"src":"1944:8:2"},"id":257,"nodeType":"InheritanceSpecifier","src":"1944:8:2"}],"canonicalName":"Votes","contractDependencies":[],"contractKind":"contract","documentation":{"id":249,"nodeType":"StructuredDocumentation","src":"576:1315:2","text":" @dev This is a base abstract contract that tracks voting units, which are a measure of voting power that can be\n transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of\n \"representative\" that will pool delegated voting units from different accounts and can then use it to vote in\n decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to\n delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative.\n This contract is often combined with a token contract such that voting units correspond to token units. For an\n example, see {ERC721Votes}.\n The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed\n at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the\n cost of this history tracking optional.\n When using this module the derived contract must implement {_getVotingUnits} (for example, make it return\n {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the\n previous example, it would be included in {ERC721-_update})."},"fullyImplemented":false,"id":773,"internalFunctionIDs":{"750":1,"764":2},"linearizedBaseContracts":[773,809,230,824,2000,4439,798,1932],"name":"Votes","nameLocation":"1910:5:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":261,"libraryName":{"id":258,"name":"Checkpoints","nameLocations":["1965:11:2"],"nodeType":"IdentifierPath","referencedDeclaration":9636,"src":"1965:11:2"},"nodeType":"UsingForDirective","src":"1959:43:2","typeName":{"id":260,"nodeType":"UserDefinedTypeName","pathNode":{"id":259,"name":"Checkpoints.Trace208","nameLocations":["1981:11:2","1993:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":8592,"src":"1981:20:2"},"referencedDeclaration":8592,"src":"1981:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208"}}},{"constant":true,"id":266,"mutability":"constant","name":"DELEGATION_TYPEHASH","nameLocation":"2033:19:2","nodeType":"VariableDeclaration","scope":773,"src":"2008:126:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2008:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929","id":264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2073:60:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""},"value":"Delegation(address delegatee,uint256 nonce,uint256 expiry)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""}],"id":263,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2063:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2063:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":270,"mutability":"mutable","name":"_delegatee","nameLocation":"2185:10:2","nodeType":"VariableDeclaration","scope":773,"src":"2141:54:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":269,"keyName":"account","keyNameLocation":"2157:7:2","keyType":{"id":267,"name":"address","nodeType":"ElementaryTypeName","src":"2149:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2141:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"2168:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":275,"mutability":"mutable","name":"_delegateCheckpoints","nameLocation":"2261:20:2","nodeType":"VariableDeclaration","scope":773,"src":"2202:79:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$8592_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208)"},"typeName":{"id":274,"keyName":"delegatee","keyNameLocation":"2218:9:2","keyType":{"id":271,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2202:50:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$8592_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":273,"nodeType":"UserDefinedTypeName","pathNode":{"id":272,"name":"Checkpoints.Trace208","nameLocations":["2231:11:2","2243:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":8592,"src":"2231:20:2"},"referencedDeclaration":8592,"src":"2231:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208"}}},"visibility":"private"},{"constant":false,"id":278,"mutability":"mutable","name":"_totalCheckpoints","nameLocation":"2317:17:2","nodeType":"VariableDeclaration","scope":773,"src":"2288:46:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":277,"nodeType":"UserDefinedTypeName","pathNode":{"id":276,"name":"Checkpoints.Trace208","nameLocations":["2288:11:2","2300:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":8592,"src":"2288:20:2"},"referencedDeclaration":8592,"src":"2288:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"private"},{"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"2341:59:2","text":" @dev The clock was incorrectly modified."},"errorSelector":"6ff07140","id":281,"name":"ERC6372InconsistentClock","nameLocation":"2411:24:2","nodeType":"ErrorDefinition","parameters":{"id":280,"nodeType":"ParameterList","parameters":[],"src":"2435:2:2"},"src":"2405:33:2"},{"documentation":{"id":282,"nodeType":"StructuredDocumentation","src":"2444:64:2","text":" @dev Lookup to future votes is not available."},"errorSelector":"ecd3f81e","id":288,"name":"ERC5805FutureLookup","nameLocation":"2519:19:2","nodeType":"ErrorDefinition","parameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":284,"mutability":"mutable","name":"timepoint","nameLocation":"2547:9:2","nodeType":"VariableDeclaration","scope":288,"src":"2539:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":283,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":286,"mutability":"mutable","name":"clock","nameLocation":"2565:5:2","nodeType":"VariableDeclaration","scope":288,"src":"2558:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":285,"name":"uint48","nodeType":"ElementaryTypeName","src":"2558:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2538:33:2"},"src":"2513:59:2"},{"baseFunctions":[817],"body":{"id":298,"nodeType":"Block","src":"2843:42:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":294,"name":"Time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9910,"src":"2860:4:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Time_$9910_$","typeString":"type(library Time)"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2865:11:2","memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":9671,"src":"2860:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2860:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":293,"id":297,"nodeType":"Return","src":"2853:25:2"}]},"documentation":{"id":289,"nodeType":"StructuredDocumentation","src":"2578:206:2","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based\n checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match."},"functionSelector":"91ddadf4","id":299,"implemented":true,"kind":"function","modifiers":[],"name":"clock","nameLocation":"2798:5:2","nodeType":"FunctionDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[],"src":"2803:2:2"},"returnParameters":{"id":293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":299,"src":"2835:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":291,"name":"uint48","nodeType":"ElementaryTypeName","src":"2835:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2834:8:2"},"scope":773,"src":"2789:96:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[823],"body":{"id":318,"nodeType":"Block","src":"3106:206:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":305,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"3169:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3169:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":307,"name":"Time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9910,"src":"3180:4:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Time_$9910_$","typeString":"type(library Time)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3185:11:2","memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":9671,"src":"3180:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3180:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"3169:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":315,"nodeType":"IfStatement","src":"3165:93:2","trueBody":{"id":314,"nodeType":"Block","src":"3200:58:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":311,"name":"ERC6372InconsistentClock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"3221:24:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3221:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":313,"nodeType":"RevertStatement","src":"3214:33:2"}]}},{"expression":{"hexValue":"6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74","id":316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3274:31:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f79d44e499ce83a99049e0b7ebf2d6f56e249303be3c14798235137af5ea536","typeString":"literal_string \"mode=blocknumber&from=default\""},"value":"mode=blocknumber&from=default"},"functionReturnParameters":304,"id":317,"nodeType":"Return","src":"3267:38:2"}]},"documentation":{"id":300,"nodeType":"StructuredDocumentation","src":"2891:91:2","text":" @dev Machine-readable description of the clock as specified in ERC-6372."},"functionSelector":"4bf5d7e9","id":319,"implemented":true,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"3049:10:2","nodeType":"FunctionDefinition","parameters":{"id":301,"nodeType":"ParameterList","parameters":[],"src":"3059:2:2"},"returnParameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":319,"src":"3091:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":302,"name":"string","nodeType":"ElementaryTypeName","src":"3091:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3090:15:2"},"scope":773,"src":"3040:272:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":346,"nodeType":"Block","src":"3493:195:2","statements":[{"assignments":[328],"declarations":[{"constant":false,"id":328,"mutability":"mutable","name":"currentTimepoint","nameLocation":"3510:16:2","nodeType":"VariableDeclaration","scope":346,"src":"3503:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":327,"name":"uint48","nodeType":"ElementaryTypeName","src":"3503:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":331,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":329,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"3529:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3529:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"3503:33:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":332,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"3550:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":333,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"3563:16:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"3550:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":340,"nodeType":"IfStatement","src":"3546:90:2","trueBody":{"errorCall":{"arguments":[{"id":336,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"3608:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":337,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"3619:16:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":335,"name":"ERC5805FutureLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"3588:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint48_$returns$__$","typeString":"function (uint256,uint48) pure"}},"id":338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3588:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":339,"nodeType":"RevertStatement","src":"3581:55:2"}},{"expression":{"arguments":[{"id":343,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"3671:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":341,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"3653:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7911_$","typeString":"type(library SafeCast)"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3662:8:2","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":6901,"src":"3653:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3653:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":326,"id":345,"nodeType":"Return","src":"3646:35:2"}]},"documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"3318:92:2","text":" @dev Validate that a timepoint is in the past, and return it as a uint48."},"id":347,"implemented":true,"kind":"function","modifiers":[],"name":"_validateTimepoint","nameLocation":"3424:18:2","nodeType":"FunctionDefinition","parameters":{"id":323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"timepoint","nameLocation":"3451:9:2","nodeType":"VariableDeclaration","scope":347,"src":"3443:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":321,"name":"uint256","nodeType":"ElementaryTypeName","src":"3443:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3442:19:2"},"returnParameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":347,"src":"3485:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":324,"name":"uint48","nodeType":"ElementaryTypeName","src":"3485:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"3484:8:2"},"scope":773,"src":"3415:273:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[181],"body":{"id":361,"nodeType":"Block","src":"3851:62:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":355,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"3868:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$8592_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":357,"indexExpression":{"id":356,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"3889:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3868:29:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3898:6:2","memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":8817,"src":"3868:36:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$8592_storage_ptr_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$8592_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint208)"}},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3868:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":354,"id":360,"nodeType":"Return","src":"3861:45:2"}]},"documentation":{"id":348,"nodeType":"StructuredDocumentation","src":"3694:79:2","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":362,"implemented":true,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"3787:8:2","nodeType":"FunctionDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":350,"mutability":"mutable","name":"account","nameLocation":"3804:7:2","nodeType":"VariableDeclaration","scope":362,"src":"3796:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":349,"name":"address","nodeType":"ElementaryTypeName","src":"3796:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3795:17:2"},"returnParameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":362,"src":"3842:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":352,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3841:9:2"},"scope":773,"src":"3778:135:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[191],"body":{"id":381,"nodeType":"Block","src":"4394:102:2","statements":[{"expression":{"arguments":[{"arguments":[{"id":377,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":367,"src":"4478:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":376,"name":"_validateTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"4459:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) view returns (uint48)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4459:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"baseExpression":{"id":372,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"4411:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$8592_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":374,"indexExpression":{"id":373,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"4432:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4411:29:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":375,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4441:17:2","memberName":"upperLookupRecent","nodeType":"MemberAccess","referencedDeclaration":8787,"src":"4411:47:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$8592_storage_ptr_$_t_uint48_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$8592_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint48) view returns (uint208)"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4411:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":371,"id":380,"nodeType":"Return","src":"4404:85:2"}]},"documentation":{"id":363,"nodeType":"StructuredDocumentation","src":"3919:374:2","text":" @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n Requirements:\n - `timepoint` must be in the past. If operating using block numbers, the block must be already mined."},"functionSelector":"3a46b1a8","id":382,"implemented":true,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"4307:12:2","nodeType":"FunctionDefinition","parameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"account","nameLocation":"4328:7:2","nodeType":"VariableDeclaration","scope":382,"src":"4320:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":364,"name":"address","nodeType":"ElementaryTypeName","src":"4320:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":367,"mutability":"mutable","name":"timepoint","nameLocation":"4345:9:2","nodeType":"VariableDeclaration","scope":382,"src":"4337:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":366,"name":"uint256","nodeType":"ElementaryTypeName","src":"4337:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4319:36:2"},"returnParameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":382,"src":"4385:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":369,"name":"uint256","nodeType":"ElementaryTypeName","src":"4385:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4384:9:2"},"scope":773,"src":"4298:198:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[199],"body":{"id":397,"nodeType":"Block","src":"5217:90:2","statements":[{"expression":{"arguments":[{"arguments":[{"id":393,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"5289:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":392,"name":"_validateTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"5270:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) view returns (uint48)"}},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5270:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"id":390,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"5234:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":391,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5252:17:2","memberName":"upperLookupRecent","nodeType":"MemberAccess","referencedDeclaration":8787,"src":"5234:35:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$8592_storage_ptr_$_t_uint48_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$8592_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint48) view returns (uint208)"}},"id":395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5234:66:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":389,"id":396,"nodeType":"Return","src":"5227:73:2"}]},"documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"4502:625:2","text":" @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote.\n Requirements:\n - `timepoint` must be in the past. If operating using block numbers, the block must be already mined."},"functionSelector":"8e539e8c","id":398,"implemented":true,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"5141:18:2","nodeType":"FunctionDefinition","parameters":{"id":386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"mutability":"mutable","name":"timepoint","nameLocation":"5168:9:2","nodeType":"VariableDeclaration","scope":398,"src":"5160:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":384,"name":"uint256","nodeType":"ElementaryTypeName","src":"5160:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5159:19:2"},"returnParameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":398,"src":"5208:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":387,"name":"uint256","nodeType":"ElementaryTypeName","src":"5208:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5207:9:2"},"scope":773,"src":"5132:175:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":408,"nodeType":"Block","src":"5451:50:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":404,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"5468:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":405,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5486:6:2","memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":8817,"src":"5468:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$8592_storage_ptr_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$8592_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint208)"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5468:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":403,"id":407,"nodeType":"Return","src":"5461:33:2"}]},"documentation":{"id":399,"nodeType":"StructuredDocumentation","src":"5313:66:2","text":" @dev Returns the current total supply of votes."},"id":409,"implemented":true,"kind":"function","modifiers":[],"name":"_getTotalSupply","nameLocation":"5393:15:2","nodeType":"FunctionDefinition","parameters":{"id":400,"nodeType":"ParameterList","parameters":[],"src":"5408:2:2"},"returnParameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":409,"src":"5442:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":401,"name":"uint256","nodeType":"ElementaryTypeName","src":"5442:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5441:9:2"},"scope":773,"src":"5384:117:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[207],"body":{"id":421,"nodeType":"Block","src":"5657:43:2","statements":[{"expression":{"baseExpression":{"id":417,"name":"_delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"5674:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":419,"indexExpression":{"id":418,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5685:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5674:19:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":416,"id":420,"nodeType":"Return","src":"5667:26:2"}]},"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"5507:71:2","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":422,"implemented":true,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"5592:9:2","nodeType":"FunctionDefinition","parameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"account","nameLocation":"5610:7:2","nodeType":"VariableDeclaration","scope":422,"src":"5602:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"5602:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5601:17:2"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":422,"src":"5648:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":414,"name":"address","nodeType":"ElementaryTypeName","src":"5648:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5647:9:2"},"scope":773,"src":"5583:117:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[213],"body":{"id":438,"nodeType":"Block","src":"5834:86:2","statements":[{"assignments":[429],"declarations":[{"constant":false,"id":429,"mutability":"mutable","name":"account","nameLocation":"5852:7:2","nodeType":"VariableDeclaration","scope":438,"src":"5844:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":428,"name":"address","nodeType":"ElementaryTypeName","src":"5844:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":432,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":430,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"5862:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5862:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5844:30:2"},{"expression":{"arguments":[{"id":434,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"5894:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":435,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"5903:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":433,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"5884:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5884:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":437,"nodeType":"ExpressionStatement","src":"5884:29:2"}]},"documentation":{"id":423,"nodeType":"StructuredDocumentation","src":"5706:71:2","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":439,"implemented":true,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"5791:8:2","nodeType":"FunctionDefinition","parameters":{"id":426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":425,"mutability":"mutable","name":"delegatee","nameLocation":"5808:9:2","nodeType":"VariableDeclaration","scope":439,"src":"5800:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":424,"name":"address","nodeType":"ElementaryTypeName","src":"5800:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5799:19:2"},"returnParameters":{"id":427,"nodeType":"ParameterList","parameters":[],"src":"5834:0:2"},"scope":773,"src":"5782:138:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[229],"body":{"id":495,"nodeType":"Block","src":"6171:381:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":455,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6185:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6191:9:2","memberName":"timestamp","nodeType":"MemberAccess","src":"6185:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":457,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"6203:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6185:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":464,"nodeType":"IfStatement","src":"6181:91:2","trueBody":{"id":463,"nodeType":"Block","src":"6211:61:2","statements":[{"errorCall":{"arguments":[{"id":460,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"6254:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":459,"name":"VotesExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"6232:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6232:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":462,"nodeType":"RevertStatement","src":"6225:36:2"}]}},{"assignments":[466],"declarations":[{"constant":false,"id":466,"mutability":"mutable","name":"signer","nameLocation":"6289:6:2","nodeType":"VariableDeclaration","scope":495,"src":"6281:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":465,"name":"address","nodeType":"ElementaryTypeName","src":"6281:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":484,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":473,"name":"DELEGATION_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"6363:19:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":474,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"6384:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":475,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"6395:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":476,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"6402:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":471,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6352:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6356:6:2","memberName":"encode","nodeType":"MemberAccess","src":"6352:10:2","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6352:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":470,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6342:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6342:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":469,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"6325:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6325:86:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":480,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"6425:1:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":481,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"6440:1:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":482,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"6455:1:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":467,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"6298:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$4212_$","typeString":"type(library ECDSA)"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6304:7:2","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":4162,"src":"6298:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:168:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6281:185:2"},{"expression":{"arguments":[{"id":486,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"6493:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":487,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"6501:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":485,"name":"_useCheckedNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"6476:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6476:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":489,"nodeType":"ExpressionStatement","src":"6476:31:2"},{"expression":{"arguments":[{"id":491,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"6527:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":492,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"6535:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":490,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"6517:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6517:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":494,"nodeType":"ExpressionStatement","src":"6517:28:2"}]},"documentation":{"id":440,"nodeType":"StructuredDocumentation","src":"5926:67:2","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":496,"implemented":true,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"6007:13:2","nodeType":"FunctionDefinition","parameters":{"id":453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"delegatee","nameLocation":"6038:9:2","nodeType":"VariableDeclaration","scope":496,"src":"6030:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":441,"name":"address","nodeType":"ElementaryTypeName","src":"6030:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":444,"mutability":"mutable","name":"nonce","nameLocation":"6065:5:2","nodeType":"VariableDeclaration","scope":496,"src":"6057:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":443,"name":"uint256","nodeType":"ElementaryTypeName","src":"6057:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":446,"mutability":"mutable","name":"expiry","nameLocation":"6088:6:2","nodeType":"VariableDeclaration","scope":496,"src":"6080:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":445,"name":"uint256","nodeType":"ElementaryTypeName","src":"6080:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":448,"mutability":"mutable","name":"v","nameLocation":"6110:1:2","nodeType":"VariableDeclaration","scope":496,"src":"6104:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":447,"name":"uint8","nodeType":"ElementaryTypeName","src":"6104:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":450,"mutability":"mutable","name":"r","nameLocation":"6129:1:2","nodeType":"VariableDeclaration","scope":496,"src":"6121:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6121:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":452,"mutability":"mutable","name":"s","nameLocation":"6148:1:2","nodeType":"VariableDeclaration","scope":496,"src":"6140:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":451,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6140:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6020:135:2"},"returnParameters":{"id":454,"nodeType":"ParameterList","parameters":[],"src":"6171:0:2"},"scope":773,"src":"5998:554:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":530,"nodeType":"Block","src":"6802:240:2","statements":[{"assignments":[505],"declarations":[{"constant":false,"id":505,"mutability":"mutable","name":"oldDelegate","nameLocation":"6820:11:2","nodeType":"VariableDeclaration","scope":530,"src":"6812:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":504,"name":"address","nodeType":"ElementaryTypeName","src":"6812:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":509,"initialValue":{"arguments":[{"id":507,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"6844:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":506,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"6834:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6834:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6812:40:2"},{"expression":{"id":514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":510,"name":"_delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"6862:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":512,"indexExpression":{"id":511,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"6873:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6862:19:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":513,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"6884:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6862:31:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":515,"nodeType":"ExpressionStatement","src":"6862:31:2"},{"eventCall":{"arguments":[{"id":517,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"6925:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":518,"name":"oldDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"6934:11:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":519,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"6947:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":516,"name":"DelegateChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"6909:15:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address)"}},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6909:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":521,"nodeType":"EmitStatement","src":"6904:53:2"},{"expression":{"arguments":[{"id":523,"name":"oldDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"6986:11:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":524,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"6999:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":526,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"7026:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":525,"name":"_getVotingUnits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"7010:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7010:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":522,"name":"_moveDelegateVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"6967:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":529,"nodeType":"ExpressionStatement","src":"6967:68:2"}]},"documentation":{"id":497,"nodeType":"StructuredDocumentation","src":"6558:167:2","text":" @dev Delegate all of `account`'s voting units to `delegatee`.\n Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}."},"id":531,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"6739:9:2","nodeType":"FunctionDefinition","parameters":{"id":502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":499,"mutability":"mutable","name":"account","nameLocation":"6757:7:2","nodeType":"VariableDeclaration","scope":531,"src":"6749:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":498,"name":"address","nodeType":"ElementaryTypeName","src":"6749:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":501,"mutability":"mutable","name":"delegatee","nameLocation":"6774:9:2","nodeType":"VariableDeclaration","scope":531,"src":"6766:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"6766:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6748:36:2"},"returnParameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"6802:0:2"},"scope":773,"src":"6730:312:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":585,"nodeType":"Block","src":"7365:310:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":541,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"7379:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7395:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7387:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":542,"name":"address","nodeType":"ElementaryTypeName","src":"7387:7:2","typeDescriptions":{}}},"id":545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7387:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7379:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":557,"nodeType":"IfStatement","src":"7375:107:2","trueBody":{"id":556,"nodeType":"Block","src":"7399:83:2","statements":[{"expression":{"arguments":[{"id":548,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"7419:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":549,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"7438:4:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":552,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"7463:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":550,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"7444:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7911_$","typeString":"type(library SafeCast)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7453:9:2","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":6341,"src":"7444:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7444:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$8592_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":547,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"7413:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$8592_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7413:58:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"id":555,"nodeType":"ExpressionStatement","src":"7413:58:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":558,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"7495:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7509:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7501:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":559,"name":"address","nodeType":"ElementaryTypeName","src":"7501:7:2","typeDescriptions":{}}},"id":562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7501:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7495:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":574,"nodeType":"IfStatement","src":"7491:110:2","trueBody":{"id":573,"nodeType":"Block","src":"7513:88:2","statements":[{"expression":{"arguments":[{"id":565,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"7533:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":566,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"7552:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":569,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"7582:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":567,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"7563:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7911_$","typeString":"type(library SafeCast)"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7572:9:2","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":6341,"src":"7563:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7563:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$8592_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":564,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"7527:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$8592_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7527:63:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"id":572,"nodeType":"ExpressionStatement","src":"7527:63:2"}]}},{"expression":{"arguments":[{"arguments":[{"id":577,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"7639:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":576,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"7629:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7629:15:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":580,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"7656:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":579,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"7646:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7646:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":582,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"7661:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":575,"name":"_moveDelegateVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"7610:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7610:58:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":584,"nodeType":"ExpressionStatement","src":"7610:58:2"}]},"documentation":{"id":532,"nodeType":"StructuredDocumentation","src":"7048:223:2","text":" @dev Transfers, mints, or burns voting units. To register a mint, `from` should be zero. To register a burn, `to`\n should be zero. Total supply of voting units will be adjusted with mints and burns."},"id":586,"implemented":true,"kind":"function","modifiers":[],"name":"_transferVotingUnits","nameLocation":"7285:20:2","nodeType":"FunctionDefinition","parameters":{"id":539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":534,"mutability":"mutable","name":"from","nameLocation":"7314:4:2","nodeType":"VariableDeclaration","scope":586,"src":"7306:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"7306:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":536,"mutability":"mutable","name":"to","nameLocation":"7328:2:2","nodeType":"VariableDeclaration","scope":586,"src":"7320:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":535,"name":"address","nodeType":"ElementaryTypeName","src":"7320:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":538,"mutability":"mutable","name":"amount","nameLocation":"7340:6:2","nodeType":"VariableDeclaration","scope":586,"src":"7332:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":537,"name":"uint256","nodeType":"ElementaryTypeName","src":"7332:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7305:42:2"},"returnParameters":{"id":540,"nodeType":"ParameterList","parameters":[],"src":"7365:0:2"},"scope":773,"src":"7276:399:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":663,"nodeType":"Block","src":"7848:702:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":596,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"7862:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":597,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"7870:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7862:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":599,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"7876:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7885:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7876:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7862:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":662,"nodeType":"IfStatement","src":"7858:686:2","trueBody":{"id":661,"nodeType":"Block","src":"7888:656:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":603,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"7906:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7922:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7914:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"7914:7:2","typeDescriptions":{}}},"id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7914:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7906:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":631,"nodeType":"IfStatement","src":"7902:315:2","trueBody":{"id":630,"nodeType":"Block","src":"7926:291:2","statements":[{"assignments":[610,612],"declarations":[{"constant":false,"id":610,"mutability":"mutable","name":"oldValue","nameLocation":"7953:8:2","nodeType":"VariableDeclaration","scope":630,"src":"7945:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":609,"name":"uint256","nodeType":"ElementaryTypeName","src":"7945:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":612,"mutability":"mutable","name":"newValue","nameLocation":"7971:8:2","nodeType":"VariableDeclaration","scope":630,"src":"7963:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":611,"name":"uint256","nodeType":"ElementaryTypeName","src":"7963:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":623,"initialValue":{"arguments":[{"baseExpression":{"id":614,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"8010:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$8592_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":616,"indexExpression":{"id":615,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"8031:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8010:26:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":617,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"8058:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":620,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"8108:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":618,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"8089:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7911_$","typeString":"type(library SafeCast)"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8098:9:2","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":6341,"src":"8089:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8089:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$8592_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":613,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"7983:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$8592_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7983:150:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"nodeType":"VariableDeclarationStatement","src":"7944:189:2"},{"eventCall":{"arguments":[{"id":625,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"8177:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":626,"name":"oldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"8183:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":627,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"8193:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":624,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"8156:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8156:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":629,"nodeType":"EmitStatement","src":"8151:51:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":632,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"8234:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8248:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8240:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"8240:7:2","typeDescriptions":{}}},"id":636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8240:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8234:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":660,"nodeType":"IfStatement","src":"8230:304:2","trueBody":{"id":659,"nodeType":"Block","src":"8252:282:2","statements":[{"assignments":[639,641],"declarations":[{"constant":false,"id":639,"mutability":"mutable","name":"oldValue","nameLocation":"8279:8:2","nodeType":"VariableDeclaration","scope":659,"src":"8271:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":638,"name":"uint256","nodeType":"ElementaryTypeName","src":"8271:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":641,"mutability":"mutable","name":"newValue","nameLocation":"8297:8:2","nodeType":"VariableDeclaration","scope":659,"src":"8289:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":640,"name":"uint256","nodeType":"ElementaryTypeName","src":"8289:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":652,"initialValue":{"arguments":[{"baseExpression":{"id":643,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"8336:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$8592_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":645,"indexExpression":{"id":644,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"8357:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8336:24:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":646,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"8382:4:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":649,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"8427:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":647,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"8408:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7911_$","typeString":"type(library SafeCast)"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8417:9:2","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":6341,"src":"8408:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8408:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$8592_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":642,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"8309:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$8592_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8309:143:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"nodeType":"VariableDeclarationStatement","src":"8270:182:2"},{"eventCall":{"arguments":[{"id":654,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"8496:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":655,"name":"oldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"8500:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":656,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"8510:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":653,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"8475:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8475:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":658,"nodeType":"EmitStatement","src":"8470:49:2"}]}}]}}]},"documentation":{"id":587,"nodeType":"StructuredDocumentation","src":"7681:75:2","text":" @dev Moves delegated votes from one delegate to another."},"id":664,"implemented":true,"kind":"function","modifiers":[],"name":"_moveDelegateVotes","nameLocation":"7770:18:2","nodeType":"FunctionDefinition","parameters":{"id":594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":589,"mutability":"mutable","name":"from","nameLocation":"7797:4:2","nodeType":"VariableDeclaration","scope":664,"src":"7789:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":588,"name":"address","nodeType":"ElementaryTypeName","src":"7789:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":591,"mutability":"mutable","name":"to","nameLocation":"7811:2:2","nodeType":"VariableDeclaration","scope":664,"src":"7803:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"7803:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":593,"mutability":"mutable","name":"amount","nameLocation":"7823:6:2","nodeType":"VariableDeclaration","scope":664,"src":"7815:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":592,"name":"uint256","nodeType":"ElementaryTypeName","src":"7815:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7788:42:2"},"returnParameters":{"id":595,"nodeType":"ParameterList","parameters":[],"src":"7848:0:2"},"scope":773,"src":"7761:789:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":681,"nodeType":"Block","src":"8706:81:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":674,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"8741:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$8592_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":676,"indexExpression":{"id":675,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"8762:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8741:29:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":677,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8771:6:2","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":8880,"src":"8741:36:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$8592_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Trace208_$8592_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint256)"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8741:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":672,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"8723:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7911_$","typeString":"type(library SafeCast)"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8732:8:2","memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":6957,"src":"8723:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8723:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":671,"id":680,"nodeType":"Return","src":"8716:64:2"}]},"documentation":{"id":665,"nodeType":"StructuredDocumentation","src":"8556:64:2","text":" @dev Get number of checkpoints for `account`."},"id":682,"implemented":true,"kind":"function","modifiers":[],"name":"_numCheckpoints","nameLocation":"8634:15:2","nodeType":"FunctionDefinition","parameters":{"id":668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"account","nameLocation":"8658:7:2","nodeType":"VariableDeclaration","scope":682,"src":"8650:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":666,"name":"address","nodeType":"ElementaryTypeName","src":"8650:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8649:17:2"},"returnParameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":682,"src":"8698:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":669,"name":"uint32","nodeType":"ElementaryTypeName","src":"8698:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"8697:8:2"},"scope":773,"src":"8625:162:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":700,"nodeType":"Block","src":"9002:61:2","statements":[{"expression":{"arguments":[{"id":697,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"9052:3:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"baseExpression":{"id":693,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"9019:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$8592_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":695,"indexExpression":{"id":694,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"9040:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9019:29:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":696,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9049:2:2","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":8898,"src":"9019:32:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$8592_storage_ptr_$_t_uint32_$returns$_t_struct$_Checkpoint208_$8597_memory_ptr_$attached_to$_t_struct$_Trace208_$8592_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint32) view returns (struct Checkpoints.Checkpoint208 memory)"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9019:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"functionReturnParameters":692,"id":699,"nodeType":"Return","src":"9012:44:2"}]},"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"8793:66:2","text":" @dev Get the `pos`-th checkpoint for `account`."},"id":701,"implemented":true,"kind":"function","modifiers":[],"name":"_checkpoints","nameLocation":"8873:12:2","nodeType":"FunctionDefinition","parameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"account","nameLocation":"8903:7:2","nodeType":"VariableDeclaration","scope":701,"src":"8895:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":684,"name":"address","nodeType":"ElementaryTypeName","src":"8895:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":687,"mutability":"mutable","name":"pos","nameLocation":"8927:3:2","nodeType":"VariableDeclaration","scope":701,"src":"8920:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":686,"name":"uint32","nodeType":"ElementaryTypeName","src":"8920:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"8885:51:2"},"returnParameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":701,"src":"8968:32:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":690,"nodeType":"UserDefinedTypeName","pathNode":{"id":689,"name":"Checkpoints.Checkpoint208","nameLocations":["8968:11:2","8980:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":8597,"src":"8968:25:2"},"referencedDeclaration":8597,"src":"8968:25:2","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"8967:34:2"},"scope":773,"src":"8864:199:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":735,"nodeType":"Block","src":"9272:70:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":725,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"9300:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9300:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":728,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"9312:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":729,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9318:6:2","memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":8817,"src":"9312:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$8592_storage_ptr_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$8592_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint208)"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9312:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},{"id":731,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"9328:5:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint208","typeString":"uint208"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":727,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"9309:2:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) view returns (uint208)"}},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9309:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"expression":{"id":723,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"9289:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":724,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9295:4:2","memberName":"push","nodeType":"MemberAccess","referencedDeclaration":8620,"src":"9289:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$8592_storage_ptr_$_t_uint48_$_t_uint208_$returns$_t_uint208_$_t_uint208_$attached_to$_t_struct$_Trace208_$8592_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint48,uint208) returns (uint208,uint208)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9289:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"functionReturnParameters":722,"id":734,"nodeType":"Return","src":"9282:53:2"}]},"id":736,"implemented":true,"kind":"function","modifiers":[],"name":"_push","nameLocation":"9078:5:2","nodeType":"FunctionDefinition","parameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":704,"mutability":"mutable","name":"store","nameLocation":"9122:5:2","nodeType":"VariableDeclaration","scope":736,"src":"9093:34:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":703,"nodeType":"UserDefinedTypeName","pathNode":{"id":702,"name":"Checkpoints.Trace208","nameLocations":["9093:11:2","9105:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":8592,"src":"9093:20:2"},"referencedDeclaration":8592,"src":"9093:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":714,"mutability":"mutable","name":"op","nameLocation":"9187:2:2","nodeType":"VariableDeclaration","scope":736,"src":"9137:52:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) view returns (uint208)"},"typeName":{"id":713,"nodeType":"FunctionTypeName","parameterTypes":{"id":709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":706,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":713,"src":"9146:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":705,"name":"uint208","nodeType":"ElementaryTypeName","src":"9146:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":713,"src":"9155:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":707,"name":"uint208","nodeType":"ElementaryTypeName","src":"9155:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9145:18:2"},"returnParameterTypes":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":713,"src":"9178:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":710,"name":"uint208","nodeType":"ElementaryTypeName","src":"9178:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9177:9:2"},"src":"9137:52:2","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) view returns (uint208)"},"visibility":"internal"},"visibility":"internal"},{"constant":false,"id":716,"mutability":"mutable","name":"delta","nameLocation":"9207:5:2","nodeType":"VariableDeclaration","scope":736,"src":"9199:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":715,"name":"uint208","nodeType":"ElementaryTypeName","src":"9199:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9083:135:2"},"returnParameters":{"id":722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"oldValue","nameLocation":"9244:8:2","nodeType":"VariableDeclaration","scope":736,"src":"9236:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":718,"name":"uint208","nodeType":"ElementaryTypeName","src":"9236:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":721,"mutability":"mutable","name":"newValue","nameLocation":"9262:8:2","nodeType":"VariableDeclaration","scope":736,"src":"9254:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":720,"name":"uint208","nodeType":"ElementaryTypeName","src":"9254:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9235:36:2"},"scope":773,"src":"9069:273:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":749,"nodeType":"Block","src":"9415:29:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint208","typeString":"uint208"},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":745,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"9432:1:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":746,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"9436:1:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"9432:5:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":744,"id":748,"nodeType":"Return","src":"9425:12:2"}]},"id":750,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"9357:4:2","nodeType":"FunctionDefinition","parameters":{"id":741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":738,"mutability":"mutable","name":"a","nameLocation":"9370:1:2","nodeType":"VariableDeclaration","scope":750,"src":"9362:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":737,"name":"uint208","nodeType":"ElementaryTypeName","src":"9362:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":740,"mutability":"mutable","name":"b","nameLocation":"9381:1:2","nodeType":"VariableDeclaration","scope":750,"src":"9373:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":739,"name":"uint208","nodeType":"ElementaryTypeName","src":"9373:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9361:22:2"},"returnParameters":{"id":744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":743,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":750,"src":"9406:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":742,"name":"uint208","nodeType":"ElementaryTypeName","src":"9406:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9405:9:2"},"scope":773,"src":"9348:96:2","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":763,"nodeType":"Block","src":"9522:29:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint208","typeString":"uint208"},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":759,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"9539:1:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":760,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"9543:1:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"9539:5:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":758,"id":762,"nodeType":"Return","src":"9532:12:2"}]},"id":764,"implemented":true,"kind":"function","modifiers":[],"name":"_subtract","nameLocation":"9459:9:2","nodeType":"FunctionDefinition","parameters":{"id":755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"a","nameLocation":"9477:1:2","nodeType":"VariableDeclaration","scope":764,"src":"9469:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":751,"name":"uint208","nodeType":"ElementaryTypeName","src":"9469:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":754,"mutability":"mutable","name":"b","nameLocation":"9488:1:2","nodeType":"VariableDeclaration","scope":764,"src":"9480:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":753,"name":"uint208","nodeType":"ElementaryTypeName","src":"9480:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9468:22:2"},"returnParameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":764,"src":"9513:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":756,"name":"uint208","nodeType":"ElementaryTypeName","src":"9513:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9512:9:2"},"scope":773,"src":"9450:101:2","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":765,"nodeType":"StructuredDocumentation","src":"9557:72:2","text":" @dev Must return the voting units held by an account."},"id":772,"implemented":false,"kind":"function","modifiers":[],"name":"_getVotingUnits","nameLocation":"9643:15:2","nodeType":"FunctionDefinition","parameters":{"id":768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":772,"src":"9659:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"9659:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9658:9:2"},"returnParameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":772,"src":"9699:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":769,"name":"uint256","nodeType":"ElementaryTypeName","src":"9699:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9698:9:2"},"scope":773,"src":"9634:74:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":774,"src":"1892:7818:2","usedErrors":[155,281,288,1942,2135,2137,3875,3880,3885,6156,8063],"usedEvents":[164,173,778]}],"src":"109:9602:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[798]},"id":799,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":775,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":798,"linearizedBaseContracts":[798],"name":"IERC5267","nameLocation":"143:8:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":776,"nodeType":"StructuredDocumentation","src":"158:84:3","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":778,"name":"EIP712DomainChanged","nameLocation":"253:19:3","nodeType":"EventDefinition","parameters":{"id":777,"nodeType":"ParameterList","parameters":[],"src":"272:2:3"},"src":"247:28:3"},{"documentation":{"id":779,"nodeType":"StructuredDocumentation","src":"281:140:3","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":797,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:3","nodeType":"FunctionDefinition","parameters":{"id":780,"nodeType":"ParameterList","parameters":[],"src":"447:2:3"},"returnParameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":782,"mutability":"mutable","name":"fields","nameLocation":"517:6:3","nodeType":"VariableDeclaration","scope":797,"src":"510:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":781,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":784,"mutability":"mutable","name":"name","nameLocation":"551:4:3","nodeType":"VariableDeclaration","scope":797,"src":"537:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":783,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":786,"mutability":"mutable","name":"version","nameLocation":"583:7:3","nodeType":"VariableDeclaration","scope":797,"src":"569:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":785,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":788,"mutability":"mutable","name":"chainId","nameLocation":"612:7:3","nodeType":"VariableDeclaration","scope":797,"src":"604:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":787,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":790,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:3","nodeType":"VariableDeclaration","scope":797,"src":"633:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":789,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":792,"mutability":"mutable","name":"salt","nameLocation":"680:4:3","nodeType":"VariableDeclaration","scope":797,"src":"672:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":791,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":795,"mutability":"mutable","name":"extensions","nameLocation":"715:10:3","nodeType":"VariableDeclaration","scope":797,"src":"698:27:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":793,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":794,"nodeType":"ArrayTypeName","src":"698:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:3"},"scope":798,"src":"426:310:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":799,"src":"133:605:3","usedErrors":[],"usedEvents":[778]}],"src":"107:632:3"},"id":3},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5805.sol","exportedSymbols":{"IERC5805":[809],"IERC6372":[824],"IVotes":[230]},"id":810,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":800,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:4"},{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","file":"../governance/utils/IVotes.sol","id":802,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":810,"sourceUnit":231,"src":"133:54:4","symbolAliases":[{"foreign":{"id":801,"name":"IVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"141:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC6372.sol","file":"./IERC6372.sol","id":804,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":810,"sourceUnit":825,"src":"188:40:4","symbolAliases":[{"foreign":{"id":803,"name":"IERC6372","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"196:8:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":805,"name":"IERC6372","nameLocations":["252:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"252:8:4"},"id":806,"nodeType":"InheritanceSpecifier","src":"252:8:4"},{"baseName":{"id":807,"name":"IVotes","nameLocations":["262:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":230,"src":"262:6:4"},"id":808,"nodeType":"InheritanceSpecifier","src":"262:6:4"}],"canonicalName":"IERC5805","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":809,"linearizedBaseContracts":[809,230,824],"name":"IERC5805","nameLocation":"240:8:4","nodeType":"ContractDefinition","nodes":[],"scope":810,"src":"230:41:4","usedErrors":[155],"usedEvents":[164,173]}],"src":"107:165:4"},"id":4},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC6372.sol","exportedSymbols":{"IERC6372":[824]},"id":825,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":811,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC6372","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":824,"linearizedBaseContracts":[824],"name":"IERC6372","nameLocation":"143:8:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":812,"nodeType":"StructuredDocumentation","src":"158:133:5","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting)."},"functionSelector":"91ddadf4","id":817,"implemented":false,"kind":"function","modifiers":[],"name":"clock","nameLocation":"305:5:5","nodeType":"FunctionDefinition","parameters":{"id":813,"nodeType":"ParameterList","parameters":[],"src":"310:2:5"},"returnParameters":{"id":816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":815,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":817,"src":"336:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":814,"name":"uint48","nodeType":"ElementaryTypeName","src":"336:6:5","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"335:8:5"},"scope":824,"src":"296:48:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":818,"nodeType":"StructuredDocumentation","src":"350:48:5","text":" @dev Description of the clock"},"functionSelector":"4bf5d7e9","id":823,"implemented":false,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"465:10:5","nodeType":"FunctionDefinition","parameters":{"id":819,"nodeType":"ParameterList","parameters":[],"src":"475:2:5"},"returnParameters":{"id":822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":823,"src":"501:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":820,"name":"string","nodeType":"ElementaryTypeName","src":"501:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"500:15:5"},"scope":824,"src":"456:60:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":825,"src":"133:385:5","usedErrors":[],"usedEvents":[]}],"src":"107:412:5"},"id":5},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[961],"IERC20Errors":[866],"IERC721Errors":[914]},"id":962,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":826,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"138:141:6","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":866,"linearizedBaseContracts":[866],"name":"IERC20Errors","nameLocation":"290:12:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":828,"nodeType":"StructuredDocumentation","src":"309:309:6","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":836,"name":"ERC20InsufficientBalance","nameLocation":"629:24:6","nodeType":"ErrorDefinition","parameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"mutability":"mutable","name":"sender","nameLocation":"662:6:6","nodeType":"VariableDeclaration","scope":836,"src":"654:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":832,"mutability":"mutable","name":"balance","nameLocation":"678:7:6","nodeType":"VariableDeclaration","scope":836,"src":"670:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":831,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":834,"mutability":"mutable","name":"needed","nameLocation":"695:6:6","nodeType":"VariableDeclaration","scope":836,"src":"687:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":833,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:6"},"src":"623:80:6"},{"documentation":{"id":837,"nodeType":"StructuredDocumentation","src":"709:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":841,"name":"ERC20InvalidSender","nameLocation":"872:18:6","nodeType":"ErrorDefinition","parameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"mutability":"mutable","name":"sender","nameLocation":"899:6:6","nodeType":"VariableDeclaration","scope":841,"src":"891:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":838,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:6"},"src":"866:41:6"},{"documentation":{"id":842,"nodeType":"StructuredDocumentation","src":"913:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":846,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:6","nodeType":"ErrorDefinition","parameters":{"id":845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":844,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:6","nodeType":"VariableDeclaration","scope":846,"src":"1104:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":843,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:6"},"src":"1077:45:6"},{"documentation":{"id":847,"nodeType":"StructuredDocumentation","src":"1128:345:6","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":855,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:6","nodeType":"ErrorDefinition","parameters":{"id":854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":849,"mutability":"mutable","name":"spender","nameLocation":"1519:7:6","nodeType":"VariableDeclaration","scope":855,"src":"1511:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":848,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":851,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:6","nodeType":"VariableDeclaration","scope":855,"src":"1528:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":850,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":853,"mutability":"mutable","name":"needed","nameLocation":"1555:6:6","nodeType":"VariableDeclaration","scope":855,"src":"1547:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":852,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:6"},"src":"1478:85:6"},{"documentation":{"id":856,"nodeType":"StructuredDocumentation","src":"1569:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":860,"name":"ERC20InvalidApprover","nameLocation":"1754:20:6","nodeType":"ErrorDefinition","parameters":{"id":859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":858,"mutability":"mutable","name":"approver","nameLocation":"1783:8:6","nodeType":"VariableDeclaration","scope":860,"src":"1775:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":857,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:6"},"src":"1748:45:6"},{"documentation":{"id":861,"nodeType":"StructuredDocumentation","src":"1799:195:6","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":865,"name":"ERC20InvalidSpender","nameLocation":"2005:19:6","nodeType":"ErrorDefinition","parameters":{"id":864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":863,"mutability":"mutable","name":"spender","nameLocation":"2033:7:6","nodeType":"VariableDeclaration","scope":865,"src":"2025:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":862,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:6"},"src":"1999:43:6"}],"scope":962,"src":"280:1764:6","usedErrors":[836,841,846,855,860,865],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":867,"nodeType":"StructuredDocumentation","src":"2046:143:6","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":914,"linearizedBaseContracts":[914],"name":"IERC721Errors","nameLocation":"2200:13:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":868,"nodeType":"StructuredDocumentation","src":"2220:219:6","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":872,"name":"ERC721InvalidOwner","nameLocation":"2450:18:6","nodeType":"ErrorDefinition","parameters":{"id":871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":870,"mutability":"mutable","name":"owner","nameLocation":"2477:5:6","nodeType":"VariableDeclaration","scope":872,"src":"2469:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:6"},"src":"2444:40:6"},{"documentation":{"id":873,"nodeType":"StructuredDocumentation","src":"2490:132:6","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":877,"name":"ERC721NonexistentToken","nameLocation":"2633:22:6","nodeType":"ErrorDefinition","parameters":{"id":876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":875,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:6","nodeType":"VariableDeclaration","scope":877,"src":"2656:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":874,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:6"},"src":"2627:46:6"},{"documentation":{"id":878,"nodeType":"StructuredDocumentation","src":"2679:289:6","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":886,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:6","nodeType":"ErrorDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":880,"mutability":"mutable","name":"sender","nameLocation":"3008:6:6","nodeType":"VariableDeclaration","scope":886,"src":"3000:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":879,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":882,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:6","nodeType":"VariableDeclaration","scope":886,"src":"3016:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":881,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":884,"mutability":"mutable","name":"owner","nameLocation":"3041:5:6","nodeType":"VariableDeclaration","scope":886,"src":"3033:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":883,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:6"},"src":"2973:75:6"},{"documentation":{"id":887,"nodeType":"StructuredDocumentation","src":"3054:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":891,"name":"ERC721InvalidSender","nameLocation":"3217:19:6","nodeType":"ErrorDefinition","parameters":{"id":890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":889,"mutability":"mutable","name":"sender","nameLocation":"3245:6:6","nodeType":"VariableDeclaration","scope":891,"src":"3237:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":888,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:6"},"src":"3211:42:6"},{"documentation":{"id":892,"nodeType":"StructuredDocumentation","src":"3259:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":896,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:6","nodeType":"ErrorDefinition","parameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:6","nodeType":"VariableDeclaration","scope":896,"src":"3451:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:6"},"src":"3423:46:6"},{"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"3475:247:6","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":903,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:6","nodeType":"ErrorDefinition","parameters":{"id":902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"operator","nameLocation":"3768:8:6","nodeType":"VariableDeclaration","scope":903,"src":"3760:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":898,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":901,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:6","nodeType":"VariableDeclaration","scope":903,"src":"3778:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":900,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:6"},"src":"3727:68:6"},{"documentation":{"id":904,"nodeType":"StructuredDocumentation","src":"3801:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":908,"name":"ERC721InvalidApprover","nameLocation":"3986:21:6","nodeType":"ErrorDefinition","parameters":{"id":907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":906,"mutability":"mutable","name":"approver","nameLocation":"4016:8:6","nodeType":"VariableDeclaration","scope":908,"src":"4008:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":905,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:6"},"src":"3980:46:6"},{"documentation":{"id":909,"nodeType":"StructuredDocumentation","src":"4032:197:6","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":913,"name":"ERC721InvalidOperator","nameLocation":"4240:21:6","nodeType":"ErrorDefinition","parameters":{"id":912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":911,"mutability":"mutable","name":"operator","nameLocation":"4270:8:6","nodeType":"VariableDeclaration","scope":913,"src":"4262:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":910,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:6"},"src":"4234:46:6"}],"scope":962,"src":"2190:2092:6","usedErrors":[872,877,886,891,896,903,908,913],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":915,"nodeType":"StructuredDocumentation","src":"4284:145:6","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":961,"linearizedBaseContracts":[961],"name":"IERC1155Errors","nameLocation":"4440:14:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":916,"nodeType":"StructuredDocumentation","src":"4461:361:6","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":926,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:6","nodeType":"ErrorDefinition","parameters":{"id":925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":918,"mutability":"mutable","name":"sender","nameLocation":"4868:6:6","nodeType":"VariableDeclaration","scope":926,"src":"4860:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":917,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":920,"mutability":"mutable","name":"balance","nameLocation":"4884:7:6","nodeType":"VariableDeclaration","scope":926,"src":"4876:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":919,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":922,"mutability":"mutable","name":"needed","nameLocation":"4901:6:6","nodeType":"VariableDeclaration","scope":926,"src":"4893:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":921,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":924,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:6","nodeType":"VariableDeclaration","scope":926,"src":"4909:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":923,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:6"},"src":"4827:99:6"},{"documentation":{"id":927,"nodeType":"StructuredDocumentation","src":"4932:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":931,"name":"ERC1155InvalidSender","nameLocation":"5095:20:6","nodeType":"ErrorDefinition","parameters":{"id":930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":929,"mutability":"mutable","name":"sender","nameLocation":"5124:6:6","nodeType":"VariableDeclaration","scope":931,"src":"5116:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":928,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:6"},"src":"5089:43:6"},{"documentation":{"id":932,"nodeType":"StructuredDocumentation","src":"5138:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":936,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:6","nodeType":"ErrorDefinition","parameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":934,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:6","nodeType":"VariableDeclaration","scope":936,"src":"5331:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":933,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:6"},"src":"5302:47:6"},{"documentation":{"id":937,"nodeType":"StructuredDocumentation","src":"5355:256:6","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":943,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:6","nodeType":"ErrorDefinition","parameters":{"id":942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":939,"mutability":"mutable","name":"operator","nameLocation":"5659:8:6","nodeType":"VariableDeclaration","scope":943,"src":"5651:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":938,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":941,"mutability":"mutable","name":"owner","nameLocation":"5677:5:6","nodeType":"VariableDeclaration","scope":943,"src":"5669:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":940,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:6"},"src":"5616:68:6"},{"documentation":{"id":944,"nodeType":"StructuredDocumentation","src":"5690:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":948,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:6","nodeType":"ErrorDefinition","parameters":{"id":947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":946,"mutability":"mutable","name":"approver","nameLocation":"5906:8:6","nodeType":"VariableDeclaration","scope":948,"src":"5898:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":945,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:6"},"src":"5869:47:6"},{"documentation":{"id":949,"nodeType":"StructuredDocumentation","src":"5922:197:6","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":953,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:6","nodeType":"ErrorDefinition","parameters":{"id":952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":951,"mutability":"mutable","name":"operator","nameLocation":"6161:8:6","nodeType":"VariableDeclaration","scope":953,"src":"6153:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":950,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:6"},"src":"6124:47:6"},{"documentation":{"id":954,"nodeType":"StructuredDocumentation","src":"6177:280:6","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":960,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:6","nodeType":"ErrorDefinition","parameters":{"id":959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":956,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:6","nodeType":"VariableDeclaration","scope":960,"src":"6494:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":955,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":958,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:6","nodeType":"VariableDeclaration","scope":960,"src":"6513:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":957,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:6"},"src":"6462:73:6"}],"scope":962,"src":"4430:2107:6","usedErrors":[926,931,936,943,948,953,960],"usedEvents":[]}],"src":"112:6426:6"},"id":6},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1932],"ERC20":[1476],"IERC20":[1554],"IERC20Errors":[866],"IERC20Metadata":[1866]},"id":1477,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":963,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":965,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1477,"sourceUnit":1555,"src":"131:36:7","symbolAliases":[{"foreign":{"id":964,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"139:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":967,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1477,"sourceUnit":1867,"src":"168:63:7","symbolAliases":[{"foreign":{"id":966,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"176:14:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":969,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1477,"sourceUnit":1933,"src":"232:48:7","symbolAliases":[{"foreign":{"id":968,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"240:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":971,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1477,"sourceUnit":962,"src":"281:65:7","symbolAliases":[{"foreign":{"id":970,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"289:12:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":973,"name":"Context","nameLocations":["1133:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1932,"src":"1133:7:7"},"id":974,"nodeType":"InheritanceSpecifier","src":"1133:7:7"},{"baseName":{"id":975,"name":"IERC20","nameLocations":["1142:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1554,"src":"1142:6:7"},"id":976,"nodeType":"InheritanceSpecifier","src":"1142:6:7"},{"baseName":{"id":977,"name":"IERC20Metadata","nameLocations":["1150:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":1866,"src":"1150:14:7"},"id":978,"nodeType":"InheritanceSpecifier","src":"1150:14:7"},{"baseName":{"id":979,"name":"IERC20Errors","nameLocations":["1166:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":866,"src":"1166:12:7"},"id":980,"nodeType":"InheritanceSpecifier","src":"1166:12:7"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":972,"nodeType":"StructuredDocumentation","src":"348:757:7","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":1476,"linearizedBaseContracts":[1476,866,1866,1554,1932],"name":"ERC20","nameLocation":"1124:5:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":984,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:7","nodeType":"VariableDeclaration","scope":1476,"src":"1185:53:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":983,"keyName":"account","keyNameLocation":"1201:7:7","keyType":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":982,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":990,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:7","nodeType":"VariableDeclaration","scope":1476,"src":"1245:83:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":989,"keyName":"account","keyNameLocation":"1261:7:7","keyType":{"id":985,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":988,"keyName":"spender","keyNameLocation":"1288:7:7","keyType":{"id":986,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":987,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":992,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:7","nodeType":"VariableDeclaration","scope":1476,"src":"1335:28:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":991,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":994,"mutability":"mutable","name":"_name","nameLocation":"1385:5:7","nodeType":"VariableDeclaration","scope":1476,"src":"1370:20:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":993,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":996,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:7","nodeType":"VariableDeclaration","scope":1476,"src":"1396:22:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":995,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1012,"nodeType":"Block","src":"1638:57:7","statements":[{"expression":{"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1004,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"1648:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1005,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"1656:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1648:13:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1007,"nodeType":"ExpressionStatement","src":"1648:13:7"},{"expression":{"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1008,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"1671:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1009,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"1681:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1671:17:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1011,"nodeType":"ExpressionStatement","src":"1671:17:7"}]},"documentation":{"id":997,"nodeType":"StructuredDocumentation","src":"1425:152:7","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":1013,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":999,"mutability":"mutable","name":"name_","nameLocation":"1608:5:7","nodeType":"VariableDeclaration","scope":1013,"src":"1594:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":998,"name":"string","nodeType":"ElementaryTypeName","src":"1594:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1001,"mutability":"mutable","name":"symbol_","nameLocation":"1629:7:7","nodeType":"VariableDeclaration","scope":1013,"src":"1615:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1000,"name":"string","nodeType":"ElementaryTypeName","src":"1615:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1593:44:7"},"returnParameters":{"id":1003,"nodeType":"ParameterList","parameters":[],"src":"1638:0:7"},"scope":1476,"src":"1582:113:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1853],"body":{"id":1021,"nodeType":"Block","src":"1820:29:7","statements":[{"expression":{"id":1019,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"1837:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1018,"id":1020,"nodeType":"Return","src":"1830:12:7"}]},"documentation":{"id":1014,"nodeType":"StructuredDocumentation","src":"1701:54:7","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1022,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1769:4:7","nodeType":"FunctionDefinition","parameters":{"id":1015,"nodeType":"ParameterList","parameters":[],"src":"1773:2:7"},"returnParameters":{"id":1018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1022,"src":"1805:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1016,"name":"string","nodeType":"ElementaryTypeName","src":"1805:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1804:15:7"},"scope":1476,"src":"1760:89:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1859],"body":{"id":1030,"nodeType":"Block","src":"2024:31:7","statements":[{"expression":{"id":1028,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"2041:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1027,"id":1029,"nodeType":"Return","src":"2034:14:7"}]},"documentation":{"id":1023,"nodeType":"StructuredDocumentation","src":"1855:102:7","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1031,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1971:6:7","nodeType":"FunctionDefinition","parameters":{"id":1024,"nodeType":"ParameterList","parameters":[],"src":"1977:2:7"},"returnParameters":{"id":1027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1026,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1031,"src":"2009:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1025,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2008:15:7"},"scope":1476,"src":"1962:93:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1865],"body":{"id":1039,"nodeType":"Block","src":"2744:26:7","statements":[{"expression":{"hexValue":"3138","id":1037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2761:2:7","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1036,"id":1038,"nodeType":"Return","src":"2754:9:7"}]},"documentation":{"id":1032,"nodeType":"StructuredDocumentation","src":"2061:622:7","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1040,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2697:8:7","nodeType":"FunctionDefinition","parameters":{"id":1033,"nodeType":"ParameterList","parameters":[],"src":"2705:2:7"},"returnParameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1035,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1040,"src":"2737:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1034,"name":"uint8","nodeType":"ElementaryTypeName","src":"2737:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2736:7:7"},"scope":1476,"src":"2688:82:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1503],"body":{"id":1048,"nodeType":"Block","src":"2891:36:7","statements":[{"expression":{"id":1046,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"2908:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1045,"id":1047,"nodeType":"Return","src":"2901:19:7"}]},"documentation":{"id":1041,"nodeType":"StructuredDocumentation","src":"2776:49:7","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1049,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2839:11:7","nodeType":"FunctionDefinition","parameters":{"id":1042,"nodeType":"ParameterList","parameters":[],"src":"2850:2:7"},"returnParameters":{"id":1045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1049,"src":"2882:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1043,"name":"uint256","nodeType":"ElementaryTypeName","src":"2882:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2881:9:7"},"scope":1476,"src":"2830:97:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1511],"body":{"id":1061,"nodeType":"Block","src":"3059:42:7","statements":[{"expression":{"baseExpression":{"id":1057,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"3076:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1059,"indexExpression":{"id":1058,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"3086:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3076:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1056,"id":1060,"nodeType":"Return","src":"3069:25:7"}]},"documentation":{"id":1050,"nodeType":"StructuredDocumentation","src":"2933:47:7","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1062,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2994:9:7","nodeType":"FunctionDefinition","parameters":{"id":1053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1052,"mutability":"mutable","name":"account","nameLocation":"3012:7:7","nodeType":"VariableDeclaration","scope":1062,"src":"3004:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1051,"name":"address","nodeType":"ElementaryTypeName","src":"3004:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3003:17:7"},"returnParameters":{"id":1056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1062,"src":"3050:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1054,"name":"uint256","nodeType":"ElementaryTypeName","src":"3050:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3049:9:7"},"scope":1476,"src":"2985:116:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1521],"body":{"id":1085,"nodeType":"Block","src":"3371:103:7","statements":[{"assignments":[1073],"declarations":[{"constant":false,"id":1073,"mutability":"mutable","name":"owner","nameLocation":"3389:5:7","nodeType":"VariableDeclaration","scope":1085,"src":"3381:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1072,"name":"address","nodeType":"ElementaryTypeName","src":"3381:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1076,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1074,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"3397:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3397:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3381:28:7"},{"expression":{"arguments":[{"id":1078,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"3429:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1079,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"3436:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"3440:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1077,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"3419:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3419:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1082,"nodeType":"ExpressionStatement","src":"3419:27:7"},{"expression":{"hexValue":"74727565","id":1083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3463:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1071,"id":1084,"nodeType":"Return","src":"3456:11:7"}]},"documentation":{"id":1063,"nodeType":"StructuredDocumentation","src":"3107:184:7","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":1086,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3305:8:7","nodeType":"FunctionDefinition","parameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1065,"mutability":"mutable","name":"to","nameLocation":"3322:2:7","nodeType":"VariableDeclaration","scope":1086,"src":"3314:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1064,"name":"address","nodeType":"ElementaryTypeName","src":"3314:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1067,"mutability":"mutable","name":"value","nameLocation":"3334:5:7","nodeType":"VariableDeclaration","scope":1086,"src":"3326:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1066,"name":"uint256","nodeType":"ElementaryTypeName","src":"3326:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3313:27:7"},"returnParameters":{"id":1071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1086,"src":"3365:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1069,"name":"bool","nodeType":"ElementaryTypeName","src":"3365:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3364:6:7"},"scope":1476,"src":"3296:178:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1531],"body":{"id":1102,"nodeType":"Block","src":"3621:51:7","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1096,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"3638:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1098,"indexExpression":{"id":1097,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"3650:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3638:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1100,"indexExpression":{"id":1099,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"3657:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3638:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1095,"id":1101,"nodeType":"Return","src":"3631:34:7"}]},"documentation":{"id":1087,"nodeType":"StructuredDocumentation","src":"3480:47:7","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1103,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3541:9:7","nodeType":"FunctionDefinition","parameters":{"id":1092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1089,"mutability":"mutable","name":"owner","nameLocation":"3559:5:7","nodeType":"VariableDeclaration","scope":1103,"src":"3551:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1088,"name":"address","nodeType":"ElementaryTypeName","src":"3551:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1091,"mutability":"mutable","name":"spender","nameLocation":"3574:7:7","nodeType":"VariableDeclaration","scope":1103,"src":"3566:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1090,"name":"address","nodeType":"ElementaryTypeName","src":"3566:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3550:32:7"},"returnParameters":{"id":1095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1094,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1103,"src":"3612:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1093,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:9:7"},"scope":1476,"src":"3532:140:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1541],"body":{"id":1126,"nodeType":"Block","src":"4058:107:7","statements":[{"assignments":[1114],"declarations":[{"constant":false,"id":1114,"mutability":"mutable","name":"owner","nameLocation":"4076:5:7","nodeType":"VariableDeclaration","scope":1126,"src":"4068:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1113,"name":"address","nodeType":"ElementaryTypeName","src":"4068:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1117,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1115,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"4084:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4084:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4068:28:7"},{"expression":{"arguments":[{"id":1119,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"4115:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1120,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"4122:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"4131:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1118,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1367,1427],"referencedDeclaration":1367,"src":"4106:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4106:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1123,"nodeType":"ExpressionStatement","src":"4106:31:7"},{"expression":{"hexValue":"74727565","id":1124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4154:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1112,"id":1125,"nodeType":"Return","src":"4147:11:7"}]},"documentation":{"id":1104,"nodeType":"StructuredDocumentation","src":"3678:296:7","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1127,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3988:7:7","nodeType":"FunctionDefinition","parameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1106,"mutability":"mutable","name":"spender","nameLocation":"4004:7:7","nodeType":"VariableDeclaration","scope":1127,"src":"3996:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1105,"name":"address","nodeType":"ElementaryTypeName","src":"3996:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1108,"mutability":"mutable","name":"value","nameLocation":"4021:5:7","nodeType":"VariableDeclaration","scope":1127,"src":"4013:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1107,"name":"uint256","nodeType":"ElementaryTypeName","src":"4013:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3995:32:7"},"returnParameters":{"id":1112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1127,"src":"4052:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1110,"name":"bool","nodeType":"ElementaryTypeName","src":"4052:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4051:6:7"},"scope":1476,"src":"3979:186:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1553],"body":{"id":1158,"nodeType":"Block","src":"4850:151:7","statements":[{"assignments":[1140],"declarations":[{"constant":false,"id":1140,"mutability":"mutable","name":"spender","nameLocation":"4868:7:7","nodeType":"VariableDeclaration","scope":1158,"src":"4860:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1139,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1143,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1141,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"4878:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4878:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4860:30:7"},{"expression":{"arguments":[{"id":1145,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"4916:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1146,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"4922:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"4931:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1144,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"4900:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4900:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1149,"nodeType":"ExpressionStatement","src":"4900:37:7"},{"expression":{"arguments":[{"id":1151,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"4957:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1152,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"4963:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"4967:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1150,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"4947:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4947:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1155,"nodeType":"ExpressionStatement","src":"4947:26:7"},{"expression":{"hexValue":"74727565","id":1156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4990:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1138,"id":1157,"nodeType":"Return","src":"4983:11:7"}]},"documentation":{"id":1128,"nodeType":"StructuredDocumentation","src":"4171:581:7","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":1159,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4766:12:7","nodeType":"FunctionDefinition","parameters":{"id":1135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1130,"mutability":"mutable","name":"from","nameLocation":"4787:4:7","nodeType":"VariableDeclaration","scope":1159,"src":"4779:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1129,"name":"address","nodeType":"ElementaryTypeName","src":"4779:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1132,"mutability":"mutable","name":"to","nameLocation":"4801:2:7","nodeType":"VariableDeclaration","scope":1159,"src":"4793:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1131,"name":"address","nodeType":"ElementaryTypeName","src":"4793:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1134,"mutability":"mutable","name":"value","nameLocation":"4813:5:7","nodeType":"VariableDeclaration","scope":1159,"src":"4805:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1133,"name":"uint256","nodeType":"ElementaryTypeName","src":"4805:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4778:41:7"},"returnParameters":{"id":1138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1159,"src":"4844:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1136,"name":"bool","nodeType":"ElementaryTypeName","src":"4844:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4843:6:7"},"scope":1476,"src":"4757:244:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1205,"nodeType":"Block","src":"5443:231:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1169,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"5457:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5473:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5465:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1170,"name":"address","nodeType":"ElementaryTypeName","src":"5465:7:7","typeDescriptions":{}}},"id":1173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5465:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5457:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1183,"nodeType":"IfStatement","src":"5453:86:7","trueBody":{"id":1182,"nodeType":"Block","src":"5477:62:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5525:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5517:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1176,"name":"address","nodeType":"ElementaryTypeName","src":"5517:7:7","typeDescriptions":{}}},"id":1179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1175,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"5498:18:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1181,"nodeType":"RevertStatement","src":"5491:37:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1184,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"5552:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5566:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5558:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"5558:7:7","typeDescriptions":{}}},"id":1188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5558:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5552:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1198,"nodeType":"IfStatement","src":"5548:86:7","trueBody":{"id":1197,"nodeType":"Block","src":"5570:64:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5620:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5612:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1191,"name":"address","nodeType":"ElementaryTypeName","src":"5612:7:7","typeDescriptions":{}}},"id":1194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5612:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1190,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"5591:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5591:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1196,"nodeType":"RevertStatement","src":"5584:39:7"}]}},{"expression":{"arguments":[{"id":1200,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"5651:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1201,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"5657:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"5661:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1199,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"5643:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1204,"nodeType":"ExpressionStatement","src":"5643:24:7"}]},"documentation":{"id":1160,"nodeType":"StructuredDocumentation","src":"5007:362:7","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1206,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5383:9:7","nodeType":"FunctionDefinition","parameters":{"id":1167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1162,"mutability":"mutable","name":"from","nameLocation":"5401:4:7","nodeType":"VariableDeclaration","scope":1206,"src":"5393:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"5393:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1164,"mutability":"mutable","name":"to","nameLocation":"5415:2:7","nodeType":"VariableDeclaration","scope":1206,"src":"5407:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1163,"name":"address","nodeType":"ElementaryTypeName","src":"5407:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1166,"mutability":"mutable","name":"value","nameLocation":"5427:5:7","nodeType":"VariableDeclaration","scope":1206,"src":"5419:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1165,"name":"uint256","nodeType":"ElementaryTypeName","src":"5419:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5392:41:7"},"returnParameters":{"id":1168,"nodeType":"ParameterList","parameters":[],"src":"5443:0:7"},"scope":1476,"src":"5374:300:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1282,"nodeType":"Block","src":"6064:1032:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1216,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"6078:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6094:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6086:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1217,"name":"address","nodeType":"ElementaryTypeName","src":"6086:7:7","typeDescriptions":{}}},"id":1220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6086:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6078:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1253,"nodeType":"Block","src":"6252:362:7","statements":[{"assignments":[1228],"declarations":[{"constant":false,"id":1228,"mutability":"mutable","name":"fromBalance","nameLocation":"6274:11:7","nodeType":"VariableDeclaration","scope":1253,"src":"6266:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1227,"name":"uint256","nodeType":"ElementaryTypeName","src":"6266:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1232,"initialValue":{"baseExpression":{"id":1229,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"6288:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1231,"indexExpression":{"id":1230,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"6298:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6288:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6266:37:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1233,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"6321:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"6335:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6321:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1243,"nodeType":"IfStatement","src":"6317:115:7","trueBody":{"id":1242,"nodeType":"Block","src":"6342:90:7","statements":[{"errorCall":{"arguments":[{"id":1237,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"6392:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1238,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"6398:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"6411:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1236,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"6367:24:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6367:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1241,"nodeType":"RevertStatement","src":"6360:57:7"}]}},{"id":1252,"nodeType":"UncheckedBlock","src":"6445:159:7","statements":[{"expression":{"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1244,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"6552:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1246,"indexExpression":{"id":1245,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"6562:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6552:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1247,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"6570:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"6584:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6570:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6552:37:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1251,"nodeType":"ExpressionStatement","src":"6552:37:7"}]}]},"id":1254,"nodeType":"IfStatement","src":"6074:540:7","trueBody":{"id":1226,"nodeType":"Block","src":"6098:148:7","statements":[{"expression":{"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1222,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"6214:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"6230:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6214:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1225,"nodeType":"ExpressionStatement","src":"6214:21:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1255,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"6628:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6642:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6634:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1256,"name":"address","nodeType":"ElementaryTypeName","src":"6634:7:7","typeDescriptions":{}}},"id":1259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6634:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6628:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1274,"nodeType":"Block","src":"6843:206:7","statements":[{"id":1273,"nodeType":"UncheckedBlock","src":"6857:182:7","statements":[{"expression":{"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1267,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"7002:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1269,"indexExpression":{"id":1268,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"7012:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7002:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"7019:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7002:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1272,"nodeType":"ExpressionStatement","src":"7002:22:7"}]}]},"id":1275,"nodeType":"IfStatement","src":"6624:425:7","trueBody":{"id":1266,"nodeType":"Block","src":"6646:191:7","statements":[{"id":1265,"nodeType":"UncheckedBlock","src":"6660:167:7","statements":[{"expression":{"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1261,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"6791:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"6807:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6791:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1264,"nodeType":"ExpressionStatement","src":"6791:21:7"}]}]}},{"eventCall":{"arguments":[{"id":1277,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"7073:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1278,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"7079:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"7083:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1276,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"7064:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7064:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1281,"nodeType":"EmitStatement","src":"7059:30:7"}]},"documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"5680:304:7","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1283,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5998:7:7","nodeType":"FunctionDefinition","parameters":{"id":1214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1209,"mutability":"mutable","name":"from","nameLocation":"6014:4:7","nodeType":"VariableDeclaration","scope":1283,"src":"6006:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1208,"name":"address","nodeType":"ElementaryTypeName","src":"6006:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1211,"mutability":"mutable","name":"to","nameLocation":"6028:2:7","nodeType":"VariableDeclaration","scope":1283,"src":"6020:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1210,"name":"address","nodeType":"ElementaryTypeName","src":"6020:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1213,"mutability":"mutable","name":"value","nameLocation":"6040:5:7","nodeType":"VariableDeclaration","scope":1283,"src":"6032:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1212,"name":"uint256","nodeType":"ElementaryTypeName","src":"6032:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6005:41:7"},"returnParameters":{"id":1215,"nodeType":"ParameterList","parameters":[],"src":"6064:0:7"},"scope":1476,"src":"5989:1107:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1315,"nodeType":"Block","src":"7495:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1291,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"7509:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7528:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7520:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1292,"name":"address","nodeType":"ElementaryTypeName","src":"7520:7:7","typeDescriptions":{}}},"id":1295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7520:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7509:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1305,"nodeType":"IfStatement","src":"7505:91:7","trueBody":{"id":1304,"nodeType":"Block","src":"7532:64:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7582:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7574:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1298,"name":"address","nodeType":"ElementaryTypeName","src":"7574:7:7","typeDescriptions":{}}},"id":1301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7574:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1297,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"7553:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7553:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1303,"nodeType":"RevertStatement","src":"7546:39:7"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7621:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7613:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"7613:7:7","typeDescriptions":{}}},"id":1310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7613:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1311,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"7625:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"7634:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1306,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"7605:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7605:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1314,"nodeType":"ExpressionStatement","src":"7605:35:7"}]},"documentation":{"id":1284,"nodeType":"StructuredDocumentation","src":"7102:332:7","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1316,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7448:5:7","nodeType":"FunctionDefinition","parameters":{"id":1289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"account","nameLocation":"7462:7:7","nodeType":"VariableDeclaration","scope":1316,"src":"7454:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1285,"name":"address","nodeType":"ElementaryTypeName","src":"7454:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1288,"mutability":"mutable","name":"value","nameLocation":"7479:5:7","nodeType":"VariableDeclaration","scope":1316,"src":"7471:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1287,"name":"uint256","nodeType":"ElementaryTypeName","src":"7471:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7453:32:7"},"returnParameters":{"id":1290,"nodeType":"ParameterList","parameters":[],"src":"7495:0:7"},"scope":1476,"src":"7439:208:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1348,"nodeType":"Block","src":"8021:150:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1324,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"8035:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8054:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8046:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1325,"name":"address","nodeType":"ElementaryTypeName","src":"8046:7:7","typeDescriptions":{}}},"id":1328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8046:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8035:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1338,"nodeType":"IfStatement","src":"8031:89:7","trueBody":{"id":1337,"nodeType":"Block","src":"8058:62:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8106:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8098:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1331,"name":"address","nodeType":"ElementaryTypeName","src":"8098:7:7","typeDescriptions":{}}},"id":1334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1330,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"8079:18:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8079:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1336,"nodeType":"RevertStatement","src":"8072:37:7"}]}},{"expression":{"arguments":[{"id":1340,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"8137:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8154:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8146:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1341,"name":"address","nodeType":"ElementaryTypeName","src":"8146:7:7","typeDescriptions":{}}},"id":1344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8146:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"8158:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1339,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"8129:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8129:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1347,"nodeType":"ExpressionStatement","src":"8129:35:7"}]},"documentation":{"id":1317,"nodeType":"StructuredDocumentation","src":"7653:307:7","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1349,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7974:5:7","nodeType":"FunctionDefinition","parameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1319,"mutability":"mutable","name":"account","nameLocation":"7988:7:7","nodeType":"VariableDeclaration","scope":1349,"src":"7980:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1318,"name":"address","nodeType":"ElementaryTypeName","src":"7980:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1321,"mutability":"mutable","name":"value","nameLocation":"8005:5:7","nodeType":"VariableDeclaration","scope":1349,"src":"7997:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1320,"name":"uint256","nodeType":"ElementaryTypeName","src":"7997:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7979:32:7"},"returnParameters":{"id":1323,"nodeType":"ParameterList","parameters":[],"src":"8021:0:7"},"scope":1476,"src":"7965:206:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1366,"nodeType":"Block","src":"8781:54:7","statements":[{"expression":{"arguments":[{"id":1360,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"8800:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1361,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"8807:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"8816:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8823:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1359,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1367,1427],"referencedDeclaration":1427,"src":"8791:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8791:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1365,"nodeType":"ExpressionStatement","src":"8791:37:7"}]},"documentation":{"id":1350,"nodeType":"StructuredDocumentation","src":"8177:525:7","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1367,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8716:8:7","nodeType":"FunctionDefinition","parameters":{"id":1357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1352,"mutability":"mutable","name":"owner","nameLocation":"8733:5:7","nodeType":"VariableDeclaration","scope":1367,"src":"8725:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"8725:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1354,"mutability":"mutable","name":"spender","nameLocation":"8748:7:7","nodeType":"VariableDeclaration","scope":1367,"src":"8740:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1353,"name":"address","nodeType":"ElementaryTypeName","src":"8740:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1356,"mutability":"mutable","name":"value","nameLocation":"8765:5:7","nodeType":"VariableDeclaration","scope":1367,"src":"8757:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1355,"name":"uint256","nodeType":"ElementaryTypeName","src":"8757:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8724:47:7"},"returnParameters":{"id":1358,"nodeType":"ParameterList","parameters":[],"src":"8781:0:7"},"scope":1476,"src":"8707:128:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1426,"nodeType":"Block","src":"9780:334:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1379,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"9794:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9811:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1380,"name":"address","nodeType":"ElementaryTypeName","src":"9803:7:7","typeDescriptions":{}}},"id":1383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9794:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1393,"nodeType":"IfStatement","src":"9790:89:7","trueBody":{"id":1392,"nodeType":"Block","src":"9815:64:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9865:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9857:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1386,"name":"address","nodeType":"ElementaryTypeName","src":"9857:7:7","typeDescriptions":{}}},"id":1389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9857:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1385,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"9836:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9836:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1391,"nodeType":"RevertStatement","src":"9829:39:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1394,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"9892:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9911:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9903:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1395,"name":"address","nodeType":"ElementaryTypeName","src":"9903:7:7","typeDescriptions":{}}},"id":1398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9903:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9892:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1408,"nodeType":"IfStatement","src":"9888:90:7","trueBody":{"id":1407,"nodeType":"Block","src":"9915:63:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9964:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9956:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1401,"name":"address","nodeType":"ElementaryTypeName","src":"9956:7:7","typeDescriptions":{}}},"id":1404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9956:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1400,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"9936:19:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9936:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1406,"nodeType":"RevertStatement","src":"9929:38:7"}]}},{"expression":{"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1409,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"9987:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1412,"indexExpression":{"id":1410,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"9999:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9987:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1413,"indexExpression":{"id":1411,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"10006:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9987:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"10017:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9987:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1416,"nodeType":"ExpressionStatement","src":"9987:35:7"},{"condition":{"id":1417,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"10036:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1425,"nodeType":"IfStatement","src":"10032:76:7","trueBody":{"id":1424,"nodeType":"Block","src":"10047:61:7","statements":[{"eventCall":{"arguments":[{"id":1419,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"10075:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1420,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"10082:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"10091:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1418,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"10066:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10066:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1423,"nodeType":"EmitStatement","src":"10061:36:7"}]}}]},"documentation":{"id":1368,"nodeType":"StructuredDocumentation","src":"8841:836:7","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1427,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9691:8:7","nodeType":"FunctionDefinition","parameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1370,"mutability":"mutable","name":"owner","nameLocation":"9708:5:7","nodeType":"VariableDeclaration","scope":1427,"src":"9700:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1369,"name":"address","nodeType":"ElementaryTypeName","src":"9700:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1372,"mutability":"mutable","name":"spender","nameLocation":"9723:7:7","nodeType":"VariableDeclaration","scope":1427,"src":"9715:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1371,"name":"address","nodeType":"ElementaryTypeName","src":"9715:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1374,"mutability":"mutable","name":"value","nameLocation":"9740:5:7","nodeType":"VariableDeclaration","scope":1427,"src":"9732:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1373,"name":"uint256","nodeType":"ElementaryTypeName","src":"9732:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1376,"mutability":"mutable","name":"emitEvent","nameLocation":"9752:9:7","nodeType":"VariableDeclaration","scope":1427,"src":"9747:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1375,"name":"bool","nodeType":"ElementaryTypeName","src":"9747:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9699:63:7"},"returnParameters":{"id":1378,"nodeType":"ParameterList","parameters":[],"src":"9780:0:7"},"scope":1476,"src":"9682:432:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1474,"nodeType":"Block","src":"10485:387:7","statements":[{"assignments":[1438],"declarations":[{"constant":false,"id":1438,"mutability":"mutable","name":"currentAllowance","nameLocation":"10503:16:7","nodeType":"VariableDeclaration","scope":1474,"src":"10495:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1437,"name":"uint256","nodeType":"ElementaryTypeName","src":"10495:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1443,"initialValue":{"arguments":[{"id":1440,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"10532:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1441,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"10539:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1439,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"10522:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10522:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10495:52:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1444,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"10561:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":1447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10585:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1446,"name":"uint256","nodeType":"ElementaryTypeName","src":"10585:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1445,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10580:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10580:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10594:3:7","memberName":"max","nodeType":"MemberAccess","src":"10580:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10561:36:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1473,"nodeType":"IfStatement","src":"10557:309:7","trueBody":{"id":1472,"nodeType":"Block","src":"10599:267:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1451,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"10617:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"10636:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10617:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1461,"nodeType":"IfStatement","src":"10613:130:7","trueBody":{"id":1460,"nodeType":"Block","src":"10643:100:7","statements":[{"errorCall":{"arguments":[{"id":1455,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"10695:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1456,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"10704:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"10722:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1454,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"10668:26:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10668:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1459,"nodeType":"RevertStatement","src":"10661:67:7"}]}},{"id":1471,"nodeType":"UncheckedBlock","src":"10756:100:7","statements":[{"expression":{"arguments":[{"id":1463,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"10793:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1464,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"10800:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1465,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"10809:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"10828:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10809:24:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10835:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1462,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1367,1427],"referencedDeclaration":1427,"src":"10784:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10784:57:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1470,"nodeType":"ExpressionStatement","src":"10784:57:7"}]}]}}]},"documentation":{"id":1428,"nodeType":"StructuredDocumentation","src":"10120:271:7","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1475,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10405:15:7","nodeType":"FunctionDefinition","parameters":{"id":1435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1430,"mutability":"mutable","name":"owner","nameLocation":"10429:5:7","nodeType":"VariableDeclaration","scope":1475,"src":"10421:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1429,"name":"address","nodeType":"ElementaryTypeName","src":"10421:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1432,"mutability":"mutable","name":"spender","nameLocation":"10444:7:7","nodeType":"VariableDeclaration","scope":1475,"src":"10436:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1431,"name":"address","nodeType":"ElementaryTypeName","src":"10436:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1434,"mutability":"mutable","name":"value","nameLocation":"10461:5:7","nodeType":"VariableDeclaration","scope":1475,"src":"10453:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1433,"name":"uint256","nodeType":"ElementaryTypeName","src":"10453:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10420:47:7"},"returnParameters":{"id":1436,"nodeType":"ParameterList","parameters":[],"src":"10485:0:7"},"scope":1476,"src":"10396:476:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1477,"src":"1106:9768:7","usedErrors":[836,841,846,855,860,865],"usedEvents":[1488,1497]}],"src":"105:10770:7"},"id":7},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1554]},"id":1555,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1478,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1479,"nodeType":"StructuredDocumentation","src":"132:71:8","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":1554,"linearizedBaseContracts":[1554],"name":"IERC20","nameLocation":"214:6:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1480,"nodeType":"StructuredDocumentation","src":"227:158:8","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1488,"name":"Transfer","nameLocation":"396:8:8","nodeType":"EventDefinition","parameters":{"id":1487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1482,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:8","nodeType":"VariableDeclaration","scope":1488,"src":"405:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1481,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1484,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:8","nodeType":"VariableDeclaration","scope":1488,"src":"427:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1483,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1486,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:8","nodeType":"VariableDeclaration","scope":1488,"src":"447:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1485,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:8"},"src":"390:72:8"},{"anonymous":false,"documentation":{"id":1489,"nodeType":"StructuredDocumentation","src":"468:148:8","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1497,"name":"Approval","nameLocation":"627:8:8","nodeType":"EventDefinition","parameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1491,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:8","nodeType":"VariableDeclaration","scope":1497,"src":"636:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1490,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1493,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:8","nodeType":"VariableDeclaration","scope":1497,"src":"659:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1492,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1495,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:8","nodeType":"VariableDeclaration","scope":1497,"src":"684:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1494,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:8"},"src":"621:78:8"},{"documentation":{"id":1498,"nodeType":"StructuredDocumentation","src":"705:65:8","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1503,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:8","nodeType":"FunctionDefinition","parameters":{"id":1499,"nodeType":"ParameterList","parameters":[],"src":"795:2:8"},"returnParameters":{"id":1502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1501,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1503,"src":"821:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1500,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:8"},"scope":1554,"src":"775:55:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1504,"nodeType":"StructuredDocumentation","src":"836:71:8","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1511,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:8","nodeType":"FunctionDefinition","parameters":{"id":1507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1506,"mutability":"mutable","name":"account","nameLocation":"939:7:8","nodeType":"VariableDeclaration","scope":1511,"src":"931:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1505,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:8"},"returnParameters":{"id":1510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1511,"src":"971:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1508,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:8"},"scope":1554,"src":"912:68:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1512,"nodeType":"StructuredDocumentation","src":"986:213:8","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1521,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:8","nodeType":"FunctionDefinition","parameters":{"id":1517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1514,"mutability":"mutable","name":"to","nameLocation":"1230:2:8","nodeType":"VariableDeclaration","scope":1521,"src":"1222:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1513,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1516,"mutability":"mutable","name":"value","nameLocation":"1242:5:8","nodeType":"VariableDeclaration","scope":1521,"src":"1234:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1515,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:8"},"returnParameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1521,"src":"1267:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1518,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:8"},"scope":1554,"src":"1204:69:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1522,"nodeType":"StructuredDocumentation","src":"1279:264:8","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1531,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:8","nodeType":"FunctionDefinition","parameters":{"id":1527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1524,"mutability":"mutable","name":"owner","nameLocation":"1575:5:8","nodeType":"VariableDeclaration","scope":1531,"src":"1567:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1523,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1526,"mutability":"mutable","name":"spender","nameLocation":"1590:7:8","nodeType":"VariableDeclaration","scope":1531,"src":"1582:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1525,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:8"},"returnParameters":{"id":1530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1531,"src":"1622:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1528,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:8"},"scope":1554,"src":"1548:83:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1532,"nodeType":"StructuredDocumentation","src":"1637:667:8","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1541,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:8","nodeType":"FunctionDefinition","parameters":{"id":1537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1534,"mutability":"mutable","name":"spender","nameLocation":"2334:7:8","nodeType":"VariableDeclaration","scope":1541,"src":"2326:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1533,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1536,"mutability":"mutable","name":"value","nameLocation":"2351:5:8","nodeType":"VariableDeclaration","scope":1541,"src":"2343:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1535,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:8"},"returnParameters":{"id":1540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1541,"src":"2376:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1538,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:8"},"scope":1554,"src":"2309:73:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1542,"nodeType":"StructuredDocumentation","src":"2388:297:8","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1553,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:8","nodeType":"FunctionDefinition","parameters":{"id":1549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1544,"mutability":"mutable","name":"from","nameLocation":"2720:4:8","nodeType":"VariableDeclaration","scope":1553,"src":"2712:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1543,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1546,"mutability":"mutable","name":"to","nameLocation":"2734:2:8","nodeType":"VariableDeclaration","scope":1553,"src":"2726:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1545,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1548,"mutability":"mutable","name":"value","nameLocation":"2746:5:8","nodeType":"VariableDeclaration","scope":1553,"src":"2738:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1547,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:8"},"returnParameters":{"id":1552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1553,"src":"2771:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1550,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:8"},"scope":1554,"src":"2690:87:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1555,"src":"204:2575:8","usedErrors":[],"usedEvents":[1488,1497]}],"src":"106:2674:8"},"id":8},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[4212],"EIP712":[4439],"ERC20":[1476],"ERC20Permit":[1708],"IERC20Permit":[1902],"Nonces":[2000]},"id":1709,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1556,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":1558,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1709,"sourceUnit":1903,"src":"148:48:9","symbolAliases":[{"foreign":{"id":1557,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"156:12:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1560,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1709,"sourceUnit":1477,"src":"197:35:9","symbolAliases":[{"foreign":{"id":1559,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"205:5:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1562,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1709,"sourceUnit":4213,"src":"233:60:9","symbolAliases":[{"foreign":{"id":1561,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"241:5:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":1564,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1709,"sourceUnit":4440,"src":"294:62:9","symbolAliases":[{"foreign":{"id":1563,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"302:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":1566,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1709,"sourceUnit":2001,"src":"357:49:9","symbolAliases":[{"foreign":{"id":1565,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"365:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1568,"name":"ERC20","nameLocations":["931:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":1476,"src":"931:5:9"},"id":1569,"nodeType":"InheritanceSpecifier","src":"931:5:9"},{"baseName":{"id":1570,"name":"IERC20Permit","nameLocations":["938:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":1902,"src":"938:12:9"},"id":1571,"nodeType":"InheritanceSpecifier","src":"938:12:9"},{"baseName":{"id":1572,"name":"EIP712","nameLocations":["952:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":4439,"src":"952:6:9"},"id":1573,"nodeType":"InheritanceSpecifier","src":"952:6:9"},{"baseName":{"id":1574,"name":"Nonces","nameLocations":["960:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2000,"src":"960:6:9"},"id":1575,"nodeType":"InheritanceSpecifier","src":"960:6:9"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":1567,"nodeType":"StructuredDocumentation","src":"408:489:9","text":" @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":1708,"linearizedBaseContracts":[1708,2000,4439,798,1902,1476,866,1866,1554,1932],"name":"ERC20Permit","nameLocation":"916:11:9","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1580,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"998:15:9","nodeType":"VariableDeclaration","scope":1708,"src":"973:146:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1576,"name":"bytes32","nodeType":"ElementaryTypeName","src":"973:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1034:84:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1577,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1024:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1024:95:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":1581,"nodeType":"StructuredDocumentation","src":"1126:52:9","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":1585,"name":"ERC2612ExpiredSignature","nameLocation":"1189:23:9","nodeType":"ErrorDefinition","parameters":{"id":1584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1583,"mutability":"mutable","name":"deadline","nameLocation":"1221:8:9","nodeType":"VariableDeclaration","scope":1585,"src":"1213:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1582,"name":"uint256","nodeType":"ElementaryTypeName","src":"1213:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1212:18:9"},"src":"1183:48:9"},{"documentation":{"id":1586,"nodeType":"StructuredDocumentation","src":"1237:45:9","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":1592,"name":"ERC2612InvalidSigner","nameLocation":"1293:20:9","nodeType":"ErrorDefinition","parameters":{"id":1591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1588,"mutability":"mutable","name":"signer","nameLocation":"1322:6:9","nodeType":"VariableDeclaration","scope":1592,"src":"1314:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1587,"name":"address","nodeType":"ElementaryTypeName","src":"1314:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1590,"mutability":"mutable","name":"owner","nameLocation":"1338:5:9","nodeType":"VariableDeclaration","scope":1592,"src":"1330:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1589,"name":"address","nodeType":"ElementaryTypeName","src":"1330:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1313:31:9"},"src":"1287:58:9"},{"body":{"id":1602,"nodeType":"Block","src":"1627:2:9","statements":[]},"documentation":{"id":1593,"nodeType":"StructuredDocumentation","src":"1351:221:9","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC-20 token name."},"id":1603,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1598,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"1616:4:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1622:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":1600,"kind":"baseConstructorSpecifier","modifierName":{"id":1597,"name":"EIP712","nameLocations":["1609:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":4439,"src":"1609:6:9"},"nodeType":"ModifierInvocation","src":"1609:17:9"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1595,"mutability":"mutable","name":"name","nameLocation":"1603:4:9","nodeType":"VariableDeclaration","scope":1603,"src":"1589:18:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1594,"name":"string","nodeType":"ElementaryTypeName","src":"1589:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1588:20:9"},"returnParameters":{"id":1601,"nodeType":"ParameterList","parameters":[],"src":"1627:0:9"},"scope":1708,"src":"1577:52:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1887],"body":{"id":1679,"nodeType":"Block","src":"1872:483:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1621,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1886:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1892:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"1886:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1623,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"1904:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1886:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1630,"nodeType":"IfStatement","src":"1882:97:9","trueBody":{"id":1629,"nodeType":"Block","src":"1914:65:9","statements":[{"errorCall":{"arguments":[{"id":1626,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"1959:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1625,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"1935:23:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1935:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1628,"nodeType":"RevertStatement","src":"1928:40:9"}]}},{"assignments":[1632],"declarations":[{"constant":false,"id":1632,"mutability":"mutable","name":"structHash","nameLocation":"1997:10:9","nodeType":"VariableDeclaration","scope":1679,"src":"1989:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1631,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1989:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1646,"initialValue":{"arguments":[{"arguments":[{"id":1636,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"2031:15:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1637,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"2048:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1638,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"2055:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"2064:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1641,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"2081:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1640,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"2071:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2071:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1643,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"2089:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1634,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2020:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2024:6:9","memberName":"encode","nodeType":"MemberAccess","src":"2020:10:9","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2020:78:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1633,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2010:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2010:89:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1989:110:9"},{"assignments":[1648],"declarations":[{"constant":false,"id":1648,"mutability":"mutable","name":"hash","nameLocation":"2118:4:9","nodeType":"VariableDeclaration","scope":1679,"src":"2110:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1647,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1652,"initialValue":{"arguments":[{"id":1650,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"2142:10:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1649,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"2125:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2110:43:9"},{"assignments":[1654],"declarations":[{"constant":false,"id":1654,"mutability":"mutable","name":"signer","nameLocation":"2172:6:9","nodeType":"VariableDeclaration","scope":1679,"src":"2164:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1653,"name":"address","nodeType":"ElementaryTypeName","src":"2164:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1662,"initialValue":{"arguments":[{"id":1657,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"2195:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1658,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"2201:1:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1659,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"2204:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1660,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"2207:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1655,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"2181:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$4212_$","typeString":"type(library ECDSA)"}},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2187:7:9","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":4162,"src":"2181:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2164:45:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1663,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"2223:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1664,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"2233:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2223:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1672,"nodeType":"IfStatement","src":"2219:88:9","trueBody":{"id":1671,"nodeType":"Block","src":"2240:67:9","statements":[{"errorCall":{"arguments":[{"id":1667,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"2282:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1668,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"2290:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1666,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"2261:20:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1670,"nodeType":"RevertStatement","src":"2254:42:9"}]}},{"expression":{"arguments":[{"id":1674,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"2326:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1675,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"2333:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"2342:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1673,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1367,1427],"referencedDeclaration":1367,"src":"2317:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2317:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1678,"nodeType":"ExpressionStatement","src":"2317:31:9"}]},"documentation":{"id":1604,"nodeType":"StructuredDocumentation","src":"1635:43:9","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1680,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1692:6:9","nodeType":"FunctionDefinition","parameters":{"id":1619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1606,"mutability":"mutable","name":"owner","nameLocation":"1716:5:9","nodeType":"VariableDeclaration","scope":1680,"src":"1708:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1605,"name":"address","nodeType":"ElementaryTypeName","src":"1708:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1608,"mutability":"mutable","name":"spender","nameLocation":"1739:7:9","nodeType":"VariableDeclaration","scope":1680,"src":"1731:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1607,"name":"address","nodeType":"ElementaryTypeName","src":"1731:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1610,"mutability":"mutable","name":"value","nameLocation":"1764:5:9","nodeType":"VariableDeclaration","scope":1680,"src":"1756:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1609,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1612,"mutability":"mutable","name":"deadline","nameLocation":"1787:8:9","nodeType":"VariableDeclaration","scope":1680,"src":"1779:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1611,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1614,"mutability":"mutable","name":"v","nameLocation":"1811:1:9","nodeType":"VariableDeclaration","scope":1680,"src":"1805:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1613,"name":"uint8","nodeType":"ElementaryTypeName","src":"1805:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1616,"mutability":"mutable","name":"r","nameLocation":"1830:1:9","nodeType":"VariableDeclaration","scope":1680,"src":"1822:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1615,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1822:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1618,"mutability":"mutable","name":"s","nameLocation":"1849:1:9","nodeType":"VariableDeclaration","scope":1680,"src":"1841:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1617,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1841:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1698:158:9"},"returnParameters":{"id":1620,"nodeType":"ParameterList","parameters":[],"src":"1872:0:9"},"scope":1708,"src":"1683:672:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1895,1959],"body":{"id":1696,"nodeType":"Block","src":"2509:43:9","statements":[{"expression":{"arguments":[{"id":1693,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"2539:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1691,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2526:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$1708_$","typeString":"type(contract super ERC20Permit)"}},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2532:6:9","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1959,"src":"2526:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2526:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1690,"id":1695,"nodeType":"Return","src":"2519:26:9"}]},"documentation":{"id":1681,"nodeType":"StructuredDocumentation","src":"2361:43:9","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1697,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2418:6:9","nodeType":"FunctionDefinition","overrides":{"id":1687,"nodeType":"OverrideSpecifier","overrides":[{"id":1685,"name":"IERC20Permit","nameLocations":["2469:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":1902,"src":"2469:12:9"},{"id":1686,"name":"Nonces","nameLocations":["2483:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2000,"src":"2483:6:9"}],"src":"2460:30:9"},"parameters":{"id":1684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1683,"mutability":"mutable","name":"owner","nameLocation":"2433:5:9","nodeType":"VariableDeclaration","scope":1697,"src":"2425:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1682,"name":"address","nodeType":"ElementaryTypeName","src":"2425:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2424:15:9"},"returnParameters":{"id":1690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1697,"src":"2500:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1688,"name":"uint256","nodeType":"ElementaryTypeName","src":"2500:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2499:9:9"},"scope":1708,"src":"2409:143:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1901],"body":{"id":1706,"nodeType":"Block","src":"2727:44:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1703,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"2744:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2744:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1702,"id":1705,"nodeType":"Return","src":"2737:27:9"}]},"documentation":{"id":1698,"nodeType":"StructuredDocumentation","src":"2558:43:9","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1707,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2668:16:9","nodeType":"FunctionDefinition","parameters":{"id":1699,"nodeType":"ParameterList","parameters":[],"src":"2684:2:9"},"returnParameters":{"id":1702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1707,"src":"2718:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1700,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2718:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2717:9:9"},"scope":1708,"src":"2659:112:9","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":1709,"src":"898:1875:9","usedErrors":[836,841,846,855,860,865,1585,1592,1942,2135,2137,3875,3880,3885],"usedEvents":[778,1488,1497]}],"src":"122:2652:9"},"id":9},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","exportedSymbols":{"Checkpoints":[9636],"ERC20":[1476],"ERC20Votes":[1840],"Votes":[773]},"id":1841,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1710,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"121:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1712,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1841,"sourceUnit":1477,"src":"147:35:10","symbolAliases":[{"foreign":{"id":1711,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"155:5:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/governance/utils/Votes.sol","file":"../../../governance/utils/Votes.sol","id":1714,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1841,"sourceUnit":774,"src":"183:58:10","symbolAliases":[{"foreign":{"id":1713,"name":"Votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"191:5:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/Checkpoints.sol","file":"../../../utils/structs/Checkpoints.sol","id":1716,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1841,"sourceUnit":9637,"src":"242:67:10","symbolAliases":[{"foreign":{"id":1715,"name":"Checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9636,"src":"250:11:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1718,"name":"ERC20","nameLocations":["1226:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":1476,"src":"1226:5:10"},"id":1719,"nodeType":"InheritanceSpecifier","src":"1226:5:10"},{"baseName":{"id":1720,"name":"Votes","nameLocations":["1233:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":773,"src":"1233:5:10"},"id":1721,"nodeType":"InheritanceSpecifier","src":"1233:5:10"}],"canonicalName":"ERC20Votes","contractDependencies":[],"contractKind":"contract","documentation":{"id":1717,"nodeType":"StructuredDocumentation","src":"311:882:10","text":" @dev Extension of ERC-20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n and supports token supply up to 2^208^ - 1, while COMP is limited to 2^96^ - 1.\n NOTE: This contract does not provide interface compatibility with Compound's COMP token.\n This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n by calling the {Votes-delegate} function directly, or by providing a signature to be used with {Votes-delegateBySig}. Voting\n power can be queried through the public accessors {Votes-getVotes} and {Votes-getPastVotes}.\n By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked."},"fullyImplemented":true,"id":1840,"internalFunctionIDs":{"750":1,"764":2},"linearizedBaseContracts":[1840,773,809,230,824,2000,4439,798,1476,866,1866,1554,1932],"name":"ERC20Votes","nameLocation":"1212:10:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1722,"nodeType":"StructuredDocumentation","src":"1245:100:10","text":" @dev Total supply cap has been exceeded, introducing a risk of votes overflowing."},"errorSelector":"1cb15d26","id":1728,"name":"ERC20ExceededSafeSupply","nameLocation":"1356:23:10","nodeType":"ErrorDefinition","parameters":{"id":1727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1724,"mutability":"mutable","name":"increasedSupply","nameLocation":"1388:15:10","nodeType":"VariableDeclaration","scope":1728,"src":"1380:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1723,"name":"uint256","nodeType":"ElementaryTypeName","src":"1380:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1726,"mutability":"mutable","name":"cap","nameLocation":"1413:3:10","nodeType":"VariableDeclaration","scope":1728,"src":"1405:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1725,"name":"uint256","nodeType":"ElementaryTypeName","src":"1405:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1379:38:10"},"src":"1350:68:10"},{"body":{"id":1740,"nodeType":"Block","src":"2175:41:10","statements":[{"expression":{"expression":{"arguments":[{"id":1736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2197:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":1735,"name":"uint208","nodeType":"ElementaryTypeName","src":"2197:7:10","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":1734,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2192:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2192:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2206:3:10","memberName":"max","nodeType":"MemberAccess","src":"2192:17:10","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":1733,"id":1739,"nodeType":"Return","src":"2185:24:10"}]},"documentation":{"id":1729,"nodeType":"StructuredDocumentation","src":"1424:684:10","text":" @dev Maximum token supply. Defaults to `type(uint208).max` (2^208^ - 1).\n This maximum is enforced in {_update}. It limits the total supply of the token, which is otherwise a uint256,\n so that checkpoints can be stored in the Trace208 structure used by {Votes}. Increasing this value will not\n remove the underlying limitation, and will cause {_update} to fail because of a math overflow in\n {Votes-_transferVotingUnits}. An override could be used to further restrict the total supply (to a lower value) if\n additional logic requires it. When resolving override conflicts on this function, the minimum should be\n returned."},"id":1741,"implemented":true,"kind":"function","modifiers":[],"name":"_maxSupply","nameLocation":"2122:10:10","nodeType":"FunctionDefinition","parameters":{"id":1730,"nodeType":"ParameterList","parameters":[],"src":"2132:2:10"},"returnParameters":{"id":1733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1741,"src":"2166:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1731,"name":"uint256","nodeType":"ElementaryTypeName","src":"2166:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2165:9:10"},"scope":1840,"src":"2113:103:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1283],"body":{"id":1794,"nodeType":"Block","src":"2440:329:10","statements":[{"expression":{"arguments":[{"id":1755,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"2464:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1756,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"2470:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"2474:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1752,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2450:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$1840_$","typeString":"type(contract super ERC20Votes)"}},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2456:7:10","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1283,"src":"2450:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2450:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1759,"nodeType":"ExpressionStatement","src":"2450:30:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1760,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"2494:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2510:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2502:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1761,"name":"address","nodeType":"ElementaryTypeName","src":"2502:7:10","typeDescriptions":{}}},"id":1764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2502:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2494:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1787,"nodeType":"IfStatement","src":"2490:226:10","trueBody":{"id":1786,"nodeType":"Block","src":"2514:202:10","statements":[{"assignments":[1767],"declarations":[{"constant":false,"id":1767,"mutability":"mutable","name":"supply","nameLocation":"2536:6:10","nodeType":"VariableDeclaration","scope":1786,"src":"2528:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1766,"name":"uint256","nodeType":"ElementaryTypeName","src":"2528:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1770,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1768,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"2545:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2545:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2528:30:10"},{"assignments":[1772],"declarations":[{"constant":false,"id":1772,"mutability":"mutable","name":"cap","nameLocation":"2580:3:10","nodeType":"VariableDeclaration","scope":1786,"src":"2572:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1771,"name":"uint256","nodeType":"ElementaryTypeName","src":"2572:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1775,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1773,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"2586:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2586:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2572:26:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1776,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"2616:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1777,"name":"cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"2625:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2616:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1785,"nodeType":"IfStatement","src":"2612:94:10","trueBody":{"id":1784,"nodeType":"Block","src":"2630:76:10","statements":[{"errorCall":{"arguments":[{"id":1780,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"2679:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1781,"name":"cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"2687:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1779,"name":"ERC20ExceededSafeSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"2655:23:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2655:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1783,"nodeType":"RevertStatement","src":"2648:43:10"}]}}]}},{"expression":{"arguments":[{"id":1789,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"2746:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1790,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"2752:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"2756:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1788,"name":"_transferVotingUnits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"2725:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2725:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1793,"nodeType":"ExpressionStatement","src":"2725:37:10"}]},"documentation":{"id":1742,"nodeType":"StructuredDocumentation","src":"2222:129:10","text":" @dev Move voting power when tokens are transferred.\n Emits a {IVotes-DelegateVotesChanged} event."},"id":1795,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"2365:7:10","nodeType":"FunctionDefinition","overrides":{"id":1750,"nodeType":"OverrideSpecifier","overrides":[],"src":"2431:8:10"},"parameters":{"id":1749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1744,"mutability":"mutable","name":"from","nameLocation":"2381:4:10","nodeType":"VariableDeclaration","scope":1795,"src":"2373:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1743,"name":"address","nodeType":"ElementaryTypeName","src":"2373:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1746,"mutability":"mutable","name":"to","nameLocation":"2395:2:10","nodeType":"VariableDeclaration","scope":1795,"src":"2387:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1745,"name":"address","nodeType":"ElementaryTypeName","src":"2387:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1748,"mutability":"mutable","name":"value","nameLocation":"2407:5:10","nodeType":"VariableDeclaration","scope":1795,"src":"2399:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1747,"name":"uint256","nodeType":"ElementaryTypeName","src":"2399:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2372:41:10"},"returnParameters":{"id":1751,"nodeType":"ParameterList","parameters":[],"src":"2440:0:10"},"scope":1840,"src":"2356:413:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[772],"body":{"id":1808,"nodeType":"Block","src":"3120:42:10","statements":[{"expression":{"arguments":[{"id":1805,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"3147:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1804,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"3137:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3137:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1803,"id":1807,"nodeType":"Return","src":"3130:25:10"}]},"documentation":{"id":1796,"nodeType":"StructuredDocumentation","src":"2775:249:10","text":" @dev Returns the voting units of an `account`.\n WARNING: Overriding this function may compromise the internal vote accounting.\n `ERC20Votes` assumes tokens map to voting units 1:1 and this is not easy to change."},"id":1809,"implemented":true,"kind":"function","modifiers":[],"name":"_getVotingUnits","nameLocation":"3038:15:10","nodeType":"FunctionDefinition","overrides":{"id":1800,"nodeType":"OverrideSpecifier","overrides":[],"src":"3093:8:10"},"parameters":{"id":1799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1798,"mutability":"mutable","name":"account","nameLocation":"3062:7:10","nodeType":"VariableDeclaration","scope":1809,"src":"3054:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1797,"name":"address","nodeType":"ElementaryTypeName","src":"3054:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3053:17:10"},"returnParameters":{"id":1803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1809,"src":"3111:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1801,"name":"uint256","nodeType":"ElementaryTypeName","src":"3111:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3110:9:10"},"scope":1840,"src":"3029:133:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1821,"nodeType":"Block","src":"3315:48:10","statements":[{"expression":{"arguments":[{"id":1818,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"3348:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1817,"name":"_numCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"3332:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint32_$","typeString":"function (address) view returns (uint32)"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3332:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":1816,"id":1820,"nodeType":"Return","src":"3325:31:10"}]},"documentation":{"id":1810,"nodeType":"StructuredDocumentation","src":"3168:64:10","text":" @dev Get number of checkpoints for `account`."},"functionSelector":"6fcfff45","id":1822,"implemented":true,"kind":"function","modifiers":[],"name":"numCheckpoints","nameLocation":"3246:14:10","nodeType":"FunctionDefinition","parameters":{"id":1813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1812,"mutability":"mutable","name":"account","nameLocation":"3269:7:10","nodeType":"VariableDeclaration","scope":1822,"src":"3261:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1811,"name":"address","nodeType":"ElementaryTypeName","src":"3261:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3260:17:10"},"returnParameters":{"id":1816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1815,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1822,"src":"3307:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1814,"name":"uint32","nodeType":"ElementaryTypeName","src":"3307:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3306:8:10"},"scope":1840,"src":"3237:126:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1838,"nodeType":"Block","src":"3553:50:10","statements":[{"expression":{"arguments":[{"id":1834,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"3583:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1835,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"3592:3:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":1833,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"3570:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint32_$returns$_t_struct$_Checkpoint208_$8597_memory_ptr_$","typeString":"function (address,uint32) view returns (struct Checkpoints.Checkpoint208 memory)"}},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3570:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"functionReturnParameters":1832,"id":1837,"nodeType":"Return","src":"3563:33:10"}]},"documentation":{"id":1823,"nodeType":"StructuredDocumentation","src":"3369:66:10","text":" @dev Get the `pos`-th checkpoint for `account`."},"functionSelector":"f1127ed8","id":1839,"implemented":true,"kind":"function","modifiers":[],"name":"checkpoints","nameLocation":"3449:11:10","nodeType":"FunctionDefinition","parameters":{"id":1828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1825,"mutability":"mutable","name":"account","nameLocation":"3469:7:10","nodeType":"VariableDeclaration","scope":1839,"src":"3461:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1824,"name":"address","nodeType":"ElementaryTypeName","src":"3461:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1827,"mutability":"mutable","name":"pos","nameLocation":"3485:3:10","nodeType":"VariableDeclaration","scope":1839,"src":"3478:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1826,"name":"uint32","nodeType":"ElementaryTypeName","src":"3478:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3460:29:10"},"returnParameters":{"id":1832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1839,"src":"3519:32:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":1830,"nodeType":"UserDefinedTypeName","pathNode":{"id":1829,"name":"Checkpoints.Checkpoint208","nameLocations":["3519:11:10","3531:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":8597,"src":"3519:25:10"},"referencedDeclaration":8597,"src":"3519:25:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"3518:34:10"},"scope":1840,"src":"3440:163:10","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1841,"src":"1194:2411:10","usedErrors":[155,281,288,836,841,846,855,860,865,1728,1942,2135,2137,3875,3880,3885,6156,8063],"usedEvents":[164,173,778,1488,1497]}],"src":"121:3485:10"},"id":10},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1554],"IERC20Metadata":[1866]},"id":1867,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1842,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1844,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1867,"sourceUnit":1555,"src":"151:37:11","symbolAliases":[{"foreign":{"id":1843,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"159:6:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1846,"name":"IERC20","nameLocations":["306:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":1554,"src":"306:6:11"},"id":1847,"nodeType":"InheritanceSpecifier","src":"306:6:11"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1845,"nodeType":"StructuredDocumentation","src":"190:87:11","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":1866,"linearizedBaseContracts":[1866,1554],"name":"IERC20Metadata","nameLocation":"288:14:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1848,"nodeType":"StructuredDocumentation","src":"319:54:11","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1853,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:11","nodeType":"FunctionDefinition","parameters":{"id":1849,"nodeType":"ParameterList","parameters":[],"src":"391:2:11"},"returnParameters":{"id":1852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1853,"src":"417:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1850,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:11"},"scope":1866,"src":"378:54:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1854,"nodeType":"StructuredDocumentation","src":"438:56:11","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1859,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:11","nodeType":"FunctionDefinition","parameters":{"id":1855,"nodeType":"ParameterList","parameters":[],"src":"514:2:11"},"returnParameters":{"id":1858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1859,"src":"540:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1856,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:11"},"scope":1866,"src":"499:56:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1860,"nodeType":"StructuredDocumentation","src":"561:65:11","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1865,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:11","nodeType":"FunctionDefinition","parameters":{"id":1861,"nodeType":"ParameterList","parameters":[],"src":"648:2:11"},"returnParameters":{"id":1864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1865,"src":"674:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1862,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:11"},"scope":1866,"src":"631:50:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1867,"src":"278:405:11","usedErrors":[],"usedEvents":[1488,1497]}],"src":"125:559:11"},"id":11},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1902]},"id":1903,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1868,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1869,"nodeType":"StructuredDocumentation","src":"149:1965:12","text":" @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1902,"linearizedBaseContracts":[1902],"name":"IERC20Permit","nameLocation":"2125:12:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1870,"nodeType":"StructuredDocumentation","src":"2144:850:12","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1887,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3008:6:12","nodeType":"FunctionDefinition","parameters":{"id":1885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1872,"mutability":"mutable","name":"owner","nameLocation":"3032:5:12","nodeType":"VariableDeclaration","scope":1887,"src":"3024:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1871,"name":"address","nodeType":"ElementaryTypeName","src":"3024:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1874,"mutability":"mutable","name":"spender","nameLocation":"3055:7:12","nodeType":"VariableDeclaration","scope":1887,"src":"3047:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1873,"name":"address","nodeType":"ElementaryTypeName","src":"3047:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1876,"mutability":"mutable","name":"value","nameLocation":"3080:5:12","nodeType":"VariableDeclaration","scope":1887,"src":"3072:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1875,"name":"uint256","nodeType":"ElementaryTypeName","src":"3072:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1878,"mutability":"mutable","name":"deadline","nameLocation":"3103:8:12","nodeType":"VariableDeclaration","scope":1887,"src":"3095:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1877,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1880,"mutability":"mutable","name":"v","nameLocation":"3127:1:12","nodeType":"VariableDeclaration","scope":1887,"src":"3121:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1879,"name":"uint8","nodeType":"ElementaryTypeName","src":"3121:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1882,"mutability":"mutable","name":"r","nameLocation":"3146:1:12","nodeType":"VariableDeclaration","scope":1887,"src":"3138:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1881,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3138:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1884,"mutability":"mutable","name":"s","nameLocation":"3165:1:12","nodeType":"VariableDeclaration","scope":1887,"src":"3157:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1883,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3157:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3014:158:12"},"returnParameters":{"id":1886,"nodeType":"ParameterList","parameters":[],"src":"3181:0:12"},"scope":1902,"src":"2999:183:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1888,"nodeType":"StructuredDocumentation","src":"3188:294:12","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1895,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3496:6:12","nodeType":"FunctionDefinition","parameters":{"id":1891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1890,"mutability":"mutable","name":"owner","nameLocation":"3511:5:12","nodeType":"VariableDeclaration","scope":1895,"src":"3503:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1889,"name":"address","nodeType":"ElementaryTypeName","src":"3503:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3502:15:12"},"returnParameters":{"id":1894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1895,"src":"3541:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1892,"name":"uint256","nodeType":"ElementaryTypeName","src":"3541:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3540:9:12"},"scope":1902,"src":"3487:63:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1896,"nodeType":"StructuredDocumentation","src":"3556:128:12","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1901,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3751:16:12","nodeType":"FunctionDefinition","parameters":{"id":1897,"nodeType":"ParameterList","parameters":[],"src":"3767:2:12"},"returnParameters":{"id":1900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1901,"src":"3793:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1898,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3793:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3792:9:12"},"scope":1902,"src":"3742:60:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1903,"src":"2115:1689:12","usedErrors":[],"usedEvents":[]}],"src":"123:3682:12"},"id":12},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1932]},"id":1933,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1904,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:13"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1905,"nodeType":"StructuredDocumentation","src":"127:496:13","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1932,"linearizedBaseContracts":[1932],"name":"Context","nameLocation":"642:7:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":1913,"nodeType":"Block","src":"718:34:13","statements":[{"expression":{"expression":{"id":1910,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:13","memberName":"sender","nodeType":"MemberAccess","src":"735:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1909,"id":1912,"nodeType":"Return","src":"728:17:13"}]},"id":1914,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:13","nodeType":"FunctionDefinition","parameters":{"id":1906,"nodeType":"ParameterList","parameters":[],"src":"675:2:13"},"returnParameters":{"id":1909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1914,"src":"709:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1907,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:13"},"scope":1932,"src":"656:96:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1922,"nodeType":"Block","src":"825:32:13","statements":[{"expression":{"expression":{"id":1919,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:13","memberName":"data","nodeType":"MemberAccess","src":"842:8:13","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1918,"id":1921,"nodeType":"Return","src":"835:15:13"}]},"id":1923,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:13","nodeType":"FunctionDefinition","parameters":{"id":1915,"nodeType":"ParameterList","parameters":[],"src":"775:2:13"},"returnParameters":{"id":1918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1923,"src":"809:14:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1916,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:13"},"scope":1932,"src":"758:99:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1930,"nodeType":"Block","src":"935:25:13","statements":[{"expression":{"hexValue":"30","id":1928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1927,"id":1929,"nodeType":"Return","src":"945:8:13"}]},"id":1931,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:13","nodeType":"FunctionDefinition","parameters":{"id":1924,"nodeType":"ParameterList","parameters":[],"src":"892:2:13"},"returnParameters":{"id":1927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1931,"src":"926:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1925,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:13"},"scope":1932,"src":"863:97:13","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1933,"src":"624:338:13","usedErrors":[],"usedEvents":[]}],"src":"101:862:13"},"id":13},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[2000]},"id":2001,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1934,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:14"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":1935,"nodeType":"StructuredDocumentation","src":"125:83:14","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":2000,"linearizedBaseContracts":[2000],"name":"Nonces","nameLocation":"227:6:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1936,"nodeType":"StructuredDocumentation","src":"240:90:14","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":1942,"name":"InvalidAccountNonce","nameLocation":"341:19:14","nodeType":"ErrorDefinition","parameters":{"id":1941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1938,"mutability":"mutable","name":"account","nameLocation":"369:7:14","nodeType":"VariableDeclaration","scope":1942,"src":"361:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1937,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1940,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:14","nodeType":"VariableDeclaration","scope":1942,"src":"378:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1939,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:14"},"src":"335:65:14"},{"constant":false,"id":1946,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:14","nodeType":"VariableDeclaration","scope":2000,"src":"406:51:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1945,"keyName":"account","keyNameLocation":"422:7:14","keyType":{"id":1943,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1944,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":1958,"nodeType":"Block","src":"607:38:14","statements":[{"expression":{"baseExpression":{"id":1954,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"624:7:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1956,"indexExpression":{"id":1955,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"632:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1953,"id":1957,"nodeType":"Return","src":"617:21:14"}]},"documentation":{"id":1947,"nodeType":"StructuredDocumentation","src":"464:69:14","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":1959,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:14","nodeType":"FunctionDefinition","parameters":{"id":1950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1949,"mutability":"mutable","name":"owner","nameLocation":"562:5:14","nodeType":"VariableDeclaration","scope":1959,"src":"554:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1948,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:14"},"returnParameters":{"id":1953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1959,"src":"598:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1951,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:14"},"scope":2000,"src":"538:107:14","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1973,"nodeType":"Block","src":"828:326:14","statements":[{"id":1972,"nodeType":"UncheckedBlock","src":"1031:117:14","statements":[{"expression":{"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:14","subExpression":{"baseExpression":{"id":1967,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"1121:7:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1969,"indexExpression":{"id":1968,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"1129:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1966,"id":1971,"nodeType":"Return","src":"1114:23:14"}]}]},"documentation":{"id":1960,"nodeType":"StructuredDocumentation","src":"651:103:14","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":1974,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:14","nodeType":"FunctionDefinition","parameters":{"id":1963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1962,"mutability":"mutable","name":"owner","nameLocation":"786:5:14","nodeType":"VariableDeclaration","scope":1974,"src":"778:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1961,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:14"},"returnParameters":{"id":1966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1974,"src":"819:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1964,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:14"},"scope":2000,"src":"759:395:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1998,"nodeType":"Block","src":"1338:149:14","statements":[{"assignments":[1983],"declarations":[{"constant":false,"id":1983,"mutability":"mutable","name":"current","nameLocation":"1356:7:14","nodeType":"VariableDeclaration","scope":1998,"src":"1348:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1982,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1987,"initialValue":{"arguments":[{"id":1985,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"1376:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1984,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"1366:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1988,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"1396:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1989,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"1405:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1997,"nodeType":"IfStatement","src":"1392:89:14","trueBody":{"id":1996,"nodeType":"Block","src":"1414:67:14","statements":[{"errorCall":{"arguments":[{"id":1992,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"1455:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1993,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"1462:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1991,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"1435:19:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1995,"nodeType":"RevertStatement","src":"1428:42:14"}]}}]},"documentation":{"id":1975,"nodeType":"StructuredDocumentation","src":"1160:100:14","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":1999,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:14","nodeType":"FunctionDefinition","parameters":{"id":1980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1977,"mutability":"mutable","name":"owner","nameLocation":"1299:5:14","nodeType":"VariableDeclaration","scope":1999,"src":"1291:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1976,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1979,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:14","nodeType":"VariableDeclaration","scope":1999,"src":"1306:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1978,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:14"},"returnParameters":{"id":1981,"nodeType":"ParameterList","parameters":[],"src":"1338:0:14"},"scope":2000,"src":"1265:222:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2001,"src":"209:1280:14","usedErrors":[1942],"usedEvents":[]}],"src":"99:1391:14"},"id":14},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[2052]},"id":2053,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2002,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":2003,"nodeType":"StructuredDocumentation","src":"125:489:15","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":2052,"linearizedBaseContracts":[2052],"name":"Panic","nameLocation":"665:5:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2004,"nodeType":"StructuredDocumentation","src":"677:36:15","text":"@dev generic / unspecified error"},"id":2007,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:15","nodeType":"VariableDeclaration","scope":2052,"src":"718:40:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2005,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":2006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":2008,"nodeType":"StructuredDocumentation","src":"764:37:15","text":"@dev used by the assert() builtin"},"id":2011,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:15","nodeType":"VariableDeclaration","scope":2052,"src":"806:39:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2009,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":2010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":2012,"nodeType":"StructuredDocumentation","src":"851:41:15","text":"@dev arithmetic underflow or overflow"},"id":2015,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:15","nodeType":"VariableDeclaration","scope":2052,"src":"897:47:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2013,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":2014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:15","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":2016,"nodeType":"StructuredDocumentation","src":"950:35:15","text":"@dev division or modulo by zero"},"id":2019,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:15","nodeType":"VariableDeclaration","scope":2052,"src":"990:49:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2017,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":2018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:15","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":2020,"nodeType":"StructuredDocumentation","src":"1045:30:15","text":"@dev enum conversion error"},"id":2023,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:15","nodeType":"VariableDeclaration","scope":2052,"src":"1080:54:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2021,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":2022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:15","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":2024,"nodeType":"StructuredDocumentation","src":"1140:36:15","text":"@dev invalid encoding in storage"},"id":2027,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:15","nodeType":"VariableDeclaration","scope":2052,"src":"1181:55:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2025,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":2026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:15","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":2028,"nodeType":"StructuredDocumentation","src":"1242:24:15","text":"@dev empty array pop"},"id":2031,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:15","nodeType":"VariableDeclaration","scope":2052,"src":"1271:48:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2029,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":2030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:15","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":2032,"nodeType":"StructuredDocumentation","src":"1325:35:15","text":"@dev array out of bounds access"},"id":2035,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:15","nodeType":"VariableDeclaration","scope":2052,"src":"1365:52:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2033,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":2034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:15","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":2036,"nodeType":"StructuredDocumentation","src":"1423:65:15","text":"@dev resource error (too large allocation or too large array)"},"id":2039,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:15","nodeType":"VariableDeclaration","scope":2052,"src":"1493:47:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2037,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":2038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:15","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":2040,"nodeType":"StructuredDocumentation","src":"1546:42:15","text":"@dev calling invalid internal function"},"id":2043,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:15","nodeType":"VariableDeclaration","scope":2052,"src":"1593:58:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2041,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":2042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:15","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":2050,"nodeType":"Block","src":"1819:151:15","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:15","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:15","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:15"},"nodeType":"YulFunctionCall","src":"1868:24:15"},"nodeType":"YulExpressionStatement","src":"1868:24:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:15","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:15"},"nodeType":"YulFunctionCall","src":"1905:18:15"},"nodeType":"YulExpressionStatement","src":"1905:18:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:15","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:15"},"nodeType":"YulFunctionCall","src":"1936:18:15"},"nodeType":"YulExpressionStatement","src":"1936:18:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":2046,"isOffset":false,"isSlot":false,"src":"1918:4:15","valueSize":1}],"flags":["memory-safe"],"id":2049,"nodeType":"InlineAssembly","src":"1829:135:15"}]},"documentation":{"id":2044,"nodeType":"StructuredDocumentation","src":"1658:113:15","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":2051,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:15","nodeType":"FunctionDefinition","parameters":{"id":2047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2046,"mutability":"mutable","name":"code","nameLocation":"1799:4:15","nodeType":"VariableDeclaration","scope":2051,"src":"1791:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2045,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:15"},"returnParameters":{"id":2048,"nodeType":"ParameterList","parameters":[],"src":"1819:0:15"},"scope":2052,"src":"1776:194:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2053,"src":"657:1315:15","usedErrors":[],"usedEvents":[]}],"src":"99:1874:15"},"id":15},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[2121]},"id":2122,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2054,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:16"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":2055,"nodeType":"StructuredDocumentation","src":"135:894:16","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":2121,"linearizedBaseContracts":[2121],"name":"ReentrancyGuard","nameLocation":"1048:15:16","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2058,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:16","nodeType":"VariableDeclaration","scope":2121,"src":"1818:40:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2056,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":2061,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:16","nodeType":"VariableDeclaration","scope":2121,"src":"1864:36:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2059,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":2060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":2063,"mutability":"mutable","name":"_status","nameLocation":"1923:7:16","nodeType":"VariableDeclaration","scope":2121,"src":"1907:23:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2062,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":2064,"nodeType":"StructuredDocumentation","src":"1937:52:16","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":2066,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:16","nodeType":"ErrorDefinition","parameters":{"id":2065,"nodeType":"ParameterList","parameters":[],"src":"2028:2:16"},"src":"1994:37:16"},{"body":{"id":2073,"nodeType":"Block","src":"2051:38:16","statements":[{"expression":{"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2069,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"2061:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2070,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"2071:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2072,"nodeType":"ExpressionStatement","src":"2061:21:16"}]},"id":2074,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2067,"nodeType":"ParameterList","parameters":[],"src":"2048:2:16"},"returnParameters":{"id":2068,"nodeType":"ParameterList","parameters":[],"src":"2051:0:16"},"scope":2121,"src":"2037:52:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2084,"nodeType":"Block","src":"2490:79:16","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2077,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"2500:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2079,"nodeType":"ExpressionStatement","src":"2500:21:16"},{"id":2080,"nodeType":"PlaceholderStatement","src":"2531:1:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2081,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"2542:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2083,"nodeType":"ExpressionStatement","src":"2542:20:16"}]},"documentation":{"id":2075,"nodeType":"StructuredDocumentation","src":"2095:366:16","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":2085,"name":"nonReentrant","nameLocation":"2475:12:16","nodeType":"ModifierDefinition","parameters":{"id":2076,"nodeType":"ParameterList","parameters":[],"src":"2487:2:16"},"src":"2466:103:16","virtual":false,"visibility":"internal"},{"body":{"id":2100,"nodeType":"Block","src":"2614:268:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2088,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"2702:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2089,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"2713:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2095,"nodeType":"IfStatement","src":"2698:86:16","trueBody":{"id":2094,"nodeType":"Block","src":"2722:62:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2091,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"2743:28:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2093,"nodeType":"RevertStatement","src":"2736:37:16"}]}},{"expression":{"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2096,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"2858:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2097,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"2868:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2099,"nodeType":"ExpressionStatement","src":"2858:17:16"}]},"id":2101,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:16","nodeType":"FunctionDefinition","parameters":{"id":2086,"nodeType":"ParameterList","parameters":[],"src":"2603:2:16"},"returnParameters":{"id":2087,"nodeType":"ParameterList","parameters":[],"src":"2614:0:16"},"scope":2121,"src":"2575:307:16","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2108,"nodeType":"Block","src":"2926:170:16","statements":[{"expression":{"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2104,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"3068:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2105,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"3078:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2107,"nodeType":"ExpressionStatement","src":"3068:21:16"}]},"id":2109,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:16","nodeType":"FunctionDefinition","parameters":{"id":2102,"nodeType":"ParameterList","parameters":[],"src":"2915:2:16"},"returnParameters":{"id":2103,"nodeType":"ParameterList","parameters":[],"src":"2926:0:16"},"scope":2121,"src":"2888:208:16","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2119,"nodeType":"Block","src":"3339:42:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2115,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"3356:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2116,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"3367:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2114,"id":2118,"nodeType":"Return","src":"3349:25:16"}]},"documentation":{"id":2110,"nodeType":"StructuredDocumentation","src":"3102:168:16","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":2120,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:16","nodeType":"FunctionDefinition","parameters":{"id":2111,"nodeType":"ParameterList","parameters":[],"src":"3307:2:16"},"returnParameters":{"id":2114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2120,"src":"3333:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2112,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:16"},"scope":2121,"src":"3275:106:16","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2122,"src":"1030:2353:16","usedErrors":[2066],"usedEvents":[]}],"src":"109:3275:16"},"id":16},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[2127],"ShortStrings":[2338],"StorageSlot":[2462]},"id":2339,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2123,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":2125,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2339,"sourceUnit":2463,"src":"132:46:17","symbolAliases":[{"foreign":{"id":2124,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"140:11:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":2127,"name":"ShortString","nameLocation":"353:11:17","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:17","underlyingType":{"id":2126,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":2128,"nodeType":"StructuredDocumentation","src":"378:876:17","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":2338,"linearizedBaseContracts":[2338],"name":"ShortStrings","nameLocation":"1263:12:17","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2131,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:17","nodeType":"VariableDeclaration","scope":2338,"src":"1345:111:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2129,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":2130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":2135,"name":"StringTooLong","nameLocation":"1469:13:17","nodeType":"ErrorDefinition","parameters":{"id":2134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2133,"mutability":"mutable","name":"str","nameLocation":"1490:3:17","nodeType":"VariableDeclaration","scope":2135,"src":"1483:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2132,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:17"},"src":"1463:32:17"},{"errorSelector":"b3512b0c","id":2137,"name":"InvalidShortString","nameLocation":"1506:18:17","nodeType":"ErrorDefinition","parameters":{"id":2136,"nodeType":"ParameterList","parameters":[],"src":"1524:2:17"},"src":"1500:27:17"},{"body":{"id":2180,"nodeType":"Block","src":"1786:208:17","statements":[{"assignments":[2147],"declarations":[{"constant":false,"id":2147,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:17","nodeType":"VariableDeclaration","scope":2180,"src":"1796:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2146,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2152,"initialValue":{"arguments":[{"id":2150,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"1822:3:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2148,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:17","typeDescriptions":{}}},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2153,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"1840:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:17","memberName":"length","nodeType":"MemberAccess","src":"1840:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:17","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2162,"nodeType":"IfStatement","src":"1836:72:17","trueBody":{"id":2161,"nodeType":"Block","src":"1858:50:17","statements":[{"errorCall":{"arguments":[{"id":2158,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"1893:3:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2157,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"1879:13:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2160,"nodeType":"RevertStatement","src":"1872:25:17"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2171,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"1965:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2169,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:17","typeDescriptions":{}}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2167,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:17","typeDescriptions":{}}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":2174,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"1974:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:17","memberName":"length","nodeType":"MemberAccess","src":"1974:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:17","typeDescriptions":{}}},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2163,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"1924:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2127_$","typeString":"type(ShortString)"}},"id":2164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:17","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:17","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2127_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"}},"functionReturnParameters":2145,"id":2179,"nodeType":"Return","src":"1917:70:17"}]},"documentation":{"id":2138,"nodeType":"StructuredDocumentation","src":"1533:170:17","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":2181,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:17","nodeType":"FunctionDefinition","parameters":{"id":2141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2140,"mutability":"mutable","name":"str","nameLocation":"1745:3:17","nodeType":"VariableDeclaration","scope":2181,"src":"1731:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2139,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:17"},"returnParameters":{"id":2145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2181,"src":"1773:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"},"typeName":{"id":2143,"nodeType":"UserDefinedTypeName","pathNode":{"id":2142,"name":"ShortString","nameLocations":["1773:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2127,"src":"1773:11:17"},"referencedDeclaration":2127,"src":"1773:11:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:17"},"scope":2338,"src":"1708:286:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2206,"nodeType":"Block","src":"2152:304:17","statements":[{"assignments":[2191],"declarations":[{"constant":false,"id":2191,"mutability":"mutable","name":"len","nameLocation":"2170:3:17","nodeType":"VariableDeclaration","scope":2206,"src":"2162:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2190,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2195,"initialValue":{"arguments":[{"id":2193,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"2187:4:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"}],"id":2192,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"2176:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2127_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:17"},{"assignments":[2197],"declarations":[{"constant":false,"id":2197,"mutability":"mutable","name":"str","nameLocation":"2294:3:17","nodeType":"VariableDeclaration","scope":2206,"src":"2280:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2196,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2202,"initialValue":{"arguments":[{"hexValue":"3332","id":2200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":2199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2198,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:17"},{"AST":{"nodeType":"YulBlock","src":"2349:81:17","statements":[{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2370:3:17"},{"name":"len","nodeType":"YulIdentifier","src":"2375:3:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2363:6:17"},"nodeType":"YulFunctionCall","src":"2363:16:17"},"nodeType":"YulExpressionStatement","src":"2363:16:17"},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2403:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"2408:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2399:3:17"},"nodeType":"YulFunctionCall","src":"2399:14:17"},{"name":"sstr","nodeType":"YulIdentifier","src":"2415:4:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2392:6:17"},"nodeType":"YulFunctionCall","src":"2392:28:17"},"nodeType":"YulExpressionStatement","src":"2392:28:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":2191,"isOffset":false,"isSlot":false,"src":"2375:3:17","valueSize":1},{"declaration":2185,"isOffset":false,"isSlot":false,"src":"2415:4:17","valueSize":1},{"declaration":2197,"isOffset":false,"isSlot":false,"src":"2370:3:17","valueSize":1},{"declaration":2197,"isOffset":false,"isSlot":false,"src":"2403:3:17","valueSize":1}],"flags":["memory-safe"],"id":2203,"nodeType":"InlineAssembly","src":"2324:106:17"},{"expression":{"id":2204,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"2446:3:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2189,"id":2205,"nodeType":"Return","src":"2439:10:17"}]},"documentation":{"id":2182,"nodeType":"StructuredDocumentation","src":"2000:73:17","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":2207,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:17","nodeType":"FunctionDefinition","parameters":{"id":2186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2185,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:17","nodeType":"VariableDeclaration","scope":2207,"src":"2096:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"},"typeName":{"id":2184,"nodeType":"UserDefinedTypeName","pathNode":{"id":2183,"name":"ShortString","nameLocations":["2096:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2127,"src":"2096:11:17"},"referencedDeclaration":2127,"src":"2096:11:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:17"},"returnParameters":{"id":2189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2207,"src":"2137:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2187,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:17"},"scope":2338,"src":"2078:378:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2238,"nodeType":"Block","src":"2598:175:17","statements":[{"assignments":[2217],"declarations":[{"constant":false,"id":2217,"mutability":"mutable","name":"result","nameLocation":"2616:6:17","nodeType":"VariableDeclaration","scope":2238,"src":"2608:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2216,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2227,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2222,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"2652:4:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"}],"expression":{"id":2220,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"2633:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2127_$","typeString":"type(ShortString)"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:17","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:17","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2127_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2218,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:17","typeDescriptions":{}}},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":2225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2228,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"2679:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:17","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2235,"nodeType":"IfStatement","src":"2675:69:17","trueBody":{"id":2234,"nodeType":"Block","src":"2692:52:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2231,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"2713:18:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2233,"nodeType":"RevertStatement","src":"2706:27:17"}]}},{"expression":{"id":2236,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"2760:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2215,"id":2237,"nodeType":"Return","src":"2753:13:17"}]},"documentation":{"id":2208,"nodeType":"StructuredDocumentation","src":"2462:61:17","text":" @dev Return the length of a `ShortString`."},"id":2239,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:17","nodeType":"FunctionDefinition","parameters":{"id":2212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2211,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:17","nodeType":"VariableDeclaration","scope":2239,"src":"2548:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"},"typeName":{"id":2210,"nodeType":"UserDefinedTypeName","pathNode":{"id":2209,"name":"ShortString","nameLocations":["2548:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2127,"src":"2548:11:17"},"referencedDeclaration":2127,"src":"2548:11:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:17"},"returnParameters":{"id":2215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2239,"src":"2589:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2213,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:17"},"scope":2338,"src":"2528:245:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2278,"nodeType":"Block","src":"2996:231:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"3016:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2250,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:17","typeDescriptions":{}}},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:17","memberName":"length","nodeType":"MemberAccess","src":"3010:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":2255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2276,"nodeType":"Block","src":"3094:127:17","statements":[{"expression":{"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2265,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"3134:5:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":2262,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"3108:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2462_$","typeString":"type(library StorageSlot)"}},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:17","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":2439,"src":"3108:25:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2359_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2359_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":2267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:17","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2358,"src":"3108:38:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"3149:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2270,"nodeType":"ExpressionStatement","src":"3108:46:17"},{"expression":{"arguments":[{"id":2273,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"3192:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2271,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"3175:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2127_$","typeString":"type(ShortString)"}},"id":2272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:17","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:17","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2127_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"}},"functionReturnParameters":2249,"id":2275,"nodeType":"Return","src":"3168:42:17"}]},"id":2277,"nodeType":"IfStatement","src":"3006:215:17","trueBody":{"id":2261,"nodeType":"Block","src":"3036:52:17","statements":[{"expression":{"arguments":[{"id":2258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"3071:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2257,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"3057:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$2127_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"}},"functionReturnParameters":2249,"id":2260,"nodeType":"Return","src":"3050:27:17"}]}}]},"documentation":{"id":2240,"nodeType":"StructuredDocumentation","src":"2779:103:17","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":2279,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:17","nodeType":"FunctionDefinition","parameters":{"id":2245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2242,"mutability":"mutable","name":"value","nameLocation":"2936:5:17","nodeType":"VariableDeclaration","scope":2279,"src":"2922:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2241,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2244,"mutability":"mutable","name":"store","nameLocation":"2958:5:17","nodeType":"VariableDeclaration","scope":2279,"src":"2943:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2243,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:17"},"returnParameters":{"id":2249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2279,"src":"2983:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"},"typeName":{"id":2247,"nodeType":"UserDefinedTypeName","pathNode":{"id":2246,"name":"ShortString","nameLocations":["2983:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2127,"src":"2983:11:17"},"referencedDeclaration":2127,"src":"2983:11:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:17"},"scope":2338,"src":"2887:340:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2305,"nodeType":"Block","src":"3477:158:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"3510:5:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"}],"expression":{"id":2290,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"3491:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2127_$","typeString":"type(ShortString)"}},"id":2291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3503:6:17","memberName":"unwrap","nodeType":"MemberAccess","src":"3491:18:17","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2127_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3491:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2294,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"3520:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3491:46:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2303,"nodeType":"Block","src":"3592:37:17","statements":[{"expression":{"id":2301,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"3613:5:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":2289,"id":2302,"nodeType":"Return","src":"3606:12:17"}]},"id":2304,"nodeType":"IfStatement","src":"3487:142:17","trueBody":{"id":2300,"nodeType":"Block","src":"3539:47:17","statements":[{"expression":{"arguments":[{"id":2297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"3569:5:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"}],"id":2296,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"3560:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2127_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3560:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2289,"id":2299,"nodeType":"Return","src":"3553:22:17"}]}}]},"documentation":{"id":2280,"nodeType":"StructuredDocumentation","src":"3233:130:17","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}."},"id":2306,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3377:20:17","nodeType":"FunctionDefinition","parameters":{"id":2286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2283,"mutability":"mutable","name":"value","nameLocation":"3410:5:17","nodeType":"VariableDeclaration","scope":2306,"src":"3398:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"},"typeName":{"id":2282,"nodeType":"UserDefinedTypeName","pathNode":{"id":2281,"name":"ShortString","nameLocations":["3398:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2127,"src":"3398:11:17"},"referencedDeclaration":2127,"src":"3398:11:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2285,"mutability":"mutable","name":"store","nameLocation":"3432:5:17","nodeType":"VariableDeclaration","scope":2306,"src":"3417:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2284,"name":"string","nodeType":"ElementaryTypeName","src":"3417:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3397:41:17"},"returnParameters":{"id":2289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2306,"src":"3462:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2287,"name":"string","nodeType":"ElementaryTypeName","src":"3462:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3461:15:17"},"scope":2338,"src":"3368:267:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2336,"nodeType":"Block","src":"4125:174:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"4158:5:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"}],"expression":{"id":2317,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"4139:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2127_$","typeString":"type(ShortString)"}},"id":2318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4151:6:17","memberName":"unwrap","nodeType":"MemberAccess","src":"4139:18:17","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2127_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4139:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2321,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"4168:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4139:46:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2334,"nodeType":"Block","src":"4242:51:17","statements":[{"expression":{"expression":{"arguments":[{"id":2330,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"4269:5:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":2329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2328,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:17","typeDescriptions":{}}},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4276:6:17","memberName":"length","nodeType":"MemberAccess","src":"4263:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2316,"id":2333,"nodeType":"Return","src":"4256:26:17"}]},"id":2335,"nodeType":"IfStatement","src":"4135:158:17","trueBody":{"id":2327,"nodeType":"Block","src":"4187:49:17","statements":[{"expression":{"arguments":[{"id":2324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"4219:5:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"}],"id":2323,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"4208:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2127_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4208:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2316,"id":2326,"nodeType":"Return","src":"4201:24:17"}]}}]},"documentation":{"id":2307,"nodeType":"StructuredDocumentation","src":"3641:374:17","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {toShortStringWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":2337,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4029:22:17","nodeType":"FunctionDefinition","parameters":{"id":2313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2310,"mutability":"mutable","name":"value","nameLocation":"4064:5:17","nodeType":"VariableDeclaration","scope":2337,"src":"4052:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"},"typeName":{"id":2309,"nodeType":"UserDefinedTypeName","pathNode":{"id":2308,"name":"ShortString","nameLocations":["4052:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2127,"src":"4052:11:17"},"referencedDeclaration":2127,"src":"4052:11:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2312,"mutability":"mutable","name":"store","nameLocation":"4086:5:17","nodeType":"VariableDeclaration","scope":2337,"src":"4071:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2311,"name":"string","nodeType":"ElementaryTypeName","src":"4071:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4051:41:17"},"returnParameters":{"id":2316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2337,"src":"4116:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2314,"name":"uint256","nodeType":"ElementaryTypeName","src":"4116:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4115:9:17"},"scope":2338,"src":"4020:279:17","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2339,"src":"1255:3046:17","usedErrors":[2135,2137],"usedEvents":[]}],"src":"106:4196:17"},"id":17},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2462]},"id":2463,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2340,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2341,"nodeType":"StructuredDocumentation","src":"219:1187:18","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":2462,"linearizedBaseContracts":[2462],"name":"StorageSlot","nameLocation":"1415:11:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2344,"members":[{"constant":false,"id":2343,"mutability":"mutable","name":"value","nameLocation":"1470:5:18","nodeType":"VariableDeclaration","scope":2344,"src":"1462:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2342,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:18","nodeType":"StructDefinition","scope":2462,"src":"1433:49:18","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2347,"members":[{"constant":false,"id":2346,"mutability":"mutable","name":"value","nameLocation":"1522:5:18","nodeType":"VariableDeclaration","scope":2347,"src":"1517:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2345,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:18","nodeType":"StructDefinition","scope":2462,"src":"1488:46:18","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2350,"members":[{"constant":false,"id":2349,"mutability":"mutable","name":"value","nameLocation":"1577:5:18","nodeType":"VariableDeclaration","scope":2350,"src":"1569:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:18","nodeType":"StructDefinition","scope":2462,"src":"1540:49:18","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2353,"members":[{"constant":false,"id":2352,"mutability":"mutable","name":"value","nameLocation":"1632:5:18","nodeType":"VariableDeclaration","scope":2353,"src":"1624:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2351,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:18","nodeType":"StructDefinition","scope":2462,"src":"1595:49:18","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":2356,"members":[{"constant":false,"id":2355,"mutability":"mutable","name":"value","nameLocation":"1685:5:18","nodeType":"VariableDeclaration","scope":2356,"src":"1678:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2354,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:18","nodeType":"StructDefinition","scope":2462,"src":"1650:47:18","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2359,"members":[{"constant":false,"id":2358,"mutability":"mutable","name":"value","nameLocation":"1738:5:18","nodeType":"VariableDeclaration","scope":2359,"src":"1731:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2357,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:18","nodeType":"StructDefinition","scope":2462,"src":"1703:47:18","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2362,"members":[{"constant":false,"id":2361,"mutability":"mutable","name":"value","nameLocation":"1789:5:18","nodeType":"VariableDeclaration","scope":2362,"src":"1783:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2360,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:18","nodeType":"StructDefinition","scope":2462,"src":"1756:45:18","visibility":"public"},{"body":{"id":2372,"nodeType":"Block","src":"1983:79:18","statements":[{"AST":{"nodeType":"YulBlock","src":"2018:38:18","statements":[{"nodeType":"YulAssignment","src":"2032:14:18","value":{"name":"slot","nodeType":"YulIdentifier","src":"2042:4:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2032:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2369,"isOffset":false,"isSlot":true,"src":"2032:6:18","suffix":"slot","valueSize":1},{"declaration":2365,"isOffset":false,"isSlot":false,"src":"2042:4:18","valueSize":1}],"flags":["memory-safe"],"id":2371,"nodeType":"InlineAssembly","src":"1993:63:18"}]},"documentation":{"id":2363,"nodeType":"StructuredDocumentation","src":"1807:87:18","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2373,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:18","nodeType":"FunctionDefinition","parameters":{"id":2366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2365,"mutability":"mutable","name":"slot","nameLocation":"1931:4:18","nodeType":"VariableDeclaration","scope":2373,"src":"1923:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2364,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:18"},"returnParameters":{"id":2370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2369,"mutability":"mutable","name":"r","nameLocation":"1980:1:18","nodeType":"VariableDeclaration","scope":2373,"src":"1960:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2344_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2368,"nodeType":"UserDefinedTypeName","pathNode":{"id":2367,"name":"AddressSlot","nameLocations":["1960:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":2344,"src":"1960:11:18"},"referencedDeclaration":2344,"src":"1960:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2344_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:18"},"scope":2462,"src":"1899:163:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2383,"nodeType":"Block","src":"2243:79:18","statements":[{"AST":{"nodeType":"YulBlock","src":"2278:38:18","statements":[{"nodeType":"YulAssignment","src":"2292:14:18","value":{"name":"slot","nodeType":"YulIdentifier","src":"2302:4:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2292:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2380,"isOffset":false,"isSlot":true,"src":"2292:6:18","suffix":"slot","valueSize":1},{"declaration":2376,"isOffset":false,"isSlot":false,"src":"2302:4:18","valueSize":1}],"flags":["memory-safe"],"id":2382,"nodeType":"InlineAssembly","src":"2253:63:18"}]},"documentation":{"id":2374,"nodeType":"StructuredDocumentation","src":"2068:86:18","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":2384,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:18","nodeType":"FunctionDefinition","parameters":{"id":2377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2376,"mutability":"mutable","name":"slot","nameLocation":"2191:4:18","nodeType":"VariableDeclaration","scope":2384,"src":"2183:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2375,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:18"},"returnParameters":{"id":2381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2380,"mutability":"mutable","name":"r","nameLocation":"2240:1:18","nodeType":"VariableDeclaration","scope":2384,"src":"2220:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2347_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2379,"nodeType":"UserDefinedTypeName","pathNode":{"id":2378,"name":"BooleanSlot","nameLocations":["2220:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":2347,"src":"2220:11:18"},"referencedDeclaration":2347,"src":"2220:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2347_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:18"},"scope":2462,"src":"2159:163:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2394,"nodeType":"Block","src":"2503:79:18","statements":[{"AST":{"nodeType":"YulBlock","src":"2538:38:18","statements":[{"nodeType":"YulAssignment","src":"2552:14:18","value":{"name":"slot","nodeType":"YulIdentifier","src":"2562:4:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2552:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2391,"isOffset":false,"isSlot":true,"src":"2552:6:18","suffix":"slot","valueSize":1},{"declaration":2387,"isOffset":false,"isSlot":false,"src":"2562:4:18","valueSize":1}],"flags":["memory-safe"],"id":2393,"nodeType":"InlineAssembly","src":"2513:63:18"}]},"documentation":{"id":2385,"nodeType":"StructuredDocumentation","src":"2328:86:18","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":2395,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:18","nodeType":"FunctionDefinition","parameters":{"id":2388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2387,"mutability":"mutable","name":"slot","nameLocation":"2451:4:18","nodeType":"VariableDeclaration","scope":2395,"src":"2443:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2386,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:18"},"returnParameters":{"id":2392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2391,"mutability":"mutable","name":"r","nameLocation":"2500:1:18","nodeType":"VariableDeclaration","scope":2395,"src":"2480:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2350_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2390,"nodeType":"UserDefinedTypeName","pathNode":{"id":2389,"name":"Bytes32Slot","nameLocations":["2480:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":2350,"src":"2480:11:18"},"referencedDeclaration":2350,"src":"2480:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2350_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:18"},"scope":2462,"src":"2419:163:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2405,"nodeType":"Block","src":"2763:79:18","statements":[{"AST":{"nodeType":"YulBlock","src":"2798:38:18","statements":[{"nodeType":"YulAssignment","src":"2812:14:18","value":{"name":"slot","nodeType":"YulIdentifier","src":"2822:4:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2812:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2402,"isOffset":false,"isSlot":true,"src":"2812:6:18","suffix":"slot","valueSize":1},{"declaration":2398,"isOffset":false,"isSlot":false,"src":"2822:4:18","valueSize":1}],"flags":["memory-safe"],"id":2404,"nodeType":"InlineAssembly","src":"2773:63:18"}]},"documentation":{"id":2396,"nodeType":"StructuredDocumentation","src":"2588:86:18","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":2406,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:18","nodeType":"FunctionDefinition","parameters":{"id":2399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2398,"mutability":"mutable","name":"slot","nameLocation":"2711:4:18","nodeType":"VariableDeclaration","scope":2406,"src":"2703:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2397,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:18"},"returnParameters":{"id":2403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2402,"mutability":"mutable","name":"r","nameLocation":"2760:1:18","nodeType":"VariableDeclaration","scope":2406,"src":"2740:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2353_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2401,"nodeType":"UserDefinedTypeName","pathNode":{"id":2400,"name":"Uint256Slot","nameLocations":["2740:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":2353,"src":"2740:11:18"},"referencedDeclaration":2353,"src":"2740:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2353_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:18"},"scope":2462,"src":"2679:163:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2416,"nodeType":"Block","src":"3020:79:18","statements":[{"AST":{"nodeType":"YulBlock","src":"3055:38:18","statements":[{"nodeType":"YulAssignment","src":"3069:14:18","value":{"name":"slot","nodeType":"YulIdentifier","src":"3079:4:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3069:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2413,"isOffset":false,"isSlot":true,"src":"3069:6:18","suffix":"slot","valueSize":1},{"declaration":2409,"isOffset":false,"isSlot":false,"src":"3079:4:18","valueSize":1}],"flags":["memory-safe"],"id":2415,"nodeType":"InlineAssembly","src":"3030:63:18"}]},"documentation":{"id":2407,"nodeType":"StructuredDocumentation","src":"2848:85:18","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":2417,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:18","nodeType":"FunctionDefinition","parameters":{"id":2410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2409,"mutability":"mutable","name":"slot","nameLocation":"2969:4:18","nodeType":"VariableDeclaration","scope":2417,"src":"2961:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2408,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:18"},"returnParameters":{"id":2414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2413,"mutability":"mutable","name":"r","nameLocation":"3017:1:18","nodeType":"VariableDeclaration","scope":2417,"src":"2998:20:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2356_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":2412,"nodeType":"UserDefinedTypeName","pathNode":{"id":2411,"name":"Int256Slot","nameLocations":["2998:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":2356,"src":"2998:10:18"},"referencedDeclaration":2356,"src":"2998:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2356_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:18"},"scope":2462,"src":"2938:161:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2427,"nodeType":"Block","src":"3277:79:18","statements":[{"AST":{"nodeType":"YulBlock","src":"3312:38:18","statements":[{"nodeType":"YulAssignment","src":"3326:14:18","value":{"name":"slot","nodeType":"YulIdentifier","src":"3336:4:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3326:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2424,"isOffset":false,"isSlot":true,"src":"3326:6:18","suffix":"slot","valueSize":1},{"declaration":2420,"isOffset":false,"isSlot":false,"src":"3336:4:18","valueSize":1}],"flags":["memory-safe"],"id":2426,"nodeType":"InlineAssembly","src":"3287:63:18"}]},"documentation":{"id":2418,"nodeType":"StructuredDocumentation","src":"3105:85:18","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":2428,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:18","nodeType":"FunctionDefinition","parameters":{"id":2421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2420,"mutability":"mutable","name":"slot","nameLocation":"3226:4:18","nodeType":"VariableDeclaration","scope":2428,"src":"3218:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2419,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:18"},"returnParameters":{"id":2425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2424,"mutability":"mutable","name":"r","nameLocation":"3274:1:18","nodeType":"VariableDeclaration","scope":2428,"src":"3255:20:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2359_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2423,"nodeType":"UserDefinedTypeName","pathNode":{"id":2422,"name":"StringSlot","nameLocations":["3255:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":2359,"src":"3255:10:18"},"referencedDeclaration":2359,"src":"3255:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2359_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:18"},"scope":2462,"src":"3195:161:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2438,"nodeType":"Block","src":"3558:85:18","statements":[{"AST":{"nodeType":"YulBlock","src":"3593:44:18","statements":[{"nodeType":"YulAssignment","src":"3607:20:18","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3617:10:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3607:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2435,"isOffset":false,"isSlot":true,"src":"3607:6:18","suffix":"slot","valueSize":1},{"declaration":2431,"isOffset":false,"isSlot":true,"src":"3617:10:18","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2437,"nodeType":"InlineAssembly","src":"3568:69:18"}]},"documentation":{"id":2429,"nodeType":"StructuredDocumentation","src":"3362:101:18","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2439,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:18","nodeType":"FunctionDefinition","parameters":{"id":2432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2431,"mutability":"mutable","name":"store","nameLocation":"3506:5:18","nodeType":"VariableDeclaration","scope":2439,"src":"3491:20:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2430,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:18"},"returnParameters":{"id":2436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2435,"mutability":"mutable","name":"r","nameLocation":"3555:1:18","nodeType":"VariableDeclaration","scope":2439,"src":"3536:20:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2359_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2434,"nodeType":"UserDefinedTypeName","pathNode":{"id":2433,"name":"StringSlot","nameLocations":["3536:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":2359,"src":"3536:10:18"},"referencedDeclaration":2359,"src":"3536:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2359_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:18"},"scope":2462,"src":"3468:175:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2449,"nodeType":"Block","src":"3818:79:18","statements":[{"AST":{"nodeType":"YulBlock","src":"3853:38:18","statements":[{"nodeType":"YulAssignment","src":"3867:14:18","value":{"name":"slot","nodeType":"YulIdentifier","src":"3877:4:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3867:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2446,"isOffset":false,"isSlot":true,"src":"3867:6:18","suffix":"slot","valueSize":1},{"declaration":2442,"isOffset":false,"isSlot":false,"src":"3877:4:18","valueSize":1}],"flags":["memory-safe"],"id":2448,"nodeType":"InlineAssembly","src":"3828:63:18"}]},"documentation":{"id":2440,"nodeType":"StructuredDocumentation","src":"3649:84:18","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":2450,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:18","nodeType":"FunctionDefinition","parameters":{"id":2443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2442,"mutability":"mutable","name":"slot","nameLocation":"3768:4:18","nodeType":"VariableDeclaration","scope":2450,"src":"3760:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2441,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:18"},"returnParameters":{"id":2447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2446,"mutability":"mutable","name":"r","nameLocation":"3815:1:18","nodeType":"VariableDeclaration","scope":2450,"src":"3797:19:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2362_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2445,"nodeType":"UserDefinedTypeName","pathNode":{"id":2444,"name":"BytesSlot","nameLocations":["3797:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":2362,"src":"3797:9:18"},"referencedDeclaration":2362,"src":"3797:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2362_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:18"},"scope":2462,"src":"3738:159:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2460,"nodeType":"Block","src":"4094:85:18","statements":[{"AST":{"nodeType":"YulBlock","src":"4129:44:18","statements":[{"nodeType":"YulAssignment","src":"4143:20:18","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4153:10:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4143:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2457,"isOffset":false,"isSlot":true,"src":"4143:6:18","suffix":"slot","valueSize":1},{"declaration":2453,"isOffset":false,"isSlot":true,"src":"4153:10:18","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2459,"nodeType":"InlineAssembly","src":"4104:69:18"}]},"documentation":{"id":2451,"nodeType":"StructuredDocumentation","src":"3903:99:18","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2461,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:18","nodeType":"FunctionDefinition","parameters":{"id":2454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2453,"mutability":"mutable","name":"store","nameLocation":"4043:5:18","nodeType":"VariableDeclaration","scope":2461,"src":"4029:19:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2452,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:18"},"returnParameters":{"id":2458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2457,"mutability":"mutable","name":"r","nameLocation":"4091:1:18","nodeType":"VariableDeclaration","scope":2461,"src":"4073:19:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2362_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2456,"nodeType":"UserDefinedTypeName","pathNode":{"id":2455,"name":"BytesSlot","nameLocations":["4073:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":2362,"src":"4073:9:18"},"referencedDeclaration":2362,"src":"4073:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2362_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:18"},"scope":2462,"src":"4007:172:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2463,"src":"1407:2774:18","usedErrors":[],"usedEvents":[]}],"src":"193:3989:18"},"id":18},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[6146],"SafeCast":[7911],"SignedMath":[8055],"Strings":[3864]},"id":3865,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2464,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2466,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3865,"sourceUnit":6147,"src":"127:37:19","symbolAliases":[{"foreign":{"id":2465,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"135:4:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":2468,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3865,"sourceUnit":7912,"src":"165:45:19","symbolAliases":[{"foreign":{"id":2467,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"173:8:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2470,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3865,"sourceUnit":8056,"src":"211:49:19","symbolAliases":[{"foreign":{"id":2469,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8055,"src":"219:10:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2471,"nodeType":"StructuredDocumentation","src":"262:34:19","text":" @dev String operations."},"fullyImplemented":true,"id":3864,"linearizedBaseContracts":[3864],"name":"Strings","nameLocation":"305:7:19","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2473,"libraryName":{"id":2472,"name":"SafeCast","nameLocations":["325:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":7911,"src":"325:8:19"},"nodeType":"UsingForDirective","src":"319:21:19"},{"constant":true,"id":2476,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:19","nodeType":"VariableDeclaration","scope":3864,"src":"346:56:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2474,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:19","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2479,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:19","nodeType":"VariableDeclaration","scope":3864,"src":"408:42:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2477,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:19","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":2515,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:19","nodeType":"VariableDeclaration","scope":3864,"src":"456:302:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2480,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":2514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":2509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":2504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":2499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":2494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":2489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":2482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2484,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":2487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":2486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:19","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:19","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":2488,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:19","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:19","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":2492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":2491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:19","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":2493,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:19","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:19","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":2497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":2496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:19","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:19","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":2498,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:19","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:19","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":2502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":2501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:19","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:19","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":2503,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:19","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:19","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":2507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":2506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:19","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:19","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":2508,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:19","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:19","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":2512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":2511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:19","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:19","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":2513,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:19","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:19","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":2516,"nodeType":"StructuredDocumentation","src":"778:81:19","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2522,"name":"StringsInsufficientHexLength","nameLocation":"870:28:19","nodeType":"ErrorDefinition","parameters":{"id":2521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2518,"mutability":"mutable","name":"value","nameLocation":"907:5:19","nodeType":"VariableDeclaration","scope":2522,"src":"899:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2517,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2520,"mutability":"mutable","name":"length","nameLocation":"922:6:19","nodeType":"VariableDeclaration","scope":2522,"src":"914:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2519,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:19"},"src":"864:66:19"},{"documentation":{"id":2523,"nodeType":"StructuredDocumentation","src":"936:108:19","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":2525,"name":"StringsInvalidChar","nameLocation":"1055:18:19","nodeType":"ErrorDefinition","parameters":{"id":2524,"nodeType":"ParameterList","parameters":[],"src":"1073:2:19"},"src":"1049:27:19"},{"documentation":{"id":2526,"nodeType":"StructuredDocumentation","src":"1082:84:19","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":2528,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:19","nodeType":"ErrorDefinition","parameters":{"id":2527,"nodeType":"ParameterList","parameters":[],"src":"1204:2:19"},"src":"1171:36:19"},{"body":{"id":2575,"nodeType":"Block","src":"1379:561:19","statements":[{"id":2574,"nodeType":"UncheckedBlock","src":"1389:545:19","statements":[{"assignments":[2537],"declarations":[{"constant":false,"id":2537,"mutability":"mutable","name":"length","nameLocation":"1421:6:19","nodeType":"VariableDeclaration","scope":2574,"src":"1413:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2536,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2544,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"1441:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2538,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"1430:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6146_$","typeString":"type(library Math)"}},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:19","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5978,"src":"1430:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:19"},{"assignments":[2546],"declarations":[{"constant":false,"id":2546,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:19","nodeType":"VariableDeclaration","scope":2574,"src":"1465:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2545,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2551,"initialValue":{"arguments":[{"id":2549,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"1499:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2547,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:19"},{"assignments":[2553],"declarations":[{"constant":false,"id":2553,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:19","nodeType":"VariableDeclaration","scope":2574,"src":"1520:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2552,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2554,"nodeType":"VariableDeclarationStatement","src":"1520:11:19"},{"AST":{"nodeType":"YulBlock","src":"1570:67:19","statements":[{"nodeType":"YulAssignment","src":"1588:35:19","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1599:6:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1611:2:19","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"1615:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1607:3:19"},"nodeType":"YulFunctionCall","src":"1607:15:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1595:3:19"},"nodeType":"YulFunctionCall","src":"1595:28:19"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1588:3:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2546,"isOffset":false,"isSlot":false,"src":"1599:6:19","valueSize":1},{"declaration":2537,"isOffset":false,"isSlot":false,"src":"1615:6:19","valueSize":1},{"declaration":2553,"isOffset":false,"isSlot":false,"src":"1588:3:19","valueSize":1}],"flags":["memory-safe"],"id":2555,"nodeType":"InlineAssembly","src":"1545:92:19"},{"body":{"id":2570,"nodeType":"Block","src":"1663:234:19","statements":[{"expression":{"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1681:5:19","subExpression":{"id":2557,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"1681:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2559,"nodeType":"ExpressionStatement","src":"1681:5:19"},{"AST":{"nodeType":"YulBlock","src":"1729:86:19","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1759:3:19"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1773:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"1780:2:19","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1769:3:19"},"nodeType":"YulFunctionCall","src":"1769:14:19"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1785:10:19"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1764:4:19"},"nodeType":"YulFunctionCall","src":"1764:32:19"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1751:7:19"},"nodeType":"YulFunctionCall","src":"1751:46:19"},"nodeType":"YulExpressionStatement","src":"1751:46:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":2476,"isOffset":false,"isSlot":false,"src":"1785:10:19","valueSize":1},{"declaration":2553,"isOffset":false,"isSlot":false,"src":"1759:3:19","valueSize":1},{"declaration":2531,"isOffset":false,"isSlot":false,"src":"1773:5:19","valueSize":1}],"flags":["memory-safe"],"id":2560,"nodeType":"InlineAssembly","src":"1704:111:19"},{"expression":{"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"1832:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1832:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2564,"nodeType":"ExpressionStatement","src":"1832:11:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"1865:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2569,"nodeType":"IfStatement","src":"1861:21:19","trueBody":{"id":2568,"nodeType":"Break","src":"1877:5:19"}}]},"condition":{"hexValue":"74727565","id":2556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1657:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2571,"nodeType":"WhileStatement","src":"1650:247:19"},{"expression":{"id":2572,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"1917:6:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2535,"id":2573,"nodeType":"Return","src":"1910:13:19"}]}]},"documentation":{"id":2529,"nodeType":"StructuredDocumentation","src":"1213:90:19","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2576,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:19","nodeType":"FunctionDefinition","parameters":{"id":2532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2531,"mutability":"mutable","name":"value","nameLocation":"1334:5:19","nodeType":"VariableDeclaration","scope":2576,"src":"1326:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2530,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:19"},"returnParameters":{"id":2535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2576,"src":"1364:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2533,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:19"},"scope":3864,"src":"1308:632:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2601,"nodeType":"Block","src":"2116:92:19","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"2147:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2147:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2165:2:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2147:20:19","trueExpression":{"hexValue":"2d","id":2590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2159:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"2193:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2594,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8055,"src":"2178:10:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$8055_$","typeString":"type(library SignedMath)"}},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2189:3:19","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":8054,"src":"2178:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2593,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"2169:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2169:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2133:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2584,"name":"string","nodeType":"ElementaryTypeName","src":"2133:6:19","typeDescriptions":{}}},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2140:6:19","memberName":"concat","nodeType":"MemberAccess","src":"2133:13:19","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2133:68:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2583,"id":2600,"nodeType":"Return","src":"2126:75:19"}]},"documentation":{"id":2577,"nodeType":"StructuredDocumentation","src":"1946:89:19","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2602,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2049:14:19","nodeType":"FunctionDefinition","parameters":{"id":2580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2579,"mutability":"mutable","name":"value","nameLocation":"2071:5:19","nodeType":"VariableDeclaration","scope":2602,"src":"2064:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2578,"name":"int256","nodeType":"ElementaryTypeName","src":"2064:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2063:14:19"},"returnParameters":{"id":2583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2602,"src":"2101:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2581,"name":"string","nodeType":"ElementaryTypeName","src":"2101:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2100:15:19"},"scope":3864,"src":"2040:168:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2621,"nodeType":"Block","src":"2387:100:19","statements":[{"id":2620,"nodeType":"UncheckedBlock","src":"2397:84:19","statements":[{"expression":{"arguments":[{"id":2611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"2440:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"2459:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2612,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"2447:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6146_$","typeString":"type(library Math)"}},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2452:6:19","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":6089,"src":"2447:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2468:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2447:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2610,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2622,2705,2725],"referencedDeclaration":2705,"src":"2428:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2428:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2609,"id":2619,"nodeType":"Return","src":"2421:49:19"}]}]},"documentation":{"id":2603,"nodeType":"StructuredDocumentation","src":"2214:94:19","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2622,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2322:11:19","nodeType":"FunctionDefinition","parameters":{"id":2606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2605,"mutability":"mutable","name":"value","nameLocation":"2342:5:19","nodeType":"VariableDeclaration","scope":2622,"src":"2334:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2604,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:19"},"returnParameters":{"id":2609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2608,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2622,"src":"2372:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2607,"name":"string","nodeType":"ElementaryTypeName","src":"2372:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2371:15:19"},"scope":3864,"src":"2313:174:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2704,"nodeType":"Block","src":"2700:435:19","statements":[{"assignments":[2633],"declarations":[{"constant":false,"id":2633,"mutability":"mutable","name":"localValue","nameLocation":"2718:10:19","nodeType":"VariableDeclaration","scope":2704,"src":"2710:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2632,"name":"uint256","nodeType":"ElementaryTypeName","src":"2710:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2635,"initialValue":{"id":2634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"2731:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2710:26:19"},{"assignments":[2637],"declarations":[{"constant":false,"id":2637,"mutability":"mutable","name":"buffer","nameLocation":"2759:6:19","nodeType":"VariableDeclaration","scope":2704,"src":"2746:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2636,"name":"bytes","nodeType":"ElementaryTypeName","src":"2746:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2646,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2778:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2641,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"2782:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2778:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2791:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2778:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2768:9:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2638,"name":"bytes","nodeType":"ElementaryTypeName","src":"2772:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2768:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2746:47:19"},{"expression":{"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2647,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"2803:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2649,"indexExpression":{"hexValue":"30","id":2648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2810:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2803:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2815:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2803:15:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2652,"nodeType":"ExpressionStatement","src":"2803:15:19"},{"expression":{"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2653,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"2828:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2655,"indexExpression":{"hexValue":"31","id":2654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2828:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2840:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2828:15:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2658,"nodeType":"ExpressionStatement","src":"2828:15:19"},{"body":{"id":2687,"nodeType":"Block","src":"2898:95:19","statements":[{"expression":{"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2673,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"2912:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2675,"indexExpression":{"id":2674,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"2919:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2912:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2676,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"2924:10:19","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2680,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2677,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"2935:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:3:19","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2935:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2924:28:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2912:40:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2682,"nodeType":"ExpressionStatement","src":"2912:40:19"},{"expression":{"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2683,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"2966:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2981:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2966:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2686,"nodeType":"ExpressionStatement","src":"2966:16:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2667,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"2886:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2890:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2886:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2688,"initializationExpression":{"assignments":[2660],"declarations":[{"constant":false,"id":2660,"mutability":"mutable","name":"i","nameLocation":"2866:1:19","nodeType":"VariableDeclaration","scope":2688,"src":"2858:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2659,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2666,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2870:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2662,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"2874:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2870:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2883:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2870:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2858:26:19"},"loopExpression":{"expression":{"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2893:3:19","subExpression":{"id":2670,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"2895:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2672,"nodeType":"ExpressionStatement","src":"2893:3:19"},"nodeType":"ForStatement","src":"2853:140:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2689,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"3006:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3020:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3006:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2698,"nodeType":"IfStatement","src":"3002:96:19","trueBody":{"id":2697,"nodeType":"Block","src":"3023:75:19","statements":[{"errorCall":{"arguments":[{"id":2693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"3073:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2694,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"3080:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2692,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"3044:28:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3044:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2696,"nodeType":"RevertStatement","src":"3037:50:19"}]}},{"expression":{"arguments":[{"id":2701,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"3121:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3114:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2699,"name":"string","nodeType":"ElementaryTypeName","src":"3114:6:19","typeDescriptions":{}}},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3114:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2631,"id":2703,"nodeType":"Return","src":"3107:21:19"}]},"documentation":{"id":2623,"nodeType":"StructuredDocumentation","src":"2493:112:19","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2705,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2619:11:19","nodeType":"FunctionDefinition","parameters":{"id":2628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2625,"mutability":"mutable","name":"value","nameLocation":"2639:5:19","nodeType":"VariableDeclaration","scope":2705,"src":"2631:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2624,"name":"uint256","nodeType":"ElementaryTypeName","src":"2631:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2627,"mutability":"mutable","name":"length","nameLocation":"2654:6:19","nodeType":"VariableDeclaration","scope":2705,"src":"2646:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2626,"name":"uint256","nodeType":"ElementaryTypeName","src":"2646:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2630:31:19"},"returnParameters":{"id":2631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2705,"src":"2685:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2629,"name":"string","nodeType":"ElementaryTypeName","src":"2685:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2684:15:19"},"scope":3864,"src":"2610:525:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2724,"nodeType":"Block","src":"3367:75:19","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2718,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"3412:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3404:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2716,"name":"uint160","nodeType":"ElementaryTypeName","src":"3404:7:19","typeDescriptions":{}}},"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3396:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2714,"name":"uint256","nodeType":"ElementaryTypeName","src":"3396:7:19","typeDescriptions":{}}},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3396:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2721,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"3420:14:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2713,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2622,2705,2725],"referencedDeclaration":2705,"src":"3384:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3384:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2712,"id":2723,"nodeType":"Return","src":"3377:58:19"}]},"documentation":{"id":2706,"nodeType":"StructuredDocumentation","src":"3141:148:19","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2725,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3303:11:19","nodeType":"FunctionDefinition","parameters":{"id":2709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2708,"mutability":"mutable","name":"addr","nameLocation":"3323:4:19","nodeType":"VariableDeclaration","scope":2725,"src":"3315:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2707,"name":"address","nodeType":"ElementaryTypeName","src":"3315:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3314:14:19"},"returnParameters":{"id":2712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2725,"src":"3352:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2710,"name":"string","nodeType":"ElementaryTypeName","src":"3352:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3351:15:19"},"scope":3864,"src":"3294:148:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2789,"nodeType":"Block","src":"3699:642:19","statements":[{"assignments":[2734],"declarations":[{"constant":false,"id":2734,"mutability":"mutable","name":"buffer","nameLocation":"3722:6:19","nodeType":"VariableDeclaration","scope":2789,"src":"3709:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2733,"name":"bytes","nodeType":"ElementaryTypeName","src":"3709:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2741,"initialValue":{"arguments":[{"arguments":[{"id":2738,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"3749:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2737,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2622,2705,2725],"referencedDeclaration":2725,"src":"3737:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3731:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2735,"name":"bytes","nodeType":"ElementaryTypeName","src":"3731:5:19","typeDescriptions":{}}},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3731:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3709:46:19"},{"assignments":[2743],"declarations":[{"constant":false,"id":2743,"mutability":"mutable","name":"hashValue","nameLocation":"3848:9:19","nodeType":"VariableDeclaration","scope":2789,"src":"3840:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2742,"name":"uint256","nodeType":"ElementaryTypeName","src":"3840:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2744,"nodeType":"VariableDeclarationStatement","src":"3840:17:19"},{"AST":{"nodeType":"YulBlock","src":"3892:78:19","statements":[{"nodeType":"YulAssignment","src":"3906:54:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3923:2:19","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3941:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"3949:4:19","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3937:3:19"},"nodeType":"YulFunctionCall","src":"3937:17:19"},{"kind":"number","nodeType":"YulLiteral","src":"3956:2:19","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3927:9:19"},"nodeType":"YulFunctionCall","src":"3927:32:19"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3919:3:19"},"nodeType":"YulFunctionCall","src":"3919:41:19"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3906:9:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2734,"isOffset":false,"isSlot":false,"src":"3941:6:19","valueSize":1},{"declaration":2743,"isOffset":false,"isSlot":false,"src":"3906:9:19","valueSize":1}],"flags":["memory-safe"],"id":2745,"nodeType":"InlineAssembly","src":"3867:103:19"},{"body":{"id":2782,"nodeType":"Block","src":"4013:291:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2756,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"4119:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4131:3:19","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4119:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4137:1:19","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4119:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2763,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"4148:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2765,"indexExpression":{"id":2764,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"4155:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4148:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4142:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2761,"name":"uint8","nodeType":"ElementaryTypeName","src":"4142:5:19","typeDescriptions":{}}},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4142:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4161:2:19","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4142:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4119:44:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2777,"nodeType":"IfStatement","src":"4115:150:19","trueBody":{"id":2776,"nodeType":"Block","src":"4165:100:19","statements":[{"expression":{"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2770,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"4233:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2772,"indexExpression":{"id":2771,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"4240:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4233:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4246:4:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4233:17:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2775,"nodeType":"ExpressionStatement","src":"4233:17:19"}]}},{"expression":{"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2778,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"4278:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4292:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4278:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2781,"nodeType":"ExpressionStatement","src":"4278:15:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2750,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"4001:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4005:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4001:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2783,"initializationExpression":{"assignments":[2747],"declarations":[{"constant":false,"id":2747,"mutability":"mutable","name":"i","nameLocation":"3993:1:19","nodeType":"VariableDeclaration","scope":2783,"src":"3985:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2746,"name":"uint256","nodeType":"ElementaryTypeName","src":"3985:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2749,"initialValue":{"hexValue":"3431","id":2748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3997:2:19","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3985:14:19"},"loopExpression":{"expression":{"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4008:3:19","subExpression":{"id":2753,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"4010:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2755,"nodeType":"ExpressionStatement","src":"4008:3:19"},"nodeType":"ForStatement","src":"3980:324:19"},{"expression":{"arguments":[{"id":2786,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"4327:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4320:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2784,"name":"string","nodeType":"ElementaryTypeName","src":"4320:6:19","typeDescriptions":{}}},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4320:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2732,"id":2788,"nodeType":"Return","src":"4313:21:19"}]},"documentation":{"id":2726,"nodeType":"StructuredDocumentation","src":"3448:165:19","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2790,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3627:19:19","nodeType":"FunctionDefinition","parameters":{"id":2729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2728,"mutability":"mutable","name":"addr","nameLocation":"3655:4:19","nodeType":"VariableDeclaration","scope":2790,"src":"3647:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2727,"name":"address","nodeType":"ElementaryTypeName","src":"3647:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3646:14:19"},"returnParameters":{"id":2732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2790,"src":"3684:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2730,"name":"string","nodeType":"ElementaryTypeName","src":"3684:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3683:15:19"},"scope":3864,"src":"3618:723:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2826,"nodeType":"Block","src":"4496:104:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2802,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"4519:1:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4513:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2800,"name":"bytes","nodeType":"ElementaryTypeName","src":"4513:5:19","typeDescriptions":{}}},"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4513:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4522:6:19","memberName":"length","nodeType":"MemberAccess","src":"4513:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2807,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"4538:1:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2805,"name":"bytes","nodeType":"ElementaryTypeName","src":"4532:5:19","typeDescriptions":{}}},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4541:6:19","memberName":"length","nodeType":"MemberAccess","src":"4532:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4513:34:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2814,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"4567:1:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4561:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2812,"name":"bytes","nodeType":"ElementaryTypeName","src":"4561:5:19","typeDescriptions":{}}},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2811,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4551:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4551:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2820,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"4590:1:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4584:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2818,"name":"bytes","nodeType":"ElementaryTypeName","src":"4584:5:19","typeDescriptions":{}}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4584:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2817,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4574:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4574:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4551:42:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4513:80:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2799,"id":2825,"nodeType":"Return","src":"4506:87:19"}]},"documentation":{"id":2791,"nodeType":"StructuredDocumentation","src":"4347:66:19","text":" @dev Returns true if the two strings are equal."},"id":2827,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4427:5:19","nodeType":"FunctionDefinition","parameters":{"id":2796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2793,"mutability":"mutable","name":"a","nameLocation":"4447:1:19","nodeType":"VariableDeclaration","scope":2827,"src":"4433:15:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2792,"name":"string","nodeType":"ElementaryTypeName","src":"4433:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2795,"mutability":"mutable","name":"b","nameLocation":"4464:1:19","nodeType":"VariableDeclaration","scope":2827,"src":"4450:15:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2794,"name":"string","nodeType":"ElementaryTypeName","src":"4450:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4432:34:19"},"returnParameters":{"id":2799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2827,"src":"4490:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2797,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4489:6:19"},"scope":3864,"src":"4418:182:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2845,"nodeType":"Block","src":"4897:64:19","statements":[{"expression":{"arguments":[{"id":2836,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"4924:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4931:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2840,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"4940:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4934:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2838,"name":"bytes","nodeType":"ElementaryTypeName","src":"4934:5:19","typeDescriptions":{}}},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4934:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4947:6:19","memberName":"length","nodeType":"MemberAccess","src":"4934:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2835,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[2846,2877],"referencedDeclaration":2877,"src":"4914:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4914:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2834,"id":2844,"nodeType":"Return","src":"4907:47:19"}]},"documentation":{"id":2828,"nodeType":"StructuredDocumentation","src":"4606:214:19","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2846,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4834:9:19","nodeType":"FunctionDefinition","parameters":{"id":2831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2830,"mutability":"mutable","name":"input","nameLocation":"4858:5:19","nodeType":"VariableDeclaration","scope":2846,"src":"4844:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2829,"name":"string","nodeType":"ElementaryTypeName","src":"4844:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4843:21:19"},"returnParameters":{"id":2834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2846,"src":"4888:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2832,"name":"uint256","nodeType":"ElementaryTypeName","src":"4888:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4887:9:19"},"scope":3864,"src":"4825:136:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2876,"nodeType":"Block","src":"5366:153:19","statements":[{"assignments":[2859,2861],"declarations":[{"constant":false,"id":2859,"mutability":"mutable","name":"success","nameLocation":"5382:7:19","nodeType":"VariableDeclaration","scope":2876,"src":"5377:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2858,"name":"bool","nodeType":"ElementaryTypeName","src":"5377:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2861,"mutability":"mutable","name":"value","nameLocation":"5399:5:19","nodeType":"VariableDeclaration","scope":2876,"src":"5391:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2860,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2867,"initialValue":{"arguments":[{"id":2863,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"5421:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2864,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2851,"src":"5428:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2865,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"5435:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2862,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2898,2935],"referencedDeclaration":2935,"src":"5408:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5408:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5376:63:19"},{"condition":{"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5453:8:19","subExpression":{"id":2868,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"5454:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2873,"nodeType":"IfStatement","src":"5449:41:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2870,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"5470:18:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2872,"nodeType":"RevertStatement","src":"5463:27:19"}},{"expression":{"id":2874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"5507:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2857,"id":2875,"nodeType":"Return","src":"5500:12:19"}]},"documentation":{"id":2847,"nodeType":"StructuredDocumentation","src":"4967:294:19","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2877,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5275:9:19","nodeType":"FunctionDefinition","parameters":{"id":2854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2849,"mutability":"mutable","name":"input","nameLocation":"5299:5:19","nodeType":"VariableDeclaration","scope":2877,"src":"5285:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2848,"name":"string","nodeType":"ElementaryTypeName","src":"5285:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2851,"mutability":"mutable","name":"begin","nameLocation":"5314:5:19","nodeType":"VariableDeclaration","scope":2877,"src":"5306:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2850,"name":"uint256","nodeType":"ElementaryTypeName","src":"5306:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2853,"mutability":"mutable","name":"end","nameLocation":"5329:3:19","nodeType":"VariableDeclaration","scope":2877,"src":"5321:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2852,"name":"uint256","nodeType":"ElementaryTypeName","src":"5321:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5284:49:19"},"returnParameters":{"id":2857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2877,"src":"5357:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2855,"name":"uint256","nodeType":"ElementaryTypeName","src":"5357:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5356:9:19"},"scope":3864,"src":"5266:253:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2897,"nodeType":"Block","src":"5840:83:19","statements":[{"expression":{"arguments":[{"id":2888,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"5886:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5893:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2892,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"5902:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5896:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2890,"name":"bytes","nodeType":"ElementaryTypeName","src":"5896:5:19","typeDescriptions":{}}},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5896:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5909:6:19","memberName":"length","nodeType":"MemberAccess","src":"5896:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2887,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"5857:28:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5857:59:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2886,"id":2896,"nodeType":"Return","src":"5850:66:19"}]},"documentation":{"id":2878,"nodeType":"StructuredDocumentation","src":"5525:215:19","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2898,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5754:12:19","nodeType":"FunctionDefinition","parameters":{"id":2881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2880,"mutability":"mutable","name":"input","nameLocation":"5781:5:19","nodeType":"VariableDeclaration","scope":2898,"src":"5767:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2879,"name":"string","nodeType":"ElementaryTypeName","src":"5767:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5766:21:19"},"returnParameters":{"id":2886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2883,"mutability":"mutable","name":"success","nameLocation":"5816:7:19","nodeType":"VariableDeclaration","scope":2898,"src":"5811:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2882,"name":"bool","nodeType":"ElementaryTypeName","src":"5811:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2885,"mutability":"mutable","name":"value","nameLocation":"5833:5:19","nodeType":"VariableDeclaration","scope":2898,"src":"5825:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2884,"name":"uint256","nodeType":"ElementaryTypeName","src":"5825:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5810:29:19"},"scope":3864,"src":"5745:178:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2934,"nodeType":"Block","src":"6325:144:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2912,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"6339:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2915,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"6351:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6345:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2913,"name":"bytes","nodeType":"ElementaryTypeName","src":"6345:5:19","typeDescriptions":{}}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6345:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6358:6:19","memberName":"length","nodeType":"MemberAccess","src":"6345:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6339:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2919,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"6368:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2920,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"6376:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6368:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6339:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2927,"nodeType":"IfStatement","src":"6335:63:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6389:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6396:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2925,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6388:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2911,"id":2926,"nodeType":"Return","src":"6381:17:19"}},{"expression":{"arguments":[{"id":2929,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"6444:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2930,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"6451:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2931,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"6458:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2928,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"6415:28:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6415:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2911,"id":2933,"nodeType":"Return","src":"6408:54:19"}]},"documentation":{"id":2899,"nodeType":"StructuredDocumentation","src":"5929:238:19","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2935,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6181:12:19","nodeType":"FunctionDefinition","parameters":{"id":2906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2901,"mutability":"mutable","name":"input","nameLocation":"6217:5:19","nodeType":"VariableDeclaration","scope":2935,"src":"6203:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2900,"name":"string","nodeType":"ElementaryTypeName","src":"6203:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2903,"mutability":"mutable","name":"begin","nameLocation":"6240:5:19","nodeType":"VariableDeclaration","scope":2935,"src":"6232:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2902,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2905,"mutability":"mutable","name":"end","nameLocation":"6263:3:19","nodeType":"VariableDeclaration","scope":2935,"src":"6255:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2904,"name":"uint256","nodeType":"ElementaryTypeName","src":"6255:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6193:79:19"},"returnParameters":{"id":2911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2908,"mutability":"mutable","name":"success","nameLocation":"6301:7:19","nodeType":"VariableDeclaration","scope":2935,"src":"6296:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2907,"name":"bool","nodeType":"ElementaryTypeName","src":"6296:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2910,"mutability":"mutable","name":"value","nameLocation":"6318:5:19","nodeType":"VariableDeclaration","scope":2935,"src":"6310:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2909,"name":"uint256","nodeType":"ElementaryTypeName","src":"6310:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6295:29:19"},"scope":3864,"src":"6172:297:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3004,"nodeType":"Block","src":"6872:347:19","statements":[{"assignments":[2950],"declarations":[{"constant":false,"id":2950,"mutability":"mutable","name":"buffer","nameLocation":"6895:6:19","nodeType":"VariableDeclaration","scope":3004,"src":"6882:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2949,"name":"bytes","nodeType":"ElementaryTypeName","src":"6882:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2955,"initialValue":{"arguments":[{"id":2953,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"6910:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6904:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2951,"name":"bytes","nodeType":"ElementaryTypeName","src":"6904:5:19","typeDescriptions":{}}},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6904:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6882:34:19"},{"assignments":[2957],"declarations":[{"constant":false,"id":2957,"mutability":"mutable","name":"result","nameLocation":"6935:6:19","nodeType":"VariableDeclaration","scope":3004,"src":"6927:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2956,"name":"uint256","nodeType":"ElementaryTypeName","src":"6927:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2959,"initialValue":{"hexValue":"30","id":2958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6944:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6927:18:19"},{"body":{"id":2998,"nodeType":"Block","src":"6993:189:19","statements":[{"assignments":[2971],"declarations":[{"constant":false,"id":2971,"mutability":"mutable","name":"chr","nameLocation":"7013:3:19","nodeType":"VariableDeclaration","scope":2998,"src":"7007:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2970,"name":"uint8","nodeType":"ElementaryTypeName","src":"7007:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2981,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2976,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"7062:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2977,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"7070:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2975,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"7039:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7039:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7032:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2973,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7032:6:19","typeDescriptions":{}}},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7032:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2972,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"7019:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7019:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7007:67:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2982,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"7092:3:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7098:1:19","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7092:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2989,"nodeType":"IfStatement","src":"7088:30:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7109:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7116:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2987,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7108:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2948,"id":2988,"nodeType":"Return","src":"7101:17:19"}},{"expression":{"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2990,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"7132:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7142:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7132:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2993,"nodeType":"ExpressionStatement","src":"7132:12:19"},{"expression":{"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2994,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"7158:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2995,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"7168:3:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7158:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2997,"nodeType":"ExpressionStatement","src":"7158:13:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2964,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"6979:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2965,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"6983:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6979:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2999,"initializationExpression":{"assignments":[2961],"declarations":[{"constant":false,"id":2961,"mutability":"mutable","name":"i","nameLocation":"6968:1:19","nodeType":"VariableDeclaration","scope":2999,"src":"6960:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2960,"name":"uint256","nodeType":"ElementaryTypeName","src":"6960:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2963,"initialValue":{"id":2962,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"6972:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6960:17:19"},"loopExpression":{"expression":{"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6988:3:19","subExpression":{"id":2967,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"6990:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2969,"nodeType":"ExpressionStatement","src":"6988:3:19"},"nodeType":"ForStatement","src":"6955:227:19"},{"expression":{"components":[{"hexValue":"74727565","id":3000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7199:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3001,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"7205:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3002,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7198:14:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2948,"id":3003,"nodeType":"Return","src":"7191:21:19"}]},"documentation":{"id":2936,"nodeType":"StructuredDocumentation","src":"6475:224:19","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3005,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6713:28:19","nodeType":"FunctionDefinition","parameters":{"id":2943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2938,"mutability":"mutable","name":"input","nameLocation":"6765:5:19","nodeType":"VariableDeclaration","scope":3005,"src":"6751:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2937,"name":"string","nodeType":"ElementaryTypeName","src":"6751:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2940,"mutability":"mutable","name":"begin","nameLocation":"6788:5:19","nodeType":"VariableDeclaration","scope":3005,"src":"6780:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2939,"name":"uint256","nodeType":"ElementaryTypeName","src":"6780:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2942,"mutability":"mutable","name":"end","nameLocation":"6811:3:19","nodeType":"VariableDeclaration","scope":3005,"src":"6803:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2941,"name":"uint256","nodeType":"ElementaryTypeName","src":"6803:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6741:79:19"},"returnParameters":{"id":2948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2945,"mutability":"mutable","name":"success","nameLocation":"6848:7:19","nodeType":"VariableDeclaration","scope":3005,"src":"6843:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2944,"name":"bool","nodeType":"ElementaryTypeName","src":"6843:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2947,"mutability":"mutable","name":"value","nameLocation":"6865:5:19","nodeType":"VariableDeclaration","scope":3005,"src":"6857:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2946,"name":"uint256","nodeType":"ElementaryTypeName","src":"6857:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6842:29:19"},"scope":3864,"src":"6704:515:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3023,"nodeType":"Block","src":"7516:63:19","statements":[{"expression":{"arguments":[{"id":3014,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"7542:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7549:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3018,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"7558:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7552:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3016,"name":"bytes","nodeType":"ElementaryTypeName","src":"7552:5:19","typeDescriptions":{}}},"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7552:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7565:6:19","memberName":"length","nodeType":"MemberAccess","src":"7552:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3013,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[3024,3055],"referencedDeclaration":3055,"src":"7533:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7533:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3012,"id":3022,"nodeType":"Return","src":"7526:46:19"}]},"documentation":{"id":3006,"nodeType":"StructuredDocumentation","src":"7225:216:19","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":3024,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7455:8:19","nodeType":"FunctionDefinition","parameters":{"id":3009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3008,"mutability":"mutable","name":"input","nameLocation":"7478:5:19","nodeType":"VariableDeclaration","scope":3024,"src":"7464:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3007,"name":"string","nodeType":"ElementaryTypeName","src":"7464:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:21:19"},"returnParameters":{"id":3012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3024,"src":"7508:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3010,"name":"int256","nodeType":"ElementaryTypeName","src":"7508:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7507:8:19"},"scope":3864,"src":"7446:133:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3054,"nodeType":"Block","src":"7984:151:19","statements":[{"assignments":[3037,3039],"declarations":[{"constant":false,"id":3037,"mutability":"mutable","name":"success","nameLocation":"8000:7:19","nodeType":"VariableDeclaration","scope":3054,"src":"7995:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3036,"name":"bool","nodeType":"ElementaryTypeName","src":"7995:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3039,"mutability":"mutable","name":"value","nameLocation":"8016:5:19","nodeType":"VariableDeclaration","scope":3054,"src":"8009:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3038,"name":"int256","nodeType":"ElementaryTypeName","src":"8009:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3045,"initialValue":{"arguments":[{"id":3041,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"8037:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3042,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"8044:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3043,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"8051:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3040,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[3076,3118],"referencedDeclaration":3118,"src":"8025:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8025:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7994:61:19"},{"condition":{"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8069:8:19","subExpression":{"id":3046,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"8070:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3051,"nodeType":"IfStatement","src":"8065:41:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3048,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"8086:18:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8086:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3050,"nodeType":"RevertStatement","src":"8079:27:19"}},{"expression":{"id":3052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"8123:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3035,"id":3053,"nodeType":"Return","src":"8116:12:19"}]},"documentation":{"id":3025,"nodeType":"StructuredDocumentation","src":"7585:296:19","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":3055,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7895:8:19","nodeType":"FunctionDefinition","parameters":{"id":3032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3027,"mutability":"mutable","name":"input","nameLocation":"7918:5:19","nodeType":"VariableDeclaration","scope":3055,"src":"7904:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3026,"name":"string","nodeType":"ElementaryTypeName","src":"7904:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3029,"mutability":"mutable","name":"begin","nameLocation":"7933:5:19","nodeType":"VariableDeclaration","scope":3055,"src":"7925:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3028,"name":"uint256","nodeType":"ElementaryTypeName","src":"7925:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3031,"mutability":"mutable","name":"end","nameLocation":"7948:3:19","nodeType":"VariableDeclaration","scope":3055,"src":"7940:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3030,"name":"uint256","nodeType":"ElementaryTypeName","src":"7940:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7903:49:19"},"returnParameters":{"id":3035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3055,"src":"7976:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3033,"name":"int256","nodeType":"ElementaryTypeName","src":"7976:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7975:8:19"},"scope":3864,"src":"7886:249:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3075,"nodeType":"Block","src":"8526:82:19","statements":[{"expression":{"arguments":[{"id":3066,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"8571:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8578:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3070,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"8587:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8581:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3068,"name":"bytes","nodeType":"ElementaryTypeName","src":"8581:5:19","typeDescriptions":{}}},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8581:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8594:6:19","memberName":"length","nodeType":"MemberAccess","src":"8581:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3065,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3239,"src":"8543:27:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8543:58:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3064,"id":3074,"nodeType":"Return","src":"8536:65:19"}]},"documentation":{"id":3056,"nodeType":"StructuredDocumentation","src":"8141:287:19","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":3076,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8442:11:19","nodeType":"FunctionDefinition","parameters":{"id":3059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3058,"mutability":"mutable","name":"input","nameLocation":"8468:5:19","nodeType":"VariableDeclaration","scope":3076,"src":"8454:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3057,"name":"string","nodeType":"ElementaryTypeName","src":"8454:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8453:21:19"},"returnParameters":{"id":3064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3061,"mutability":"mutable","name":"success","nameLocation":"8503:7:19","nodeType":"VariableDeclaration","scope":3076,"src":"8498:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3060,"name":"bool","nodeType":"ElementaryTypeName","src":"8498:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3063,"mutability":"mutable","name":"value","nameLocation":"8519:5:19","nodeType":"VariableDeclaration","scope":3076,"src":"8512:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3062,"name":"int256","nodeType":"ElementaryTypeName","src":"8512:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8497:28:19"},"scope":3864,"src":"8433:175:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":3081,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8639:14:19","nodeType":"VariableDeclaration","scope":3864,"src":"8614:50:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3077,"name":"uint256","nodeType":"ElementaryTypeName","src":"8614:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":3080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8656:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":3079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8661:3:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8656:8:19","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":3117,"nodeType":"Block","src":"9130:143:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3095,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"9144:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3098,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"9156:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9150:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3096,"name":"bytes","nodeType":"ElementaryTypeName","src":"9150:5:19","typeDescriptions":{}}},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9150:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9163:6:19","memberName":"length","nodeType":"MemberAccess","src":"9150:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9144:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3102,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"9173:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3103,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"9181:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9173:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9144:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3110,"nodeType":"IfStatement","src":"9140:63:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9194:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9201:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3108,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9193:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3094,"id":3109,"nodeType":"Return","src":"9186:17:19"}},{"expression":{"arguments":[{"id":3112,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"9248:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3113,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"9255:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3114,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"9262:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3111,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3239,"src":"9220:27:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9220:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3094,"id":3116,"nodeType":"Return","src":"9213:53:19"}]},"documentation":{"id":3082,"nodeType":"StructuredDocumentation","src":"8671:303:19","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":3118,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8988:11:19","nodeType":"FunctionDefinition","parameters":{"id":3089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3084,"mutability":"mutable","name":"input","nameLocation":"9023:5:19","nodeType":"VariableDeclaration","scope":3118,"src":"9009:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3083,"name":"string","nodeType":"ElementaryTypeName","src":"9009:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3086,"mutability":"mutable","name":"begin","nameLocation":"9046:5:19","nodeType":"VariableDeclaration","scope":3118,"src":"9038:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3085,"name":"uint256","nodeType":"ElementaryTypeName","src":"9038:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3088,"mutability":"mutable","name":"end","nameLocation":"9069:3:19","nodeType":"VariableDeclaration","scope":3118,"src":"9061:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3087,"name":"uint256","nodeType":"ElementaryTypeName","src":"9061:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8999:79:19"},"returnParameters":{"id":3094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3091,"mutability":"mutable","name":"success","nameLocation":"9107:7:19","nodeType":"VariableDeclaration","scope":3118,"src":"9102:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3090,"name":"bool","nodeType":"ElementaryTypeName","src":"9102:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3093,"mutability":"mutable","name":"value","nameLocation":"9123:5:19","nodeType":"VariableDeclaration","scope":3118,"src":"9116:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3092,"name":"int256","nodeType":"ElementaryTypeName","src":"9116:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9101:28:19"},"scope":3864,"src":"8979:294:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3238,"nodeType":"Block","src":"9673:812:19","statements":[{"assignments":[3133],"declarations":[{"constant":false,"id":3133,"mutability":"mutable","name":"buffer","nameLocation":"9696:6:19","nodeType":"VariableDeclaration","scope":3238,"src":"9683:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3132,"name":"bytes","nodeType":"ElementaryTypeName","src":"9683:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3138,"initialValue":{"arguments":[{"id":3136,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"9711:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9705:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3134,"name":"bytes","nodeType":"ElementaryTypeName","src":"9705:5:19","typeDescriptions":{}}},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9705:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9683:34:19"},{"assignments":[3140],"declarations":[{"constant":false,"id":3140,"mutability":"mutable","name":"sign","nameLocation":"9781:4:19","nodeType":"VariableDeclaration","scope":3238,"src":"9774:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3139,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9774:6:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3156,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3141,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"9788:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3142,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"9797:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9788:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":3151,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"9845:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3152,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"9853:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3150,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"9822:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9815:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3148,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9815:6:19","typeDescriptions":{}}},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9815:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9788:72:19","trueExpression":{"arguments":[{"hexValue":"30","id":3146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9810:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3144,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9803:6:19","typeDescriptions":{}}},"id":3147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:9:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9774:86:19"},{"assignments":[3158],"declarations":[{"constant":false,"id":3158,"mutability":"mutable","name":"positiveSign","nameLocation":"9946:12:19","nodeType":"VariableDeclaration","scope":3238,"src":"9941:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3157,"name":"bool","nodeType":"ElementaryTypeName","src":"9941:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3165,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3159,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"9961:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":3162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9976:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":3161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9969:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3160,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9969:6:19","typeDescriptions":{}}},"id":3163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9969:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9961:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9941:39:19"},{"assignments":[3167],"declarations":[{"constant":false,"id":3167,"mutability":"mutable","name":"negativeSign","nameLocation":"9995:12:19","nodeType":"VariableDeclaration","scope":3238,"src":"9990:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3166,"name":"bool","nodeType":"ElementaryTypeName","src":"9990:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3174,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3168,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"10010:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":3171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10025:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":3170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10018:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3169,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10018:6:19","typeDescriptions":{}}},"id":3172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10018:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10010:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9990:39:19"},{"assignments":[3176],"declarations":[{"constant":false,"id":3176,"mutability":"mutable","name":"offset","nameLocation":"10047:6:19","nodeType":"VariableDeclaration","scope":3238,"src":"10039:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3175,"name":"uint256","nodeType":"ElementaryTypeName","src":"10039:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3183,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3177,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"10057:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":3178,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"10073:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10057:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3180,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10056:30:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10087:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7910,"src":"10056:37:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10039:56:19"},{"assignments":[3185,3187],"declarations":[{"constant":false,"id":3185,"mutability":"mutable","name":"absSuccess","nameLocation":"10112:10:19","nodeType":"VariableDeclaration","scope":3238,"src":"10107:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3184,"name":"bool","nodeType":"ElementaryTypeName","src":"10107:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3187,"mutability":"mutable","name":"absValue","nameLocation":"10132:8:19","nodeType":"VariableDeclaration","scope":3238,"src":"10124:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3186,"name":"uint256","nodeType":"ElementaryTypeName","src":"10124:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3195,"initialValue":{"arguments":[{"id":3189,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"10157:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3190,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"10164:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3191,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"10172:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10164:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3193,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"10180:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3188,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2898,2935],"referencedDeclaration":2935,"src":"10144:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10144:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10106:78:19"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3196,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"10199:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3197,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"10213:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3198,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"10224:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10213:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10199:39:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3216,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"10341:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3217,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"10355:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3219,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"10371:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3220,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"10383:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10371:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:56:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10469:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3234,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10468:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3131,"id":3235,"nodeType":"Return","src":"10461:17:19"},"id":3236,"nodeType":"IfStatement","src":"10337:141:19","trueBody":{"id":3231,"nodeType":"Block","src":"10399:56:19","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10421:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":3226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10432:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3225,"name":"int256","nodeType":"ElementaryTypeName","src":"10432:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":3224,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10427:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10427:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":3228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10440:3:19","memberName":"min","nodeType":"MemberAccess","src":"10427:16:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3229,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10420:24:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3131,"id":3230,"nodeType":"Return","src":"10413:31:19"}]}},"id":3237,"nodeType":"IfStatement","src":"10195:283:19","trueBody":{"id":3215,"nodeType":"Block","src":"10240:91:19","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10262:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":3202,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"10268:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":3210,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"10310:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10303:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3208,"name":"int256","nodeType":"ElementaryTypeName","src":"10303:6:19","typeDescriptions":{}}},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10303:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10268:51:19","trueExpression":{"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10283:17:19","subExpression":{"arguments":[{"id":3205,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"10291:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10284:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3203,"name":"int256","nodeType":"ElementaryTypeName","src":"10284:6:19","typeDescriptions":{}}},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10284:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3213,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10261:59:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3131,"id":3214,"nodeType":"Return","src":"10254:66:19"}]}}]},"documentation":{"id":3119,"nodeType":"StructuredDocumentation","src":"9279:223:19","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3239,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9516:27:19","nodeType":"FunctionDefinition","parameters":{"id":3126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3121,"mutability":"mutable","name":"input","nameLocation":"9567:5:19","nodeType":"VariableDeclaration","scope":3239,"src":"9553:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3120,"name":"string","nodeType":"ElementaryTypeName","src":"9553:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3123,"mutability":"mutable","name":"begin","nameLocation":"9590:5:19","nodeType":"VariableDeclaration","scope":3239,"src":"9582:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3122,"name":"uint256","nodeType":"ElementaryTypeName","src":"9582:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3125,"mutability":"mutable","name":"end","nameLocation":"9613:3:19","nodeType":"VariableDeclaration","scope":3239,"src":"9605:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3124,"name":"uint256","nodeType":"ElementaryTypeName","src":"9605:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9543:79:19"},"returnParameters":{"id":3131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3128,"mutability":"mutable","name":"success","nameLocation":"9650:7:19","nodeType":"VariableDeclaration","scope":3239,"src":"9645:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3127,"name":"bool","nodeType":"ElementaryTypeName","src":"9645:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3130,"mutability":"mutable","name":"value","nameLocation":"9666:5:19","nodeType":"VariableDeclaration","scope":3239,"src":"9659:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3129,"name":"int256","nodeType":"ElementaryTypeName","src":"9659:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9644:28:19"},"scope":3864,"src":"9507:978:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3257,"nodeType":"Block","src":"10830:67:19","statements":[{"expression":{"arguments":[{"id":3248,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"10860:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3252,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"10876:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10870:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3250,"name":"bytes","nodeType":"ElementaryTypeName","src":"10870:5:19","typeDescriptions":{}}},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10870:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10883:6:19","memberName":"length","nodeType":"MemberAccess","src":"10870:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3247,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[3258,3289],"referencedDeclaration":3289,"src":"10847:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10847:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3246,"id":3256,"nodeType":"Return","src":"10840:50:19"}]},"documentation":{"id":3240,"nodeType":"StructuredDocumentation","src":"10491:259:19","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3258,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10764:12:19","nodeType":"FunctionDefinition","parameters":{"id":3243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3242,"mutability":"mutable","name":"input","nameLocation":"10791:5:19","nodeType":"VariableDeclaration","scope":3258,"src":"10777:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3241,"name":"string","nodeType":"ElementaryTypeName","src":"10777:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10776:21:19"},"returnParameters":{"id":3246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3258,"src":"10821:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3244,"name":"uint256","nodeType":"ElementaryTypeName","src":"10821:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10820:9:19"},"scope":3864,"src":"10755:142:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3288,"nodeType":"Block","src":"11318:156:19","statements":[{"assignments":[3271,3273],"declarations":[{"constant":false,"id":3271,"mutability":"mutable","name":"success","nameLocation":"11334:7:19","nodeType":"VariableDeclaration","scope":3288,"src":"11329:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3270,"name":"bool","nodeType":"ElementaryTypeName","src":"11329:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3273,"mutability":"mutable","name":"value","nameLocation":"11351:5:19","nodeType":"VariableDeclaration","scope":3288,"src":"11343:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3272,"name":"uint256","nodeType":"ElementaryTypeName","src":"11343:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3279,"initialValue":{"arguments":[{"id":3275,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"11376:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3276,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"11383:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3277,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"11390:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3274,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[3310,3347],"referencedDeclaration":3347,"src":"11360:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11360:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11328:66:19"},{"condition":{"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11408:8:19","subExpression":{"id":3280,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"11409:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3285,"nodeType":"IfStatement","src":"11404:41:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3282,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"11425:18:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11425:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3284,"nodeType":"RevertStatement","src":"11418:27:19"}},{"expression":{"id":3286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3273,"src":"11462:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3269,"id":3287,"nodeType":"Return","src":"11455:12:19"}]},"documentation":{"id":3259,"nodeType":"StructuredDocumentation","src":"10903:307:19","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3289,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11224:12:19","nodeType":"FunctionDefinition","parameters":{"id":3266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3261,"mutability":"mutable","name":"input","nameLocation":"11251:5:19","nodeType":"VariableDeclaration","scope":3289,"src":"11237:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3260,"name":"string","nodeType":"ElementaryTypeName","src":"11237:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3263,"mutability":"mutable","name":"begin","nameLocation":"11266:5:19","nodeType":"VariableDeclaration","scope":3289,"src":"11258:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3262,"name":"uint256","nodeType":"ElementaryTypeName","src":"11258:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3265,"mutability":"mutable","name":"end","nameLocation":"11281:3:19","nodeType":"VariableDeclaration","scope":3289,"src":"11273:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3264,"name":"uint256","nodeType":"ElementaryTypeName","src":"11273:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11236:49:19"},"returnParameters":{"id":3269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3289,"src":"11309:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3267,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:9:19"},"scope":3864,"src":"11215:259:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3309,"nodeType":"Block","src":"11801:86:19","statements":[{"expression":{"arguments":[{"id":3300,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"11850:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3304,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"11866:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11860:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3302,"name":"bytes","nodeType":"ElementaryTypeName","src":"11860:5:19","typeDescriptions":{}}},"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11860:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11873:6:19","memberName":"length","nodeType":"MemberAccess","src":"11860:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3299,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"11818:31:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11818:62:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3298,"id":3308,"nodeType":"Return","src":"11811:69:19"}]},"documentation":{"id":3290,"nodeType":"StructuredDocumentation","src":"11480:218:19","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3310,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11712:15:19","nodeType":"FunctionDefinition","parameters":{"id":3293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3292,"mutability":"mutable","name":"input","nameLocation":"11742:5:19","nodeType":"VariableDeclaration","scope":3310,"src":"11728:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3291,"name":"string","nodeType":"ElementaryTypeName","src":"11728:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11727:21:19"},"returnParameters":{"id":3298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3295,"mutability":"mutable","name":"success","nameLocation":"11777:7:19","nodeType":"VariableDeclaration","scope":3310,"src":"11772:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3294,"name":"bool","nodeType":"ElementaryTypeName","src":"11772:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3297,"mutability":"mutable","name":"value","nameLocation":"11794:5:19","nodeType":"VariableDeclaration","scope":3310,"src":"11786:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3296,"name":"uint256","nodeType":"ElementaryTypeName","src":"11786:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11771:29:19"},"scope":3864,"src":"11703:184:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3346,"nodeType":"Block","src":"12295:147:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3324,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"12309:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3327,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"12321:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12315:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3325,"name":"bytes","nodeType":"ElementaryTypeName","src":"12315:5:19","typeDescriptions":{}}},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12315:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12328:6:19","memberName":"length","nodeType":"MemberAccess","src":"12315:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12309:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3331,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"12338:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3332,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"12346:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12338:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12309:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3339,"nodeType":"IfStatement","src":"12305:63:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12359:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12366:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3337,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12358:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3323,"id":3338,"nodeType":"Return","src":"12351:17:19"}},{"expression":{"arguments":[{"id":3341,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"12417:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3342,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"12424:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3343,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"12431:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3340,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"12385:31:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12385:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3323,"id":3345,"nodeType":"Return","src":"12378:57:19"}]},"documentation":{"id":3311,"nodeType":"StructuredDocumentation","src":"11893:241:19","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3347,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12148:15:19","nodeType":"FunctionDefinition","parameters":{"id":3318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3313,"mutability":"mutable","name":"input","nameLocation":"12187:5:19","nodeType":"VariableDeclaration","scope":3347,"src":"12173:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3312,"name":"string","nodeType":"ElementaryTypeName","src":"12173:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3315,"mutability":"mutable","name":"begin","nameLocation":"12210:5:19","nodeType":"VariableDeclaration","scope":3347,"src":"12202:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3314,"name":"uint256","nodeType":"ElementaryTypeName","src":"12202:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3317,"mutability":"mutable","name":"end","nameLocation":"12233:3:19","nodeType":"VariableDeclaration","scope":3347,"src":"12225:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3316,"name":"uint256","nodeType":"ElementaryTypeName","src":"12225:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12163:79:19"},"returnParameters":{"id":3323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3320,"mutability":"mutable","name":"success","nameLocation":"12271:7:19","nodeType":"VariableDeclaration","scope":3347,"src":"12266:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3319,"name":"bool","nodeType":"ElementaryTypeName","src":"12266:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3322,"mutability":"mutable","name":"value","nameLocation":"12288:5:19","nodeType":"VariableDeclaration","scope":3347,"src":"12280:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3321,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12265:29:19"},"scope":3864,"src":"12139:303:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3449,"nodeType":"Block","src":"12851:881:19","statements":[{"assignments":[3362],"declarations":[{"constant":false,"id":3362,"mutability":"mutable","name":"buffer","nameLocation":"12874:6:19","nodeType":"VariableDeclaration","scope":3449,"src":"12861:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3361,"name":"bytes","nodeType":"ElementaryTypeName","src":"12861:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3367,"initialValue":{"arguments":[{"id":3365,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"12889:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3363,"name":"bytes","nodeType":"ElementaryTypeName","src":"12883:5:19","typeDescriptions":{}}},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12861:34:19"},{"assignments":[3369],"declarations":[{"constant":false,"id":3369,"mutability":"mutable","name":"hasPrefix","nameLocation":"12948:9:19","nodeType":"VariableDeclaration","scope":3449,"src":"12943:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3368,"name":"bool","nodeType":"ElementaryTypeName","src":"12943:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3389,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3370,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"12961:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3371,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"12967:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12975:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12967:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12961:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3375,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3379,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"13011:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3380,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"13019:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3378,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"12988:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12988:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12981:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3376,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12981:6:19","typeDescriptions":{}}},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12981:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13037:4:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13030:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3383,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13030:6:19","typeDescriptions":{}}},"id":3386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13030:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12981:61:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12960:82:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12943:99:19"},{"assignments":[3391],"declarations":[{"constant":false,"id":3391,"mutability":"mutable","name":"offset","nameLocation":"13131:6:19","nodeType":"VariableDeclaration","scope":3449,"src":"13123:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3390,"name":"uint256","nodeType":"ElementaryTypeName","src":"13123:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3397,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3392,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"13140:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13150:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7910,"src":"13140:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13140:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13161:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13140:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13123:39:19"},{"assignments":[3399],"declarations":[{"constant":false,"id":3399,"mutability":"mutable","name":"result","nameLocation":"13181:6:19","nodeType":"VariableDeclaration","scope":3449,"src":"13173:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3398,"name":"uint256","nodeType":"ElementaryTypeName","src":"13173:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3401,"initialValue":{"hexValue":"30","id":3400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13190:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13173:18:19"},{"body":{"id":3443,"nodeType":"Block","src":"13248:447:19","statements":[{"assignments":[3415],"declarations":[{"constant":false,"id":3415,"mutability":"mutable","name":"chr","nameLocation":"13268:3:19","nodeType":"VariableDeclaration","scope":3443,"src":"13262:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3414,"name":"uint8","nodeType":"ElementaryTypeName","src":"13262:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3425,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3420,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"13317:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3421,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"13325:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3419,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"13294:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13294:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13287:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3417,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13287:6:19","typeDescriptions":{}}},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13287:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3416,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"13274:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13274:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13262:67:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3426,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"13347:3:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":3427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13353:2:19","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13347:8:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3433,"nodeType":"IfStatement","src":"13343:31:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13365:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13372:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3431,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13364:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3360,"id":3432,"nodeType":"Return","src":"13357:17:19"}},{"expression":{"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3434,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"13388:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":3435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13398:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13388:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3437,"nodeType":"ExpressionStatement","src":"13388:12:19"},{"id":3442,"nodeType":"UncheckedBlock","src":"13414:271:19","statements":[{"expression":{"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3438,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"13657:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3439,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"13667:3:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13657:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3441,"nodeType":"ExpressionStatement","src":"13657:13:19"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3408,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"13234:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3409,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"13238:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13234:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3444,"initializationExpression":{"assignments":[3403],"declarations":[{"constant":false,"id":3403,"mutability":"mutable","name":"i","nameLocation":"13214:1:19","nodeType":"VariableDeclaration","scope":3444,"src":"13206:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3402,"name":"uint256","nodeType":"ElementaryTypeName","src":"13206:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3407,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3404,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"13218:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3405,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"13226:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13218:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13206:26:19"},"loopExpression":{"expression":{"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13243:3:19","subExpression":{"id":3411,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"13245:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3413,"nodeType":"ExpressionStatement","src":"13243:3:19"},"nodeType":"ForStatement","src":"13201:494:19"},{"expression":{"components":[{"hexValue":"74727565","id":3445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13712:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3446,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"13718:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3447,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13711:14:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3360,"id":3448,"nodeType":"Return","src":"13704:21:19"}]},"documentation":{"id":3348,"nodeType":"StructuredDocumentation","src":"12448:227:19","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3450,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12689:31:19","nodeType":"FunctionDefinition","parameters":{"id":3355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3350,"mutability":"mutable","name":"input","nameLocation":"12744:5:19","nodeType":"VariableDeclaration","scope":3450,"src":"12730:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3349,"name":"string","nodeType":"ElementaryTypeName","src":"12730:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3352,"mutability":"mutable","name":"begin","nameLocation":"12767:5:19","nodeType":"VariableDeclaration","scope":3450,"src":"12759:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3351,"name":"uint256","nodeType":"ElementaryTypeName","src":"12759:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3354,"mutability":"mutable","name":"end","nameLocation":"12790:3:19","nodeType":"VariableDeclaration","scope":3450,"src":"12782:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3353,"name":"uint256","nodeType":"ElementaryTypeName","src":"12782:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12720:79:19"},"returnParameters":{"id":3360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3357,"mutability":"mutable","name":"success","nameLocation":"12827:7:19","nodeType":"VariableDeclaration","scope":3450,"src":"12822:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3356,"name":"bool","nodeType":"ElementaryTypeName","src":"12822:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3359,"mutability":"mutable","name":"value","nameLocation":"12844:5:19","nodeType":"VariableDeclaration","scope":3450,"src":"12836:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3358,"name":"uint256","nodeType":"ElementaryTypeName","src":"12836:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12821:29:19"},"scope":3864,"src":"12680:1052:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3468,"nodeType":"Block","src":"14030:67:19","statements":[{"expression":{"arguments":[{"id":3459,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"14060:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14067:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3463,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"14076:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14070:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3461,"name":"bytes","nodeType":"ElementaryTypeName","src":"14070:5:19","typeDescriptions":{}}},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14070:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14083:6:19","memberName":"length","nodeType":"MemberAccess","src":"14070:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3458,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[3469,3500],"referencedDeclaration":3500,"src":"14047:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14047:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3457,"id":3467,"nodeType":"Return","src":"14040:50:19"}]},"documentation":{"id":3451,"nodeType":"StructuredDocumentation","src":"13738:212:19","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3469,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:19","nodeType":"FunctionDefinition","parameters":{"id":3454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3453,"mutability":"mutable","name":"input","nameLocation":"13991:5:19","nodeType":"VariableDeclaration","scope":3469,"src":"13977:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3452,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13976:21:19"},"returnParameters":{"id":3457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3456,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3469,"src":"14021:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3455,"name":"address","nodeType":"ElementaryTypeName","src":"14021:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14020:9:19"},"scope":3864,"src":"13955:142:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3499,"nodeType":"Block","src":"14470:165:19","statements":[{"assignments":[3482,3484],"declarations":[{"constant":false,"id":3482,"mutability":"mutable","name":"success","nameLocation":"14486:7:19","nodeType":"VariableDeclaration","scope":3499,"src":"14481:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3481,"name":"bool","nodeType":"ElementaryTypeName","src":"14481:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3484,"mutability":"mutable","name":"value","nameLocation":"14503:5:19","nodeType":"VariableDeclaration","scope":3499,"src":"14495:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3483,"name":"address","nodeType":"ElementaryTypeName","src":"14495:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3490,"initialValue":{"arguments":[{"id":3486,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"14528:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3487,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"14535:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3488,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"14542:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3485,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3521,3625],"referencedDeclaration":3625,"src":"14512:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14512:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14480:66:19"},{"condition":{"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14560:8:19","subExpression":{"id":3491,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"14561:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3496,"nodeType":"IfStatement","src":"14556:50:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3493,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"14577:27:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14577:29:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3495,"nodeType":"RevertStatement","src":"14570:36:19"}},{"expression":{"id":3497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"14623:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3480,"id":3498,"nodeType":"Return","src":"14616:12:19"}]},"documentation":{"id":3470,"nodeType":"StructuredDocumentation","src":"14103:259:19","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3500,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14376:12:19","nodeType":"FunctionDefinition","parameters":{"id":3477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3472,"mutability":"mutable","name":"input","nameLocation":"14403:5:19","nodeType":"VariableDeclaration","scope":3500,"src":"14389:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3471,"name":"string","nodeType":"ElementaryTypeName","src":"14389:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3474,"mutability":"mutable","name":"begin","nameLocation":"14418:5:19","nodeType":"VariableDeclaration","scope":3500,"src":"14410:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3473,"name":"uint256","nodeType":"ElementaryTypeName","src":"14410:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3476,"mutability":"mutable","name":"end","nameLocation":"14433:3:19","nodeType":"VariableDeclaration","scope":3500,"src":"14425:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3475,"name":"uint256","nodeType":"ElementaryTypeName","src":"14425:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14388:49:19"},"returnParameters":{"id":3480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3500,"src":"14461:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3478,"name":"address","nodeType":"ElementaryTypeName","src":"14461:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14460:9:19"},"scope":3864,"src":"14367:268:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3520,"nodeType":"Block","src":"14942:70:19","statements":[{"expression":{"arguments":[{"id":3511,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3503,"src":"14975:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14982:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3515,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3503,"src":"14991:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14985:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3513,"name":"bytes","nodeType":"ElementaryTypeName","src":"14985:5:19","typeDescriptions":{}}},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14985:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14998:6:19","memberName":"length","nodeType":"MemberAccess","src":"14985:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3510,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3521,3625],"referencedDeclaration":3625,"src":"14959:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14959:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3509,"id":3519,"nodeType":"Return","src":"14952:53:19"}]},"documentation":{"id":3501,"nodeType":"StructuredDocumentation","src":"14641:198:19","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":3521,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14853:15:19","nodeType":"FunctionDefinition","parameters":{"id":3504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3503,"mutability":"mutable","name":"input","nameLocation":"14883:5:19","nodeType":"VariableDeclaration","scope":3521,"src":"14869:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3502,"name":"string","nodeType":"ElementaryTypeName","src":"14869:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14868:21:19"},"returnParameters":{"id":3509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3506,"mutability":"mutable","name":"success","nameLocation":"14918:7:19","nodeType":"VariableDeclaration","scope":3521,"src":"14913:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3505,"name":"bool","nodeType":"ElementaryTypeName","src":"14913:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3508,"mutability":"mutable","name":"value","nameLocation":"14935:5:19","nodeType":"VariableDeclaration","scope":3521,"src":"14927:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3507,"name":"address","nodeType":"ElementaryTypeName","src":"14927:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14912:29:19"},"scope":3864,"src":"14844:168:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3624,"nodeType":"Block","src":"15405:733:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3535,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3528,"src":"15419:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3538,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"15431:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15425:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3536,"name":"bytes","nodeType":"ElementaryTypeName","src":"15425:5:19","typeDescriptions":{}}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15425:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15438:6:19","memberName":"length","nodeType":"MemberAccess","src":"15425:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15419:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3542,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"15448:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3543,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3528,"src":"15456:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15448:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15419:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3553,"nodeType":"IfStatement","src":"15415:72:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15469:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15484:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15476:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3547,"name":"address","nodeType":"ElementaryTypeName","src":"15476:7:19","typeDescriptions":{}}},"id":3550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15476:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3551,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15468:19:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3534,"id":3552,"nodeType":"Return","src":"15461:26:19"}},{"assignments":[3555],"declarations":[{"constant":false,"id":3555,"mutability":"mutable","name":"hasPrefix","nameLocation":"15503:9:19","nodeType":"VariableDeclaration","scope":3624,"src":"15498:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3554,"name":"bool","nodeType":"ElementaryTypeName","src":"15498:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3578,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3556,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3528,"src":"15516:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3557,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"15522:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15530:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15522:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15516:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3561,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15515:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":3567,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"15572:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15566:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3565,"name":"bytes","nodeType":"ElementaryTypeName","src":"15566:5:19","typeDescriptions":{}}},"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15566:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3569,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"15580:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3564,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"15543:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15543:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15536:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3562,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15536:6:19","typeDescriptions":{}}},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15536:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15598:4:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15591:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3572,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15591:6:19","typeDescriptions":{}}},"id":3575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15591:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15536:67:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15515:88:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15498:105:19"},{"assignments":[3580],"declarations":[{"constant":false,"id":3580,"mutability":"mutable","name":"expectedLength","nameLocation":"15692:14:19","nodeType":"VariableDeclaration","scope":3624,"src":"15684:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3579,"name":"uint256","nodeType":"ElementaryTypeName","src":"15684:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3588,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":3581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15709:2:19","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3582,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"15714:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15724:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7910,"src":"15714:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15714:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15735:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15714:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15709:27:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15684:52:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3589,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3528,"src":"15801:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3590,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"15807:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3592,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"15816:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3622,"nodeType":"Block","src":"16081:51:19","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16103:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16118:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16110:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3616,"name":"address","nodeType":"ElementaryTypeName","src":"16110:7:19","typeDescriptions":{}}},"id":3619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3620,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16102:19:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3534,"id":3621,"nodeType":"Return","src":"16095:26:19"}]},"id":3623,"nodeType":"IfStatement","src":"15797:335:19","trueBody":{"id":3614,"nodeType":"Block","src":"15832:243:19","statements":[{"assignments":[3595,3597],"declarations":[{"constant":false,"id":3595,"mutability":"mutable","name":"s","nameLocation":"15953:1:19","nodeType":"VariableDeclaration","scope":3614,"src":"15948:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3594,"name":"bool","nodeType":"ElementaryTypeName","src":"15948:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3597,"mutability":"mutable","name":"v","nameLocation":"15964:1:19","nodeType":"VariableDeclaration","scope":3614,"src":"15956:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3596,"name":"uint256","nodeType":"ElementaryTypeName","src":"15956:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3603,"initialValue":{"arguments":[{"id":3599,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"16001:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3600,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"16008:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3601,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3528,"src":"16015:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3598,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"15969:31:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15969:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15947:72:19"},{"expression":{"components":[{"id":3604,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3595,"src":"16041:1:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":3609,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3597,"src":"16060:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16052:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3607,"name":"uint160","nodeType":"ElementaryTypeName","src":"16052:7:19","typeDescriptions":{}}},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16052:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16044:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3605,"name":"address","nodeType":"ElementaryTypeName","src":"16044:7:19","typeDescriptions":{}}},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16044:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3612,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16040:24:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3534,"id":3613,"nodeType":"Return","src":"16033:31:19"}]}}]},"documentation":{"id":3522,"nodeType":"StructuredDocumentation","src":"15018:226:19","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":3625,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15258:15:19","nodeType":"FunctionDefinition","parameters":{"id":3529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3524,"mutability":"mutable","name":"input","nameLocation":"15297:5:19","nodeType":"VariableDeclaration","scope":3625,"src":"15283:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3523,"name":"string","nodeType":"ElementaryTypeName","src":"15283:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3526,"mutability":"mutable","name":"begin","nameLocation":"15320:5:19","nodeType":"VariableDeclaration","scope":3625,"src":"15312:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3525,"name":"uint256","nodeType":"ElementaryTypeName","src":"15312:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3528,"mutability":"mutable","name":"end","nameLocation":"15343:3:19","nodeType":"VariableDeclaration","scope":3625,"src":"15335:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3527,"name":"uint256","nodeType":"ElementaryTypeName","src":"15335:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15273:79:19"},"returnParameters":{"id":3534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3531,"mutability":"mutable","name":"success","nameLocation":"15381:7:19","nodeType":"VariableDeclaration","scope":3625,"src":"15376:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3530,"name":"bool","nodeType":"ElementaryTypeName","src":"15376:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3533,"mutability":"mutable","name":"value","nameLocation":"15398:5:19","nodeType":"VariableDeclaration","scope":3625,"src":"15390:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3532,"name":"address","nodeType":"ElementaryTypeName","src":"15390:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15375:29:19"},"scope":3864,"src":"15249:889:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3684,"nodeType":"Block","src":"16207:461:19","statements":[{"assignments":[3633],"declarations":[{"constant":false,"id":3633,"mutability":"mutable","name":"value","nameLocation":"16223:5:19","nodeType":"VariableDeclaration","scope":3684,"src":"16217:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3632,"name":"uint8","nodeType":"ElementaryTypeName","src":"16217:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3638,"initialValue":{"arguments":[{"id":3636,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3627,"src":"16237:3:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16231:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3634,"name":"uint8","nodeType":"ElementaryTypeName","src":"16231:5:19","typeDescriptions":{}}},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16231:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16217:24:19"},{"id":3681,"nodeType":"UncheckedBlock","src":"16401:238:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"16429:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":3640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16437:2:19","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16429:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"16443:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":3643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16451:2:19","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16443:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16429:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"16489:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16497:2:19","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16489:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"16503:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":3654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16511:3:19","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16503:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16489:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"16550:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":3662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16558:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16550:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"16564:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":3665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16572:2:19","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16564:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16550:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":3674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16618:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3673,"name":"uint8","nodeType":"ElementaryTypeName","src":"16618:5:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3672,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16613:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16613:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16625:3:19","memberName":"max","nodeType":"MemberAccess","src":"16613:15:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3631,"id":3677,"nodeType":"Return","src":"16606:22:19"},"id":3678,"nodeType":"IfStatement","src":"16546:82:19","trueBody":{"expression":{"id":3670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"16576:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":3669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16585:2:19","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16576:11:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3671,"nodeType":"ExpressionStatement","src":"16576:11:19"}},"id":3679,"nodeType":"IfStatement","src":"16485:143:19","trueBody":{"expression":{"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"16516:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":3658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16525:2:19","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16516:11:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3660,"nodeType":"ExpressionStatement","src":"16516:11:19"}},"id":3680,"nodeType":"IfStatement","src":"16425:203:19","trueBody":{"expression":{"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"16455:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":3647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16464:2:19","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16455:11:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3649,"nodeType":"ExpressionStatement","src":"16455:11:19"}}]},{"expression":{"id":3682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"16656:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3631,"id":3683,"nodeType":"Return","src":"16649:12:19"}]},"id":3685,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16153:12:19","nodeType":"FunctionDefinition","parameters":{"id":3628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3627,"mutability":"mutable","name":"chr","nameLocation":"16173:3:19","nodeType":"VariableDeclaration","scope":3685,"src":"16166:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3626,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16166:6:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16165:12:19"},"returnParameters":{"id":3631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3685,"src":"16200:5:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3629,"name":"uint8","nodeType":"ElementaryTypeName","src":"16200:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16199:7:19"},"scope":3864,"src":"16144:524:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3850,"nodeType":"Block","src":"17334:1331:19","statements":[{"assignments":[3694],"declarations":[{"constant":false,"id":3694,"mutability":"mutable","name":"buffer","nameLocation":"17357:6:19","nodeType":"VariableDeclaration","scope":3850,"src":"17344:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3693,"name":"bytes","nodeType":"ElementaryTypeName","src":"17344:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3699,"initialValue":{"arguments":[{"id":3697,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"17372:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17366:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3695,"name":"bytes","nodeType":"ElementaryTypeName","src":"17366:5:19","typeDescriptions":{}}},"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17366:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17344:34:19"},{"assignments":[3701],"declarations":[{"constant":false,"id":3701,"mutability":"mutable","name":"output","nameLocation":"17401:6:19","nodeType":"VariableDeclaration","scope":3850,"src":"17388:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3700,"name":"bytes","nodeType":"ElementaryTypeName","src":"17388:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3709,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17420:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":3705,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"17424:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17431:6:19","memberName":"length","nodeType":"MemberAccess","src":"17424:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17420:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17410:9:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3702,"name":"bytes","nodeType":"ElementaryTypeName","src":"17414:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17410:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17388:50:19"},{"assignments":[3711],"declarations":[{"constant":false,"id":3711,"mutability":"mutable","name":"outputLength","nameLocation":"17479:12:19","nodeType":"VariableDeclaration","scope":3850,"src":"17471:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3710,"name":"uint256","nodeType":"ElementaryTypeName","src":"17471:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3713,"initialValue":{"hexValue":"30","id":3712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17494:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17471:24:19"},{"body":{"id":3842,"nodeType":"Block","src":"17546:854:19","statements":[{"assignments":[3725],"declarations":[{"constant":false,"id":3725,"mutability":"mutable","name":"char","nameLocation":"17567:4:19","nodeType":"VariableDeclaration","scope":3842,"src":"17560:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3724,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17560:6:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3733,"initialValue":{"arguments":[{"arguments":[{"id":3729,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"17604:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3730,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"17612:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3728,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"17581:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17581:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17574:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3726,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17574:6:19","typeDescriptions":{}}},"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17574:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17560:55:19"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3734,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"17635:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17659:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":3738,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"17670:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17664:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3736,"name":"uint8","nodeType":"ElementaryTypeName","src":"17664:5:19","typeDescriptions":{}}},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17664:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17659:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3741,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17658:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17635:41:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3743,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17634:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17681:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17634:48:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3746,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17633:50:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3840,"nodeType":"Block","src":"18328:62:19","statements":[{"expression":{"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3833,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3701,"src":"18346:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3836,"indexExpression":{"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18353:14:19","subExpression":{"id":3834,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"18353:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18346:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3837,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"18371:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18346:29:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3839,"nodeType":"ExpressionStatement","src":"18346:29:19"}]},"id":3841,"nodeType":"IfStatement","src":"17629:761:19","trueBody":{"id":3832,"nodeType":"Block","src":"17685:637:19","statements":[{"expression":{"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3747,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3701,"src":"17703:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3750,"indexExpression":{"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17710:14:19","subExpression":{"id":3748,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"17710:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17703:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17728:4:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17703:29:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3753,"nodeType":"ExpressionStatement","src":"17703:29:19"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3754,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"17754:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":3755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17762:4:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17754:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3764,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"17823:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":3765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17831:4:19","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17823:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3774,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"17892:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":3775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17900:4:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17892:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3784,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"17961:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":3785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17969:4:19","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17961:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3794,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"18030:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":3795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18038:4:19","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18030:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3804,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"18099:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":3805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18107:4:19","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18099:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3814,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"18169:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":3815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18177:4:19","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18169:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3825,"nodeType":"IfStatement","src":"18165:143:19","trueBody":{"id":3824,"nodeType":"Block","src":"18183:125:19","statements":[{"expression":{"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3817,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3701,"src":"18261:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3820,"indexExpression":{"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18268:14:19","subExpression":{"id":3818,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"18268:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18261:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":3821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18286:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18261:28:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3823,"nodeType":"ExpressionStatement","src":"18261:28:19"}]}},"id":3826,"nodeType":"IfStatement","src":"18095:213:19","trueBody":{"expression":{"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3807,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3701,"src":"18113:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3810,"indexExpression":{"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18120:14:19","subExpression":{"id":3808,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"18120:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18113:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18138:4:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18113:29:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3813,"nodeType":"ExpressionStatement","src":"18113:29:19"}},"id":3827,"nodeType":"IfStatement","src":"18026:282:19","trueBody":{"expression":{"id":3802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3797,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3701,"src":"18044:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3800,"indexExpression":{"id":3799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18051:14:19","subExpression":{"id":3798,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"18051:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18044:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":3801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18069:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18044:28:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3803,"nodeType":"ExpressionStatement","src":"18044:28:19"}},"id":3828,"nodeType":"IfStatement","src":"17957:351:19","trueBody":{"expression":{"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3787,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3701,"src":"17975:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3790,"indexExpression":{"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17982:14:19","subExpression":{"id":3788,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"17982:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17975:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":3791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18000:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17975:28:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3793,"nodeType":"ExpressionStatement","src":"17975:28:19"}},"id":3829,"nodeType":"IfStatement","src":"17888:420:19","trueBody":{"expression":{"id":3782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3777,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3701,"src":"17906:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3780,"indexExpression":{"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17913:14:19","subExpression":{"id":3778,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"17913:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17906:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":3781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17931:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17906:28:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3783,"nodeType":"ExpressionStatement","src":"17906:28:19"}},"id":3830,"nodeType":"IfStatement","src":"17819:489:19","trueBody":{"expression":{"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3767,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3701,"src":"17837:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3770,"indexExpression":{"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17844:14:19","subExpression":{"id":3768,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"17844:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17837:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":3771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17862:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17837:28:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3773,"nodeType":"ExpressionStatement","src":"17837:28:19"}},"id":3831,"nodeType":"IfStatement","src":"17750:558:19","trueBody":{"expression":{"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3757,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3701,"src":"17768:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3760,"indexExpression":{"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17775:14:19","subExpression":{"id":3758,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"17775:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17768:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":3761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17793:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17768:28:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3763,"nodeType":"ExpressionStatement","src":"17768:28:19"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3717,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"17522:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3718,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"17526:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17533:6:19","memberName":"length","nodeType":"MemberAccess","src":"17526:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17522:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3843,"initializationExpression":{"assignments":[3715],"declarations":[{"constant":false,"id":3715,"mutability":"mutable","name":"i","nameLocation":"17519:1:19","nodeType":"VariableDeclaration","scope":3843,"src":"17511:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3714,"name":"uint256","nodeType":"ElementaryTypeName","src":"17511:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3716,"nodeType":"VariableDeclarationStatement","src":"17511:9:19"},"loopExpression":{"expression":{"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17541:3:19","subExpression":{"id":3721,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"17543:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3723,"nodeType":"ExpressionStatement","src":"17541:3:19"},"nodeType":"ForStatement","src":"17506:894:19"},{"AST":{"nodeType":"YulBlock","src":"18498:129:19","statements":[{"expression":{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18519:6:19"},{"name":"outputLength","nodeType":"YulIdentifier","src":"18527:12:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18512:6:19"},"nodeType":"YulFunctionCall","src":"18512:28:19"},"nodeType":"YulExpressionStatement","src":"18512:28:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18560:4:19","type":"","value":"0x40"},{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18570:6:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18582:1:19","type":"","value":"5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18589:1:19","type":"","value":"5"},{"arguments":[{"name":"outputLength","nodeType":"YulIdentifier","src":"18596:12:19"},{"kind":"number","nodeType":"YulLiteral","src":"18610:2:19","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18592:3:19"},"nodeType":"YulFunctionCall","src":"18592:21:19"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18585:3:19"},"nodeType":"YulFunctionCall","src":"18585:29:19"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18578:3:19"},"nodeType":"YulFunctionCall","src":"18578:37:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18566:3:19"},"nodeType":"YulFunctionCall","src":"18566:50:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18553:6:19"},"nodeType":"YulFunctionCall","src":"18553:64:19"},"nodeType":"YulExpressionStatement","src":"18553:64:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":3701,"isOffset":false,"isSlot":false,"src":"18519:6:19","valueSize":1},{"declaration":3701,"isOffset":false,"isSlot":false,"src":"18570:6:19","valueSize":1},{"declaration":3711,"isOffset":false,"isSlot":false,"src":"18527:12:19","valueSize":1},{"declaration":3711,"isOffset":false,"isSlot":false,"src":"18596:12:19","valueSize":1}],"flags":["memory-safe"],"id":3844,"nodeType":"InlineAssembly","src":"18473:154:19"},{"expression":{"arguments":[{"id":3847,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3701,"src":"18651:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18644:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3845,"name":"string","nodeType":"ElementaryTypeName","src":"18644:6:19","typeDescriptions":{}}},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18644:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3692,"id":3849,"nodeType":"Return","src":"18637:21:19"}]},"documentation":{"id":3686,"nodeType":"StructuredDocumentation","src":"16674:576:19","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":3851,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17264:10:19","nodeType":"FunctionDefinition","parameters":{"id":3689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3688,"mutability":"mutable","name":"input","nameLocation":"17289:5:19","nodeType":"VariableDeclaration","scope":3851,"src":"17275:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3687,"name":"string","nodeType":"ElementaryTypeName","src":"17275:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17274:21:19"},"returnParameters":{"id":3692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3851,"src":"17319:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3690,"name":"string","nodeType":"ElementaryTypeName","src":"17319:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17318:15:19"},"scope":3864,"src":"17255:1410:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3862,"nodeType":"Block","src":"19050:225:19","statements":[{"AST":{"nodeType":"YulBlock","src":"19199:70:19","statements":[{"nodeType":"YulAssignment","src":"19213:46:19","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"19232:6:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19244:4:19","type":"","value":"0x20"},{"name":"offset","nodeType":"YulIdentifier","src":"19250:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19240:3:19"},"nodeType":"YulFunctionCall","src":"19240:17:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19228:3:19"},"nodeType":"YulFunctionCall","src":"19228:30:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19222:5:19"},"nodeType":"YulFunctionCall","src":"19222:37:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19213:5:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3854,"isOffset":false,"isSlot":false,"src":"19232:6:19","valueSize":1},{"declaration":3856,"isOffset":false,"isSlot":false,"src":"19250:6:19","valueSize":1},{"declaration":3859,"isOffset":false,"isSlot":false,"src":"19213:5:19","valueSize":1}],"flags":["memory-safe"],"id":3861,"nodeType":"InlineAssembly","src":"19174:95:19"}]},"documentation":{"id":3852,"nodeType":"StructuredDocumentation","src":"18671:268:19","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":3863,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18953:22:19","nodeType":"FunctionDefinition","parameters":{"id":3857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3854,"mutability":"mutable","name":"buffer","nameLocation":"18989:6:19","nodeType":"VariableDeclaration","scope":3863,"src":"18976:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3853,"name":"bytes","nodeType":"ElementaryTypeName","src":"18976:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3856,"mutability":"mutable","name":"offset","nameLocation":"19005:6:19","nodeType":"VariableDeclaration","scope":3863,"src":"18997:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3855,"name":"uint256","nodeType":"ElementaryTypeName","src":"18997:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18975:37:19"},"returnParameters":{"id":3860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3859,"mutability":"mutable","name":"value","nameLocation":"19043:5:19","nodeType":"VariableDeclaration","scope":3863,"src":"19035:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3858,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19035:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19034:15:19"},"scope":3864,"src":"18944:331:19","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3865,"src":"297:18980:19","usedErrors":[2522,2525,2528],"usedEvents":[]}],"src":"101:19177:19"},"id":19},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[4212]},"id":4213,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3866,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":3867,"nodeType":"StructuredDocumentation","src":"138:205:20","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":4212,"linearizedBaseContracts":[4212],"name":"ECDSA","nameLocation":"352:5:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":3872,"members":[{"id":3868,"name":"NoError","nameLocation":"392:7:20","nodeType":"EnumValue","src":"392:7:20"},{"id":3869,"name":"InvalidSignature","nameLocation":"409:16:20","nodeType":"EnumValue","src":"409:16:20"},{"id":3870,"name":"InvalidSignatureLength","nameLocation":"435:22:20","nodeType":"EnumValue","src":"435:22:20"},{"id":3871,"name":"InvalidSignatureS","nameLocation":"467:17:20","nodeType":"EnumValue","src":"467:17:20"}],"name":"RecoverError","nameLocation":"369:12:20","nodeType":"EnumDefinition","src":"364:126:20"},{"documentation":{"id":3873,"nodeType":"StructuredDocumentation","src":"496:63:20","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":3875,"name":"ECDSAInvalidSignature","nameLocation":"570:21:20","nodeType":"ErrorDefinition","parameters":{"id":3874,"nodeType":"ParameterList","parameters":[],"src":"591:2:20"},"src":"564:30:20"},{"documentation":{"id":3876,"nodeType":"StructuredDocumentation","src":"600:60:20","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":3880,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:20","nodeType":"ErrorDefinition","parameters":{"id":3879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3878,"mutability":"mutable","name":"length","nameLocation":"707:6:20","nodeType":"VariableDeclaration","scope":3880,"src":"699:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3877,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:20"},"src":"665:50:20"},{"documentation":{"id":3881,"nodeType":"StructuredDocumentation","src":"721:85:20","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":3885,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:20","nodeType":"ErrorDefinition","parameters":{"id":3884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3883,"mutability":"mutable","name":"s","nameLocation":"848:1:20","nodeType":"VariableDeclaration","scope":3885,"src":"840:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3882,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:20"},"src":"811:40:20"},{"body":{"id":3937,"nodeType":"Block","src":"2285:622:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3900,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"2299:9:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:20","memberName":"length","nodeType":"MemberAccess","src":"2299:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:20","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3935,"nodeType":"Block","src":"2793:108:20","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3922,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:20","typeDescriptions":{}}},"id":3925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3926,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"2827:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3872_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:20","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3870,"src":"2827:35:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":3930,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"2872:9:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:20","memberName":"length","nodeType":"MemberAccess","src":"2872:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3928,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:20","typeDescriptions":{}}},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3933,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3872_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3899,"id":3934,"nodeType":"Return","src":"2807:83:20"}]},"id":3936,"nodeType":"IfStatement","src":"2295:606:20","trueBody":{"id":3921,"nodeType":"Block","src":"2323:464:20","statements":[{"assignments":[3905],"declarations":[{"constant":false,"id":3905,"mutability":"mutable","name":"r","nameLocation":"2345:1:20","nodeType":"VariableDeclaration","scope":3921,"src":"2337:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3904,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3906,"nodeType":"VariableDeclarationStatement","src":"2337:9:20"},{"assignments":[3908],"declarations":[{"constant":false,"id":3908,"mutability":"mutable","name":"s","nameLocation":"2368:1:20","nodeType":"VariableDeclaration","scope":3921,"src":"2360:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3907,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3909,"nodeType":"VariableDeclarationStatement","src":"2360:9:20"},{"assignments":[3911],"declarations":[{"constant":false,"id":3911,"mutability":"mutable","name":"v","nameLocation":"2389:1:20","nodeType":"VariableDeclaration","scope":3921,"src":"2383:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3910,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3912,"nodeType":"VariableDeclarationStatement","src":"2383:7:20"},{"AST":{"nodeType":"YulBlock","src":"2560:171:20","statements":[{"nodeType":"YulAssignment","src":"2578:32:20","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2593:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2604:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2589:3:20"},"nodeType":"YulFunctionCall","src":"2589:20:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2583:5:20"},"nodeType":"YulFunctionCall","src":"2583:27:20"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2578:1:20"}]},{"nodeType":"YulAssignment","src":"2627:32:20","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2642:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2653:4:20","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2638:3:20"},"nodeType":"YulFunctionCall","src":"2638:20:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2632:5:20"},"nodeType":"YulFunctionCall","src":"2632:27:20"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2627:1:20"}]},{"nodeType":"YulAssignment","src":"2676:41:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2686:1:20","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2699:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2710:4:20","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2695:3:20"},"nodeType":"YulFunctionCall","src":"2695:20:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2689:5:20"},"nodeType":"YulFunctionCall","src":"2689:27:20"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2681:4:20"},"nodeType":"YulFunctionCall","src":"2681:36:20"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2676:1:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3905,"isOffset":false,"isSlot":false,"src":"2578:1:20","valueSize":1},{"declaration":3908,"isOffset":false,"isSlot":false,"src":"2627:1:20","valueSize":1},{"declaration":3890,"isOffset":false,"isSlot":false,"src":"2593:9:20","valueSize":1},{"declaration":3890,"isOffset":false,"isSlot":false,"src":"2642:9:20","valueSize":1},{"declaration":3890,"isOffset":false,"isSlot":false,"src":"2699:9:20","valueSize":1},{"declaration":3911,"isOffset":false,"isSlot":false,"src":"2676:1:20","valueSize":1}],"flags":["memory-safe"],"id":3913,"nodeType":"InlineAssembly","src":"2535:196:20"},{"expression":{"arguments":[{"id":3915,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"2762:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3916,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"2768:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3917,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"2771:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3918,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"2774:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3914,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3938,4018,4126],"referencedDeclaration":4126,"src":"2751:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3872_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3872_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3899,"id":3920,"nodeType":"Return","src":"2744:32:20"}]}}]},"documentation":{"id":3886,"nodeType":"StructuredDocumentation","src":"857:1267:20","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":3938,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:20","nodeType":"FunctionDefinition","parameters":{"id":3891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3888,"mutability":"mutable","name":"hash","nameLocation":"2166:4:20","nodeType":"VariableDeclaration","scope":3938,"src":"2158:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3887,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3890,"mutability":"mutable","name":"signature","nameLocation":"2193:9:20","nodeType":"VariableDeclaration","scope":3938,"src":"2180:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3889,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:20"},"returnParameters":{"id":3899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3893,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:20","nodeType":"VariableDeclaration","scope":3938,"src":"2232:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3892,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3896,"mutability":"mutable","name":"err","nameLocation":"2264:3:20","nodeType":"VariableDeclaration","scope":3938,"src":"2251:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3895,"nodeType":"UserDefinedTypeName","pathNode":{"id":3894,"name":"RecoverError","nameLocations":["2251:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":3872,"src":"2251:12:20"},"referencedDeclaration":3872,"src":"2251:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3898,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:20","nodeType":"VariableDeclaration","scope":3938,"src":"2269:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3897,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:20"},"scope":4212,"src":"2129:778:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3967,"nodeType":"Block","src":"3801:168:20","statements":[{"assignments":[3949,3952,3954],"declarations":[{"constant":false,"id":3949,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:20","nodeType":"VariableDeclaration","scope":3967,"src":"3812:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3948,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3952,"mutability":"mutable","name":"error","nameLocation":"3844:5:20","nodeType":"VariableDeclaration","scope":3967,"src":"3831:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3951,"nodeType":"UserDefinedTypeName","pathNode":{"id":3950,"name":"RecoverError","nameLocations":["3831:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":3872,"src":"3831:12:20"},"referencedDeclaration":3872,"src":"3831:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3954,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:20","nodeType":"VariableDeclaration","scope":3967,"src":"3851:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3953,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3959,"initialValue":{"arguments":[{"id":3956,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"3882:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3957,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"3888:9:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3955,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3938,4018,4126],"referencedDeclaration":3938,"src":"3871:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3872_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3872_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:20"},{"expression":{"arguments":[{"id":3961,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"3920:5:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"}},{"id":3962,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"3927:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3960,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"3908:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3872_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3964,"nodeType":"ExpressionStatement","src":"3908:28:20"},{"expression":{"id":3965,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"3953:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3947,"id":3966,"nodeType":"Return","src":"3946:16:20"}]},"documentation":{"id":3939,"nodeType":"StructuredDocumentation","src":"2913:796:20","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":3968,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:20","nodeType":"FunctionDefinition","parameters":{"id":3944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3941,"mutability":"mutable","name":"hash","nameLocation":"3739:4:20","nodeType":"VariableDeclaration","scope":3968,"src":"3731:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3940,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3943,"mutability":"mutable","name":"signature","nameLocation":"3758:9:20","nodeType":"VariableDeclaration","scope":3968,"src":"3745:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3942,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:20"},"returnParameters":{"id":3947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3968,"src":"3792:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3945,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:20"},"scope":4212,"src":"3714:255:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4017,"nodeType":"Block","src":"4348:342:20","statements":[{"id":4016,"nodeType":"UncheckedBlock","src":"4358:326:20","statements":[{"assignments":[3986],"declarations":[{"constant":false,"id":3986,"mutability":"mutable","name":"s","nameLocation":"4390:1:20","nodeType":"VariableDeclaration","scope":4016,"src":"4382:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3985,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3993,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3987,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"4394:2:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:20","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3988,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:20","typeDescriptions":{}}},"id":3991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:20"},{"assignments":[3995],"declarations":[{"constant":false,"id":3995,"mutability":"mutable","name":"v","nameLocation":"4591:1:20","nodeType":"VariableDeclaration","scope":4016,"src":"4585:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3994,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4008,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4000,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"4610:2:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3998,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:20","typeDescriptions":{}}},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":4002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4004,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":4005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:20","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3996,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:20","typeDescriptions":{}}},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:20"},{"expression":{"arguments":[{"id":4010,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"4659:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4011,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"4665:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4012,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"4668:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4013,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3986,"src":"4671:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4009,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3938,4018,4126],"referencedDeclaration":4126,"src":"4648:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3872_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3872_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3984,"id":4015,"nodeType":"Return","src":"4641:32:20"}]}]},"documentation":{"id":3969,"nodeType":"StructuredDocumentation","src":"3975:205:20","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":4018,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:20","nodeType":"FunctionDefinition","parameters":{"id":3976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3971,"mutability":"mutable","name":"hash","nameLocation":"4222:4:20","nodeType":"VariableDeclaration","scope":4018,"src":"4214:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3970,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3973,"mutability":"mutable","name":"r","nameLocation":"4244:1:20","nodeType":"VariableDeclaration","scope":4018,"src":"4236:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3972,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3975,"mutability":"mutable","name":"vs","nameLocation":"4263:2:20","nodeType":"VariableDeclaration","scope":4018,"src":"4255:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3974,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:20"},"returnParameters":{"id":3984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3978,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:20","nodeType":"VariableDeclaration","scope":4018,"src":"4295:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3977,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3981,"mutability":"mutable","name":"err","nameLocation":"4327:3:20","nodeType":"VariableDeclaration","scope":4018,"src":"4314:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3980,"nodeType":"UserDefinedTypeName","pathNode":{"id":3979,"name":"RecoverError","nameLocations":["4314:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":3872,"src":"4314:12:20"},"referencedDeclaration":3872,"src":"4314:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3983,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:20","nodeType":"VariableDeclaration","scope":4018,"src":"4332:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3982,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:20"},"scope":4212,"src":"4185:505:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4050,"nodeType":"Block","src":"4903:164:20","statements":[{"assignments":[4031,4034,4036],"declarations":[{"constant":false,"id":4031,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:20","nodeType":"VariableDeclaration","scope":4050,"src":"4914:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4030,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4034,"mutability":"mutable","name":"error","nameLocation":"4946:5:20","nodeType":"VariableDeclaration","scope":4050,"src":"4933:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4033,"nodeType":"UserDefinedTypeName","pathNode":{"id":4032,"name":"RecoverError","nameLocations":["4933:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":3872,"src":"4933:12:20"},"referencedDeclaration":3872,"src":"4933:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4036,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:20","nodeType":"VariableDeclaration","scope":4050,"src":"4953:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4035,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4042,"initialValue":{"arguments":[{"id":4038,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"4984:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4039,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"4990:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4040,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"4993:2:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4037,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3938,4018,4126],"referencedDeclaration":4018,"src":"4973:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3872_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3872_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:20"},{"expression":{"arguments":[{"id":4044,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"5018:5:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"}},{"id":4045,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4036,"src":"5025:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4043,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"5006:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3872_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4047,"nodeType":"ExpressionStatement","src":"5006:28:20"},{"expression":{"id":4048,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4031,"src":"5051:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4029,"id":4049,"nodeType":"Return","src":"5044:16:20"}]},"documentation":{"id":4019,"nodeType":"StructuredDocumentation","src":"4696:116:20","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":4051,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:20","nodeType":"FunctionDefinition","parameters":{"id":4026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4021,"mutability":"mutable","name":"hash","nameLocation":"4842:4:20","nodeType":"VariableDeclaration","scope":4051,"src":"4834:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4020,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4023,"mutability":"mutable","name":"r","nameLocation":"4856:1:20","nodeType":"VariableDeclaration","scope":4051,"src":"4848:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4022,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4025,"mutability":"mutable","name":"vs","nameLocation":"4867:2:20","nodeType":"VariableDeclaration","scope":4051,"src":"4859:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4024,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:20"},"returnParameters":{"id":4029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4051,"src":"4894:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4027,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:20"},"scope":4212,"src":"4817:250:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4125,"nodeType":"Block","src":"5382:1372:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4072,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"6278:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4070,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:20","typeDescriptions":{}}},"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":4074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:20","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4086,"nodeType":"IfStatement","src":"6266:164:20","trueBody":{"id":4085,"nodeType":"Block","src":"6351:79:20","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4076,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:20","typeDescriptions":{}}},"id":4079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4080,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"6385:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3872_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:20","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3871,"src":"6385:30:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"}},{"id":4082,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"6417:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4083,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3872_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4069,"id":4084,"nodeType":"Return","src":"6365:54:20"}]}},{"assignments":[4088],"declarations":[{"constant":false,"id":4088,"mutability":"mutable","name":"signer","nameLocation":"6532:6:20","nodeType":"VariableDeclaration","scope":4125,"src":"6524:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4087,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4095,"initialValue":{"arguments":[{"id":4090,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"6551:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4091,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"6557:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4092,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"6560:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4093,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"6563:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4089,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:20","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:20"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4096,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"6579:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4097,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:20","typeDescriptions":{}}},"id":4100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4115,"nodeType":"IfStatement","src":"6575:113:20","trueBody":{"id":4114,"nodeType":"Block","src":"6601:87:20","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4102,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:20","typeDescriptions":{}}},"id":4105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4106,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"6635:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3872_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:20","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3869,"src":"6635:29:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":4110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4108,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:20","typeDescriptions":{}}},"id":4111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4112,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3872_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4069,"id":4113,"nodeType":"Return","src":"6615:62:20"}]}},{"expression":{"components":[{"id":4116,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"6706:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4117,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"6714:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3872_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:20","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3868,"src":"6714:20:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":4121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:20","typeDescriptions":{}}},"id":4122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4123,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3872_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4069,"id":4124,"nodeType":"Return","src":"6698:49:20"}]},"documentation":{"id":4052,"nodeType":"StructuredDocumentation","src":"5073:125:20","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":4126,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:20","nodeType":"FunctionDefinition","parameters":{"id":4061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4054,"mutability":"mutable","name":"hash","nameLocation":"5240:4:20","nodeType":"VariableDeclaration","scope":4126,"src":"5232:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4053,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4056,"mutability":"mutable","name":"v","nameLocation":"5260:1:20","nodeType":"VariableDeclaration","scope":4126,"src":"5254:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4055,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4058,"mutability":"mutable","name":"r","nameLocation":"5279:1:20","nodeType":"VariableDeclaration","scope":4126,"src":"5271:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4057,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4060,"mutability":"mutable","name":"s","nameLocation":"5298:1:20","nodeType":"VariableDeclaration","scope":4126,"src":"5290:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4059,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:20"},"returnParameters":{"id":4069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4063,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:20","nodeType":"VariableDeclaration","scope":4126,"src":"5329:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4062,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4066,"mutability":"mutable","name":"err","nameLocation":"5361:3:20","nodeType":"VariableDeclaration","scope":4126,"src":"5348:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4065,"nodeType":"UserDefinedTypeName","pathNode":{"id":4064,"name":"RecoverError","nameLocations":["5348:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":3872,"src":"5348:12:20"},"referencedDeclaration":3872,"src":"5348:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4068,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:20","nodeType":"VariableDeclaration","scope":4126,"src":"5366:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4067,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:20"},"scope":4212,"src":"5203:1551:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4161,"nodeType":"Block","src":"6981:166:20","statements":[{"assignments":[4141,4144,4146],"declarations":[{"constant":false,"id":4141,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:20","nodeType":"VariableDeclaration","scope":4161,"src":"6992:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4140,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4144,"mutability":"mutable","name":"error","nameLocation":"7024:5:20","nodeType":"VariableDeclaration","scope":4161,"src":"7011:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4143,"nodeType":"UserDefinedTypeName","pathNode":{"id":4142,"name":"RecoverError","nameLocations":["7011:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":3872,"src":"7011:12:20"},"referencedDeclaration":3872,"src":"7011:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4146,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:20","nodeType":"VariableDeclaration","scope":4161,"src":"7031:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4145,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4153,"initialValue":{"arguments":[{"id":4148,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4129,"src":"7062:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4149,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"7068:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4150,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"7071:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4151,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"7074:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4147,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3938,4018,4126],"referencedDeclaration":4126,"src":"7051:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3872_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3872_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:20"},{"expression":{"arguments":[{"id":4155,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4144,"src":"7098:5:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"}},{"id":4156,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"7105:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4154,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"7086:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3872_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4158,"nodeType":"ExpressionStatement","src":"7086:28:20"},{"expression":{"id":4159,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"7131:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4139,"id":4160,"nodeType":"Return","src":"7124:16:20"}]},"documentation":{"id":4127,"nodeType":"StructuredDocumentation","src":"6760:122:20","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":4162,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:20","nodeType":"FunctionDefinition","parameters":{"id":4136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4129,"mutability":"mutable","name":"hash","nameLocation":"6912:4:20","nodeType":"VariableDeclaration","scope":4162,"src":"6904:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4128,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4131,"mutability":"mutable","name":"v","nameLocation":"6924:1:20","nodeType":"VariableDeclaration","scope":4162,"src":"6918:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4130,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4133,"mutability":"mutable","name":"r","nameLocation":"6935:1:20","nodeType":"VariableDeclaration","scope":4162,"src":"6927:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4132,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4135,"mutability":"mutable","name":"s","nameLocation":"6946:1:20","nodeType":"VariableDeclaration","scope":4162,"src":"6938:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:20"},"returnParameters":{"id":4139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4162,"src":"6972:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4137,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:20"},"scope":4212,"src":"6887:260:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4210,"nodeType":"Block","src":"7352:460:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"},"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4171,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"7366:5:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4172,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"7375:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3872_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:20","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3868,"src":"7375:20:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4177,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"7462:5:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4178,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"7471:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3872_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:20","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3869,"src":"7471:29:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4185,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"7567:5:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4186,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"7576:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3872_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:20","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3870,"src":"7576:35:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4197,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"7701:5:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4198,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"7710:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3872_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:20","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3871,"src":"7710:30:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4206,"nodeType":"IfStatement","src":"7697:109:20","trueBody":{"id":4205,"nodeType":"Block","src":"7742:64:20","statements":[{"errorCall":{"arguments":[{"id":4202,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"7786:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4201,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"7763:22:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4204,"nodeType":"RevertStatement","src":"7756:39:20"}]}},"id":4207,"nodeType":"IfStatement","src":"7563:243:20","trueBody":{"id":4196,"nodeType":"Block","src":"7613:78:20","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":4192,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"7670:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4190,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:20","typeDescriptions":{}}},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4189,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"7634:27:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4195,"nodeType":"RevertStatement","src":"7627:53:20"}]}},"id":4208,"nodeType":"IfStatement","src":"7458:348:20","trueBody":{"id":4184,"nodeType":"Block","src":"7502:55:20","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4181,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"7523:21:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4183,"nodeType":"RevertStatement","src":"7516:30:20"}]}},"id":4209,"nodeType":"IfStatement","src":"7362:444:20","trueBody":{"id":4176,"nodeType":"Block","src":"7397:55:20","statements":[{"functionReturnParameters":4170,"id":4175,"nodeType":"Return","src":"7411:7:20"}]}}]},"documentation":{"id":4163,"nodeType":"StructuredDocumentation","src":"7153:122:20","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":4211,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:20","nodeType":"FunctionDefinition","parameters":{"id":4169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4166,"mutability":"mutable","name":"error","nameLocation":"7314:5:20","nodeType":"VariableDeclaration","scope":4211,"src":"7301:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4165,"nodeType":"UserDefinedTypeName","pathNode":{"id":4164,"name":"RecoverError","nameLocations":["7301:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":3872,"src":"7301:12:20"},"referencedDeclaration":3872,"src":"7301:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3872","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4168,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:20","nodeType":"VariableDeclaration","scope":4211,"src":"7321:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:20"},"returnParameters":{"id":4170,"nodeType":"ParameterList","parameters":[],"src":"7352:0:20"},"scope":4212,"src":"7280:532:20","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4213,"src":"344:7470:20","usedErrors":[3875,3880,3885],"usedEvents":[]}],"src":"112:7703:20"},"id":20},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[4439],"IERC5267":[798],"MessageHashUtils":[4525],"ShortString":[2127],"ShortStrings":[2338]},"id":4440,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4214,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":4216,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4440,"sourceUnit":4526,"src":"139:56:21","symbolAliases":[{"foreign":{"id":4215,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4525,"src":"147:16:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":4219,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4440,"sourceUnit":2339,"src":"196:62:21","symbolAliases":[{"foreign":{"id":4217,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"204:12:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4218,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"218:11:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":4221,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4440,"sourceUnit":799,"src":"259:55:21","symbolAliases":[{"foreign":{"id":4220,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"267:8:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4223,"name":"IERC5267","nameLocations":["1988:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":798,"src":"1988:8:21"},"id":4224,"nodeType":"InheritanceSpecifier","src":"1988:8:21"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":4222,"nodeType":"StructuredDocumentation","src":"316:1643:21","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":4439,"linearizedBaseContracts":[4439,798],"name":"EIP712","nameLocation":"1978:6:21","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4226,"libraryName":{"id":4225,"name":"ShortStrings","nameLocations":["2009:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":2338,"src":"2009:12:21"},"nodeType":"UsingForDirective","src":"2003:25:21"},{"constant":true,"id":4231,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:21","nodeType":"VariableDeclaration","scope":4439,"src":"2034:140:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":4229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":4228,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4233,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:21","nodeType":"VariableDeclaration","scope":4439,"src":"2373:48:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4232,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4235,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:21","nodeType":"VariableDeclaration","scope":4439,"src":"2427:40:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4234,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":4237,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:21","nodeType":"VariableDeclaration","scope":4439,"src":"2473:37:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4236,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":4239,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:21","nodeType":"VariableDeclaration","scope":4439,"src":"2517:37:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4238,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4241,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:21","nodeType":"VariableDeclaration","scope":4439,"src":"2560:40:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4240,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4244,"mutability":"immutable","name":"_name","nameLocation":"2637:5:21","nodeType":"VariableDeclaration","scope":4439,"src":"2607:35:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"},"typeName":{"id":4243,"nodeType":"UserDefinedTypeName","pathNode":{"id":4242,"name":"ShortString","nameLocations":["2607:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":2127,"src":"2607:11:21"},"referencedDeclaration":2127,"src":"2607:11:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":4247,"mutability":"immutable","name":"_version","nameLocation":"2678:8:21","nodeType":"VariableDeclaration","scope":4439,"src":"2648:38:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"},"typeName":{"id":4246,"nodeType":"UserDefinedTypeName","pathNode":{"id":4245,"name":"ShortString","nameLocations":["2648:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":2127,"src":"2648:11:21"},"referencedDeclaration":2127,"src":"2648:11:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":4249,"mutability":"mutable","name":"_nameFallback","nameLocation":"2757:13:21","nodeType":"VariableDeclaration","scope":4439,"src":"2742:28:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4248,"name":"string","nodeType":"ElementaryTypeName","src":"2742:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":4251,"mutability":"mutable","name":"_versionFallback","nameLocation":"2841:16:21","nodeType":"VariableDeclaration","scope":4439,"src":"2826:31:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4250,"name":"string","nodeType":"ElementaryTypeName","src":"2826:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":4308,"nodeType":"Block","src":"3483:376:21","statements":[{"expression":{"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4259,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"3493:5:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4262,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"3532:13:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4260,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"3501:4:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3506:25:21","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2279,"src":"3501:30:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2127_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:45:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"}},"src":"3493:53:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"}},"id":4265,"nodeType":"ExpressionStatement","src":"3493:53:21"},{"expression":{"id":4271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4266,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"3556:8:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4269,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"3601:16:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4267,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"3567:7:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3575:25:21","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2279,"src":"3567:33:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2127_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3567:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"}},"src":"3556:62:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"}},"id":4272,"nodeType":"ExpressionStatement","src":"3556:62:21"},{"expression":{"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4273,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4239,"src":"3628:11:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4277,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"3658:4:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3652:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4275,"name":"bytes","nodeType":"ElementaryTypeName","src":"3652:5:21","typeDescriptions":{}}},"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3652:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4274,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3642:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3642:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3628:36:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4281,"nodeType":"ExpressionStatement","src":"3628:36:21"},{"expression":{"id":4289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4282,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4241,"src":"3674:14:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4286,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"3707:7:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3701:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4284,"name":"bytes","nodeType":"ElementaryTypeName","src":"3701:5:21","typeDescriptions":{}}},"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3701:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4283,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3691:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3691:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3674:42:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4290,"nodeType":"ExpressionStatement","src":"3674:42:21"},{"expression":{"id":4294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4291,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"3727:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4292,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3744:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3750:7:21","memberName":"chainid","nodeType":"MemberAccess","src":"3744:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3727:30:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4295,"nodeType":"ExpressionStatement","src":"3727:30:21"},{"expression":{"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4296,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4233,"src":"3767:22:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":4297,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"3792:21:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3792:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3767:48:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4300,"nodeType":"ExpressionStatement","src":"3767:48:21"},{"expression":{"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4301,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4237,"src":"3825:11:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4304,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3847:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4439","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4439","typeString":"contract EIP712"}],"id":4303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3839:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4302,"name":"address","nodeType":"ElementaryTypeName","src":"3839:7:21","typeDescriptions":{}}},"id":4305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3839:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3825:27:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4307,"nodeType":"ExpressionStatement","src":"3825:27:21"}]},"documentation":{"id":4252,"nodeType":"StructuredDocumentation","src":"2864:559:21","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":4309,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4254,"mutability":"mutable","name":"name","nameLocation":"3454:4:21","nodeType":"VariableDeclaration","scope":4309,"src":"3440:18:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4253,"name":"string","nodeType":"ElementaryTypeName","src":"3440:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4256,"mutability":"mutable","name":"version","nameLocation":"3474:7:21","nodeType":"VariableDeclaration","scope":4309,"src":"3460:21:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4255,"name":"string","nodeType":"ElementaryTypeName","src":"3460:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3439:43:21"},"returnParameters":{"id":4258,"nodeType":"ParameterList","parameters":[],"src":"3483:0:21"},"scope":4439,"src":"3428:431:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4334,"nodeType":"Block","src":"4007:200:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4317,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4029:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4439","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4439","typeString":"contract EIP712"}],"id":4316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4021:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4315,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:21","typeDescriptions":{}}},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4021:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4319,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4237,"src":"4038:11:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4021:28:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4321,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4053:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4059:7:21","memberName":"chainid","nodeType":"MemberAccess","src":"4053:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4323,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"4070:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4053:31:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4021:63:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4332,"nodeType":"Block","src":"4146:55:21","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4329,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"4167:21:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4167:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4314,"id":4331,"nodeType":"Return","src":"4160:30:21"}]},"id":4333,"nodeType":"IfStatement","src":"4017:184:21","trueBody":{"id":4328,"nodeType":"Block","src":"4086:54:21","statements":[{"expression":{"id":4326,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4233,"src":"4107:22:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4314,"id":4327,"nodeType":"Return","src":"4100:29:21"}]}}]},"documentation":{"id":4310,"nodeType":"StructuredDocumentation","src":"3865:75:21","text":" @dev Returns the domain separator for the current chain."},"id":4335,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3954:18:21","nodeType":"FunctionDefinition","parameters":{"id":4311,"nodeType":"ParameterList","parameters":[],"src":"3972:2:21"},"returnParameters":{"id":4314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4335,"src":"3998:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3998:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3997:9:21"},"scope":4439,"src":"3945:262:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4355,"nodeType":"Block","src":"4277:115:21","statements":[{"expression":{"arguments":[{"arguments":[{"id":4343,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"4315:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4344,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4239,"src":"4326:11:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4345,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4241,"src":"4339:14:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4346,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4355:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4361:7:21","memberName":"chainid","nodeType":"MemberAccess","src":"4355:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4350,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4378:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4439","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4439","typeString":"contract EIP712"}],"id":4349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4370:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4348,"name":"address","nodeType":"ElementaryTypeName","src":"4370:7:21","typeDescriptions":{}}},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4370:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4341,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4304:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4308:6:21","memberName":"encode","nodeType":"MemberAccess","src":"4304:10:21","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4304:80:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4340,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4294:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4294:91:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4339,"id":4354,"nodeType":"Return","src":"4287:98:21"}]},"id":4356,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4222:21:21","nodeType":"FunctionDefinition","parameters":{"id":4336,"nodeType":"ParameterList","parameters":[],"src":"4243:2:21"},"returnParameters":{"id":4339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4338,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4356,"src":"4268:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4268:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4267:9:21"},"scope":4439,"src":"4213:179:21","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4371,"nodeType":"Block","src":"5103:90:21","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4366,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"5153:18:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5153:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4368,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"5175:10:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4364,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4525,"src":"5120:16:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$4525_$","typeString":"type(library MessageHashUtils)"}},"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5137:15:21","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":4524,"src":"5120:32:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5120:66:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4363,"id":4370,"nodeType":"Return","src":"5113:73:21"}]},"documentation":{"id":4357,"nodeType":"StructuredDocumentation","src":"4398:614:21","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":4372,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"5026:16:21","nodeType":"FunctionDefinition","parameters":{"id":4360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4359,"mutability":"mutable","name":"structHash","nameLocation":"5051:10:21","nodeType":"VariableDeclaration","scope":4372,"src":"5043:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4358,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5043:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5042:20:21"},"returnParameters":{"id":4363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4362,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4372,"src":"5094:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4361,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5094:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5093:9:21"},"scope":4439,"src":"5017:176:21","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[797],"body":{"id":4413,"nodeType":"Block","src":"5571:229:21","statements":[{"expression":{"components":[{"hexValue":"0f","id":4391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5602:7:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":4392,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"5632:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5632:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4394,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"5659:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5659:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":4396,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5689:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5695:7:21","memberName":"chainid","nodeType":"MemberAccess","src":"5689:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4400,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5724:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4439","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4439","typeString":"contract EIP712"}],"id":4399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5716:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4398,"name":"address","nodeType":"ElementaryTypeName","src":"5716:7:21","typeDescriptions":{}}},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5716:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":4404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5751:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5743:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4402,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5743:7:21","typeDescriptions":{}}},"id":4405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5743:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":4409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5781:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5767:13:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4406,"name":"uint256","nodeType":"ElementaryTypeName","src":"5771:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4407,"nodeType":"ArrayTypeName","src":"5771:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5767:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":4411,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5588:205:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":4390,"id":4412,"nodeType":"Return","src":"5581:212:21"}]},"documentation":{"id":4373,"nodeType":"StructuredDocumentation","src":"5199:39:21","text":" @inheritdoc IERC5267"},"functionSelector":"84b0196e","id":4414,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5252:12:21","nodeType":"FunctionDefinition","parameters":{"id":4374,"nodeType":"ParameterList","parameters":[],"src":"5264:2:21"},"returnParameters":{"id":4390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4376,"mutability":"mutable","name":"fields","nameLocation":"5348:6:21","nodeType":"VariableDeclaration","scope":4414,"src":"5341:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4375,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5341:6:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":4378,"mutability":"mutable","name":"name","nameLocation":"5382:4:21","nodeType":"VariableDeclaration","scope":4414,"src":"5368:18:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4377,"name":"string","nodeType":"ElementaryTypeName","src":"5368:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4380,"mutability":"mutable","name":"version","nameLocation":"5414:7:21","nodeType":"VariableDeclaration","scope":4414,"src":"5400:21:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4379,"name":"string","nodeType":"ElementaryTypeName","src":"5400:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4382,"mutability":"mutable","name":"chainId","nameLocation":"5443:7:21","nodeType":"VariableDeclaration","scope":4414,"src":"5435:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4381,"name":"uint256","nodeType":"ElementaryTypeName","src":"5435:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4384,"mutability":"mutable","name":"verifyingContract","nameLocation":"5472:17:21","nodeType":"VariableDeclaration","scope":4414,"src":"5464:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4383,"name":"address","nodeType":"ElementaryTypeName","src":"5464:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4386,"mutability":"mutable","name":"salt","nameLocation":"5511:4:21","nodeType":"VariableDeclaration","scope":4414,"src":"5503:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4385,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5503:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4389,"mutability":"mutable","name":"extensions","nameLocation":"5546:10:21","nodeType":"VariableDeclaration","scope":4414,"src":"5529:27:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4387,"name":"uint256","nodeType":"ElementaryTypeName","src":"5529:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4388,"nodeType":"ArrayTypeName","src":"5529:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5327:239:21"},"scope":4439,"src":"5243:557:21","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":4425,"nodeType":"Block","src":"6181:65:21","statements":[{"expression":{"arguments":[{"id":4422,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"6225:13:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4420,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"6198:5:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"}},"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6204:20:21","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2306,"src":"6198:26:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2127_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2127_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6198:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4419,"id":4424,"nodeType":"Return","src":"6191:48:21"}]},"documentation":{"id":4415,"nodeType":"StructuredDocumentation","src":"5806:256:21","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":4426,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6129:11:21","nodeType":"FunctionDefinition","parameters":{"id":4416,"nodeType":"ParameterList","parameters":[],"src":"6140:2:21"},"returnParameters":{"id":4419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4426,"src":"6166:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4417,"name":"string","nodeType":"ElementaryTypeName","src":"6166:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6165:15:21"},"scope":4439,"src":"6120:126:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4437,"nodeType":"Block","src":"6636:71:21","statements":[{"expression":{"arguments":[{"id":4434,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"6683:16:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4432,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"6653:8:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2127","typeString":"ShortString"}},"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6662:20:21","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2306,"src":"6653:29:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2127_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2127_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:47:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4431,"id":4436,"nodeType":"Return","src":"6646:54:21"}]},"documentation":{"id":4427,"nodeType":"StructuredDocumentation","src":"6252:262:21","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":4438,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6581:14:21","nodeType":"FunctionDefinition","parameters":{"id":4428,"nodeType":"ParameterList","parameters":[],"src":"6595:2:21"},"returnParameters":{"id":4431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4438,"src":"6621:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4429,"name":"string","nodeType":"ElementaryTypeName","src":"6621:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6620:15:21"},"scope":4439,"src":"6572:135:21","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4440,"src":"1960:4749:21","usedErrors":[2135,2137],"usedEvents":[778]}],"src":"113:6597:21"},"id":21},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[4525],"Strings":[3864]},"id":4526,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4441,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":4443,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4526,"sourceUnit":3865,"src":"149:39:22","symbolAliases":[{"foreign":{"id":4442,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"157:7:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":4444,"nodeType":"StructuredDocumentation","src":"190:330:22","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":4525,"linearizedBaseContracts":[4525],"name":"MessageHashUtils","nameLocation":"529:16:22","nodeType":"ContractDefinition","nodes":[{"body":{"id":4453,"nodeType":"Block","src":"1339:341:22","statements":[{"AST":{"nodeType":"YulBlock","src":"1374:300:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1395:4:22","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1401:34:22","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1388:6:22"},"nodeType":"YulFunctionCall","src":"1388:48:22"},"nodeType":"YulExpressionStatement","src":"1388:48:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1497:4:22","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1503:11:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1490:6:22"},"nodeType":"YulFunctionCall","src":"1490:25:22"},"nodeType":"YulExpressionStatement","src":"1490:25:22"},{"nodeType":"YulAssignment","src":"1569:31:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1589:4:22","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1595:4:22","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1579:9:22"},"nodeType":"YulFunctionCall","src":"1579:21:22"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1569:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4450,"isOffset":false,"isSlot":false,"src":"1569:6:22","valueSize":1},{"declaration":4447,"isOffset":false,"isSlot":false,"src":"1503:11:22","valueSize":1}],"flags":["memory-safe"],"id":4452,"nodeType":"InlineAssembly","src":"1349:325:22"}]},"documentation":{"id":4445,"nodeType":"StructuredDocumentation","src":"552:690:22","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":4454,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1256:22:22","nodeType":"FunctionDefinition","parameters":{"id":4448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4447,"mutability":"mutable","name":"messageHash","nameLocation":"1287:11:22","nodeType":"VariableDeclaration","scope":4454,"src":"1279:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4446,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1278:21:22"},"returnParameters":{"id":4451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4450,"mutability":"mutable","name":"digest","nameLocation":"1331:6:22","nodeType":"VariableDeclaration","scope":4454,"src":"1323:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1323:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1322:16:22"},"scope":4525,"src":"1247:433:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4479,"nodeType":"Block","src":"2257:143:22","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":4466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2309:32:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":4471,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4457,"src":"2366:7:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:6:22","memberName":"length","nodeType":"MemberAccess","src":"2366:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4469,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"2349:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3864_$","typeString":"type(library Strings)"}},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2357:8:22","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2576,"src":"2349:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:32:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2343:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4467,"name":"bytes","nodeType":"ElementaryTypeName","src":"2343:5:22","typeDescriptions":{}}},"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:39:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4475,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4457,"src":"2384:7:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2296:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4463,"name":"bytes","nodeType":"ElementaryTypeName","src":"2296:5:22","typeDescriptions":{}}},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:6:22","memberName":"concat","nodeType":"MemberAccess","src":"2296:12:22","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:96:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4462,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2286:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2286:107:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4461,"id":4478,"nodeType":"Return","src":"2267:126:22"}]},"documentation":{"id":4455,"nodeType":"StructuredDocumentation","src":"1686:480:22","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":4480,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2180:22:22","nodeType":"FunctionDefinition","parameters":{"id":4458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4457,"mutability":"mutable","name":"message","nameLocation":"2216:7:22","nodeType":"VariableDeclaration","scope":4480,"src":"2203:20:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4456,"name":"bytes","nodeType":"ElementaryTypeName","src":"2203:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2202:22:22"},"returnParameters":{"id":4461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4480,"src":"2248:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4459,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2248:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2247:9:22"},"scope":4525,"src":"2171:229:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4499,"nodeType":"Block","src":"2854:80:22","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":4493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2898:10:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":4494,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"2910:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4495,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"2921:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4491,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2881:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2885:12:22","memberName":"encodePacked","nodeType":"MemberAccess","src":"2881:16:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:45:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4490,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2871:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2871:56:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4489,"id":4498,"nodeType":"Return","src":"2864:63:22"}]},"documentation":{"id":4481,"nodeType":"StructuredDocumentation","src":"2406:332:22","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":4500,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2752:31:22","nodeType":"FunctionDefinition","parameters":{"id":4486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4483,"mutability":"mutable","name":"validator","nameLocation":"2792:9:22","nodeType":"VariableDeclaration","scope":4500,"src":"2784:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4482,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4485,"mutability":"mutable","name":"data","nameLocation":"2816:4:22","nodeType":"VariableDeclaration","scope":4500,"src":"2803:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4484,"name":"bytes","nodeType":"ElementaryTypeName","src":"2803:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2783:38:22"},"returnParameters":{"id":4489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4500,"src":"2845:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4487,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2845:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2844:9:22"},"scope":4525,"src":"2743:191:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4511,"nodeType":"Block","src":"3216:216:22","statements":[{"AST":{"nodeType":"YulBlock","src":"3251:175:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3272:4:22","type":"","value":"0x00"},{"hexValue":"1900","kind":"string","nodeType":"YulLiteral","src":"3278:10:22","type":"","value":"\u0019\u0000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3265:6:22"},"nodeType":"YulFunctionCall","src":"3265:24:22"},"nodeType":"YulExpressionStatement","src":"3265:24:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3309:4:22","type":"","value":"0x02"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3319:2:22","type":"","value":"96"},{"name":"validator","nodeType":"YulIdentifier","src":"3323:9:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3315:3:22"},"nodeType":"YulFunctionCall","src":"3315:18:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3302:6:22"},"nodeType":"YulFunctionCall","src":"3302:32:22"},"nodeType":"YulExpressionStatement","src":"3302:32:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3354:4:22","type":"","value":"0x16"},{"name":"messageHash","nodeType":"YulIdentifier","src":"3360:11:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3347:6:22"},"nodeType":"YulFunctionCall","src":"3347:25:22"},"nodeType":"YulExpressionStatement","src":"3347:25:22"},{"nodeType":"YulAssignment","src":"3385:31:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3405:4:22","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3411:4:22","type":"","value":"0x36"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3395:9:22"},"nodeType":"YulFunctionCall","src":"3395:21:22"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3385:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4508,"isOffset":false,"isSlot":false,"src":"3385:6:22","valueSize":1},{"declaration":4505,"isOffset":false,"isSlot":false,"src":"3360:11:22","valueSize":1},{"declaration":4503,"isOffset":false,"isSlot":false,"src":"3323:9:22","valueSize":1}],"flags":["memory-safe"],"id":4510,"nodeType":"InlineAssembly","src":"3226:200:22"}]},"documentation":{"id":4501,"nodeType":"StructuredDocumentation","src":"2940:129:22","text":" @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32."},"id":4512,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"3083:31:22","nodeType":"FunctionDefinition","parameters":{"id":4506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4503,"mutability":"mutable","name":"validator","nameLocation":"3132:9:22","nodeType":"VariableDeclaration","scope":4512,"src":"3124:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4502,"name":"address","nodeType":"ElementaryTypeName","src":"3124:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4505,"mutability":"mutable","name":"messageHash","nameLocation":"3159:11:22","nodeType":"VariableDeclaration","scope":4512,"src":"3151:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4504,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3151:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3114:62:22"},"returnParameters":{"id":4509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4508,"mutability":"mutable","name":"digest","nameLocation":"3208:6:22","nodeType":"VariableDeclaration","scope":4512,"src":"3200:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4507,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3200:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3199:16:22"},"scope":4525,"src":"3074:358:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4523,"nodeType":"Block","src":"3983:265:22","statements":[{"AST":{"nodeType":"YulBlock","src":"4018:224:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4032:22:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4049:4:22","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4043:5:22"},"nodeType":"YulFunctionCall","src":"4043:11:22"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"4036:3:22","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4074:3:22"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"4079:10:22","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4067:6:22"},"nodeType":"YulFunctionCall","src":"4067:23:22"},"nodeType":"YulExpressionStatement","src":"4067:23:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4114:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"4119:4:22","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4110:3:22"},"nodeType":"YulFunctionCall","src":"4110:14:22"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"4126:15:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4103:6:22"},"nodeType":"YulFunctionCall","src":"4103:39:22"},"nodeType":"YulExpressionStatement","src":"4103:39:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4166:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"4171:4:22","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4162:3:22"},"nodeType":"YulFunctionCall","src":"4162:14:22"},{"name":"structHash","nodeType":"YulIdentifier","src":"4178:10:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4155:6:22"},"nodeType":"YulFunctionCall","src":"4155:34:22"},"nodeType":"YulExpressionStatement","src":"4155:34:22"},{"nodeType":"YulAssignment","src":"4202:30:22","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4222:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"4227:4:22","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4212:9:22"},"nodeType":"YulFunctionCall","src":"4212:20:22"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"4202:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4520,"isOffset":false,"isSlot":false,"src":"4202:6:22","valueSize":1},{"declaration":4515,"isOffset":false,"isSlot":false,"src":"4126:15:22","valueSize":1},{"declaration":4517,"isOffset":false,"isSlot":false,"src":"4178:10:22","valueSize":1}],"flags":["memory-safe"],"id":4522,"nodeType":"InlineAssembly","src":"3993:249:22"}]},"documentation":{"id":4513,"nodeType":"StructuredDocumentation","src":"3438:431:22","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":4524,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3883:15:22","nodeType":"FunctionDefinition","parameters":{"id":4518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4515,"mutability":"mutable","name":"domainSeparator","nameLocation":"3907:15:22","nodeType":"VariableDeclaration","scope":4524,"src":"3899:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4514,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3899:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4517,"mutability":"mutable","name":"structHash","nameLocation":"3932:10:22","nodeType":"VariableDeclaration","scope":4524,"src":"3924:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4516,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3924:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3898:45:22"},"returnParameters":{"id":4521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4520,"mutability":"mutable","name":"digest","nameLocation":"3975:6:22","nodeType":"VariableDeclaration","scope":4524,"src":"3967:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4519,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3966:16:22"},"scope":4525,"src":"3874:374:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4526,"src":"521:3729:22","usedErrors":[],"usedEvents":[]}],"src":"123:4128:22"},"id":22},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[6146],"Panic":[2052],"SafeCast":[7911]},"id":6147,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4527,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:23"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":4529,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6147,"sourceUnit":2053,"src":"129:35:23","symbolAliases":[{"foreign":{"id":4528,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"137:5:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":4531,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6147,"sourceUnit":7912,"src":"165:40:23","symbolAliases":[{"foreign":{"id":4530,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"173:8:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4532,"nodeType":"StructuredDocumentation","src":"207:73:23","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6146,"linearizedBaseContracts":[6146],"name":"Math","nameLocation":"289:4:23","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4537,"members":[{"id":4533,"name":"Floor","nameLocation":"324:5:23","nodeType":"EnumValue","src":"324:5:23"},{"id":4534,"name":"Ceil","nameLocation":"367:4:23","nodeType":"EnumValue","src":"367:4:23"},{"id":4535,"name":"Trunc","nameLocation":"409:5:23","nodeType":"EnumValue","src":"409:5:23"},{"id":4536,"name":"Expand","nameLocation":"439:6:23","nodeType":"EnumValue","src":"439:6:23"}],"name":"Rounding","nameLocation":"305:8:23","nodeType":"EnumDefinition","src":"300:169:23"},{"body":{"id":4550,"nodeType":"Block","src":"731:112:23","statements":[{"AST":{"nodeType":"YulBlock","src":"766:71:23","statements":[{"nodeType":"YulAssignment","src":"780:16:23","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"791:1:23"},{"name":"b","nodeType":"YulIdentifier","src":"794:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:23"},"nodeType":"YulFunctionCall","src":"787:9:23"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"780:3:23"}]},{"nodeType":"YulAssignment","src":"809:18:23","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"820:3:23"},{"name":"a","nodeType":"YulIdentifier","src":"825:1:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:23"},"nodeType":"YulFunctionCall","src":"817:10:23"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"809:4:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4540,"isOffset":false,"isSlot":false,"src":"791:1:23","valueSize":1},{"declaration":4540,"isOffset":false,"isSlot":false,"src":"825:1:23","valueSize":1},{"declaration":4542,"isOffset":false,"isSlot":false,"src":"794:1:23","valueSize":1},{"declaration":4545,"isOffset":false,"isSlot":false,"src":"809:4:23","valueSize":1},{"declaration":4547,"isOffset":false,"isSlot":false,"src":"780:3:23","valueSize":1},{"declaration":4547,"isOffset":false,"isSlot":false,"src":"820:3:23","valueSize":1}],"flags":["memory-safe"],"id":4549,"nodeType":"InlineAssembly","src":"741:96:23"}]},"documentation":{"id":4538,"nodeType":"StructuredDocumentation","src":"475:163:23","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":4551,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:23","nodeType":"FunctionDefinition","parameters":{"id":4543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4540,"mutability":"mutable","name":"a","nameLocation":"667:1:23","nodeType":"VariableDeclaration","scope":4551,"src":"659:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4539,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4542,"mutability":"mutable","name":"b","nameLocation":"678:1:23","nodeType":"VariableDeclaration","scope":4551,"src":"670:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4541,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:23"},"returnParameters":{"id":4548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4545,"mutability":"mutable","name":"high","nameLocation":"712:4:23","nodeType":"VariableDeclaration","scope":4551,"src":"704:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4544,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4547,"mutability":"mutable","name":"low","nameLocation":"726:3:23","nodeType":"VariableDeclaration","scope":4551,"src":"718:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4546,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:23"},"scope":6146,"src":"643:200:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4564,"nodeType":"Block","src":"1115:462:23","statements":[{"AST":{"nodeType":"YulBlock","src":"1437:134:23","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:30:23","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1468:1:23"},{"name":"b","nodeType":"YulIdentifier","src":"1471:1:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1474:3:23"},"nodeType":"YulFunctionCall","src":"1474:6:23"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1461:6:23"},"nodeType":"YulFunctionCall","src":"1461:20:23"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1455:2:23","type":""}]},{"nodeType":"YulAssignment","src":"1494:16:23","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1505:1:23"},{"name":"b","nodeType":"YulIdentifier","src":"1508:1:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1501:3:23"},"nodeType":"YulFunctionCall","src":"1501:9:23"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"1494:3:23"}]},{"nodeType":"YulAssignment","src":"1523:38:23","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1539:2:23"},{"name":"low","nodeType":"YulIdentifier","src":"1543:3:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:23"},"nodeType":"YulFunctionCall","src":"1535:12:23"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1552:2:23"},{"name":"low","nodeType":"YulIdentifier","src":"1556:3:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1549:2:23"},"nodeType":"YulFunctionCall","src":"1549:11:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:23"},"nodeType":"YulFunctionCall","src":"1531:30:23"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"1523:4:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4554,"isOffset":false,"isSlot":false,"src":"1468:1:23","valueSize":1},{"declaration":4554,"isOffset":false,"isSlot":false,"src":"1505:1:23","valueSize":1},{"declaration":4556,"isOffset":false,"isSlot":false,"src":"1471:1:23","valueSize":1},{"declaration":4556,"isOffset":false,"isSlot":false,"src":"1508:1:23","valueSize":1},{"declaration":4559,"isOffset":false,"isSlot":false,"src":"1523:4:23","valueSize":1},{"declaration":4561,"isOffset":false,"isSlot":false,"src":"1494:3:23","valueSize":1},{"declaration":4561,"isOffset":false,"isSlot":false,"src":"1543:3:23","valueSize":1},{"declaration":4561,"isOffset":false,"isSlot":false,"src":"1556:3:23","valueSize":1}],"flags":["memory-safe"],"id":4563,"nodeType":"InlineAssembly","src":"1412:159:23"}]},"documentation":{"id":4552,"nodeType":"StructuredDocumentation","src":"849:173:23","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":4565,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:23","nodeType":"FunctionDefinition","parameters":{"id":4557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4554,"mutability":"mutable","name":"a","nameLocation":"1051:1:23","nodeType":"VariableDeclaration","scope":4565,"src":"1043:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4553,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4556,"mutability":"mutable","name":"b","nameLocation":"1062:1:23","nodeType":"VariableDeclaration","scope":4565,"src":"1054:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4555,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:23"},"returnParameters":{"id":4562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4559,"mutability":"mutable","name":"high","nameLocation":"1096:4:23","nodeType":"VariableDeclaration","scope":4565,"src":"1088:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4558,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4561,"mutability":"mutable","name":"low","nameLocation":"1110:3:23","nodeType":"VariableDeclaration","scope":4565,"src":"1102:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4560,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:23"},"scope":6146,"src":"1027:550:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4599,"nodeType":"Block","src":"1784:149:23","statements":[{"id":4598,"nodeType":"UncheckedBlock","src":"1794:133:23","statements":[{"assignments":[4578],"declarations":[{"constant":false,"id":4578,"mutability":"mutable","name":"c","nameLocation":"1826:1:23","nodeType":"VariableDeclaration","scope":4598,"src":"1818:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4577,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4582,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4579,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"1830:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4580,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"1834:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:23"},{"expression":{"id":4587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4583,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4573,"src":"1849:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4584,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"1859:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4585,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"1864:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4588,"nodeType":"ExpressionStatement","src":"1849:16:23"},{"expression":{"id":4596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4589,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"1879:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4590,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"1888:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4593,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4573,"src":"1908:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4591,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"1892:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7911_$","typeString":"type(library SafeCast)"}},"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7910,"src":"1892:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4597,"nodeType":"ExpressionStatement","src":"1879:37:23"}]}]},"documentation":{"id":4566,"nodeType":"StructuredDocumentation","src":"1583:105:23","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":4600,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:23","nodeType":"FunctionDefinition","parameters":{"id":4571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4568,"mutability":"mutable","name":"a","nameLocation":"1717:1:23","nodeType":"VariableDeclaration","scope":4600,"src":"1709:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4567,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4570,"mutability":"mutable","name":"b","nameLocation":"1728:1:23","nodeType":"VariableDeclaration","scope":4600,"src":"1720:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4569,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:23"},"returnParameters":{"id":4576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4573,"mutability":"mutable","name":"success","nameLocation":"1759:7:23","nodeType":"VariableDeclaration","scope":4600,"src":"1754:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4572,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4575,"mutability":"mutable","name":"result","nameLocation":"1776:6:23","nodeType":"VariableDeclaration","scope":4600,"src":"1768:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4574,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:23"},"scope":6146,"src":"1693:240:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4634,"nodeType":"Block","src":"2143:149:23","statements":[{"id":4633,"nodeType":"UncheckedBlock","src":"2153:133:23","statements":[{"assignments":[4613],"declarations":[{"constant":false,"id":4613,"mutability":"mutable","name":"c","nameLocation":"2185:1:23","nodeType":"VariableDeclaration","scope":4633,"src":"2177:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4612,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4617,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4614,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"2189:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4615,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"2193:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:23"},{"expression":{"id":4622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4618,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"2208:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4619,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"2218:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4620,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"2223:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4623,"nodeType":"ExpressionStatement","src":"2208:16:23"},{"expression":{"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4624,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"2238:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4625,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"2247:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4628,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"2267:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4626,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"2251:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7911_$","typeString":"type(library SafeCast)"}},"id":4627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7910,"src":"2251:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4632,"nodeType":"ExpressionStatement","src":"2238:37:23"}]}]},"documentation":{"id":4601,"nodeType":"StructuredDocumentation","src":"1939:108:23","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":4635,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:23","nodeType":"FunctionDefinition","parameters":{"id":4606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4603,"mutability":"mutable","name":"a","nameLocation":"2076:1:23","nodeType":"VariableDeclaration","scope":4635,"src":"2068:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4602,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4605,"mutability":"mutable","name":"b","nameLocation":"2087:1:23","nodeType":"VariableDeclaration","scope":4635,"src":"2079:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4604,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:23"},"returnParameters":{"id":4611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4608,"mutability":"mutable","name":"success","nameLocation":"2118:7:23","nodeType":"VariableDeclaration","scope":4635,"src":"2113:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4607,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4610,"mutability":"mutable","name":"result","nameLocation":"2135:6:23","nodeType":"VariableDeclaration","scope":4635,"src":"2127:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4609,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:23"},"scope":6146,"src":"2052:240:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4664,"nodeType":"Block","src":"2505:391:23","statements":[{"id":4663,"nodeType":"UncheckedBlock","src":"2515:375:23","statements":[{"assignments":[4648],"declarations":[{"constant":false,"id":4648,"mutability":"mutable","name":"c","nameLocation":"2547:1:23","nodeType":"VariableDeclaration","scope":4663,"src":"2539:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4647,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4652,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4649,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"2551:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4650,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"2555:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:23"},{"AST":{"nodeType":"YulBlock","src":"2595:188:23","statements":[{"nodeType":"YulAssignment","src":"2727:42:23","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nodeType":"YulIdentifier","src":"2748:1:23"},{"name":"a","nodeType":"YulIdentifier","src":"2751:1:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2744:3:23"},"nodeType":"YulFunctionCall","src":"2744:9:23"},{"name":"b","nodeType":"YulIdentifier","src":"2755:1:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:23"},"nodeType":"YulFunctionCall","src":"2741:16:23"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2766:1:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2759:6:23"},"nodeType":"YulFunctionCall","src":"2759:9:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:23"},"nodeType":"YulFunctionCall","src":"2738:31:23"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2727:7:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4638,"isOffset":false,"isSlot":false,"src":"2751:1:23","valueSize":1},{"declaration":4638,"isOffset":false,"isSlot":false,"src":"2766:1:23","valueSize":1},{"declaration":4640,"isOffset":false,"isSlot":false,"src":"2755:1:23","valueSize":1},{"declaration":4648,"isOffset":false,"isSlot":false,"src":"2748:1:23","valueSize":1},{"declaration":4643,"isOffset":false,"isSlot":false,"src":"2727:7:23","valueSize":1}],"flags":["memory-safe"],"id":4653,"nodeType":"InlineAssembly","src":"2570:213:23"},{"expression":{"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4654,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"2842:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4655,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"2851:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4658,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4643,"src":"2871:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4656,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"2855:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7911_$","typeString":"type(library SafeCast)"}},"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7910,"src":"2855:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4662,"nodeType":"ExpressionStatement","src":"2842:37:23"}]}]},"documentation":{"id":4636,"nodeType":"StructuredDocumentation","src":"2298:111:23","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":4665,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:23","nodeType":"FunctionDefinition","parameters":{"id":4641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4638,"mutability":"mutable","name":"a","nameLocation":"2438:1:23","nodeType":"VariableDeclaration","scope":4665,"src":"2430:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4637,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4640,"mutability":"mutable","name":"b","nameLocation":"2449:1:23","nodeType":"VariableDeclaration","scope":4665,"src":"2441:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4639,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:23"},"returnParameters":{"id":4646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4643,"mutability":"mutable","name":"success","nameLocation":"2480:7:23","nodeType":"VariableDeclaration","scope":4665,"src":"2475:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4642,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4645,"mutability":"mutable","name":"result","nameLocation":"2497:6:23","nodeType":"VariableDeclaration","scope":4665,"src":"2489:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4644,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:23"},"scope":6146,"src":"2414:482:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4685,"nodeType":"Block","src":"3111:231:23","statements":[{"id":4684,"nodeType":"UncheckedBlock","src":"3121:215:23","statements":[{"expression":{"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4677,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4673,"src":"3145:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4678,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"3155:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4682,"nodeType":"ExpressionStatement","src":"3145:15:23"},{"AST":{"nodeType":"YulBlock","src":"3199:127:23","statements":[{"nodeType":"YulAssignment","src":"3293:19:23","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3307:1:23"},{"name":"b","nodeType":"YulIdentifier","src":"3310:1:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3303:3:23"},"nodeType":"YulFunctionCall","src":"3303:9:23"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3293:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4668,"isOffset":false,"isSlot":false,"src":"3307:1:23","valueSize":1},{"declaration":4670,"isOffset":false,"isSlot":false,"src":"3310:1:23","valueSize":1},{"declaration":4675,"isOffset":false,"isSlot":false,"src":"3293:6:23","valueSize":1}],"flags":["memory-safe"],"id":4683,"nodeType":"InlineAssembly","src":"3174:152:23"}]}]},"documentation":{"id":4666,"nodeType":"StructuredDocumentation","src":"2902:113:23","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":4686,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:23","nodeType":"FunctionDefinition","parameters":{"id":4671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4668,"mutability":"mutable","name":"a","nameLocation":"3044:1:23","nodeType":"VariableDeclaration","scope":4686,"src":"3036:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4667,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4670,"mutability":"mutable","name":"b","nameLocation":"3055:1:23","nodeType":"VariableDeclaration","scope":4686,"src":"3047:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4669,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:23"},"returnParameters":{"id":4676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4673,"mutability":"mutable","name":"success","nameLocation":"3086:7:23","nodeType":"VariableDeclaration","scope":4686,"src":"3081:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4672,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4675,"mutability":"mutable","name":"result","nameLocation":"3103:6:23","nodeType":"VariableDeclaration","scope":4686,"src":"3095:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4674,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:23"},"scope":6146,"src":"3020:322:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4706,"nodeType":"Block","src":"3567:231:23","statements":[{"id":4705,"nodeType":"UncheckedBlock","src":"3577:215:23","statements":[{"expression":{"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4698,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4694,"src":"3601:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4699,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"3611:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4703,"nodeType":"ExpressionStatement","src":"3601:15:23"},{"AST":{"nodeType":"YulBlock","src":"3655:127:23","statements":[{"nodeType":"YulAssignment","src":"3749:19:23","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3763:1:23"},{"name":"b","nodeType":"YulIdentifier","src":"3766:1:23"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3759:3:23"},"nodeType":"YulFunctionCall","src":"3759:9:23"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3749:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4689,"isOffset":false,"isSlot":false,"src":"3763:1:23","valueSize":1},{"declaration":4691,"isOffset":false,"isSlot":false,"src":"3766:1:23","valueSize":1},{"declaration":4696,"isOffset":false,"isSlot":false,"src":"3749:6:23","valueSize":1}],"flags":["memory-safe"],"id":4704,"nodeType":"InlineAssembly","src":"3630:152:23"}]}]},"documentation":{"id":4687,"nodeType":"StructuredDocumentation","src":"3348:123:23","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":4707,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:23","nodeType":"FunctionDefinition","parameters":{"id":4692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4689,"mutability":"mutable","name":"a","nameLocation":"3500:1:23","nodeType":"VariableDeclaration","scope":4707,"src":"3492:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4688,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4691,"mutability":"mutable","name":"b","nameLocation":"3511:1:23","nodeType":"VariableDeclaration","scope":4707,"src":"3503:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4690,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:23"},"returnParameters":{"id":4697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4694,"mutability":"mutable","name":"success","nameLocation":"3542:7:23","nodeType":"VariableDeclaration","scope":4707,"src":"3537:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4693,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4696,"mutability":"mutable","name":"result","nameLocation":"3559:6:23","nodeType":"VariableDeclaration","scope":4707,"src":"3551:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4695,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:23"},"scope":6146,"src":"3476:322:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4736,"nodeType":"Block","src":"3989:122:23","statements":[{"assignments":[4718,4720],"declarations":[{"constant":false,"id":4718,"mutability":"mutable","name":"success","nameLocation":"4005:7:23","nodeType":"VariableDeclaration","scope":4736,"src":"4000:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4717,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4720,"mutability":"mutable","name":"result","nameLocation":"4022:6:23","nodeType":"VariableDeclaration","scope":4736,"src":"4014:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4719,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4725,"initialValue":{"arguments":[{"id":4722,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"4039:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4723,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"4042:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4721,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"4032:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:23"},{"expression":{"arguments":[{"id":4727,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"4069:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4728,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"4078:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4730,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4729,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:23","memberName":"max","nodeType":"MemberAccess","src":"4086:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4726,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4814,"src":"4061:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4716,"id":4735,"nodeType":"Return","src":"4054:50:23"}]},"documentation":{"id":4708,"nodeType":"StructuredDocumentation","src":"3804:103:23","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4737,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:23","nodeType":"FunctionDefinition","parameters":{"id":4713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4710,"mutability":"mutable","name":"a","nameLocation":"3943:1:23","nodeType":"VariableDeclaration","scope":4737,"src":"3935:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4709,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4712,"mutability":"mutable","name":"b","nameLocation":"3954:1:23","nodeType":"VariableDeclaration","scope":4737,"src":"3946:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4711,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:23"},"returnParameters":{"id":4716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4737,"src":"3980:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4714,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:23"},"scope":6146,"src":"3912:199:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4756,"nodeType":"Block","src":"4294:73:23","statements":[{"assignments":[null,4748],"declarations":[null,{"constant":false,"id":4748,"mutability":"mutable","name":"result","nameLocation":"4315:6:23","nodeType":"VariableDeclaration","scope":4756,"src":"4307:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4747,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4753,"initialValue":{"arguments":[{"id":4750,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4740,"src":"4332:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4751,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4742,"src":"4335:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4749,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"4325:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:23"},{"expression":{"id":4754,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4748,"src":"4354:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4746,"id":4755,"nodeType":"Return","src":"4347:13:23"}]},"documentation":{"id":4738,"nodeType":"StructuredDocumentation","src":"4117:95:23","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":4757,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:23","nodeType":"FunctionDefinition","parameters":{"id":4743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4740,"mutability":"mutable","name":"a","nameLocation":"4248:1:23","nodeType":"VariableDeclaration","scope":4757,"src":"4240:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4739,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4742,"mutability":"mutable","name":"b","nameLocation":"4259:1:23","nodeType":"VariableDeclaration","scope":4757,"src":"4251:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4741,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:23"},"returnParameters":{"id":4746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4757,"src":"4285:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4744,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:23"},"scope":6146,"src":"4217:150:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4786,"nodeType":"Block","src":"4564:122:23","statements":[{"assignments":[4768,4770],"declarations":[{"constant":false,"id":4768,"mutability":"mutable","name":"success","nameLocation":"4580:7:23","nodeType":"VariableDeclaration","scope":4786,"src":"4575:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4767,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4770,"mutability":"mutable","name":"result","nameLocation":"4597:6:23","nodeType":"VariableDeclaration","scope":4786,"src":"4589:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4769,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4775,"initialValue":{"arguments":[{"id":4772,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"4614:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4773,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"4617:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4771,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"4607:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:23"},{"expression":{"arguments":[{"id":4777,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4768,"src":"4644:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4778,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4770,"src":"4653:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4780,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4779,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:23","memberName":"max","nodeType":"MemberAccess","src":"4661:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4776,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4814,"src":"4636:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4766,"id":4785,"nodeType":"Return","src":"4629:50:23"}]},"documentation":{"id":4758,"nodeType":"StructuredDocumentation","src":"4373:109:23","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4787,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:23","nodeType":"FunctionDefinition","parameters":{"id":4763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4760,"mutability":"mutable","name":"a","nameLocation":"4518:1:23","nodeType":"VariableDeclaration","scope":4787,"src":"4510:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4759,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4762,"mutability":"mutable","name":"b","nameLocation":"4529:1:23","nodeType":"VariableDeclaration","scope":4787,"src":"4521:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4761,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:23"},"returnParameters":{"id":4766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4787,"src":"4555:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4764,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:23"},"scope":6146,"src":"4487:199:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4813,"nodeType":"Block","src":"5158:207:23","statements":[{"id":4812,"nodeType":"UncheckedBlock","src":"5168:191:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4799,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4794,"src":"5306:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4800,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"5312:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4801,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4794,"src":"5316:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4803,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4806,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4790,"src":"5337:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4804,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"5321:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7911_$","typeString":"type(library SafeCast)"}},"id":4805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7910,"src":"5321:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4809,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4798,"id":4811,"nodeType":"Return","src":"5299:49:23"}]}]},"documentation":{"id":4788,"nodeType":"StructuredDocumentation","src":"4692:374:23","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":4814,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:23","nodeType":"FunctionDefinition","parameters":{"id":4795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4790,"mutability":"mutable","name":"condition","nameLocation":"5093:9:23","nodeType":"VariableDeclaration","scope":4814,"src":"5088:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4789,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4792,"mutability":"mutable","name":"a","nameLocation":"5112:1:23","nodeType":"VariableDeclaration","scope":4814,"src":"5104:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4791,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4794,"mutability":"mutable","name":"b","nameLocation":"5123:1:23","nodeType":"VariableDeclaration","scope":4814,"src":"5115:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4793,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:23"},"returnParameters":{"id":4798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4814,"src":"5149:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4796,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:23"},"scope":6146,"src":"5071:294:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4832,"nodeType":"Block","src":"5502:44:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4825,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"5527:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4826,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"5531:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4828,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"5534:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4829,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"5537:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4824,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4814,"src":"5519:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4823,"id":4831,"nodeType":"Return","src":"5512:27:23"}]},"documentation":{"id":4815,"nodeType":"StructuredDocumentation","src":"5371:59:23","text":" @dev Returns the largest of two numbers."},"id":4833,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:23","nodeType":"FunctionDefinition","parameters":{"id":4820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4817,"mutability":"mutable","name":"a","nameLocation":"5456:1:23","nodeType":"VariableDeclaration","scope":4833,"src":"5448:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4816,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4819,"mutability":"mutable","name":"b","nameLocation":"5467:1:23","nodeType":"VariableDeclaration","scope":4833,"src":"5459:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4818,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:23"},"returnParameters":{"id":4823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4833,"src":"5493:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4821,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:23"},"scope":6146,"src":"5435:111:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4851,"nodeType":"Block","src":"5684:44:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4844,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4836,"src":"5709:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4845,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"5713:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4847,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4836,"src":"5716:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4848,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"5719:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4843,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4814,"src":"5701:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4842,"id":4850,"nodeType":"Return","src":"5694:27:23"}]},"documentation":{"id":4834,"nodeType":"StructuredDocumentation","src":"5552:60:23","text":" @dev Returns the smallest of two numbers."},"id":4852,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:23","nodeType":"FunctionDefinition","parameters":{"id":4839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4836,"mutability":"mutable","name":"a","nameLocation":"5638:1:23","nodeType":"VariableDeclaration","scope":4852,"src":"5630:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4835,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4838,"mutability":"mutable","name":"b","nameLocation":"5649:1:23","nodeType":"VariableDeclaration","scope":4852,"src":"5641:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4837,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:23"},"returnParameters":{"id":4842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4852,"src":"5675:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4840,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:23"},"scope":6146,"src":"5617:111:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4874,"nodeType":"Block","src":"5912:82:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4862,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"5967:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4863,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"5971:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4865,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4866,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"5977:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4867,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"5981:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4869,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4861,"id":4873,"nodeType":"Return","src":"5959:28:23"}]},"documentation":{"id":4853,"nodeType":"StructuredDocumentation","src":"5734:102:23","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4875,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:23","nodeType":"FunctionDefinition","parameters":{"id":4858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4855,"mutability":"mutable","name":"a","nameLocation":"5866:1:23","nodeType":"VariableDeclaration","scope":4875,"src":"5858:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4854,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4857,"mutability":"mutable","name":"b","nameLocation":"5877:1:23","nodeType":"VariableDeclaration","scope":4875,"src":"5869:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4856,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:23"},"returnParameters":{"id":4861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4875,"src":"5903:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4859,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:23"},"scope":6146,"src":"5841:153:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4915,"nodeType":"Block","src":"6286:633:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4885,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"6300:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4896,"nodeType":"IfStatement","src":"6296:150:23","trueBody":{"id":4895,"nodeType":"Block","src":"6308:138:23","statements":[{"expression":{"arguments":[{"expression":{"id":4891,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"6412:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2052_$","typeString":"type(library Panic)"}},"id":4892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:23","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2019,"src":"6412:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4888,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"6400:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2052_$","typeString":"type(library Panic)"}},"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:23","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2051,"src":"6400:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4894,"nodeType":"ExpressionStatement","src":"6400:35:23"}]}},{"id":4914,"nodeType":"UncheckedBlock","src":"6829:84:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4899,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"6876:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4897,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"6860:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7911_$","typeString":"type(library SafeCast)"}},"id":4898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7910,"src":"6860:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4903,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"6887:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4906,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4907,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"6896:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4911,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4884,"id":4913,"nodeType":"Return","src":"6853:49:23"}]}]},"documentation":{"id":4876,"nodeType":"StructuredDocumentation","src":"6000:210:23","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4916,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:23","nodeType":"FunctionDefinition","parameters":{"id":4881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4878,"mutability":"mutable","name":"a","nameLocation":"6240:1:23","nodeType":"VariableDeclaration","scope":4916,"src":"6232:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4877,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4880,"mutability":"mutable","name":"b","nameLocation":"6251:1:23","nodeType":"VariableDeclaration","scope":4916,"src":"6243:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4879,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:23"},"returnParameters":{"id":4884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4916,"src":"6277:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4882,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:23"},"scope":6146,"src":"6215:704:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5051,"nodeType":"Block","src":"7340:3585:23","statements":[{"id":5050,"nodeType":"UncheckedBlock","src":"7350:3569:23","statements":[{"assignments":[4929,4931],"declarations":[{"constant":false,"id":4929,"mutability":"mutable","name":"high","nameLocation":"7383:4:23","nodeType":"VariableDeclaration","scope":5050,"src":"7375:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4928,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4931,"mutability":"mutable","name":"low","nameLocation":"7397:3:23","nodeType":"VariableDeclaration","scope":5050,"src":"7389:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4930,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4936,"initialValue":{"arguments":[{"id":4933,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"7411:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4934,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"7414:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4932,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"7404:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4937,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"7498:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4945,"nodeType":"IfStatement","src":"7494:365:23","trueBody":{"id":4944,"nodeType":"Block","src":"7509:350:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4940,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4931,"src":"7827:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4941,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"7833:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4927,"id":4943,"nodeType":"Return","src":"7820:24:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4946,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"7969:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4947,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"7984:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4964,"nodeType":"IfStatement","src":"7965:142:23","trueBody":{"id":4963,"nodeType":"Block","src":"7990:117:23","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4953,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"8028:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4956,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"8046:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2052_$","typeString":"type(library Panic)"}},"id":4957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:23","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2019,"src":"8046:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4958,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"8070:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2052_$","typeString":"type(library Panic)"}},"id":4959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:23","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2015,"src":"8070:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4952,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4814,"src":"8020:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4949,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"8008:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2052_$","typeString":"type(library Panic)"}},"id":4951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:23","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2051,"src":"8008:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4962,"nodeType":"ExpressionStatement","src":"8008:84:23"}]}},{"assignments":[4966],"declarations":[{"constant":false,"id":4966,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:23","nodeType":"VariableDeclaration","scope":5050,"src":"8359:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4965,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4967,"nodeType":"VariableDeclarationStatement","src":"8359:17:23"},{"AST":{"nodeType":"YulBlock","src":"8415:283:23","statements":[{"nodeType":"YulAssignment","src":"8484:38:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8504:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"8507:1:23"},{"name":"denominator","nodeType":"YulIdentifier","src":"8510:11:23"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"8497:6:23"},"nodeType":"YulFunctionCall","src":"8497:25:23"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"8484:9:23"}]},{"nodeType":"YulAssignment","src":"8604:37:23","value":{"arguments":[{"name":"high","nodeType":"YulIdentifier","src":"8616:4:23"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"8625:9:23"},{"name":"low","nodeType":"YulIdentifier","src":"8636:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8622:2:23"},"nodeType":"YulFunctionCall","src":"8622:18:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:23"},"nodeType":"YulFunctionCall","src":"8612:29:23"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"8604:4:23"}]},{"nodeType":"YulAssignment","src":"8658:26:23","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"8669:3:23"},{"name":"remainder","nodeType":"YulIdentifier","src":"8674:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8665:3:23"},"nodeType":"YulFunctionCall","src":"8665:19:23"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"8658:3:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4923,"isOffset":false,"isSlot":false,"src":"8510:11:23","valueSize":1},{"declaration":4929,"isOffset":false,"isSlot":false,"src":"8604:4:23","valueSize":1},{"declaration":4929,"isOffset":false,"isSlot":false,"src":"8616:4:23","valueSize":1},{"declaration":4931,"isOffset":false,"isSlot":false,"src":"8636:3:23","valueSize":1},{"declaration":4931,"isOffset":false,"isSlot":false,"src":"8658:3:23","valueSize":1},{"declaration":4931,"isOffset":false,"isSlot":false,"src":"8669:3:23","valueSize":1},{"declaration":4966,"isOffset":false,"isSlot":false,"src":"8484:9:23","valueSize":1},{"declaration":4966,"isOffset":false,"isSlot":false,"src":"8625:9:23","valueSize":1},{"declaration":4966,"isOffset":false,"isSlot":false,"src":"8674:9:23","valueSize":1},{"declaration":4919,"isOffset":false,"isSlot":false,"src":"8504:1:23","valueSize":1},{"declaration":4921,"isOffset":false,"isSlot":false,"src":"8507:1:23","valueSize":1}],"flags":["memory-safe"],"id":4968,"nodeType":"InlineAssembly","src":"8390:308:23"},{"assignments":[4970],"declarations":[{"constant":false,"id":4970,"mutability":"mutable","name":"twos","nameLocation":"8910:4:23","nodeType":"VariableDeclaration","scope":5050,"src":"8902:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4969,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4977,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4971,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"8917:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4973,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"8936:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4975,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:23"},{"AST":{"nodeType":"YulBlock","src":"8987:359:23","statements":[{"nodeType":"YulAssignment","src":"9052:37:23","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"9071:11:23"},{"name":"twos","nodeType":"YulIdentifier","src":"9084:4:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9067:3:23"},"nodeType":"YulFunctionCall","src":"9067:22:23"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"9052:11:23"}]},{"nodeType":"YulAssignment","src":"9153:21:23","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"9164:3:23"},{"name":"twos","nodeType":"YulIdentifier","src":"9169:4:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9160:3:23"},"nodeType":"YulFunctionCall","src":"9160:14:23"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"9153:3:23"}]},{"nodeType":"YulAssignment","src":"9293:39:23","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9313:1:23","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"9316:4:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9309:3:23"},"nodeType":"YulFunctionCall","src":"9309:12:23"},{"name":"twos","nodeType":"YulIdentifier","src":"9323:4:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9305:3:23"},"nodeType":"YulFunctionCall","src":"9305:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:23"},"nodeType":"YulFunctionCall","src":"9301:31:23"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"9293:4:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4923,"isOffset":false,"isSlot":false,"src":"9052:11:23","valueSize":1},{"declaration":4923,"isOffset":false,"isSlot":false,"src":"9071:11:23","valueSize":1},{"declaration":4931,"isOffset":false,"isSlot":false,"src":"9153:3:23","valueSize":1},{"declaration":4931,"isOffset":false,"isSlot":false,"src":"9164:3:23","valueSize":1},{"declaration":4970,"isOffset":false,"isSlot":false,"src":"9084:4:23","valueSize":1},{"declaration":4970,"isOffset":false,"isSlot":false,"src":"9169:4:23","valueSize":1},{"declaration":4970,"isOffset":false,"isSlot":false,"src":"9293:4:23","valueSize":1},{"declaration":4970,"isOffset":false,"isSlot":false,"src":"9316:4:23","valueSize":1},{"declaration":4970,"isOffset":false,"isSlot":false,"src":"9323:4:23","valueSize":1}],"flags":["memory-safe"],"id":4978,"nodeType":"InlineAssembly","src":"8962:384:23"},{"expression":{"id":4983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4979,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4931,"src":"9409:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4980,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"9416:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4981,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"9423:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4984,"nodeType":"ExpressionStatement","src":"9409:18:23"},{"assignments":[4986],"declarations":[{"constant":false,"id":4986,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:23","nodeType":"VariableDeclaration","scope":5050,"src":"9762:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4985,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4993,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4988,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"9785:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4990,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:23"},{"expression":{"id":5000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4994,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"10018:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4996,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"10033:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4997,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"10047:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5001,"nodeType":"ExpressionStatement","src":"10018:36:23"},{"expression":{"id":5008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5002,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"10088:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5004,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"10103:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5005,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"10117:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5009,"nodeType":"ExpressionStatement","src":"10088:36:23"},{"expression":{"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5010,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"10160:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5012,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"10175:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5013,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"10189:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5017,"nodeType":"ExpressionStatement","src":"10160:36:23"},{"expression":{"id":5024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5018,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"10231:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5020,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"10246:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5021,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"10260:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5025,"nodeType":"ExpressionStatement","src":"10231:36:23"},{"expression":{"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5026,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"10304:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5028,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"10319:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5029,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"10333:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5033,"nodeType":"ExpressionStatement","src":"10304:36:23"},{"expression":{"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5034,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"10378:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5036,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"10393:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5037,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"10407:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5041,"nodeType":"ExpressionStatement","src":"10378:36:23"},{"expression":{"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5042,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4926,"src":"10859:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5043,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4931,"src":"10868:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5044,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"10874:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5047,"nodeType":"ExpressionStatement","src":"10859:22:23"},{"expression":{"id":5048,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4926,"src":"10902:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4927,"id":5049,"nodeType":"Return","src":"10895:13:23"}]}]},"documentation":{"id":4917,"nodeType":"StructuredDocumentation","src":"6925:312:23","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":5052,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:23","nodeType":"FunctionDefinition","parameters":{"id":4924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4919,"mutability":"mutable","name":"x","nameLocation":"7266:1:23","nodeType":"VariableDeclaration","scope":5052,"src":"7258:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4918,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4921,"mutability":"mutable","name":"y","nameLocation":"7277:1:23","nodeType":"VariableDeclaration","scope":5052,"src":"7269:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4920,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4923,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:23","nodeType":"VariableDeclaration","scope":5052,"src":"7280:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4922,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:23"},"returnParameters":{"id":4927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4926,"mutability":"mutable","name":"result","nameLocation":"7332:6:23","nodeType":"VariableDeclaration","scope":5052,"src":"7324:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4925,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:23"},"scope":6146,"src":"7242:3683:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5088,"nodeType":"Block","src":"11164:128:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5068,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5055,"src":"11188:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5069,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"11191:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5070,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5059,"src":"11194:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5067,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[5052,5089],"referencedDeclaration":5052,"src":"11181:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5075,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5062,"src":"11242:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4537","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4537","typeString":"enum Math.Rounding"}],"id":5074,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6145,"src":"11225:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4537_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5078,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5055,"src":"11262:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5079,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"11265:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5080,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5059,"src":"11268:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5077,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:23","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5072,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"11209:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7911_$","typeString":"type(library SafeCast)"}},"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7910,"src":"11209:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5066,"id":5087,"nodeType":"Return","src":"11174:111:23"}]},"documentation":{"id":5053,"nodeType":"StructuredDocumentation","src":"10931:118:23","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":5089,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:23","nodeType":"FunctionDefinition","parameters":{"id":5063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5055,"mutability":"mutable","name":"x","nameLocation":"11078:1:23","nodeType":"VariableDeclaration","scope":5089,"src":"11070:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5054,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5057,"mutability":"mutable","name":"y","nameLocation":"11089:1:23","nodeType":"VariableDeclaration","scope":5089,"src":"11081:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5056,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5059,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:23","nodeType":"VariableDeclaration","scope":5089,"src":"11092:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5058,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5062,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:23","nodeType":"VariableDeclaration","scope":5089,"src":"11113:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4537","typeString":"enum Math.Rounding"},"typeName":{"id":5061,"nodeType":"UserDefinedTypeName","pathNode":{"id":5060,"name":"Rounding","nameLocations":["11113:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4537,"src":"11113:8:23"},"referencedDeclaration":4537,"src":"11113:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4537","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:23"},"returnParameters":{"id":5066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5089,"src":"11155:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5064,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:23"},"scope":6146,"src":"11054:238:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5138,"nodeType":"Block","src":"11500:245:23","statements":[{"id":5137,"nodeType":"UncheckedBlock","src":"11510:229:23","statements":[{"assignments":[5102,5104],"declarations":[{"constant":false,"id":5102,"mutability":"mutable","name":"high","nameLocation":"11543:4:23","nodeType":"VariableDeclaration","scope":5137,"src":"11535:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5101,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5104,"mutability":"mutable","name":"low","nameLocation":"11557:3:23","nodeType":"VariableDeclaration","scope":5137,"src":"11549:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5103,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5109,"initialValue":{"arguments":[{"id":5106,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"11571:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5107,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"11574:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5105,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"11564:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5110,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"11594:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5112,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5096,"src":"11607:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5123,"nodeType":"IfStatement","src":"11590:86:23","trueBody":{"id":5122,"nodeType":"Block","src":"11610:66:23","statements":[{"expression":{"arguments":[{"expression":{"id":5118,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"11640:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2052_$","typeString":"type(library Panic)"}},"id":5119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:23","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2015,"src":"11640:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5115,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"11628:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2052_$","typeString":"type(library Panic)"}},"id":5117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:23","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2051,"src":"11628:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5121,"nodeType":"ExpressionStatement","src":"11628:33:23"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5124,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"11697:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":5127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":5125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:23","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5126,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5096,"src":"11712:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":5128,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5130,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5131,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"11719:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5132,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5096,"src":"11726:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5134,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5100,"id":5136,"nodeType":"Return","src":"11689:39:23"}]}]},"documentation":{"id":5090,"nodeType":"StructuredDocumentation","src":"11298:111:23","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":5139,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:23","nodeType":"FunctionDefinition","parameters":{"id":5097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5092,"mutability":"mutable","name":"x","nameLocation":"11438:1:23","nodeType":"VariableDeclaration","scope":5139,"src":"11430:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5091,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5094,"mutability":"mutable","name":"y","nameLocation":"11449:1:23","nodeType":"VariableDeclaration","scope":5139,"src":"11441:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5093,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5096,"mutability":"mutable","name":"n","nameLocation":"11458:1:23","nodeType":"VariableDeclaration","scope":5139,"src":"11452:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5095,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:23"},"returnParameters":{"id":5100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5099,"mutability":"mutable","name":"result","nameLocation":"11492:6:23","nodeType":"VariableDeclaration","scope":5139,"src":"11484:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5098,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:23"},"scope":6146,"src":"11414:331:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5177,"nodeType":"Block","src":"11963:113:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5155,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5142,"src":"11987:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5156,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"11990:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5157,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"11993:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":5154,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[5139,5178],"referencedDeclaration":5139,"src":"11980:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5162,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5149,"src":"12031:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4537","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4537","typeString":"enum Math.Rounding"}],"id":5161,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6145,"src":"12014:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4537_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5165,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5142,"src":"12051:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5166,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"12054:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5168,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"12062:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5164,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:23","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5159,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"11998:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7911_$","typeString":"type(library SafeCast)"}},"id":5160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7910,"src":"11998:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5153,"id":5176,"nodeType":"Return","src":"11973:96:23"}]},"documentation":{"id":5140,"nodeType":"StructuredDocumentation","src":"11751:109:23","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":5178,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:23","nodeType":"FunctionDefinition","parameters":{"id":5150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5142,"mutability":"mutable","name":"x","nameLocation":"11889:1:23","nodeType":"VariableDeclaration","scope":5178,"src":"11881:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5141,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5144,"mutability":"mutable","name":"y","nameLocation":"11900:1:23","nodeType":"VariableDeclaration","scope":5178,"src":"11892:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5143,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5146,"mutability":"mutable","name":"n","nameLocation":"11909:1:23","nodeType":"VariableDeclaration","scope":5178,"src":"11903:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5145,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5149,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:23","nodeType":"VariableDeclaration","scope":5178,"src":"11912:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4537","typeString":"enum Math.Rounding"},"typeName":{"id":5148,"nodeType":"UserDefinedTypeName","pathNode":{"id":5147,"name":"Rounding","nameLocations":["11912:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4537,"src":"11912:8:23"},"referencedDeclaration":4537,"src":"11912:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4537","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:23"},"returnParameters":{"id":5153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5178,"src":"11954:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5151,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:23"},"scope":6146,"src":"11865:211:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5274,"nodeType":"Block","src":"12710:1849:23","statements":[{"id":5273,"nodeType":"UncheckedBlock","src":"12720:1833:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5188,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"12748:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5193,"nodeType":"IfStatement","src":"12744:20:23","trueBody":{"expression":{"hexValue":"30","id":5191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5187,"id":5192,"nodeType":"Return","src":"12756:8:23"}},{"assignments":[5195],"declarations":[{"constant":false,"id":5195,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:23","nodeType":"VariableDeclaration","scope":5273,"src":"13235:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5194,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5199,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5196,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"13255:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":5197,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"13259:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:23"},{"assignments":[5201],"declarations":[{"constant":false,"id":5201,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:23","nodeType":"VariableDeclaration","scope":5273,"src":"13274:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5200,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5203,"initialValue":{"id":5202,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"13288:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:23"},{"assignments":[5205],"declarations":[{"constant":false,"id":5205,"mutability":"mutable","name":"x","nameLocation":"13432:1:23","nodeType":"VariableDeclaration","scope":5273,"src":"13425:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5204,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5207,"initialValue":{"hexValue":"30","id":5206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:23"},{"assignments":[5209],"declarations":[{"constant":false,"id":5209,"mutability":"mutable","name":"y","nameLocation":"13458:1:23","nodeType":"VariableDeclaration","scope":5273,"src":"13451:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5208,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5211,"initialValue":{"hexValue":"31","id":5210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:23"},{"body":{"id":5248,"nodeType":"Block","src":"13501:882:23","statements":[{"assignments":[5216],"declarations":[{"constant":false,"id":5216,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:23","nodeType":"VariableDeclaration","scope":5248,"src":"13519:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5215,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5220,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5217,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5201,"src":"13538:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5218,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5195,"src":"13544:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:23"},{"expression":{"id":5231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5221,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5201,"src":"13573:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5222,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5195,"src":"13578:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5223,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5224,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5195,"src":"13678:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5225,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5201,"src":"13923:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5226,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5195,"src":"13929:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5227,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"13941:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5230,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:23","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5232,"nodeType":"ExpressionStatement","src":"13572:395:23"},{"expression":{"id":5246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5233,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"13987:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5234,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"13990:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5235,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5236,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"14072:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5237,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"14326:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5238,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"14330:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5241,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"14341:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5239,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:23","typeDescriptions":{}}},"id":5242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5245,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:23","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5247,"nodeType":"ExpressionStatement","src":"13986:382:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5212,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5195,"src":"13485:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5249,"nodeType":"WhileStatement","src":"13478:905:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5250,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5201,"src":"14401:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":5251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5255,"nodeType":"IfStatement","src":"14397:22:23","trueBody":{"expression":{"hexValue":"30","id":5253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5187,"id":5254,"nodeType":"Return","src":"14411:8:23"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5257,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"14470:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5260,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"14477:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":5264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:23","subExpression":{"id":5263,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"14490:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5261,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:23","typeDescriptions":{}}},"id":5265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5269,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"14502:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5267,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:23","typeDescriptions":{}}},"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5256,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4814,"src":"14462:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5187,"id":5272,"nodeType":"Return","src":"14455:50:23"}]}]},"documentation":{"id":5179,"nodeType":"StructuredDocumentation","src":"12082:553:23","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":5275,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:23","nodeType":"FunctionDefinition","parameters":{"id":5184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5181,"mutability":"mutable","name":"a","nameLocation":"12664:1:23","nodeType":"VariableDeclaration","scope":5275,"src":"12656:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5180,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5183,"mutability":"mutable","name":"n","nameLocation":"12675:1:23","nodeType":"VariableDeclaration","scope":5275,"src":"12667:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5182,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:23"},"returnParameters":{"id":5187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5275,"src":"12701:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5185,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:23"},"scope":6146,"src":"12640:1919:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5295,"nodeType":"Block","src":"15159:82:23","statements":[{"id":5294,"nodeType":"UncheckedBlock","src":"15169:66:23","statements":[{"expression":{"arguments":[{"id":5287,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5278,"src":"15212:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5288,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"15215:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":5289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5291,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"15222:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5285,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"15200:4:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6146_$","typeString":"type(library Math)"}},"id":5286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:23","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":5332,"src":"15200:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5284,"id":5293,"nodeType":"Return","src":"15193:31:23"}]}]},"documentation":{"id":5276,"nodeType":"StructuredDocumentation","src":"14565:514:23","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":5296,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:23","nodeType":"FunctionDefinition","parameters":{"id":5281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5278,"mutability":"mutable","name":"a","nameLocation":"15113:1:23","nodeType":"VariableDeclaration","scope":5296,"src":"15105:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5277,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5280,"mutability":"mutable","name":"p","nameLocation":"15124:1:23","nodeType":"VariableDeclaration","scope":5296,"src":"15116:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5279,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:23"},"returnParameters":{"id":5284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5296,"src":"15150:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5282,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:23"},"scope":6146,"src":"15084:157:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5331,"nodeType":"Block","src":"16011:174:23","statements":[{"assignments":[5309,5311],"declarations":[{"constant":false,"id":5309,"mutability":"mutable","name":"success","nameLocation":"16027:7:23","nodeType":"VariableDeclaration","scope":5331,"src":"16022:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5308,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5311,"mutability":"mutable","name":"result","nameLocation":"16044:6:23","nodeType":"VariableDeclaration","scope":5331,"src":"16036:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5310,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5317,"initialValue":{"arguments":[{"id":5313,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5299,"src":"16064:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5314,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5301,"src":"16067:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5315,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5303,"src":"16070:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5312,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5356,5438],"referencedDeclaration":5356,"src":"16054:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":5316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:23"},{"condition":{"id":5319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:23","subExpression":{"id":5318,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"16087:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5328,"nodeType":"IfStatement","src":"16082:74:23","trueBody":{"id":5327,"nodeType":"Block","src":"16096:60:23","statements":[{"expression":{"arguments":[{"expression":{"id":5323,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"16122:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2052_$","typeString":"type(library Panic)"}},"id":5324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:23","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2019,"src":"16122:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5320,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"16110:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2052_$","typeString":"type(library Panic)"}},"id":5322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:23","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2051,"src":"16110:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5326,"nodeType":"ExpressionStatement","src":"16110:35:23"}]}},{"expression":{"id":5329,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"16172:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5307,"id":5330,"nodeType":"Return","src":"16165:13:23"}]},"documentation":{"id":5297,"nodeType":"StructuredDocumentation","src":"15247:678:23","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":5332,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:23","nodeType":"FunctionDefinition","parameters":{"id":5304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5299,"mutability":"mutable","name":"b","nameLocation":"15954:1:23","nodeType":"VariableDeclaration","scope":5332,"src":"15946:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5298,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5301,"mutability":"mutable","name":"e","nameLocation":"15965:1:23","nodeType":"VariableDeclaration","scope":5332,"src":"15957:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5300,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5303,"mutability":"mutable","name":"m","nameLocation":"15976:1:23","nodeType":"VariableDeclaration","scope":5332,"src":"15968:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5302,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:23"},"returnParameters":{"id":5307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5306,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5332,"src":"16002:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5305,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:23"},"scope":6146,"src":"15930:255:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5355,"nodeType":"Block","src":"17039:1493:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5346,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"17053:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5353,"nodeType":"IfStatement","src":"17049:29:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5351,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5345,"id":5352,"nodeType":"Return","src":"17061:17:23"}},{"AST":{"nodeType":"YulBlock","src":"17113:1413:23","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:22:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17144:4:23","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17138:5:23"},"nodeType":"YulFunctionCall","src":"17138:11:23"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"17131:3:23","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18057:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"18062:4:23","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:23"},"nodeType":"YulFunctionCall","src":"18050:17:23"},"nodeType":"YulExpressionStatement","src":"18050:17:23"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18091:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"18096:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18087:3:23"},"nodeType":"YulFunctionCall","src":"18087:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:23","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18080:6:23"},"nodeType":"YulFunctionCall","src":"18080:28:23"},"nodeType":"YulExpressionStatement","src":"18080:28:23"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18132:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:23","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18128:3:23"},"nodeType":"YulFunctionCall","src":"18128:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"18144:4:23","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18121:6:23"},"nodeType":"YulFunctionCall","src":"18121:28:23"},"nodeType":"YulExpressionStatement","src":"18121:28:23"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18173:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"18178:4:23","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18169:3:23"},"nodeType":"YulFunctionCall","src":"18169:14:23"},{"name":"b","nodeType":"YulIdentifier","src":"18185:1:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18162:6:23"},"nodeType":"YulFunctionCall","src":"18162:25:23"},"nodeType":"YulExpressionStatement","src":"18162:25:23"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18211:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:23","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18207:3:23"},"nodeType":"YulFunctionCall","src":"18207:14:23"},{"name":"e","nodeType":"YulIdentifier","src":"18223:1:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18200:6:23"},"nodeType":"YulFunctionCall","src":"18200:25:23"},"nodeType":"YulExpressionStatement","src":"18200:25:23"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18249:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"18254:4:23","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:23"},"nodeType":"YulFunctionCall","src":"18245:14:23"},{"name":"m","nodeType":"YulIdentifier","src":"18261:1:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:23"},"nodeType":"YulFunctionCall","src":"18238:25:23"},"nodeType":"YulExpressionStatement","src":"18238:25:23"},{"nodeType":"YulAssignment","src":"18425:57:23","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"18447:3:23"},"nodeType":"YulFunctionCall","src":"18447:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:23","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"18460:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"18465:4:23","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"18471:4:23","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:23","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"18436:10:23"},"nodeType":"YulFunctionCall","src":"18436:46:23"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18425:7:23"}]},{"nodeType":"YulAssignment","src":"18495:21:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18511:4:23","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18505:5:23"},"nodeType":"YulFunctionCall","src":"18505:11:23"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18495:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5335,"isOffset":false,"isSlot":false,"src":"18185:1:23","valueSize":1},{"declaration":5337,"isOffset":false,"isSlot":false,"src":"18223:1:23","valueSize":1},{"declaration":5339,"isOffset":false,"isSlot":false,"src":"18261:1:23","valueSize":1},{"declaration":5344,"isOffset":false,"isSlot":false,"src":"18495:6:23","valueSize":1},{"declaration":5342,"isOffset":false,"isSlot":false,"src":"18425:7:23","valueSize":1}],"flags":["memory-safe"],"id":5354,"nodeType":"InlineAssembly","src":"17088:1438:23"}]},"documentation":{"id":5333,"nodeType":"StructuredDocumentation","src":"16191:738:23","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":5356,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:23","nodeType":"FunctionDefinition","parameters":{"id":5340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5335,"mutability":"mutable","name":"b","nameLocation":"16961:1:23","nodeType":"VariableDeclaration","scope":5356,"src":"16953:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5334,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5337,"mutability":"mutable","name":"e","nameLocation":"16972:1:23","nodeType":"VariableDeclaration","scope":5356,"src":"16964:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5336,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5339,"mutability":"mutable","name":"m","nameLocation":"16983:1:23","nodeType":"VariableDeclaration","scope":5356,"src":"16975:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5338,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:23"},"returnParameters":{"id":5345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5342,"mutability":"mutable","name":"success","nameLocation":"17014:7:23","nodeType":"VariableDeclaration","scope":5356,"src":"17009:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5341,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5344,"mutability":"mutable","name":"result","nameLocation":"17031:6:23","nodeType":"VariableDeclaration","scope":5356,"src":"17023:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5343,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:23"},"scope":6146,"src":"16934:1598:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5391,"nodeType":"Block","src":"18729:179:23","statements":[{"assignments":[5369,5371],"declarations":[{"constant":false,"id":5369,"mutability":"mutable","name":"success","nameLocation":"18745:7:23","nodeType":"VariableDeclaration","scope":5391,"src":"18740:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5368,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5371,"mutability":"mutable","name":"result","nameLocation":"18767:6:23","nodeType":"VariableDeclaration","scope":5391,"src":"18754:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5370,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5377,"initialValue":{"arguments":[{"id":5373,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"18787:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5374,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"18790:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5375,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5363,"src":"18793:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5372,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5356,5438],"referencedDeclaration":5438,"src":"18777:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":5376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:23"},{"condition":{"id":5379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:23","subExpression":{"id":5378,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5369,"src":"18810:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5388,"nodeType":"IfStatement","src":"18805:74:23","trueBody":{"id":5387,"nodeType":"Block","src":"18819:60:23","statements":[{"expression":{"arguments":[{"expression":{"id":5383,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"18845:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2052_$","typeString":"type(library Panic)"}},"id":5384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:23","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2019,"src":"18845:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5380,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"18833:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2052_$","typeString":"type(library Panic)"}},"id":5382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:23","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2051,"src":"18833:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5386,"nodeType":"ExpressionStatement","src":"18833:35:23"}]}},{"expression":{"id":5389,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"18895:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5367,"id":5390,"nodeType":"Return","src":"18888:13:23"}]},"documentation":{"id":5357,"nodeType":"StructuredDocumentation","src":"18538:85:23","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":5392,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:23","nodeType":"FunctionDefinition","parameters":{"id":5364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5359,"mutability":"mutable","name":"b","nameLocation":"18657:1:23","nodeType":"VariableDeclaration","scope":5392,"src":"18644:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5358,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5361,"mutability":"mutable","name":"e","nameLocation":"18673:1:23","nodeType":"VariableDeclaration","scope":5392,"src":"18660:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5360,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5363,"mutability":"mutable","name":"m","nameLocation":"18689:1:23","nodeType":"VariableDeclaration","scope":5392,"src":"18676:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5362,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:23"},"returnParameters":{"id":5367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5392,"src":"18715:12:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5365,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:23"},"scope":6146,"src":"18628:280:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5437,"nodeType":"Block","src":"19162:771:23","statements":[{"condition":{"arguments":[{"id":5407,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5399,"src":"19187:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5406,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"19176:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":5408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5416,"nodeType":"IfStatement","src":"19172:47:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:23","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5410,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":5414,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":5405,"id":5415,"nodeType":"Return","src":"19191:28:23"}},{"assignments":[5418],"declarations":[{"constant":false,"id":5418,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:23","nodeType":"VariableDeclaration","scope":5437,"src":"19230:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5417,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5421,"initialValue":{"expression":{"id":5419,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5399,"src":"19245:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:23","memberName":"length","nodeType":"MemberAccess","src":"19245:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:23"},{"expression":{"id":5434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5422,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"19335:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5425,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5395,"src":"19361:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:23","memberName":"length","nodeType":"MemberAccess","src":"19361:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5427,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5397,"src":"19371:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:23","memberName":"length","nodeType":"MemberAccess","src":"19371:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5429,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"19381:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5430,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5395,"src":"19387:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5431,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5397,"src":"19390:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5432,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5399,"src":"19393:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5423,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:23","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:23","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5435,"nodeType":"ExpressionStatement","src":"19335:60:23"},{"AST":{"nodeType":"YulBlock","src":"19431:496:23","statements":[{"nodeType":"YulVariableDeclaration","src":"19445:32:23","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19464:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:23"},"nodeType":"YulFunctionCall","src":"19460:17:23"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"19449:7:23","type":""}]},{"nodeType":"YulAssignment","src":"19567:73:23","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19589:3:23"},"nodeType":"YulFunctionCall","src":"19589:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"19596:4:23","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19602:7:23"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19617:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19611:5:23"},"nodeType":"YulFunctionCall","src":"19611:13:23"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19626:7:23"},{"name":"mLen","nodeType":"YulIdentifier","src":"19635:4:23"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"19578:10:23"},"nodeType":"YulFunctionCall","src":"19578:62:23"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19567:7:23"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19796:6:23"},{"name":"mLen","nodeType":"YulIdentifier","src":"19804:4:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:23"},"nodeType":"YulFunctionCall","src":"19789:20:23"},"nodeType":"YulExpressionStatement","src":"19789:20:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19892:4:23","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"19902:7:23"},{"name":"mLen","nodeType":"YulIdentifier","src":"19911:4:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19898:3:23"},"nodeType":"YulFunctionCall","src":"19898:18:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19885:6:23"},"nodeType":"YulFunctionCall","src":"19885:32:23"},"nodeType":"YulExpressionStatement","src":"19885:32:23"}]},"evmVersion":"paris","externalReferences":[{"declaration":5418,"isOffset":false,"isSlot":false,"src":"19635:4:23","valueSize":1},{"declaration":5418,"isOffset":false,"isSlot":false,"src":"19804:4:23","valueSize":1},{"declaration":5418,"isOffset":false,"isSlot":false,"src":"19911:4:23","valueSize":1},{"declaration":5404,"isOffset":false,"isSlot":false,"src":"19464:6:23","valueSize":1},{"declaration":5404,"isOffset":false,"isSlot":false,"src":"19617:6:23","valueSize":1},{"declaration":5404,"isOffset":false,"isSlot":false,"src":"19796:6:23","valueSize":1},{"declaration":5402,"isOffset":false,"isSlot":false,"src":"19567:7:23","valueSize":1}],"flags":["memory-safe"],"id":5436,"nodeType":"InlineAssembly","src":"19406:521:23"}]},"documentation":{"id":5393,"nodeType":"StructuredDocumentation","src":"18914:88:23","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":5438,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:23","nodeType":"FunctionDefinition","parameters":{"id":5400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5395,"mutability":"mutable","name":"b","nameLocation":"19048:1:23","nodeType":"VariableDeclaration","scope":5438,"src":"19035:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5394,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5397,"mutability":"mutable","name":"e","nameLocation":"19072:1:23","nodeType":"VariableDeclaration","scope":5438,"src":"19059:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5396,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5399,"mutability":"mutable","name":"m","nameLocation":"19096:1:23","nodeType":"VariableDeclaration","scope":5438,"src":"19083:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5398,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:23"},"returnParameters":{"id":5405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5402,"mutability":"mutable","name":"success","nameLocation":"19132:7:23","nodeType":"VariableDeclaration","scope":5438,"src":"19127:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5401,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5404,"mutability":"mutable","name":"result","nameLocation":"19154:6:23","nodeType":"VariableDeclaration","scope":5438,"src":"19141:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5403,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:23"},"scope":6146,"src":"19007:926:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5470,"nodeType":"Block","src":"20088:176:23","statements":[{"body":{"id":5466,"nodeType":"Block","src":"20145:92:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5457,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5441,"src":"20163:9:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5459,"indexExpression":{"id":5458,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5447,"src":"20173:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5465,"nodeType":"IfStatement","src":"20159:68:23","trueBody":{"id":5464,"nodeType":"Block","src":"20182:45:23","statements":[{"expression":{"hexValue":"66616c7365","id":5462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5445,"id":5463,"nodeType":"Return","src":"20200:12:23"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5450,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5447,"src":"20118:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5451,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5441,"src":"20122:9:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:23","memberName":"length","nodeType":"MemberAccess","src":"20122:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5467,"initializationExpression":{"assignments":[5447],"declarations":[{"constant":false,"id":5447,"mutability":"mutable","name":"i","nameLocation":"20111:1:23","nodeType":"VariableDeclaration","scope":5467,"src":"20103:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5446,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5449,"initialValue":{"hexValue":"30","id":5448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:23"},"loopExpression":{"expression":{"id":5455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:23","subExpression":{"id":5454,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5447,"src":"20142:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5456,"nodeType":"ExpressionStatement","src":"20140:3:23"},"nodeType":"ForStatement","src":"20098:139:23"},{"expression":{"hexValue":"74727565","id":5468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5445,"id":5469,"nodeType":"Return","src":"20246:11:23"}]},"documentation":{"id":5439,"nodeType":"StructuredDocumentation","src":"19939:72:23","text":" @dev Returns whether the provided byte array is zero."},"id":5471,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:23","nodeType":"FunctionDefinition","parameters":{"id":5442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5441,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:23","nodeType":"VariableDeclaration","scope":5471,"src":"20036:22:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5440,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:23"},"returnParameters":{"id":5445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5444,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5471,"src":"20082:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5443,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:23"},"scope":6146,"src":"20016:248:23","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5689,"nodeType":"Block","src":"20624:5124:23","statements":[{"id":5688,"nodeType":"UncheckedBlock","src":"20634:5108:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5479,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"20728:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":5480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5485,"nodeType":"IfStatement","src":"20724:53:23","trueBody":{"id":5484,"nodeType":"Block","src":"20736:41:23","statements":[{"expression":{"id":5482,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"20761:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5478,"id":5483,"nodeType":"Return","src":"20754:8:23"}]}},{"assignments":[5487],"declarations":[{"constant":false,"id":5487,"mutability":"mutable","name":"aa","nameLocation":"21712:2:23","nodeType":"VariableDeclaration","scope":5688,"src":"21704:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5486,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5489,"initialValue":{"id":5488,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"21717:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:23"},{"assignments":[5491],"declarations":[{"constant":false,"id":5491,"mutability":"mutable","name":"xn","nameLocation":"21740:2:23","nodeType":"VariableDeclaration","scope":5688,"src":"21732:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5490,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5493,"initialValue":{"hexValue":"31","id":5492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5494,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5487,"src":"21765:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:23","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5498,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:23","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5509,"nodeType":"IfStatement","src":"21761:92:23","trueBody":{"id":5508,"nodeType":"Block","src":"21783:70:23","statements":[{"expression":{"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5500,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5487,"src":"21801:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5503,"nodeType":"ExpressionStatement","src":"21801:10:23"},{"expression":{"id":5506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5504,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"21829:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":5505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5507,"nodeType":"ExpressionStatement","src":"21829:9:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5510,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5487,"src":"21870:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:23","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5514,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:23","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5525,"nodeType":"IfStatement","src":"21866:90:23","trueBody":{"id":5524,"nodeType":"Block","src":"21887:69:23","statements":[{"expression":{"id":5518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5516,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5487,"src":"21905:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5519,"nodeType":"ExpressionStatement","src":"21905:9:23"},{"expression":{"id":5522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5520,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"21932:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":5521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5523,"nodeType":"ExpressionStatement","src":"21932:9:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5526,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5487,"src":"21973:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:23","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5530,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:23","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5541,"nodeType":"IfStatement","src":"21969:90:23","trueBody":{"id":5540,"nodeType":"Block","src":"21990:69:23","statements":[{"expression":{"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5532,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5487,"src":"22008:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5535,"nodeType":"ExpressionStatement","src":"22008:9:23"},{"expression":{"id":5538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5536,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"22035:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":5537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5539,"nodeType":"ExpressionStatement","src":"22035:9:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5542,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5487,"src":"22076:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:23","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5546,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:23","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5557,"nodeType":"IfStatement","src":"22072:89:23","trueBody":{"id":5556,"nodeType":"Block","src":"22093:68:23","statements":[{"expression":{"id":5550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5548,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5487,"src":"22111:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5551,"nodeType":"ExpressionStatement","src":"22111:9:23"},{"expression":{"id":5554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5552,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"22138:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":5553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5555,"nodeType":"ExpressionStatement","src":"22138:8:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5558,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5487,"src":"22178:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:23","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5562,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:23","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5573,"nodeType":"IfStatement","src":"22174:87:23","trueBody":{"id":5572,"nodeType":"Block","src":"22194:67:23","statements":[{"expression":{"id":5566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5564,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5487,"src":"22212:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5567,"nodeType":"ExpressionStatement","src":"22212:8:23"},{"expression":{"id":5570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5568,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"22238:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":5569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5571,"nodeType":"ExpressionStatement","src":"22238:8:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5574,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5487,"src":"22278:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5578,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5589,"nodeType":"IfStatement","src":"22274:87:23","trueBody":{"id":5588,"nodeType":"Block","src":"22294:67:23","statements":[{"expression":{"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5580,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5487,"src":"22312:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5583,"nodeType":"ExpressionStatement","src":"22312:8:23"},{"expression":{"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5584,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"22338:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":5585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5587,"nodeType":"ExpressionStatement","src":"22338:8:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5590,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5487,"src":"22378:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5594,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5601,"nodeType":"IfStatement","src":"22374:61:23","trueBody":{"id":5600,"nodeType":"Block","src":"22394:41:23","statements":[{"expression":{"id":5598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5596,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"22412:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":5597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5599,"nodeType":"ExpressionStatement","src":"22412:8:23"}]}},{"expression":{"id":5609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5602,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"22855:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5604,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"22865:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5606,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5610,"nodeType":"ExpressionStatement","src":"22855:18:23"},{"expression":{"id":5620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5611,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"24760:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5612,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"24766:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5613,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"24771:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5614,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"24775:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5617,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5621,"nodeType":"ExpressionStatement","src":"24760:23:23"},{"expression":{"id":5631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5622,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"24869:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5623,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"24875:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5624,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"24880:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5625,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"24884:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5628,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5632,"nodeType":"ExpressionStatement","src":"24869:23:23"},{"expression":{"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5633,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"24980:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5634,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"24986:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5635,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"24991:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5636,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"24995:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5639,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5643,"nodeType":"ExpressionStatement","src":"24980:23:23"},{"expression":{"id":5653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5644,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"25089:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5645,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"25095:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5646,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"25100:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5647,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"25104:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5650,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5654,"nodeType":"ExpressionStatement","src":"25089:23:23"},{"expression":{"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5655,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"25199:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5656,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"25205:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5657,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"25210:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5658,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"25214:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5661,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5665,"nodeType":"ExpressionStatement","src":"25199:23:23"},{"expression":{"id":5675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5666,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"25309:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5667,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"25315:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5668,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"25320:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5669,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"25324:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5672,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5676,"nodeType":"ExpressionStatement","src":"25309:23:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5677,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"25698:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5680,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"25719:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5681,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"25724:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5682,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"25728:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5678,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"25703:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7911_$","typeString":"type(library SafeCast)"}},"id":5679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7910,"src":"25703:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5478,"id":5687,"nodeType":"Return","src":"25691:40:23"}]}]},"documentation":{"id":5472,"nodeType":"StructuredDocumentation","src":"20270:292:23","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":5690,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:23","nodeType":"FunctionDefinition","parameters":{"id":5475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5474,"mutability":"mutable","name":"a","nameLocation":"20589:1:23","nodeType":"VariableDeclaration","scope":5690,"src":"20581:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5473,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:23"},"returnParameters":{"id":5478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5690,"src":"20615:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5476,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:23"},"scope":6146,"src":"20567:5181:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5723,"nodeType":"Block","src":"25921:171:23","statements":[{"id":5722,"nodeType":"UncheckedBlock","src":"25931:155:23","statements":[{"assignments":[5702],"declarations":[{"constant":false,"id":5702,"mutability":"mutable","name":"result","nameLocation":"25963:6:23","nodeType":"VariableDeclaration","scope":5722,"src":"25955:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5701,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5706,"initialValue":{"arguments":[{"id":5704,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5693,"src":"25977:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5703,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5690,5724],"referencedDeclaration":5690,"src":"25972:4:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5707,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"26000:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5711,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"26042:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4537","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4537","typeString":"enum Math.Rounding"}],"id":5710,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6145,"src":"26025:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4537_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5713,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"26055:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5714,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"26064:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5716,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5693,"src":"26073:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5708,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"26009:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7911_$","typeString":"type(library SafeCast)"}},"id":5709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7910,"src":"26009:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5700,"id":5721,"nodeType":"Return","src":"25993:82:23"}]}]},"documentation":{"id":5691,"nodeType":"StructuredDocumentation","src":"25754:86:23","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5724,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:23","nodeType":"FunctionDefinition","parameters":{"id":5697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5693,"mutability":"mutable","name":"a","nameLocation":"25867:1:23","nodeType":"VariableDeclaration","scope":5724,"src":"25859:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5692,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5696,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:23","nodeType":"VariableDeclaration","scope":5724,"src":"25870:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4537","typeString":"enum Math.Rounding"},"typeName":{"id":5695,"nodeType":"UserDefinedTypeName","pathNode":{"id":5694,"name":"Rounding","nameLocations":["25870:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4537,"src":"25870:8:23"},"referencedDeclaration":4537,"src":"25870:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4537","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:23"},"returnParameters":{"id":5700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5724,"src":"25912:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5698,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:23"},"scope":6146,"src":"25845:247:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5814,"nodeType":"Block","src":"26281:2334:23","statements":[{"expression":{"id":5741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5732,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5730,"src":"26363:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5735,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"26383:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:23","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5733,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"26367:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7911_$","typeString":"type(library SafeCast)"}},"id":5734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7910,"src":"26367:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:23","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5742,"nodeType":"ExpressionStatement","src":"26363:64:23"},{"expression":{"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5743,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5730,"src":"26503:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5746,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"26525:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5747,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5730,"src":"26530:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5749,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:23","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5744,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"26508:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7911_$","typeString":"type(library SafeCast)"}},"id":5745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7910,"src":"26508:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:23","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5756,"nodeType":"ExpressionStatement","src":"26503:56:23"},{"expression":{"id":5769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5757,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5730,"src":"26634:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5760,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"26656:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5761,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5730,"src":"26661:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5763,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:23","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5758,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"26639:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7911_$","typeString":"type(library SafeCast)"}},"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7910,"src":"26639:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:23","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5770,"nodeType":"ExpressionStatement","src":"26634:48:23"},{"expression":{"id":5783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5771,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5730,"src":"26757:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5774,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"26779:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5775,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5730,"src":"26784:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5777,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:23","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5772,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"26762:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7911_$","typeString":"type(library SafeCast)"}},"id":5773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7910,"src":"26762:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5784,"nodeType":"ExpressionStatement","src":"26757:44:23"},{"expression":{"id":5797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5785,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5730,"src":"26874:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5788,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"26896:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5789,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5730,"src":"26901:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5791,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:23","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5786,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"26879:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7911_$","typeString":"type(library SafeCast)"}},"id":5787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7910,"src":"26879:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5798,"nodeType":"ExpressionStatement","src":"26874:42:23"},{"expression":{"id":5811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5799,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5730,"src":"26988:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5802,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"27010:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5803,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5730,"src":"27015:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5805,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":5806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:23","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5800,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"26993:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7911_$","typeString":"type(library SafeCast)"}},"id":5801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7910,"src":"26993:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5812,"nodeType":"ExpressionStatement","src":"26988:41:23"},{"AST":{"nodeType":"YulBlock","src":"28490:119:23","statements":[{"nodeType":"YulAssignment","src":"28504:95:23","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28512:1:23"},{"arguments":[{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28524:1:23"},{"name":"x","nodeType":"YulIdentifier","src":"28527:1:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28520:3:23"},"nodeType":"YulFunctionCall","src":"28520:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"28531:66:23","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"28515:4:23"},"nodeType":"YulFunctionCall","src":"28515:83:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28509:2:23"},"nodeType":"YulFunctionCall","src":"28509:90:23"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28504:1:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5730,"isOffset":false,"isSlot":false,"src":"28504:1:23","valueSize":1},{"declaration":5730,"isOffset":false,"isSlot":false,"src":"28512:1:23","valueSize":1},{"declaration":5730,"isOffset":false,"isSlot":false,"src":"28524:1:23","valueSize":1},{"declaration":5727,"isOffset":false,"isSlot":false,"src":"28527:1:23","valueSize":1}],"flags":["memory-safe"],"id":5813,"nodeType":"InlineAssembly","src":"28465:144:23"}]},"documentation":{"id":5725,"nodeType":"StructuredDocumentation","src":"26098:119:23","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5815,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:23","nodeType":"FunctionDefinition","parameters":{"id":5728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5727,"mutability":"mutable","name":"x","nameLocation":"26244:1:23","nodeType":"VariableDeclaration","scope":5815,"src":"26236:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5726,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:23"},"returnParameters":{"id":5731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5730,"mutability":"mutable","name":"r","nameLocation":"26278:1:23","nodeType":"VariableDeclaration","scope":5815,"src":"26270:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5729,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:23"},"scope":6146,"src":"26222:2393:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5848,"nodeType":"Block","src":"28848:175:23","statements":[{"id":5847,"nodeType":"UncheckedBlock","src":"28858:159:23","statements":[{"assignments":[5827],"declarations":[{"constant":false,"id":5827,"mutability":"mutable","name":"result","nameLocation":"28890:6:23","nodeType":"VariableDeclaration","scope":5847,"src":"28882:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5826,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5831,"initialValue":{"arguments":[{"id":5829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"28904:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5828,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5815,5849],"referencedDeclaration":5815,"src":"28899:4:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5832,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5827,"src":"28931:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5836,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5821,"src":"28973:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4537","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4537","typeString":"enum Math.Rounding"}],"id":5835,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6145,"src":"28956:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4537_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5839,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5827,"src":"28991:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"29000:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5833,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"28940:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7911_$","typeString":"type(library SafeCast)"}},"id":5834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7910,"src":"28940:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5825,"id":5846,"nodeType":"Return","src":"28924:82:23"}]}]},"documentation":{"id":5816,"nodeType":"StructuredDocumentation","src":"28621:142:23","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5849,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:23","nodeType":"FunctionDefinition","parameters":{"id":5822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5818,"mutability":"mutable","name":"value","nameLocation":"28790:5:23","nodeType":"VariableDeclaration","scope":5849,"src":"28782:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5817,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5821,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:23","nodeType":"VariableDeclaration","scope":5849,"src":"28797:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4537","typeString":"enum Math.Rounding"},"typeName":{"id":5820,"nodeType":"UserDefinedTypeName","pathNode":{"id":5819,"name":"Rounding","nameLocations":["28797:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4537,"src":"28797:8:23"},"referencedDeclaration":4537,"src":"28797:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4537","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:23"},"returnParameters":{"id":5825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5849,"src":"28839:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5823,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:23"},"scope":6146,"src":"28768:255:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5977,"nodeType":"Block","src":"29216:854:23","statements":[{"assignments":[5858],"declarations":[{"constant":false,"id":5858,"mutability":"mutable","name":"result","nameLocation":"29234:6:23","nodeType":"VariableDeclaration","scope":5977,"src":"29226:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5857,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5860,"initialValue":{"hexValue":"30","id":5859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:23"},{"id":5974,"nodeType":"UncheckedBlock","src":"29254:787:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"29282:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5877,"nodeType":"IfStatement","src":"29278:103:23","trueBody":{"id":5876,"nodeType":"Block","src":"29301:80:23","statements":[{"expression":{"id":5870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"29319:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5871,"nodeType":"ExpressionStatement","src":"29319:17:23"},{"expression":{"id":5874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5872,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5858,"src":"29354:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5875,"nodeType":"ExpressionStatement","src":"29354:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"29398:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5894,"nodeType":"IfStatement","src":"29394:103:23","trueBody":{"id":5893,"nodeType":"Block","src":"29417:80:23","statements":[{"expression":{"id":5887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"29435:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5888,"nodeType":"ExpressionStatement","src":"29435:17:23"},{"expression":{"id":5891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5889,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5858,"src":"29470:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5892,"nodeType":"ExpressionStatement","src":"29470:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"29514:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5911,"nodeType":"IfStatement","src":"29510:103:23","trueBody":{"id":5910,"nodeType":"Block","src":"29533:80:23","statements":[{"expression":{"id":5904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"29551:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5905,"nodeType":"ExpressionStatement","src":"29551:17:23"},{"expression":{"id":5908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5906,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5858,"src":"29586:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5909,"nodeType":"ExpressionStatement","src":"29586:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"29630:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5928,"nodeType":"IfStatement","src":"29626:100:23","trueBody":{"id":5927,"nodeType":"Block","src":"29648:78:23","statements":[{"expression":{"id":5921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"29666:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5922,"nodeType":"ExpressionStatement","src":"29666:16:23"},{"expression":{"id":5925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5923,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5858,"src":"29700:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5926,"nodeType":"ExpressionStatement","src":"29700:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"29743:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:23","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5945,"nodeType":"IfStatement","src":"29739:100:23","trueBody":{"id":5944,"nodeType":"Block","src":"29761:78:23","statements":[{"expression":{"id":5938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"29779:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:23","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5939,"nodeType":"ExpressionStatement","src":"29779:16:23"},{"expression":{"id":5942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5940,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5858,"src":"29813:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5943,"nodeType":"ExpressionStatement","src":"29813:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"29856:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:23","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5962,"nodeType":"IfStatement","src":"29852:100:23","trueBody":{"id":5961,"nodeType":"Block","src":"29874:78:23","statements":[{"expression":{"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"29892:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:23","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5956,"nodeType":"ExpressionStatement","src":"29892:16:23"},{"expression":{"id":5959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5957,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5858,"src":"29926:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5960,"nodeType":"ExpressionStatement","src":"29926:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"29969:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5973,"nodeType":"IfStatement","src":"29965:66:23","trueBody":{"id":5972,"nodeType":"Block","src":"29987:44:23","statements":[{"expression":{"id":5970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5968,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5858,"src":"30005:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5971,"nodeType":"ExpressionStatement","src":"30005:11:23"}]}}]},{"expression":{"id":5975,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5858,"src":"30057:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5856,"id":5976,"nodeType":"Return","src":"30050:13:23"}]},"documentation":{"id":5850,"nodeType":"StructuredDocumentation","src":"29029:120:23","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5978,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:23","nodeType":"FunctionDefinition","parameters":{"id":5853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5852,"mutability":"mutable","name":"value","nameLocation":"29177:5:23","nodeType":"VariableDeclaration","scope":5978,"src":"29169:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5851,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:23"},"returnParameters":{"id":5856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5978,"src":"29207:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5854,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:23"},"scope":6146,"src":"29154:916:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6011,"nodeType":"Block","src":"30305:177:23","statements":[{"id":6010,"nodeType":"UncheckedBlock","src":"30315:161:23","statements":[{"assignments":[5990],"declarations":[{"constant":false,"id":5990,"mutability":"mutable","name":"result","nameLocation":"30347:6:23","nodeType":"VariableDeclaration","scope":6010,"src":"30339:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5989,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5994,"initialValue":{"arguments":[{"id":5992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5981,"src":"30362:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5991,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5978,6012],"referencedDeclaration":5978,"src":"30356:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5995,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"30389:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5999,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5984,"src":"30431:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4537","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4537","typeString":"enum Math.Rounding"}],"id":5998,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6145,"src":"30414:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4537_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":6002,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"30450:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5981,"src":"30459:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5996,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"30398:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7911_$","typeString":"type(library SafeCast)"}},"id":5997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7910,"src":"30398:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5988,"id":6009,"nodeType":"Return","src":"30382:83:23"}]}]},"documentation":{"id":5979,"nodeType":"StructuredDocumentation","src":"30076:143:23","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6012,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:23","nodeType":"FunctionDefinition","parameters":{"id":5985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5981,"mutability":"mutable","name":"value","nameLocation":"30247:5:23","nodeType":"VariableDeclaration","scope":6012,"src":"30239:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5980,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5984,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:23","nodeType":"VariableDeclaration","scope":6012,"src":"30254:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4537","typeString":"enum Math.Rounding"},"typeName":{"id":5983,"nodeType":"UserDefinedTypeName","pathNode":{"id":5982,"name":"Rounding","nameLocations":["30254:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4537,"src":"30254:8:23"},"referencedDeclaration":4537,"src":"30254:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4537","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:23"},"returnParameters":{"id":5988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6012,"src":"30296:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5986,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:23"},"scope":6146,"src":"30224:258:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6088,"nodeType":"Block","src":"30800:675:23","statements":[{"expression":{"id":6029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6020,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6018,"src":"30882:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6023,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"30902:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":6024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:23","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6021,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"30886:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7911_$","typeString":"type(library SafeCast)"}},"id":6022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7910,"src":"30886:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":6027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:23","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6030,"nodeType":"ExpressionStatement","src":"30882:64:23"},{"expression":{"id":6043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6031,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6018,"src":"31022:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6034,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"31044:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6035,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6018,"src":"31049:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6037,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":6038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:23","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6032,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"31027:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7911_$","typeString":"type(library SafeCast)"}},"id":6033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7910,"src":"31027:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":6041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:23","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6044,"nodeType":"ExpressionStatement","src":"31022:56:23"},{"expression":{"id":6057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6045,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6018,"src":"31153:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6048,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"31175:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6049,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6018,"src":"31180:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6051,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":6052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:23","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6046,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"31158:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7911_$","typeString":"type(library SafeCast)"}},"id":6047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7910,"src":"31158:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":6055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:23","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6058,"nodeType":"ExpressionStatement","src":"31153:48:23"},{"expression":{"id":6071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6059,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6018,"src":"31276:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6062,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"31298:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6063,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6018,"src":"31303:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6065,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":6066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:23","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6060,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"31281:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7911_$","typeString":"type(library SafeCast)"}},"id":6061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7910,"src":"31281:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6072,"nodeType":"ExpressionStatement","src":"31276:44:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6073,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6018,"src":"31426:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":6074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6076,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6079,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"31453:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6080,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6018,"src":"31458:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6082,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":6083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:23","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6077,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"31436:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7911_$","typeString":"type(library SafeCast)"}},"id":6078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7910,"src":"31436:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6019,"id":6087,"nodeType":"Return","src":"31418:50:23"}]},"documentation":{"id":6013,"nodeType":"StructuredDocumentation","src":"30488:246:23","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":6089,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:23","nodeType":"FunctionDefinition","parameters":{"id":6016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6015,"mutability":"mutable","name":"x","nameLocation":"30763:1:23","nodeType":"VariableDeclaration","scope":6089,"src":"30755:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6014,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:23"},"returnParameters":{"id":6019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6018,"mutability":"mutable","name":"r","nameLocation":"30797:1:23","nodeType":"VariableDeclaration","scope":6089,"src":"30789:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6017,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:23"},"scope":6146,"src":"30739:736:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6125,"nodeType":"Block","src":"31712:184:23","statements":[{"id":6124,"nodeType":"UncheckedBlock","src":"31722:168:23","statements":[{"assignments":[6101],"declarations":[{"constant":false,"id":6101,"mutability":"mutable","name":"result","nameLocation":"31754:6:23","nodeType":"VariableDeclaration","scope":6124,"src":"31746:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6100,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6105,"initialValue":{"arguments":[{"id":6103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6092,"src":"31770:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6102,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[6089,6126],"referencedDeclaration":6089,"src":"31763:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6106,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6101,"src":"31797:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6110,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6095,"src":"31839:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4537","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4537","typeString":"enum Math.Rounding"}],"id":6109,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6145,"src":"31822:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4537_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6113,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6101,"src":"31858:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":6114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6116,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6092,"src":"31873:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6107,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"31806:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7911_$","typeString":"type(library SafeCast)"}},"id":6108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7910,"src":"31806:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6099,"id":6123,"nodeType":"Return","src":"31790:89:23"}]}]},"documentation":{"id":6090,"nodeType":"StructuredDocumentation","src":"31481:144:23","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6126,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:23","nodeType":"FunctionDefinition","parameters":{"id":6096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6092,"mutability":"mutable","name":"value","nameLocation":"31654:5:23","nodeType":"VariableDeclaration","scope":6126,"src":"31646:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6091,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6095,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:23","nodeType":"VariableDeclaration","scope":6126,"src":"31661:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4537","typeString":"enum Math.Rounding"},"typeName":{"id":6094,"nodeType":"UserDefinedTypeName","pathNode":{"id":6093,"name":"Rounding","nameLocations":["31661:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4537,"src":"31661:8:23"},"referencedDeclaration":4537,"src":"31661:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4537","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:23"},"returnParameters":{"id":6099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6126,"src":"31703:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6097,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:23"},"scope":6146,"src":"31630:266:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6144,"nodeType":"Block","src":"32094:48:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6137,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6130,"src":"32117:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4537","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4537","typeString":"enum Math.Rounding"}],"id":6136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6135,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:23","typeDescriptions":{}}},"id":6138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":6139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":6141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6134,"id":6143,"nodeType":"Return","src":"32104:31:23"}]},"documentation":{"id":6127,"nodeType":"StructuredDocumentation","src":"31902:113:23","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":6145,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:23","nodeType":"FunctionDefinition","parameters":{"id":6131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6130,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:23","nodeType":"VariableDeclaration","scope":6145,"src":"32046:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4537","typeString":"enum Math.Rounding"},"typeName":{"id":6129,"nodeType":"UserDefinedTypeName","pathNode":{"id":6128,"name":"Rounding","nameLocations":["32046:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4537,"src":"32046:8:23"},"referencedDeclaration":4537,"src":"32046:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4537","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:23"},"returnParameters":{"id":6134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6145,"src":"32088:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6132,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:23"},"scope":6146,"src":"32020:122:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6147,"src":"281:31863:23","usedErrors":[],"usedEvents":[]}],"src":"103:32042:23"},"id":23},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7911]},"id":7912,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6148,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:24"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":6149,"nodeType":"StructuredDocumentation","src":"218:550:24","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":7911,"linearizedBaseContracts":[7911],"name":"SafeCast","nameLocation":"777:8:24","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6150,"nodeType":"StructuredDocumentation","src":"792:68:24","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":6156,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:24","nodeType":"ErrorDefinition","parameters":{"id":6155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6152,"mutability":"mutable","name":"bits","nameLocation":"908:4:24","nodeType":"VariableDeclaration","scope":6156,"src":"902:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6151,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6154,"mutability":"mutable","name":"value","nameLocation":"922:5:24","nodeType":"VariableDeclaration","scope":6156,"src":"914:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6153,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:24"},"src":"865:64:24"},{"documentation":{"id":6157,"nodeType":"StructuredDocumentation","src":"935:75:24","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":6161,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:24","nodeType":"ErrorDefinition","parameters":{"id":6160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6159,"mutability":"mutable","name":"value","nameLocation":"1056:5:24","nodeType":"VariableDeclaration","scope":6161,"src":"1049:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6158,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:24"},"src":"1015:48:24"},{"documentation":{"id":6162,"nodeType":"StructuredDocumentation","src":"1069:67:24","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":6168,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:24","nodeType":"ErrorDefinition","parameters":{"id":6167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6164,"mutability":"mutable","name":"bits","nameLocation":"1183:4:24","nodeType":"VariableDeclaration","scope":6168,"src":"1177:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6163,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6166,"mutability":"mutable","name":"value","nameLocation":"1196:5:24","nodeType":"VariableDeclaration","scope":6168,"src":"1189:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6165,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:24"},"src":"1141:62:24"},{"documentation":{"id":6169,"nodeType":"StructuredDocumentation","src":"1209:75:24","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":6173,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:24","nodeType":"ErrorDefinition","parameters":{"id":6172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6171,"mutability":"mutable","name":"value","nameLocation":"1331:5:24","nodeType":"VariableDeclaration","scope":6173,"src":"1323:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6170,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:24"},"src":"1289:49:24"},{"body":{"id":6200,"nodeType":"Block","src":"1695:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6176,"src":"1709:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6183,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":6182,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":6186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:24","memberName":"max","nodeType":"MemberAccess","src":"1717:17:24","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6194,"nodeType":"IfStatement","src":"1705:105:24","trueBody":{"id":6193,"nodeType":"Block","src":"1736:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:24","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6176,"src":"1793:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6188,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"1757:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6192,"nodeType":"RevertStatement","src":"1750:49:24"}]}},{"expression":{"arguments":[{"id":6197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6176,"src":"1834:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6195,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:24","typeDescriptions":{}}},"id":6198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":6180,"id":6199,"nodeType":"Return","src":"1819:21:24"}]},"documentation":{"id":6174,"nodeType":"StructuredDocumentation","src":"1344:280:24","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6201,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:24","nodeType":"FunctionDefinition","parameters":{"id":6177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6176,"mutability":"mutable","name":"value","nameLocation":"1656:5:24","nodeType":"VariableDeclaration","scope":6201,"src":"1648:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:24"},"returnParameters":{"id":6180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6201,"src":"1686:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":6178,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:24","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:24"},"scope":7911,"src":"1629:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6228,"nodeType":"Block","src":"2204:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"2218:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6211,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":6210,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":6214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:24","memberName":"max","nodeType":"MemberAccess","src":"2226:17:24","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6222,"nodeType":"IfStatement","src":"2214:105:24","trueBody":{"id":6221,"nodeType":"Block","src":"2245:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:24","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"2302:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6216,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"2266:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6220,"nodeType":"RevertStatement","src":"2259:49:24"}]}},{"expression":{"arguments":[{"id":6225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"2343:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6223,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:24","typeDescriptions":{}}},"id":6226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":6208,"id":6227,"nodeType":"Return","src":"2328:21:24"}]},"documentation":{"id":6202,"nodeType":"StructuredDocumentation","src":"1853:280:24","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6229,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:24","nodeType":"FunctionDefinition","parameters":{"id":6205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6204,"mutability":"mutable","name":"value","nameLocation":"2165:5:24","nodeType":"VariableDeclaration","scope":6229,"src":"2157:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6203,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:24"},"returnParameters":{"id":6208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6229,"src":"2195:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":6206,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:24","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:24"},"scope":7911,"src":"2138:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6256,"nodeType":"Block","src":"2713:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6232,"src":"2727:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6239,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":6238,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":6242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:24","memberName":"max","nodeType":"MemberAccess","src":"2735:17:24","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6250,"nodeType":"IfStatement","src":"2723:105:24","trueBody":{"id":6249,"nodeType":"Block","src":"2754:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:24","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6232,"src":"2811:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6244,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"2775:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6248,"nodeType":"RevertStatement","src":"2768:49:24"}]}},{"expression":{"arguments":[{"id":6253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6232,"src":"2852:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6251,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:24","typeDescriptions":{}}},"id":6254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":6236,"id":6255,"nodeType":"Return","src":"2837:21:24"}]},"documentation":{"id":6230,"nodeType":"StructuredDocumentation","src":"2362:280:24","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6257,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:24","nodeType":"FunctionDefinition","parameters":{"id":6233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6232,"mutability":"mutable","name":"value","nameLocation":"2674:5:24","nodeType":"VariableDeclaration","scope":6257,"src":"2666:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6231,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:24"},"returnParameters":{"id":6236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6257,"src":"2704:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":6234,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:24","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:24"},"scope":7911,"src":"2647:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6284,"nodeType":"Block","src":"3222:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6260,"src":"3236:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6267,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":6266,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":6270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:24","memberName":"max","nodeType":"MemberAccess","src":"3244:17:24","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6278,"nodeType":"IfStatement","src":"3232:105:24","trueBody":{"id":6277,"nodeType":"Block","src":"3263:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:24","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6260,"src":"3320:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6272,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"3284:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6276,"nodeType":"RevertStatement","src":"3277:49:24"}]}},{"expression":{"arguments":[{"id":6281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6260,"src":"3361:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6279,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:24","typeDescriptions":{}}},"id":6282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6264,"id":6283,"nodeType":"Return","src":"3346:21:24"}]},"documentation":{"id":6258,"nodeType":"StructuredDocumentation","src":"2871:280:24","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6285,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:24","nodeType":"FunctionDefinition","parameters":{"id":6261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6260,"mutability":"mutable","name":"value","nameLocation":"3183:5:24","nodeType":"VariableDeclaration","scope":6285,"src":"3175:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6259,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:24"},"returnParameters":{"id":6264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6285,"src":"3213:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6262,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:24","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:24"},"scope":7911,"src":"3156:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6312,"nodeType":"Block","src":"3731:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6293,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6288,"src":"3745:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6295,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":6294,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":6298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:24","memberName":"max","nodeType":"MemberAccess","src":"3753:17:24","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6306,"nodeType":"IfStatement","src":"3741:105:24","trueBody":{"id":6305,"nodeType":"Block","src":"3772:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:24","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6288,"src":"3829:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6300,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"3793:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6304,"nodeType":"RevertStatement","src":"3786:49:24"}]}},{"expression":{"arguments":[{"id":6309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6288,"src":"3870:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6307,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:24","typeDescriptions":{}}},"id":6310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":6292,"id":6311,"nodeType":"Return","src":"3855:21:24"}]},"documentation":{"id":6286,"nodeType":"StructuredDocumentation","src":"3380:280:24","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6313,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:24","nodeType":"FunctionDefinition","parameters":{"id":6289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6288,"mutability":"mutable","name":"value","nameLocation":"3692:5:24","nodeType":"VariableDeclaration","scope":6313,"src":"3684:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6287,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:24"},"returnParameters":{"id":6292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6313,"src":"3722:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":6290,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:24","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:24"},"scope":7911,"src":"3665:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6340,"nodeType":"Block","src":"4240:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6316,"src":"4254:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6323,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":6322,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":6326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:24","memberName":"max","nodeType":"MemberAccess","src":"4262:17:24","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6334,"nodeType":"IfStatement","src":"4250:105:24","trueBody":{"id":6333,"nodeType":"Block","src":"4281:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:24","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6316,"src":"4338:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6328,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"4302:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6332,"nodeType":"RevertStatement","src":"4295:49:24"}]}},{"expression":{"arguments":[{"id":6337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6316,"src":"4379:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6335,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:24","typeDescriptions":{}}},"id":6338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":6320,"id":6339,"nodeType":"Return","src":"4364:21:24"}]},"documentation":{"id":6314,"nodeType":"StructuredDocumentation","src":"3889:280:24","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6341,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:24","nodeType":"FunctionDefinition","parameters":{"id":6317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6316,"mutability":"mutable","name":"value","nameLocation":"4201:5:24","nodeType":"VariableDeclaration","scope":6341,"src":"4193:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6315,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:24"},"returnParameters":{"id":6320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6341,"src":"4231:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6318,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:24","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:24"},"scope":7911,"src":"4174:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6368,"nodeType":"Block","src":"4749:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"4763:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6351,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":6350,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":6354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:24","memberName":"max","nodeType":"MemberAccess","src":"4771:17:24","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6362,"nodeType":"IfStatement","src":"4759:105:24","trueBody":{"id":6361,"nodeType":"Block","src":"4790:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:24","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"4847:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6356,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"4811:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6360,"nodeType":"RevertStatement","src":"4804:49:24"}]}},{"expression":{"arguments":[{"id":6365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"4888:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6363,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:24","typeDescriptions":{}}},"id":6366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":6348,"id":6367,"nodeType":"Return","src":"4873:21:24"}]},"documentation":{"id":6342,"nodeType":"StructuredDocumentation","src":"4398:280:24","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6369,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:24","nodeType":"FunctionDefinition","parameters":{"id":6345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6344,"mutability":"mutable","name":"value","nameLocation":"4710:5:24","nodeType":"VariableDeclaration","scope":6369,"src":"4702:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6343,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:24"},"returnParameters":{"id":6348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6369,"src":"4740:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":6346,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:24","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:24"},"scope":7911,"src":"4683:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6396,"nodeType":"Block","src":"5258:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"5272:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6379,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":6378,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":6382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:24","memberName":"max","nodeType":"MemberAccess","src":"5280:17:24","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6390,"nodeType":"IfStatement","src":"5268:105:24","trueBody":{"id":6389,"nodeType":"Block","src":"5299:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:24","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"5356:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6384,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"5320:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6388,"nodeType":"RevertStatement","src":"5313:49:24"}]}},{"expression":{"arguments":[{"id":6393,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"5397:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6391,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:24","typeDescriptions":{}}},"id":6394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":6376,"id":6395,"nodeType":"Return","src":"5382:21:24"}]},"documentation":{"id":6370,"nodeType":"StructuredDocumentation","src":"4907:280:24","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6397,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:24","nodeType":"FunctionDefinition","parameters":{"id":6373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6372,"mutability":"mutable","name":"value","nameLocation":"5219:5:24","nodeType":"VariableDeclaration","scope":6397,"src":"5211:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6371,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:24"},"returnParameters":{"id":6376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6397,"src":"5249:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":6374,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:24","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:24"},"scope":7911,"src":"5192:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6424,"nodeType":"Block","src":"5767:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6400,"src":"5781:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6407,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":6406,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":6410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:24","memberName":"max","nodeType":"MemberAccess","src":"5789:17:24","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6418,"nodeType":"IfStatement","src":"5777:105:24","trueBody":{"id":6417,"nodeType":"Block","src":"5808:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:24","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6400,"src":"5865:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6412,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"5829:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6416,"nodeType":"RevertStatement","src":"5822:49:24"}]}},{"expression":{"arguments":[{"id":6421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6400,"src":"5906:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6419,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:24","typeDescriptions":{}}},"id":6422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":6404,"id":6423,"nodeType":"Return","src":"5891:21:24"}]},"documentation":{"id":6398,"nodeType":"StructuredDocumentation","src":"5416:280:24","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6425,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:24","nodeType":"FunctionDefinition","parameters":{"id":6401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6400,"mutability":"mutable","name":"value","nameLocation":"5728:5:24","nodeType":"VariableDeclaration","scope":6425,"src":"5720:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6399,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:24"},"returnParameters":{"id":6404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6425,"src":"5758:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":6402,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:24","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:24"},"scope":7911,"src":"5701:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6452,"nodeType":"Block","src":"6276:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"6290:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6435,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":6434,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":6438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:24","memberName":"max","nodeType":"MemberAccess","src":"6298:17:24","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6446,"nodeType":"IfStatement","src":"6286:105:24","trueBody":{"id":6445,"nodeType":"Block","src":"6317:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:24","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"6374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6440,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"6338:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6444,"nodeType":"RevertStatement","src":"6331:49:24"}]}},{"expression":{"arguments":[{"id":6449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"6415:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6447,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:24","typeDescriptions":{}}},"id":6450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":6432,"id":6451,"nodeType":"Return","src":"6400:21:24"}]},"documentation":{"id":6426,"nodeType":"StructuredDocumentation","src":"5925:280:24","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6453,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:24","nodeType":"FunctionDefinition","parameters":{"id":6429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6428,"mutability":"mutable","name":"value","nameLocation":"6237:5:24","nodeType":"VariableDeclaration","scope":6453,"src":"6229:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6427,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:24"},"returnParameters":{"id":6432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6453,"src":"6267:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":6430,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:24","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:24"},"scope":7911,"src":"6210:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6480,"nodeType":"Block","src":"6785:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6456,"src":"6799:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6463,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":6462,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":6466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:24","memberName":"max","nodeType":"MemberAccess","src":"6807:17:24","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6474,"nodeType":"IfStatement","src":"6795:105:24","trueBody":{"id":6473,"nodeType":"Block","src":"6826:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:24","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6456,"src":"6883:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6468,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"6847:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6472,"nodeType":"RevertStatement","src":"6840:49:24"}]}},{"expression":{"arguments":[{"id":6477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6456,"src":"6924:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6475,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:24","typeDescriptions":{}}},"id":6478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":6460,"id":6479,"nodeType":"Return","src":"6909:21:24"}]},"documentation":{"id":6454,"nodeType":"StructuredDocumentation","src":"6434:280:24","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6481,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:24","nodeType":"FunctionDefinition","parameters":{"id":6457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6456,"mutability":"mutable","name":"value","nameLocation":"6746:5:24","nodeType":"VariableDeclaration","scope":6481,"src":"6738:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6455,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:24"},"returnParameters":{"id":6460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6481,"src":"6776:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":6458,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:24","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:24"},"scope":7911,"src":"6719:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6508,"nodeType":"Block","src":"7294:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6484,"src":"7308:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6491,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":6490,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":6494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:24","memberName":"max","nodeType":"MemberAccess","src":"7316:17:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6502,"nodeType":"IfStatement","src":"7304:105:24","trueBody":{"id":6501,"nodeType":"Block","src":"7335:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:24","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6484,"src":"7392:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6496,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"7356:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6500,"nodeType":"RevertStatement","src":"7349:49:24"}]}},{"expression":{"arguments":[{"id":6505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6484,"src":"7433:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6503,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:24","typeDescriptions":{}}},"id":6506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":6488,"id":6507,"nodeType":"Return","src":"7418:21:24"}]},"documentation":{"id":6482,"nodeType":"StructuredDocumentation","src":"6943:280:24","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6509,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:24","nodeType":"FunctionDefinition","parameters":{"id":6485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6484,"mutability":"mutable","name":"value","nameLocation":"7255:5:24","nodeType":"VariableDeclaration","scope":6509,"src":"7247:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6483,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:24"},"returnParameters":{"id":6488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6509,"src":"7285:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6486,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:24"},"scope":7911,"src":"7228:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6536,"nodeType":"Block","src":"7803:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"7817:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6519,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":6518,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":6522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:24","memberName":"max","nodeType":"MemberAccess","src":"7825:17:24","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6530,"nodeType":"IfStatement","src":"7813:105:24","trueBody":{"id":6529,"nodeType":"Block","src":"7844:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:24","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"7901:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6524,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"7865:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6528,"nodeType":"RevertStatement","src":"7858:49:24"}]}},{"expression":{"arguments":[{"id":6533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"7942:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6531,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:24","typeDescriptions":{}}},"id":6534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":6516,"id":6535,"nodeType":"Return","src":"7927:21:24"}]},"documentation":{"id":6510,"nodeType":"StructuredDocumentation","src":"7452:280:24","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6537,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:24","nodeType":"FunctionDefinition","parameters":{"id":6513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6512,"mutability":"mutable","name":"value","nameLocation":"7764:5:24","nodeType":"VariableDeclaration","scope":6537,"src":"7756:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6511,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:24"},"returnParameters":{"id":6516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6515,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6537,"src":"7794:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":6514,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:24","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:24"},"scope":7911,"src":"7737:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6564,"nodeType":"Block","src":"8312:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6540,"src":"8326:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6547,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6546,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:24","memberName":"max","nodeType":"MemberAccess","src":"8334:17:24","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6558,"nodeType":"IfStatement","src":"8322:105:24","trueBody":{"id":6557,"nodeType":"Block","src":"8353:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:24","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6540,"src":"8410:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6552,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"8374:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6556,"nodeType":"RevertStatement","src":"8367:49:24"}]}},{"expression":{"arguments":[{"id":6561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6540,"src":"8451:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6559,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:24","typeDescriptions":{}}},"id":6562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6544,"id":6563,"nodeType":"Return","src":"8436:21:24"}]},"documentation":{"id":6538,"nodeType":"StructuredDocumentation","src":"7961:280:24","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6565,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:24","nodeType":"FunctionDefinition","parameters":{"id":6541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6540,"mutability":"mutable","name":"value","nameLocation":"8273:5:24","nodeType":"VariableDeclaration","scope":6565,"src":"8265:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6539,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:24"},"returnParameters":{"id":6544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6565,"src":"8303:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6542,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:24","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:24"},"scope":7911,"src":"8246:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6592,"nodeType":"Block","src":"8821:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"8835:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6575,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6574,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:24","memberName":"max","nodeType":"MemberAccess","src":"8843:17:24","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6586,"nodeType":"IfStatement","src":"8831:105:24","trueBody":{"id":6585,"nodeType":"Block","src":"8862:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:24","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"8919:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6580,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"8883:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6584,"nodeType":"RevertStatement","src":"8876:49:24"}]}},{"expression":{"arguments":[{"id":6589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"8960:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6587,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:24","typeDescriptions":{}}},"id":6590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6572,"id":6591,"nodeType":"Return","src":"8945:21:24"}]},"documentation":{"id":6566,"nodeType":"StructuredDocumentation","src":"8470:280:24","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6593,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:24","nodeType":"FunctionDefinition","parameters":{"id":6569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6568,"mutability":"mutable","name":"value","nameLocation":"8782:5:24","nodeType":"VariableDeclaration","scope":6593,"src":"8774:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6567,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:24"},"returnParameters":{"id":6572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6593,"src":"8812:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6570,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:24","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:24"},"scope":7911,"src":"8755:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6620,"nodeType":"Block","src":"9330:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6601,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6596,"src":"9344:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6603,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6602,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:24","memberName":"max","nodeType":"MemberAccess","src":"9352:17:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6614,"nodeType":"IfStatement","src":"9340:105:24","trueBody":{"id":6613,"nodeType":"Block","src":"9371:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6596,"src":"9428:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6608,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"9392:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6612,"nodeType":"RevertStatement","src":"9385:49:24"}]}},{"expression":{"arguments":[{"id":6617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6596,"src":"9469:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6615,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:24","typeDescriptions":{}}},"id":6618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6600,"id":6619,"nodeType":"Return","src":"9454:21:24"}]},"documentation":{"id":6594,"nodeType":"StructuredDocumentation","src":"8979:280:24","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6621,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:24","nodeType":"FunctionDefinition","parameters":{"id":6597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6596,"mutability":"mutable","name":"value","nameLocation":"9291:5:24","nodeType":"VariableDeclaration","scope":6621,"src":"9283:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6595,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:24"},"returnParameters":{"id":6600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6621,"src":"9321:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6598,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:24"},"scope":7911,"src":"9264:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6648,"nodeType":"Block","src":"9839:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6624,"src":"9853:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6631,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6630,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:24","memberName":"max","nodeType":"MemberAccess","src":"9861:17:24","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6642,"nodeType":"IfStatement","src":"9849:105:24","trueBody":{"id":6641,"nodeType":"Block","src":"9880:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:24","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6624,"src":"9937:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6636,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"9901:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6640,"nodeType":"RevertStatement","src":"9894:49:24"}]}},{"expression":{"arguments":[{"id":6645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6624,"src":"9978:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6643,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:24","typeDescriptions":{}}},"id":6646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6628,"id":6647,"nodeType":"Return","src":"9963:21:24"}]},"documentation":{"id":6622,"nodeType":"StructuredDocumentation","src":"9488:280:24","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6649,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:24","nodeType":"FunctionDefinition","parameters":{"id":6625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6624,"mutability":"mutable","name":"value","nameLocation":"9800:5:24","nodeType":"VariableDeclaration","scope":6649,"src":"9792:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6623,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:24"},"returnParameters":{"id":6628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6649,"src":"9830:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6626,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:24","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:24"},"scope":7911,"src":"9773:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6676,"nodeType":"Block","src":"10348:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"10362:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6659,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6658,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:24","memberName":"max","nodeType":"MemberAccess","src":"10370:17:24","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6670,"nodeType":"IfStatement","src":"10358:105:24","trueBody":{"id":6669,"nodeType":"Block","src":"10389:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:24","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"10446:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6664,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"10410:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6668,"nodeType":"RevertStatement","src":"10403:49:24"}]}},{"expression":{"arguments":[{"id":6673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"10487:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6671,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:24","typeDescriptions":{}}},"id":6674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6656,"id":6675,"nodeType":"Return","src":"10472:21:24"}]},"documentation":{"id":6650,"nodeType":"StructuredDocumentation","src":"9997:280:24","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6677,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:24","nodeType":"FunctionDefinition","parameters":{"id":6653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6652,"mutability":"mutable","name":"value","nameLocation":"10309:5:24","nodeType":"VariableDeclaration","scope":6677,"src":"10301:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6651,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:24"},"returnParameters":{"id":6656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6677,"src":"10339:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6654,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:24","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:24"},"scope":7911,"src":"10282:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6704,"nodeType":"Block","src":"10857:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"10871:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6687,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6686,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:24","memberName":"max","nodeType":"MemberAccess","src":"10879:17:24","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6698,"nodeType":"IfStatement","src":"10867:105:24","trueBody":{"id":6697,"nodeType":"Block","src":"10898:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:24","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"10955:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6692,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"10919:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6696,"nodeType":"RevertStatement","src":"10912:49:24"}]}},{"expression":{"arguments":[{"id":6701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"10996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6699,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:24","typeDescriptions":{}}},"id":6702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6684,"id":6703,"nodeType":"Return","src":"10981:21:24"}]},"documentation":{"id":6678,"nodeType":"StructuredDocumentation","src":"10506:280:24","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6705,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:24","nodeType":"FunctionDefinition","parameters":{"id":6681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6680,"mutability":"mutable","name":"value","nameLocation":"10818:5:24","nodeType":"VariableDeclaration","scope":6705,"src":"10810:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6679,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:24"},"returnParameters":{"id":6684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6705,"src":"10848:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6682,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:24","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:24"},"scope":7911,"src":"10791:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6732,"nodeType":"Block","src":"11360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"11374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6715,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6714,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:24","memberName":"max","nodeType":"MemberAccess","src":"11382:16:24","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6726,"nodeType":"IfStatement","src":"11370:103:24","trueBody":{"id":6725,"nodeType":"Block","src":"11400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"11456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6720,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"11421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6724,"nodeType":"RevertStatement","src":"11414:48:24"}]}},{"expression":{"arguments":[{"id":6729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"11496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6727,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:24","typeDescriptions":{}}},"id":6730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6712,"id":6731,"nodeType":"Return","src":"11482:20:24"}]},"documentation":{"id":6706,"nodeType":"StructuredDocumentation","src":"11015:276:24","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6733,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:24","nodeType":"FunctionDefinition","parameters":{"id":6709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6708,"mutability":"mutable","name":"value","nameLocation":"11322:5:24","nodeType":"VariableDeclaration","scope":6733,"src":"11314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6707,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:24"},"returnParameters":{"id":6712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6733,"src":"11352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6710,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:24","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:24"},"scope":7911,"src":"11296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6760,"nodeType":"Block","src":"11860:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6736,"src":"11874:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6743,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6742,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:24","memberName":"max","nodeType":"MemberAccess","src":"11882:16:24","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6754,"nodeType":"IfStatement","src":"11870:103:24","trueBody":{"id":6753,"nodeType":"Block","src":"11900:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:24","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6736,"src":"11956:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6748,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"11921:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6752,"nodeType":"RevertStatement","src":"11914:48:24"}]}},{"expression":{"arguments":[{"id":6757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6736,"src":"11996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6755,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:24","typeDescriptions":{}}},"id":6758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6740,"id":6759,"nodeType":"Return","src":"11982:20:24"}]},"documentation":{"id":6734,"nodeType":"StructuredDocumentation","src":"11515:276:24","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6761,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:24","nodeType":"FunctionDefinition","parameters":{"id":6737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6736,"mutability":"mutable","name":"value","nameLocation":"11822:5:24","nodeType":"VariableDeclaration","scope":6761,"src":"11814:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6735,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:24"},"returnParameters":{"id":6740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6761,"src":"11852:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6738,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:24","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:24"},"scope":7911,"src":"11796:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6788,"nodeType":"Block","src":"12360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6764,"src":"12374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6771,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6770,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:24","memberName":"max","nodeType":"MemberAccess","src":"12382:16:24","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6782,"nodeType":"IfStatement","src":"12370:103:24","trueBody":{"id":6781,"nodeType":"Block","src":"12400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6764,"src":"12456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6776,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"12421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6780,"nodeType":"RevertStatement","src":"12414:48:24"}]}},{"expression":{"arguments":[{"id":6785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6764,"src":"12496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6783,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:24","typeDescriptions":{}}},"id":6786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6768,"id":6787,"nodeType":"Return","src":"12482:20:24"}]},"documentation":{"id":6762,"nodeType":"StructuredDocumentation","src":"12015:276:24","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6789,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:24","nodeType":"FunctionDefinition","parameters":{"id":6765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6764,"mutability":"mutable","name":"value","nameLocation":"12322:5:24","nodeType":"VariableDeclaration","scope":6789,"src":"12314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6763,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:24"},"returnParameters":{"id":6768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6789,"src":"12352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6766,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:24","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:24"},"scope":7911,"src":"12296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6816,"nodeType":"Block","src":"12860:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6792,"src":"12874:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6799,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6798,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:24","memberName":"max","nodeType":"MemberAccess","src":"12882:16:24","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6810,"nodeType":"IfStatement","src":"12870:103:24","trueBody":{"id":6809,"nodeType":"Block","src":"12900:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:24","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6792,"src":"12956:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6804,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"12921:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6808,"nodeType":"RevertStatement","src":"12914:48:24"}]}},{"expression":{"arguments":[{"id":6813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6792,"src":"12996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6811,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:24","typeDescriptions":{}}},"id":6814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6796,"id":6815,"nodeType":"Return","src":"12982:20:24"}]},"documentation":{"id":6790,"nodeType":"StructuredDocumentation","src":"12515:276:24","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6817,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:24","nodeType":"FunctionDefinition","parameters":{"id":6793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6792,"mutability":"mutable","name":"value","nameLocation":"12822:5:24","nodeType":"VariableDeclaration","scope":6817,"src":"12814:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6791,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:24"},"returnParameters":{"id":6796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6817,"src":"12852:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6794,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:24","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:24"},"scope":7911,"src":"12796:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6844,"nodeType":"Block","src":"13360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"13374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6827,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6826,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:24","memberName":"max","nodeType":"MemberAccess","src":"13382:16:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6838,"nodeType":"IfStatement","src":"13370:103:24","trueBody":{"id":6837,"nodeType":"Block","src":"13400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"13456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6832,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"13421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6836,"nodeType":"RevertStatement","src":"13414:48:24"}]}},{"expression":{"arguments":[{"id":6841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"13496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6839,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:24","typeDescriptions":{}}},"id":6842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6824,"id":6843,"nodeType":"Return","src":"13482:20:24"}]},"documentation":{"id":6818,"nodeType":"StructuredDocumentation","src":"13015:276:24","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6845,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:24","nodeType":"FunctionDefinition","parameters":{"id":6821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6820,"mutability":"mutable","name":"value","nameLocation":"13322:5:24","nodeType":"VariableDeclaration","scope":6845,"src":"13314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6819,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:24"},"returnParameters":{"id":6824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6845,"src":"13352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6822,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:24"},"scope":7911,"src":"13296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6872,"nodeType":"Block","src":"13860:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6848,"src":"13874:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6855,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6854,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:24","memberName":"max","nodeType":"MemberAccess","src":"13882:16:24","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6866,"nodeType":"IfStatement","src":"13870:103:24","trueBody":{"id":6865,"nodeType":"Block","src":"13900:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:24","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6848,"src":"13956:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6860,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"13921:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6864,"nodeType":"RevertStatement","src":"13914:48:24"}]}},{"expression":{"arguments":[{"id":6869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6848,"src":"13996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6867,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:24","typeDescriptions":{}}},"id":6870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6852,"id":6871,"nodeType":"Return","src":"13982:20:24"}]},"documentation":{"id":6846,"nodeType":"StructuredDocumentation","src":"13515:276:24","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6873,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:24","nodeType":"FunctionDefinition","parameters":{"id":6849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6848,"mutability":"mutable","name":"value","nameLocation":"13822:5:24","nodeType":"VariableDeclaration","scope":6873,"src":"13814:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6847,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:24"},"returnParameters":{"id":6852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6873,"src":"13852:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6850,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:24","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:24"},"scope":7911,"src":"13796:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6900,"nodeType":"Block","src":"14360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6876,"src":"14374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6883,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6882,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:24","memberName":"max","nodeType":"MemberAccess","src":"14382:16:24","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6894,"nodeType":"IfStatement","src":"14370:103:24","trueBody":{"id":6893,"nodeType":"Block","src":"14400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6876,"src":"14456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6888,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"14421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6892,"nodeType":"RevertStatement","src":"14414:48:24"}]}},{"expression":{"arguments":[{"id":6897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6876,"src":"14496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6895,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:24","typeDescriptions":{}}},"id":6898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6880,"id":6899,"nodeType":"Return","src":"14482:20:24"}]},"documentation":{"id":6874,"nodeType":"StructuredDocumentation","src":"14015:276:24","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6901,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:24","nodeType":"FunctionDefinition","parameters":{"id":6877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6876,"mutability":"mutable","name":"value","nameLocation":"14322:5:24","nodeType":"VariableDeclaration","scope":6901,"src":"14314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6875,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:24"},"returnParameters":{"id":6880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6901,"src":"14352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6878,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:24","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:24"},"scope":7911,"src":"14296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6928,"nodeType":"Block","src":"14860:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"14874:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6911,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6910,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:24","memberName":"max","nodeType":"MemberAccess","src":"14882:16:24","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6922,"nodeType":"IfStatement","src":"14870:103:24","trueBody":{"id":6921,"nodeType":"Block","src":"14900:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:24","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"14956:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6916,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"14921:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6920,"nodeType":"RevertStatement","src":"14914:48:24"}]}},{"expression":{"arguments":[{"id":6925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"14996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6923,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:24","typeDescriptions":{}}},"id":6926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6908,"id":6927,"nodeType":"Return","src":"14982:20:24"}]},"documentation":{"id":6902,"nodeType":"StructuredDocumentation","src":"14515:276:24","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6929,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:24","nodeType":"FunctionDefinition","parameters":{"id":6905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6904,"mutability":"mutable","name":"value","nameLocation":"14822:5:24","nodeType":"VariableDeclaration","scope":6929,"src":"14814:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6903,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:24"},"returnParameters":{"id":6908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6929,"src":"14852:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6906,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:24","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:24"},"scope":7911,"src":"14796:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6956,"nodeType":"Block","src":"15360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"15374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6939,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6938,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:24","memberName":"max","nodeType":"MemberAccess","src":"15382:16:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6950,"nodeType":"IfStatement","src":"15370:103:24","trueBody":{"id":6949,"nodeType":"Block","src":"15400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"15456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6944,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"15421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6948,"nodeType":"RevertStatement","src":"15414:48:24"}]}},{"expression":{"arguments":[{"id":6953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"15496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6951,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:24","typeDescriptions":{}}},"id":6954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6936,"id":6955,"nodeType":"Return","src":"15482:20:24"}]},"documentation":{"id":6930,"nodeType":"StructuredDocumentation","src":"15015:276:24","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6957,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:24","nodeType":"FunctionDefinition","parameters":{"id":6933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6932,"mutability":"mutable","name":"value","nameLocation":"15322:5:24","nodeType":"VariableDeclaration","scope":6957,"src":"15314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6931,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:24"},"returnParameters":{"id":6936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6957,"src":"15352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6934,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:24"},"scope":7911,"src":"15296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6984,"nodeType":"Block","src":"15860:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"15874:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6967,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6966,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:24","memberName":"max","nodeType":"MemberAccess","src":"15882:16:24","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6978,"nodeType":"IfStatement","src":"15870:103:24","trueBody":{"id":6977,"nodeType":"Block","src":"15900:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:24","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"15956:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6972,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"15921:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6976,"nodeType":"RevertStatement","src":"15914:48:24"}]}},{"expression":{"arguments":[{"id":6981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"15996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6979,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:24","typeDescriptions":{}}},"id":6982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6964,"id":6983,"nodeType":"Return","src":"15982:20:24"}]},"documentation":{"id":6958,"nodeType":"StructuredDocumentation","src":"15515:276:24","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6985,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:24","nodeType":"FunctionDefinition","parameters":{"id":6961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6960,"mutability":"mutable","name":"value","nameLocation":"15822:5:24","nodeType":"VariableDeclaration","scope":6985,"src":"15814:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6959,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:24"},"returnParameters":{"id":6964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6985,"src":"15852:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6962,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:24","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:24"},"scope":7911,"src":"15796:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7012,"nodeType":"Block","src":"16360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"16374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6995,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6994,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:24","memberName":"max","nodeType":"MemberAccess","src":"16382:16:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7006,"nodeType":"IfStatement","src":"16370:103:24","trueBody":{"id":7005,"nodeType":"Block","src":"16400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"16456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7000,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"16421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7004,"nodeType":"RevertStatement","src":"16414:48:24"}]}},{"expression":{"arguments":[{"id":7009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"16496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7007,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:24","typeDescriptions":{}}},"id":7010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6992,"id":7011,"nodeType":"Return","src":"16482:20:24"}]},"documentation":{"id":6986,"nodeType":"StructuredDocumentation","src":"16015:276:24","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7013,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:24","nodeType":"FunctionDefinition","parameters":{"id":6989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6988,"mutability":"mutable","name":"value","nameLocation":"16322:5:24","nodeType":"VariableDeclaration","scope":7013,"src":"16314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6987,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:24"},"returnParameters":{"id":6992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7013,"src":"16352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6990,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:24"},"scope":7911,"src":"16296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7040,"nodeType":"Block","src":"16854:146:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7016,"src":"16868:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7023,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":7022,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":7026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:24","memberName":"max","nodeType":"MemberAccess","src":"16876:15:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7034,"nodeType":"IfStatement","src":"16864:101:24","trueBody":{"id":7033,"nodeType":"Block","src":"16893:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7016,"src":"16948:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7028,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"16914:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7032,"nodeType":"RevertStatement","src":"16907:47:24"}]}},{"expression":{"arguments":[{"id":7037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7016,"src":"16987:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7035,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:24","typeDescriptions":{}}},"id":7038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":7020,"id":7039,"nodeType":"Return","src":"16974:19:24"}]},"documentation":{"id":7014,"nodeType":"StructuredDocumentation","src":"16515:272:24","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7041,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:24","nodeType":"FunctionDefinition","parameters":{"id":7017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7016,"mutability":"mutable","name":"value","nameLocation":"16817:5:24","nodeType":"VariableDeclaration","scope":7041,"src":"16809:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7015,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:24"},"returnParameters":{"id":7020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7041,"src":"16847:5:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7018,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:24"},"scope":7911,"src":"16792:208:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7063,"nodeType":"Block","src":"17236:128:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7044,"src":"17250:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":7050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7057,"nodeType":"IfStatement","src":"17246:81:24","trueBody":{"id":7056,"nodeType":"Block","src":"17261:66:24","statements":[{"errorCall":{"arguments":[{"id":7053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7044,"src":"17310:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7052,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6161,"src":"17282:27:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":7054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7055,"nodeType":"RevertStatement","src":"17275:41:24"}]}},{"expression":{"arguments":[{"id":7060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7044,"src":"17351:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7058,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:24","typeDescriptions":{}}},"id":7061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7048,"id":7062,"nodeType":"Return","src":"17336:21:24"}]},"documentation":{"id":7042,"nodeType":"StructuredDocumentation","src":"17006:160:24","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":7064,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:24","nodeType":"FunctionDefinition","parameters":{"id":7045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7044,"mutability":"mutable","name":"value","nameLocation":"17197:5:24","nodeType":"VariableDeclaration","scope":7064,"src":"17190:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7043,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:24"},"returnParameters":{"id":7048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7064,"src":"17227:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7046,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:24"},"scope":7911,"src":"17171:193:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7089,"nodeType":"Block","src":"17761:150:24","statements":[{"expression":{"id":7077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7072,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7070,"src":"17771:10:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7067,"src":"17791:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":7073,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:24","typeDescriptions":{}}},"id":7076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":7078,"nodeType":"ExpressionStatement","src":"17771:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7079,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7070,"src":"17811:10:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7067,"src":"17825:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7088,"nodeType":"IfStatement","src":"17807:98:24","trueBody":{"id":7087,"nodeType":"Block","src":"17832:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":7083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:24","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":7084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7067,"src":"17888:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7082,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"17853:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7086,"nodeType":"RevertStatement","src":"17846:48:24"}]}}]},"documentation":{"id":7065,"nodeType":"StructuredDocumentation","src":"17370:312:24","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":7090,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:24","nodeType":"FunctionDefinition","parameters":{"id":7068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7067,"mutability":"mutable","name":"value","nameLocation":"17712:5:24","nodeType":"VariableDeclaration","scope":7090,"src":"17705:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7066,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:24"},"returnParameters":{"id":7071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7070,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:24","nodeType":"VariableDeclaration","scope":7090,"src":"17742:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":7069,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:24"},"scope":7911,"src":"17687:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7115,"nodeType":"Block","src":"18308:150:24","statements":[{"expression":{"id":7103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7098,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7096,"src":"18318:10:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"18338:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":7099,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:24","typeDescriptions":{}}},"id":7102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":7104,"nodeType":"ExpressionStatement","src":"18318:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7105,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7096,"src":"18358:10:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"18372:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7114,"nodeType":"IfStatement","src":"18354:98:24","trueBody":{"id":7113,"nodeType":"Block","src":"18379:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":7109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:24","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":7110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"18435:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7108,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"18400:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7112,"nodeType":"RevertStatement","src":"18393:48:24"}]}}]},"documentation":{"id":7091,"nodeType":"StructuredDocumentation","src":"17917:312:24","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":7116,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:24","nodeType":"FunctionDefinition","parameters":{"id":7094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7093,"mutability":"mutable","name":"value","nameLocation":"18259:5:24","nodeType":"VariableDeclaration","scope":7116,"src":"18252:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7092,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:24"},"returnParameters":{"id":7097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7096,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:24","nodeType":"VariableDeclaration","scope":7116,"src":"18289:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":7095,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:24"},"scope":7911,"src":"18234:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7141,"nodeType":"Block","src":"18855:150:24","statements":[{"expression":{"id":7129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7124,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7122,"src":"18865:10:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7119,"src":"18885:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":7125,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:24","typeDescriptions":{}}},"id":7128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":7130,"nodeType":"ExpressionStatement","src":"18865:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7131,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7122,"src":"18905:10:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7119,"src":"18919:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7140,"nodeType":"IfStatement","src":"18901:98:24","trueBody":{"id":7139,"nodeType":"Block","src":"18926:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":7135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:24","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":7136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7119,"src":"18982:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7134,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"18947:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7138,"nodeType":"RevertStatement","src":"18940:48:24"}]}}]},"documentation":{"id":7117,"nodeType":"StructuredDocumentation","src":"18464:312:24","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":7142,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:24","nodeType":"FunctionDefinition","parameters":{"id":7120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7119,"mutability":"mutable","name":"value","nameLocation":"18806:5:24","nodeType":"VariableDeclaration","scope":7142,"src":"18799:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7118,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:24"},"returnParameters":{"id":7123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7122,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:24","nodeType":"VariableDeclaration","scope":7142,"src":"18836:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":7121,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:24"},"scope":7911,"src":"18781:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7167,"nodeType":"Block","src":"19402:150:24","statements":[{"expression":{"id":7155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7150,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7148,"src":"19412:10:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7145,"src":"19432:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":7151,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:24","typeDescriptions":{}}},"id":7154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":7156,"nodeType":"ExpressionStatement","src":"19412:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7157,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7148,"src":"19452:10:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7145,"src":"19466:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7166,"nodeType":"IfStatement","src":"19448:98:24","trueBody":{"id":7165,"nodeType":"Block","src":"19473:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":7161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:24","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":7162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7145,"src":"19529:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7160,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"19494:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7164,"nodeType":"RevertStatement","src":"19487:48:24"}]}}]},"documentation":{"id":7143,"nodeType":"StructuredDocumentation","src":"19011:312:24","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":7168,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:24","nodeType":"FunctionDefinition","parameters":{"id":7146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7145,"mutability":"mutable","name":"value","nameLocation":"19353:5:24","nodeType":"VariableDeclaration","scope":7168,"src":"19346:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7144,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:24"},"returnParameters":{"id":7149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7148,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:24","nodeType":"VariableDeclaration","scope":7168,"src":"19383:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":7147,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:24"},"scope":7911,"src":"19328:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7193,"nodeType":"Block","src":"19949:150:24","statements":[{"expression":{"id":7181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7176,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7174,"src":"19959:10:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7171,"src":"19979:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":7177,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:24","typeDescriptions":{}}},"id":7180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":7182,"nodeType":"ExpressionStatement","src":"19959:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7183,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7174,"src":"19999:10:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7171,"src":"20013:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7192,"nodeType":"IfStatement","src":"19995:98:24","trueBody":{"id":7191,"nodeType":"Block","src":"20020:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":7187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:24","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":7188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7171,"src":"20076:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7186,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"20041:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7190,"nodeType":"RevertStatement","src":"20034:48:24"}]}}]},"documentation":{"id":7169,"nodeType":"StructuredDocumentation","src":"19558:312:24","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":7194,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:24","nodeType":"FunctionDefinition","parameters":{"id":7172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7171,"mutability":"mutable","name":"value","nameLocation":"19900:5:24","nodeType":"VariableDeclaration","scope":7194,"src":"19893:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7170,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:24"},"returnParameters":{"id":7175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7174,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:24","nodeType":"VariableDeclaration","scope":7194,"src":"19930:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":7173,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:24"},"scope":7911,"src":"19875:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7219,"nodeType":"Block","src":"20496:150:24","statements":[{"expression":{"id":7207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7202,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7200,"src":"20506:10:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7197,"src":"20526:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":7203,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:24","typeDescriptions":{}}},"id":7206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":7208,"nodeType":"ExpressionStatement","src":"20506:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7209,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7200,"src":"20546:10:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7197,"src":"20560:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7218,"nodeType":"IfStatement","src":"20542:98:24","trueBody":{"id":7217,"nodeType":"Block","src":"20567:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":7213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:24","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":7214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7197,"src":"20623:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7212,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"20588:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7216,"nodeType":"RevertStatement","src":"20581:48:24"}]}}]},"documentation":{"id":7195,"nodeType":"StructuredDocumentation","src":"20105:312:24","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":7220,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:24","nodeType":"FunctionDefinition","parameters":{"id":7198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7197,"mutability":"mutable","name":"value","nameLocation":"20447:5:24","nodeType":"VariableDeclaration","scope":7220,"src":"20440:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7196,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:24"},"returnParameters":{"id":7201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7200,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:24","nodeType":"VariableDeclaration","scope":7220,"src":"20477:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":7199,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:24"},"scope":7911,"src":"20422:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7245,"nodeType":"Block","src":"21043:150:24","statements":[{"expression":{"id":7233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7228,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7226,"src":"21053:10:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7223,"src":"21073:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":7229,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:24","typeDescriptions":{}}},"id":7232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":7234,"nodeType":"ExpressionStatement","src":"21053:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7235,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7226,"src":"21093:10:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7223,"src":"21107:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7244,"nodeType":"IfStatement","src":"21089:98:24","trueBody":{"id":7243,"nodeType":"Block","src":"21114:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":7239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:24","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":7240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7223,"src":"21170:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7238,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"21135:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7242,"nodeType":"RevertStatement","src":"21128:48:24"}]}}]},"documentation":{"id":7221,"nodeType":"StructuredDocumentation","src":"20652:312:24","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":7246,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:24","nodeType":"FunctionDefinition","parameters":{"id":7224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7223,"mutability":"mutable","name":"value","nameLocation":"20994:5:24","nodeType":"VariableDeclaration","scope":7246,"src":"20987:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7222,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:24"},"returnParameters":{"id":7227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7226,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:24","nodeType":"VariableDeclaration","scope":7246,"src":"21024:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":7225,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:24"},"scope":7911,"src":"20969:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7271,"nodeType":"Block","src":"21590:150:24","statements":[{"expression":{"id":7259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7254,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7252,"src":"21600:10:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"21620:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":7255,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:24","typeDescriptions":{}}},"id":7258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":7260,"nodeType":"ExpressionStatement","src":"21600:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7261,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7252,"src":"21640:10:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"21654:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7270,"nodeType":"IfStatement","src":"21636:98:24","trueBody":{"id":7269,"nodeType":"Block","src":"21661:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":7265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:24","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":7266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"21717:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7264,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"21682:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7268,"nodeType":"RevertStatement","src":"21675:48:24"}]}}]},"documentation":{"id":7247,"nodeType":"StructuredDocumentation","src":"21199:312:24","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":7272,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:24","nodeType":"FunctionDefinition","parameters":{"id":7250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7249,"mutability":"mutable","name":"value","nameLocation":"21541:5:24","nodeType":"VariableDeclaration","scope":7272,"src":"21534:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7248,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:24"},"returnParameters":{"id":7253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7252,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:24","nodeType":"VariableDeclaration","scope":7272,"src":"21571:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":7251,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:24"},"scope":7911,"src":"21516:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7297,"nodeType":"Block","src":"22137:150:24","statements":[{"expression":{"id":7285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7280,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7278,"src":"22147:10:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7275,"src":"22167:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":7281,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:24","typeDescriptions":{}}},"id":7284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":7286,"nodeType":"ExpressionStatement","src":"22147:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7287,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7278,"src":"22187:10:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7275,"src":"22201:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7296,"nodeType":"IfStatement","src":"22183:98:24","trueBody":{"id":7295,"nodeType":"Block","src":"22208:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":7291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:24","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":7292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7275,"src":"22264:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7290,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"22229:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7294,"nodeType":"RevertStatement","src":"22222:48:24"}]}}]},"documentation":{"id":7273,"nodeType":"StructuredDocumentation","src":"21746:312:24","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":7298,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:24","nodeType":"FunctionDefinition","parameters":{"id":7276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7275,"mutability":"mutable","name":"value","nameLocation":"22088:5:24","nodeType":"VariableDeclaration","scope":7298,"src":"22081:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7274,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:24"},"returnParameters":{"id":7279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7278,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:24","nodeType":"VariableDeclaration","scope":7298,"src":"22118:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":7277,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:24"},"scope":7911,"src":"22063:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7323,"nodeType":"Block","src":"22684:150:24","statements":[{"expression":{"id":7311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7306,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"22694:10:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7301,"src":"22714:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":7307,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:24","typeDescriptions":{}}},"id":7310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":7312,"nodeType":"ExpressionStatement","src":"22694:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7313,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"22734:10:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7301,"src":"22748:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7322,"nodeType":"IfStatement","src":"22730:98:24","trueBody":{"id":7321,"nodeType":"Block","src":"22755:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:24","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7301,"src":"22811:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7316,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"22776:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7320,"nodeType":"RevertStatement","src":"22769:48:24"}]}}]},"documentation":{"id":7299,"nodeType":"StructuredDocumentation","src":"22293:312:24","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7324,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:24","nodeType":"FunctionDefinition","parameters":{"id":7302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7301,"mutability":"mutable","name":"value","nameLocation":"22635:5:24","nodeType":"VariableDeclaration","scope":7324,"src":"22628:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7300,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:24"},"returnParameters":{"id":7305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7304,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:24","nodeType":"VariableDeclaration","scope":7324,"src":"22665:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":7303,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:24"},"scope":7911,"src":"22610:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7349,"nodeType":"Block","src":"23231:150:24","statements":[{"expression":{"id":7337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7332,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7330,"src":"23241:10:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7327,"src":"23261:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":7333,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:24","typeDescriptions":{}}},"id":7336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":7338,"nodeType":"ExpressionStatement","src":"23241:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7339,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7330,"src":"23281:10:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7327,"src":"23295:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7348,"nodeType":"IfStatement","src":"23277:98:24","trueBody":{"id":7347,"nodeType":"Block","src":"23302:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:24","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7327,"src":"23358:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7342,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"23323:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7346,"nodeType":"RevertStatement","src":"23316:48:24"}]}}]},"documentation":{"id":7325,"nodeType":"StructuredDocumentation","src":"22840:312:24","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7350,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:24","nodeType":"FunctionDefinition","parameters":{"id":7328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7327,"mutability":"mutable","name":"value","nameLocation":"23182:5:24","nodeType":"VariableDeclaration","scope":7350,"src":"23175:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7326,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:24"},"returnParameters":{"id":7331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7330,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:24","nodeType":"VariableDeclaration","scope":7350,"src":"23212:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":7329,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:24"},"scope":7911,"src":"23157:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7375,"nodeType":"Block","src":"23778:150:24","statements":[{"expression":{"id":7363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7358,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7356,"src":"23788:10:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7353,"src":"23808:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":7359,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:24","typeDescriptions":{}}},"id":7362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":7364,"nodeType":"ExpressionStatement","src":"23788:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7365,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7356,"src":"23828:10:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7353,"src":"23842:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7374,"nodeType":"IfStatement","src":"23824:98:24","trueBody":{"id":7373,"nodeType":"Block","src":"23849:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:24","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7353,"src":"23905:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7368,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"23870:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7372,"nodeType":"RevertStatement","src":"23863:48:24"}]}}]},"documentation":{"id":7351,"nodeType":"StructuredDocumentation","src":"23387:312:24","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7376,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:24","nodeType":"FunctionDefinition","parameters":{"id":7354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7353,"mutability":"mutable","name":"value","nameLocation":"23729:5:24","nodeType":"VariableDeclaration","scope":7376,"src":"23722:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7352,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:24"},"returnParameters":{"id":7357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7356,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:24","nodeType":"VariableDeclaration","scope":7376,"src":"23759:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":7355,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:24"},"scope":7911,"src":"23704:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7401,"nodeType":"Block","src":"24325:150:24","statements":[{"expression":{"id":7389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7384,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7382,"src":"24335:10:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7379,"src":"24355:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":7385,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:24","typeDescriptions":{}}},"id":7388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":7390,"nodeType":"ExpressionStatement","src":"24335:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7391,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7382,"src":"24375:10:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7379,"src":"24389:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7400,"nodeType":"IfStatement","src":"24371:98:24","trueBody":{"id":7399,"nodeType":"Block","src":"24396:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:24","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7379,"src":"24452:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7394,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"24417:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7398,"nodeType":"RevertStatement","src":"24410:48:24"}]}}]},"documentation":{"id":7377,"nodeType":"StructuredDocumentation","src":"23934:312:24","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7402,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:24","nodeType":"FunctionDefinition","parameters":{"id":7380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7379,"mutability":"mutable","name":"value","nameLocation":"24276:5:24","nodeType":"VariableDeclaration","scope":7402,"src":"24269:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7378,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:24"},"returnParameters":{"id":7383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7382,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:24","nodeType":"VariableDeclaration","scope":7402,"src":"24306:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":7381,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:24"},"scope":7911,"src":"24251:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7427,"nodeType":"Block","src":"24872:150:24","statements":[{"expression":{"id":7415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7410,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7408,"src":"24882:10:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7405,"src":"24902:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":7411,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:24","typeDescriptions":{}}},"id":7414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":7416,"nodeType":"ExpressionStatement","src":"24882:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7417,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7408,"src":"24922:10:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7405,"src":"24936:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7426,"nodeType":"IfStatement","src":"24918:98:24","trueBody":{"id":7425,"nodeType":"Block","src":"24943:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:24","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7405,"src":"24999:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7420,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"24964:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7424,"nodeType":"RevertStatement","src":"24957:48:24"}]}}]},"documentation":{"id":7403,"nodeType":"StructuredDocumentation","src":"24481:312:24","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7428,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:24","nodeType":"FunctionDefinition","parameters":{"id":7406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7405,"mutability":"mutable","name":"value","nameLocation":"24823:5:24","nodeType":"VariableDeclaration","scope":7428,"src":"24816:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7404,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:24"},"returnParameters":{"id":7409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7408,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:24","nodeType":"VariableDeclaration","scope":7428,"src":"24853:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":7407,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:24"},"scope":7911,"src":"24798:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7453,"nodeType":"Block","src":"25419:150:24","statements":[{"expression":{"id":7441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7436,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7434,"src":"25429:10:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7431,"src":"25449:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":7437,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:24","typeDescriptions":{}}},"id":7440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":7442,"nodeType":"ExpressionStatement","src":"25429:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7443,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7434,"src":"25469:10:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7431,"src":"25483:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7452,"nodeType":"IfStatement","src":"25465:98:24","trueBody":{"id":7451,"nodeType":"Block","src":"25490:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:24","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7431,"src":"25546:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7446,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"25511:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7450,"nodeType":"RevertStatement","src":"25504:48:24"}]}}]},"documentation":{"id":7429,"nodeType":"StructuredDocumentation","src":"25028:312:24","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7454,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:24","nodeType":"FunctionDefinition","parameters":{"id":7432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7431,"mutability":"mutable","name":"value","nameLocation":"25370:5:24","nodeType":"VariableDeclaration","scope":7454,"src":"25363:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7430,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:24"},"returnParameters":{"id":7435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7434,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:24","nodeType":"VariableDeclaration","scope":7454,"src":"25400:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":7433,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:24"},"scope":7911,"src":"25345:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7479,"nodeType":"Block","src":"25966:150:24","statements":[{"expression":{"id":7467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7462,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7460,"src":"25976:10:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7457,"src":"25996:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":7463,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:24","typeDescriptions":{}}},"id":7466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7468,"nodeType":"ExpressionStatement","src":"25976:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7469,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7460,"src":"26016:10:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7457,"src":"26030:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7478,"nodeType":"IfStatement","src":"26012:98:24","trueBody":{"id":7477,"nodeType":"Block","src":"26037:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7457,"src":"26093:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7472,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"26058:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7476,"nodeType":"RevertStatement","src":"26051:48:24"}]}}]},"documentation":{"id":7455,"nodeType":"StructuredDocumentation","src":"25575:312:24","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7480,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:24","nodeType":"FunctionDefinition","parameters":{"id":7458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7457,"mutability":"mutable","name":"value","nameLocation":"25917:5:24","nodeType":"VariableDeclaration","scope":7480,"src":"25910:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7456,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:24"},"returnParameters":{"id":7461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7460,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:24","nodeType":"VariableDeclaration","scope":7480,"src":"25947:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7459,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:24"},"scope":7911,"src":"25892:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7505,"nodeType":"Block","src":"26513:150:24","statements":[{"expression":{"id":7493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7488,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7486,"src":"26523:10:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7491,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7483,"src":"26543:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":7489,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:24","typeDescriptions":{}}},"id":7492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":7494,"nodeType":"ExpressionStatement","src":"26523:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7495,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7486,"src":"26563:10:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7483,"src":"26577:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7504,"nodeType":"IfStatement","src":"26559:98:24","trueBody":{"id":7503,"nodeType":"Block","src":"26584:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:24","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7483,"src":"26640:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7498,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"26605:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7502,"nodeType":"RevertStatement","src":"26598:48:24"}]}}]},"documentation":{"id":7481,"nodeType":"StructuredDocumentation","src":"26122:312:24","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7506,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:24","nodeType":"FunctionDefinition","parameters":{"id":7484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7483,"mutability":"mutable","name":"value","nameLocation":"26464:5:24","nodeType":"VariableDeclaration","scope":7506,"src":"26457:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7482,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:24"},"returnParameters":{"id":7487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7486,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:24","nodeType":"VariableDeclaration","scope":7506,"src":"26494:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":7485,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:24"},"scope":7911,"src":"26439:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7531,"nodeType":"Block","src":"27060:150:24","statements":[{"expression":{"id":7519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7514,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7512,"src":"27070:10:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7509,"src":"27090:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":7515,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:24","typeDescriptions":{}}},"id":7518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":7520,"nodeType":"ExpressionStatement","src":"27070:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7521,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7512,"src":"27110:10:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7509,"src":"27124:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7530,"nodeType":"IfStatement","src":"27106:98:24","trueBody":{"id":7529,"nodeType":"Block","src":"27131:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:24","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7509,"src":"27187:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7524,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"27152:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7528,"nodeType":"RevertStatement","src":"27145:48:24"}]}}]},"documentation":{"id":7507,"nodeType":"StructuredDocumentation","src":"26669:312:24","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7532,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:24","nodeType":"FunctionDefinition","parameters":{"id":7510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7509,"mutability":"mutable","name":"value","nameLocation":"27011:5:24","nodeType":"VariableDeclaration","scope":7532,"src":"27004:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7508,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:24"},"returnParameters":{"id":7513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7512,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:24","nodeType":"VariableDeclaration","scope":7532,"src":"27041:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":7511,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:24"},"scope":7911,"src":"26986:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7557,"nodeType":"Block","src":"27607:150:24","statements":[{"expression":{"id":7545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7540,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"27617:10:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7535,"src":"27637:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7541,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:24","typeDescriptions":{}}},"id":7544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7546,"nodeType":"ExpressionStatement","src":"27617:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7547,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"27657:10:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7535,"src":"27671:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7556,"nodeType":"IfStatement","src":"27653:98:24","trueBody":{"id":7555,"nodeType":"Block","src":"27678:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:24","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7535,"src":"27734:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7550,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"27699:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7554,"nodeType":"RevertStatement","src":"27692:48:24"}]}}]},"documentation":{"id":7533,"nodeType":"StructuredDocumentation","src":"27216:312:24","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7558,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:24","nodeType":"FunctionDefinition","parameters":{"id":7536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7535,"mutability":"mutable","name":"value","nameLocation":"27558:5:24","nodeType":"VariableDeclaration","scope":7558,"src":"27551:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7534,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:24"},"returnParameters":{"id":7539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7538,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:24","nodeType":"VariableDeclaration","scope":7558,"src":"27588:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7537,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:24"},"scope":7911,"src":"27533:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7583,"nodeType":"Block","src":"28147:148:24","statements":[{"expression":{"id":7571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7566,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7564,"src":"28157:10:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"28176:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7567,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:24","typeDescriptions":{}}},"id":7570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7572,"nodeType":"ExpressionStatement","src":"28157:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7573,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7564,"src":"28196:10:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"28210:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7582,"nodeType":"IfStatement","src":"28192:97:24","trueBody":{"id":7581,"nodeType":"Block","src":"28217:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:24","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"28272:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7576,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"28238:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7580,"nodeType":"RevertStatement","src":"28231:47:24"}]}}]},"documentation":{"id":7559,"nodeType":"StructuredDocumentation","src":"27763:307:24","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7584,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:24","nodeType":"FunctionDefinition","parameters":{"id":7562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7561,"mutability":"mutable","name":"value","nameLocation":"28099:5:24","nodeType":"VariableDeclaration","scope":7584,"src":"28092:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7560,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:24"},"returnParameters":{"id":7565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7564,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:24","nodeType":"VariableDeclaration","scope":7584,"src":"28129:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7563,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:24"},"scope":7911,"src":"28075:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7609,"nodeType":"Block","src":"28685:148:24","statements":[{"expression":{"id":7597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7592,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"28695:10:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"28714:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7593,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:24","typeDescriptions":{}}},"id":7596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7598,"nodeType":"ExpressionStatement","src":"28695:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7599,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"28734:10:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"28748:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7608,"nodeType":"IfStatement","src":"28730:97:24","trueBody":{"id":7607,"nodeType":"Block","src":"28755:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:24","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"28810:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7602,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"28776:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7606,"nodeType":"RevertStatement","src":"28769:47:24"}]}}]},"documentation":{"id":7585,"nodeType":"StructuredDocumentation","src":"28301:307:24","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7610,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:24","nodeType":"FunctionDefinition","parameters":{"id":7588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7587,"mutability":"mutable","name":"value","nameLocation":"28637:5:24","nodeType":"VariableDeclaration","scope":7610,"src":"28630:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7586,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:24"},"returnParameters":{"id":7591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7590,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:24","nodeType":"VariableDeclaration","scope":7610,"src":"28667:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7589,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:24"},"scope":7911,"src":"28613:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7635,"nodeType":"Block","src":"29223:148:24","statements":[{"expression":{"id":7623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7618,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7616,"src":"29233:10:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7613,"src":"29252:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7619,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:24","typeDescriptions":{}}},"id":7622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7624,"nodeType":"ExpressionStatement","src":"29233:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7625,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7616,"src":"29272:10:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7613,"src":"29286:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7634,"nodeType":"IfStatement","src":"29268:97:24","trueBody":{"id":7633,"nodeType":"Block","src":"29293:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:24","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7613,"src":"29348:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7628,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"29314:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7632,"nodeType":"RevertStatement","src":"29307:47:24"}]}}]},"documentation":{"id":7611,"nodeType":"StructuredDocumentation","src":"28839:307:24","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7636,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:24","nodeType":"FunctionDefinition","parameters":{"id":7614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7613,"mutability":"mutable","name":"value","nameLocation":"29175:5:24","nodeType":"VariableDeclaration","scope":7636,"src":"29168:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7612,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:24"},"returnParameters":{"id":7617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7616,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:24","nodeType":"VariableDeclaration","scope":7636,"src":"29205:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7615,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:24"},"scope":7911,"src":"29151:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7661,"nodeType":"Block","src":"29761:148:24","statements":[{"expression":{"id":7649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7644,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7642,"src":"29771:10:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"29790:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7645,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:24","typeDescriptions":{}}},"id":7648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7650,"nodeType":"ExpressionStatement","src":"29771:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7651,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7642,"src":"29810:10:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"29824:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7660,"nodeType":"IfStatement","src":"29806:97:24","trueBody":{"id":7659,"nodeType":"Block","src":"29831:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:24","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"29886:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7654,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"29852:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7658,"nodeType":"RevertStatement","src":"29845:47:24"}]}}]},"documentation":{"id":7637,"nodeType":"StructuredDocumentation","src":"29377:307:24","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7662,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:24","nodeType":"FunctionDefinition","parameters":{"id":7640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7639,"mutability":"mutable","name":"value","nameLocation":"29713:5:24","nodeType":"VariableDeclaration","scope":7662,"src":"29706:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7638,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:24"},"returnParameters":{"id":7643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7642,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:24","nodeType":"VariableDeclaration","scope":7662,"src":"29743:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7641,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:24"},"scope":7911,"src":"29689:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7687,"nodeType":"Block","src":"30299:148:24","statements":[{"expression":{"id":7675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7670,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7668,"src":"30309:10:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7665,"src":"30328:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7671,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:24","typeDescriptions":{}}},"id":7674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7676,"nodeType":"ExpressionStatement","src":"30309:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7677,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7668,"src":"30348:10:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7665,"src":"30362:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7686,"nodeType":"IfStatement","src":"30344:97:24","trueBody":{"id":7685,"nodeType":"Block","src":"30369:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7665,"src":"30424:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7680,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"30390:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7684,"nodeType":"RevertStatement","src":"30383:47:24"}]}}]},"documentation":{"id":7663,"nodeType":"StructuredDocumentation","src":"29915:307:24","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7688,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:24","nodeType":"FunctionDefinition","parameters":{"id":7666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7665,"mutability":"mutable","name":"value","nameLocation":"30251:5:24","nodeType":"VariableDeclaration","scope":7688,"src":"30244:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7664,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:24"},"returnParameters":{"id":7669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7668,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:24","nodeType":"VariableDeclaration","scope":7688,"src":"30281:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7667,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:24"},"scope":7911,"src":"30227:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7713,"nodeType":"Block","src":"30837:148:24","statements":[{"expression":{"id":7701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7696,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7694,"src":"30847:10:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7691,"src":"30866:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7697,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:24","typeDescriptions":{}}},"id":7700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7702,"nodeType":"ExpressionStatement","src":"30847:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7703,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7694,"src":"30886:10:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7691,"src":"30900:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7712,"nodeType":"IfStatement","src":"30882:97:24","trueBody":{"id":7711,"nodeType":"Block","src":"30907:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:24","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7691,"src":"30962:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7706,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"30928:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7710,"nodeType":"RevertStatement","src":"30921:47:24"}]}}]},"documentation":{"id":7689,"nodeType":"StructuredDocumentation","src":"30453:307:24","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7714,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:24","nodeType":"FunctionDefinition","parameters":{"id":7692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7691,"mutability":"mutable","name":"value","nameLocation":"30789:5:24","nodeType":"VariableDeclaration","scope":7714,"src":"30782:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7690,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:24"},"returnParameters":{"id":7695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7694,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:24","nodeType":"VariableDeclaration","scope":7714,"src":"30819:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7693,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:24"},"scope":7911,"src":"30765:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7739,"nodeType":"Block","src":"31375:148:24","statements":[{"expression":{"id":7727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7722,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7720,"src":"31385:10:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7717,"src":"31404:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7723,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:24","typeDescriptions":{}}},"id":7726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7728,"nodeType":"ExpressionStatement","src":"31385:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7729,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7720,"src":"31424:10:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7717,"src":"31438:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7738,"nodeType":"IfStatement","src":"31420:97:24","trueBody":{"id":7737,"nodeType":"Block","src":"31445:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:24","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7717,"src":"31500:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7732,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"31466:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7736,"nodeType":"RevertStatement","src":"31459:47:24"}]}}]},"documentation":{"id":7715,"nodeType":"StructuredDocumentation","src":"30991:307:24","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7740,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:24","nodeType":"FunctionDefinition","parameters":{"id":7718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7717,"mutability":"mutable","name":"value","nameLocation":"31327:5:24","nodeType":"VariableDeclaration","scope":7740,"src":"31320:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7716,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:24"},"returnParameters":{"id":7721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7720,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:24","nodeType":"VariableDeclaration","scope":7740,"src":"31357:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7719,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:24"},"scope":7911,"src":"31303:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7765,"nodeType":"Block","src":"31913:148:24","statements":[{"expression":{"id":7753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7748,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7746,"src":"31923:10:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7743,"src":"31942:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7749,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:24","typeDescriptions":{}}},"id":7752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7754,"nodeType":"ExpressionStatement","src":"31923:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7755,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7746,"src":"31962:10:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7743,"src":"31976:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7764,"nodeType":"IfStatement","src":"31958:97:24","trueBody":{"id":7763,"nodeType":"Block","src":"31983:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:24","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7743,"src":"32038:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7758,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"32004:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7762,"nodeType":"RevertStatement","src":"31997:47:24"}]}}]},"documentation":{"id":7741,"nodeType":"StructuredDocumentation","src":"31529:307:24","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7766,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:24","nodeType":"FunctionDefinition","parameters":{"id":7744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7743,"mutability":"mutable","name":"value","nameLocation":"31865:5:24","nodeType":"VariableDeclaration","scope":7766,"src":"31858:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7742,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:24"},"returnParameters":{"id":7747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7746,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:24","nodeType":"VariableDeclaration","scope":7766,"src":"31895:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7745,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:24"},"scope":7911,"src":"31841:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7791,"nodeType":"Block","src":"32451:148:24","statements":[{"expression":{"id":7779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7774,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"32461:10:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7769,"src":"32480:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7775,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:24","typeDescriptions":{}}},"id":7778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7780,"nodeType":"ExpressionStatement","src":"32461:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7781,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"32500:10:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7769,"src":"32514:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7790,"nodeType":"IfStatement","src":"32496:97:24","trueBody":{"id":7789,"nodeType":"Block","src":"32521:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7769,"src":"32576:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7784,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"32542:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7788,"nodeType":"RevertStatement","src":"32535:47:24"}]}}]},"documentation":{"id":7767,"nodeType":"StructuredDocumentation","src":"32067:307:24","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7792,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:24","nodeType":"FunctionDefinition","parameters":{"id":7770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7769,"mutability":"mutable","name":"value","nameLocation":"32403:5:24","nodeType":"VariableDeclaration","scope":7792,"src":"32396:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7768,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:24"},"returnParameters":{"id":7773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7772,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:24","nodeType":"VariableDeclaration","scope":7792,"src":"32433:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7771,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:24"},"scope":7911,"src":"32379:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7817,"nodeType":"Block","src":"32989:148:24","statements":[{"expression":{"id":7805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7800,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7798,"src":"32999:10:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7795,"src":"33018:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7801,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:24","typeDescriptions":{}}},"id":7804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7806,"nodeType":"ExpressionStatement","src":"32999:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7807,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7798,"src":"33038:10:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7795,"src":"33052:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7816,"nodeType":"IfStatement","src":"33034:97:24","trueBody":{"id":7815,"nodeType":"Block","src":"33059:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:24","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7795,"src":"33114:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7810,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"33080:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7814,"nodeType":"RevertStatement","src":"33073:47:24"}]}}]},"documentation":{"id":7793,"nodeType":"StructuredDocumentation","src":"32605:307:24","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7818,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:24","nodeType":"FunctionDefinition","parameters":{"id":7796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7795,"mutability":"mutable","name":"value","nameLocation":"32941:5:24","nodeType":"VariableDeclaration","scope":7818,"src":"32934:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7794,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:24"},"returnParameters":{"id":7799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7798,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:24","nodeType":"VariableDeclaration","scope":7818,"src":"32971:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7797,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:24"},"scope":7911,"src":"32917:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7843,"nodeType":"Block","src":"33527:148:24","statements":[{"expression":{"id":7831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7826,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7824,"src":"33537:10:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7821,"src":"33556:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":7827,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:24","typeDescriptions":{}}},"id":7830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":7832,"nodeType":"ExpressionStatement","src":"33537:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7833,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7824,"src":"33576:10:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7821,"src":"33590:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7842,"nodeType":"IfStatement","src":"33572:97:24","trueBody":{"id":7841,"nodeType":"Block","src":"33597:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7821,"src":"33652:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7836,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"33618:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7840,"nodeType":"RevertStatement","src":"33611:47:24"}]}}]},"documentation":{"id":7819,"nodeType":"StructuredDocumentation","src":"33143:307:24","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7844,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:24","nodeType":"FunctionDefinition","parameters":{"id":7822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7821,"mutability":"mutable","name":"value","nameLocation":"33479:5:24","nodeType":"VariableDeclaration","scope":7844,"src":"33472:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7820,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:24"},"returnParameters":{"id":7825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7824,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:24","nodeType":"VariableDeclaration","scope":7844,"src":"33509:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7823,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:24"},"scope":7911,"src":"33455:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7869,"nodeType":"Block","src":"34058:146:24","statements":[{"expression":{"id":7857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7852,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7850,"src":"34068:10:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7847,"src":"34086:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7853,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:24","typeDescriptions":{}}},"id":7856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7858,"nodeType":"ExpressionStatement","src":"34068:24:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7859,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7850,"src":"34106:10:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7847,"src":"34120:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7868,"nodeType":"IfStatement","src":"34102:96:24","trueBody":{"id":7867,"nodeType":"Block","src":"34127:71:24","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7847,"src":"34181:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7862,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"34148:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7866,"nodeType":"RevertStatement","src":"34141:46:24"}]}}]},"documentation":{"id":7845,"nodeType":"StructuredDocumentation","src":"33681:302:24","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7870,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:24","nodeType":"FunctionDefinition","parameters":{"id":7848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7847,"mutability":"mutable","name":"value","nameLocation":"34011:5:24","nodeType":"VariableDeclaration","scope":7870,"src":"34004:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7846,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:24"},"returnParameters":{"id":7851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7850,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:24","nodeType":"VariableDeclaration","scope":7870,"src":"34041:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7849,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:24"},"scope":7911,"src":"33988:216:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7899,"nodeType":"Block","src":"34444:250:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7873,"src":"34557:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7882,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7881,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:24","memberName":"max","nodeType":"MemberAccess","src":"34573:16:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7879,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:24","typeDescriptions":{}}},"id":7886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7893,"nodeType":"IfStatement","src":"34553:105:24","trueBody":{"id":7892,"nodeType":"Block","src":"34592:66:24","statements":[{"errorCall":{"arguments":[{"id":7889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7873,"src":"34641:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7888,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6173,"src":"34613:27:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7891,"nodeType":"RevertStatement","src":"34606:41:24"}]}},{"expression":{"arguments":[{"id":7896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7873,"src":"34681:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7894,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:24","typeDescriptions":{}}},"id":7897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7877,"id":7898,"nodeType":"Return","src":"34667:20:24"}]},"documentation":{"id":7871,"nodeType":"StructuredDocumentation","src":"34210:165:24","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":7900,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:24","nodeType":"FunctionDefinition","parameters":{"id":7874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7873,"mutability":"mutable","name":"value","nameLocation":"34406:5:24","nodeType":"VariableDeclaration","scope":7900,"src":"34398:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7872,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:24"},"returnParameters":{"id":7877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7900,"src":"34436:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7875,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:24"},"scope":7911,"src":"34380:314:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7909,"nodeType":"Block","src":"34853:87:24","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:24","statements":[{"nodeType":"YulAssignment","src":"34902:22:24","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:24"},"nodeType":"YulFunctionCall","src":"34914:9:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:24"},"nodeType":"YulFunctionCall","src":"34907:17:24"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7903,"isOffset":false,"isSlot":false,"src":"34921:1:24","valueSize":1},{"declaration":7906,"isOffset":false,"isSlot":false,"src":"34902:1:24","valueSize":1}],"flags":["memory-safe"],"id":7908,"nodeType":"InlineAssembly","src":"34863:71:24"}]},"documentation":{"id":7901,"nodeType":"StructuredDocumentation","src":"34700:90:24","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":7910,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:24","nodeType":"FunctionDefinition","parameters":{"id":7904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7903,"mutability":"mutable","name":"b","nameLocation":"34816:1:24","nodeType":"VariableDeclaration","scope":7910,"src":"34811:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7902,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:24"},"returnParameters":{"id":7907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7906,"mutability":"mutable","name":"u","nameLocation":"34850:1:24","nodeType":"VariableDeclaration","scope":7910,"src":"34842:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7905,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:24"},"scope":7911,"src":"34795:145:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7912,"src":"769:34173:24","usedErrors":[6156,6161,6168,6173],"usedEvents":[]}],"src":"192:34751:24"},"id":24},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[7911],"SignedMath":[8055]},"id":8056,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7913,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:25"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":7915,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8056,"sourceUnit":7912,"src":"135:40:25","symbolAliases":[{"foreign":{"id":7914,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"143:8:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":7916,"nodeType":"StructuredDocumentation","src":"177:80:25","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":8055,"linearizedBaseContracts":[8055],"name":"SignedMath","nameLocation":"266:10:25","nodeType":"ContractDefinition","nodes":[{"body":{"id":7945,"nodeType":"Block","src":"746:215:25","statements":[{"id":7944,"nodeType":"UncheckedBlock","src":"756:199:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7928,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7923,"src":"894:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7929,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7921,"src":"900:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7930,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7923,"src":"904:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7932,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":7937,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7919,"src":"932:9:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7935,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"916:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7911_$","typeString":"type(library SafeCast)"}},"id":7936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7910,"src":"916:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7933,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:25","typeDescriptions":{}}},"id":7939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7941,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7927,"id":7943,"nodeType":"Return","src":"887:57:25"}]}]},"documentation":{"id":7917,"nodeType":"StructuredDocumentation","src":"283:374:25","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7946,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:25","nodeType":"FunctionDefinition","parameters":{"id":7924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7919,"mutability":"mutable","name":"condition","nameLocation":"684:9:25","nodeType":"VariableDeclaration","scope":7946,"src":"679:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7918,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7921,"mutability":"mutable","name":"a","nameLocation":"702:1:25","nodeType":"VariableDeclaration","scope":7946,"src":"695:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7920,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7923,"mutability":"mutable","name":"b","nameLocation":"712:1:25","nodeType":"VariableDeclaration","scope":7946,"src":"705:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7922,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:25"},"returnParameters":{"id":7927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7946,"src":"738:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7925,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:25"},"scope":8055,"src":"662:299:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7964,"nodeType":"Block","src":"1102:44:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7957,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7949,"src":"1127:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7958,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7951,"src":"1131:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7960,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7949,"src":"1134:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7961,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7951,"src":"1137:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7956,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7946,"src":"1119:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7955,"id":7963,"nodeType":"Return","src":"1112:27:25"}]},"documentation":{"id":7947,"nodeType":"StructuredDocumentation","src":"967:66:25","text":" @dev Returns the largest of two signed numbers."},"id":7965,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:25","nodeType":"FunctionDefinition","parameters":{"id":7952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7949,"mutability":"mutable","name":"a","nameLocation":"1058:1:25","nodeType":"VariableDeclaration","scope":7965,"src":"1051:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7948,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7951,"mutability":"mutable","name":"b","nameLocation":"1068:1:25","nodeType":"VariableDeclaration","scope":7965,"src":"1061:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7950,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:25"},"returnParameters":{"id":7955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7965,"src":"1094:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7953,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:25"},"scope":8055,"src":"1038:108:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7983,"nodeType":"Block","src":"1288:44:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7976,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7968,"src":"1313:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7977,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7970,"src":"1317:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7979,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7968,"src":"1320:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7980,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7970,"src":"1323:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7975,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7946,"src":"1305:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7974,"id":7982,"nodeType":"Return","src":"1298:27:25"}]},"documentation":{"id":7966,"nodeType":"StructuredDocumentation","src":"1152:67:25","text":" @dev Returns the smallest of two signed numbers."},"id":7984,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:25","nodeType":"FunctionDefinition","parameters":{"id":7971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7968,"mutability":"mutable","name":"a","nameLocation":"1244:1:25","nodeType":"VariableDeclaration","scope":7984,"src":"1237:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7967,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7970,"mutability":"mutable","name":"b","nameLocation":"1254:1:25","nodeType":"VariableDeclaration","scope":7984,"src":"1247:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7969,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:25"},"returnParameters":{"id":7974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7984,"src":"1280:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7972,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:25"},"scope":8055,"src":"1224:108:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8027,"nodeType":"Block","src":"1537:162:25","statements":[{"assignments":[7995],"declarations":[{"constant":false,"id":7995,"mutability":"mutable","name":"x","nameLocation":"1606:1:25","nodeType":"VariableDeclaration","scope":8027,"src":"1599:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7994,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8008,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7996,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7987,"src":"1611:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7997,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7989,"src":"1615:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7999,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8000,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7987,"src":"1622:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8001,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7989,"src":"1626:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8003,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":8004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8006,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:25"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8009,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7995,"src":"1651:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8014,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7995,"src":"1671:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8012,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:25","typeDescriptions":{}}},"id":8015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":8016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:25","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8010,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:25","typeDescriptions":{}}},"id":8018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8019,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7987,"src":"1685:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8020,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7989,"src":"1689:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8022,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8024,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7993,"id":8026,"nodeType":"Return","src":"1644:48:25"}]},"documentation":{"id":7985,"nodeType":"StructuredDocumentation","src":"1338:126:25","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":8028,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:25","nodeType":"FunctionDefinition","parameters":{"id":7990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7987,"mutability":"mutable","name":"a","nameLocation":"1493:1:25","nodeType":"VariableDeclaration","scope":8028,"src":"1486:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7986,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7989,"mutability":"mutable","name":"b","nameLocation":"1503:1:25","nodeType":"VariableDeclaration","scope":8028,"src":"1496:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7988,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:25"},"returnParameters":{"id":7993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7992,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8028,"src":"1529:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7991,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:25"},"scope":8055,"src":"1469:230:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8053,"nodeType":"Block","src":"1843:767:25","statements":[{"id":8052,"nodeType":"UncheckedBlock","src":"1853:751:25","statements":[{"assignments":[8037],"declarations":[{"constant":false,"id":8037,"mutability":"mutable","name":"mask","nameLocation":"2424:4:25","nodeType":"VariableDeclaration","scope":8052,"src":"2417:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8036,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8041,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8038,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8031,"src":"2431:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":8039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:25","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8044,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8031,"src":"2576:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8045,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"2580:4:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8047,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8048,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"2588:4:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8042,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:25","typeDescriptions":{}}},"id":8050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8035,"id":8051,"nodeType":"Return","src":"2560:33:25"}]}]},"documentation":{"id":8029,"nodeType":"StructuredDocumentation","src":"1705:78:25","text":" @dev Returns the absolute unsigned value of a signed value."},"id":8054,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:25","nodeType":"FunctionDefinition","parameters":{"id":8032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8031,"mutability":"mutable","name":"n","nameLocation":"1808:1:25","nodeType":"VariableDeclaration","scope":8054,"src":"1801:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8030,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:25"},"returnParameters":{"id":8035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8054,"src":"1834:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8033,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:25"},"scope":8055,"src":"1788:822:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8056,"src":"258:2354:25","usedErrors":[],"usedEvents":[]}],"src":"109:2504:25"},"id":25},"@openzeppelin/contracts/utils/structs/Checkpoints.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/Checkpoints.sol","exportedSymbols":{"Checkpoints":[9636],"Math":[6146]},"id":9637,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8057,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"201:24:26"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"../math/Math.sol","id":8059,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9637,"sourceUnit":6147,"src":"227:38:26","symbolAliases":[{"foreign":{"id":8058,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"235:4:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Checkpoints","contractDependencies":[],"contractKind":"library","documentation":{"id":8060,"nodeType":"StructuredDocumentation","src":"267:400:26","text":" @dev This library defines the `Trace*` struct, for checkpointing values as they change at different points in\n time, and later looking up past values by block number. See {Votes} as an example.\n To create a history of checkpoints define a variable type `Checkpoints.Trace*` in your contract, and store a new\n checkpoint for the current transaction block using the {push} function."},"fullyImplemented":true,"id":9636,"linearizedBaseContracts":[9636],"name":"Checkpoints","nameLocation":"676:11:26","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":8061,"nodeType":"StructuredDocumentation","src":"694:82:26","text":" @dev A value was attempted to be inserted on a past checkpoint."},"errorSelector":"2520601d","id":8063,"name":"CheckpointUnorderedInsertion","nameLocation":"787:28:26","nodeType":"ErrorDefinition","parameters":{"id":8062,"nodeType":"ParameterList","parameters":[],"src":"815:2:26"},"src":"781:37:26"},{"canonicalName":"Checkpoints.Trace224","id":8068,"members":[{"constant":false,"id":8067,"mutability":"mutable","name":"_checkpoints","nameLocation":"866:12:26","nodeType":"VariableDeclaration","scope":8068,"src":"850:28:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":8065,"nodeType":"UserDefinedTypeName","pathNode":{"id":8064,"name":"Checkpoint224","nameLocations":["850:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":8073,"src":"850:13:26"},"referencedDeclaration":8073,"src":"850:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8073_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":8066,"nodeType":"ArrayTypeName","src":"850:15:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"}],"name":"Trace224","nameLocation":"831:8:26","nodeType":"StructDefinition","scope":9636,"src":"824:61:26","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint224","id":8073,"members":[{"constant":false,"id":8070,"mutability":"mutable","name":"_key","nameLocation":"929:4:26","nodeType":"VariableDeclaration","scope":8073,"src":"922:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8069,"name":"uint32","nodeType":"ElementaryTypeName","src":"922:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8072,"mutability":"mutable","name":"_value","nameLocation":"951:6:26","nodeType":"VariableDeclaration","scope":8073,"src":"943:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8071,"name":"uint224","nodeType":"ElementaryTypeName","src":"943:7:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"name":"Checkpoint224","nameLocation":"898:13:26","nodeType":"StructDefinition","scope":9636,"src":"891:73:26","visibility":"public"},{"body":{"id":8095,"nodeType":"Block","src":"1425:62:26","statements":[{"expression":{"arguments":[{"expression":{"id":8089,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8077,"src":"1450:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8068_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8090,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1455:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8067,"src":"1450:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":8091,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8079,"src":"1469:3:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8081,"src":"1474:5:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":8088,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[8468,8992,9516],"referencedDeclaration":8468,"src":"1442:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint224_$returns$_t_uint224_$_t_uint224_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint224) returns (uint224,uint224)"}},"id":8093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1442:38:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":8087,"id":8094,"nodeType":"Return","src":"1435:45:26"}]},"documentation":{"id":8074,"nodeType":"StructuredDocumentation","src":"970:302:26","text":" @dev Pushes a (`key`, `value`) pair into a Trace224 so that it is stored as the checkpoint.\n Returns previous value and new value.\n IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint32).max` key set will disable the\n library."},"id":8096,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"1286:4:26","nodeType":"FunctionDefinition","parameters":{"id":8082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8077,"mutability":"mutable","name":"self","nameLocation":"1317:4:26","nodeType":"VariableDeclaration","scope":8096,"src":"1300:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8068_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":8076,"nodeType":"UserDefinedTypeName","pathNode":{"id":8075,"name":"Trace224","nameLocations":["1300:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":8068,"src":"1300:8:26"},"referencedDeclaration":8068,"src":"1300:8:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8068_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":8079,"mutability":"mutable","name":"key","nameLocation":"1338:3:26","nodeType":"VariableDeclaration","scope":8096,"src":"1331:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8078,"name":"uint32","nodeType":"ElementaryTypeName","src":"1331:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8081,"mutability":"mutable","name":"value","nameLocation":"1359:5:26","nodeType":"VariableDeclaration","scope":8096,"src":"1351:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8080,"name":"uint224","nodeType":"ElementaryTypeName","src":"1351:7:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"1290:80:26"},"returnParameters":{"id":8087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8084,"mutability":"mutable","name":"oldValue","nameLocation":"1397:8:26","nodeType":"VariableDeclaration","scope":8096,"src":"1389:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8083,"name":"uint224","nodeType":"ElementaryTypeName","src":"1389:7:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":8086,"mutability":"mutable","name":"newValue","nameLocation":"1415:8:26","nodeType":"VariableDeclaration","scope":8096,"src":"1407:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8085,"name":"uint224","nodeType":"ElementaryTypeName","src":"1407:7:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"1388:36:26"},"scope":9636,"src":"1277:210:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8135,"nodeType":"Block","src":"1740:207:26","statements":[{"assignments":[8108],"declarations":[{"constant":false,"id":8108,"mutability":"mutable","name":"len","nameLocation":"1758:3:26","nodeType":"VariableDeclaration","scope":8135,"src":"1750:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8107,"name":"uint256","nodeType":"ElementaryTypeName","src":"1750:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8112,"initialValue":{"expression":{"expression":{"id":8109,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"1764:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8068_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8110,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1769:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8067,"src":"1764:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":8111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1782:6:26","memberName":"length","nodeType":"MemberAccess","src":"1764:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1750:38:26"},{"assignments":[8114],"declarations":[{"constant":false,"id":8114,"mutability":"mutable","name":"pos","nameLocation":"1806:3:26","nodeType":"VariableDeclaration","scope":8135,"src":"1798:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8113,"name":"uint256","nodeType":"ElementaryTypeName","src":"1798:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8122,"initialValue":{"arguments":[{"expression":{"id":8116,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"1831:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8068_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8117,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1836:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8067,"src":"1831:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":8118,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8102,"src":"1850:3:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":8119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1855:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8120,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8108,"src":"1858:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8115,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8572,9096,9620],"referencedDeclaration":8572,"src":"1812:18:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":8121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1812:50:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1798:64:26"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8123,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8114,"src":"1879:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8124,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8108,"src":"1886:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8128,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"1910:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8068_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8129,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1915:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8067,"src":"1910:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":8130,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8114,"src":"1929:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8127,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8587,9111,9635],"referencedDeclaration":8587,"src":"1896:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$8073_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1896:37:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8073_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8132,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1934:6:26","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8072,"src":"1896:44:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":8133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1879:61:26","trueExpression":{"hexValue":"30","id":8126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1892:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":8106,"id":8134,"nodeType":"Return","src":"1872:68:26"}]},"documentation":{"id":8097,"nodeType":"StructuredDocumentation","src":"1493:154:26","text":" @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n there is none."},"id":8136,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"1661:11:26","nodeType":"FunctionDefinition","parameters":{"id":8103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8100,"mutability":"mutable","name":"self","nameLocation":"1690:4:26","nodeType":"VariableDeclaration","scope":8136,"src":"1673:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8068_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":8099,"nodeType":"UserDefinedTypeName","pathNode":{"id":8098,"name":"Trace224","nameLocations":["1673:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":8068,"src":"1673:8:26"},"referencedDeclaration":8068,"src":"1673:8:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8068_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":8102,"mutability":"mutable","name":"key","nameLocation":"1703:3:26","nodeType":"VariableDeclaration","scope":8136,"src":"1696:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8101,"name":"uint32","nodeType":"ElementaryTypeName","src":"1696:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1672:35:26"},"returnParameters":{"id":8106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8136,"src":"1731:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8104,"name":"uint224","nodeType":"ElementaryTypeName","src":"1731:7:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"1730:9:26"},"scope":9636,"src":"1652:295:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8177,"nodeType":"Block","src":"2202:209:26","statements":[{"assignments":[8148],"declarations":[{"constant":false,"id":8148,"mutability":"mutable","name":"len","nameLocation":"2220:3:26","nodeType":"VariableDeclaration","scope":8177,"src":"2212:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8147,"name":"uint256","nodeType":"ElementaryTypeName","src":"2212:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8152,"initialValue":{"expression":{"expression":{"id":8149,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8140,"src":"2226:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8068_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8150,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2231:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8067,"src":"2226:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":8151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2244:6:26","memberName":"length","nodeType":"MemberAccess","src":"2226:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2212:38:26"},{"assignments":[8154],"declarations":[{"constant":false,"id":8154,"mutability":"mutable","name":"pos","nameLocation":"2268:3:26","nodeType":"VariableDeclaration","scope":8177,"src":"2260:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8153,"name":"uint256","nodeType":"ElementaryTypeName","src":"2260:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8162,"initialValue":{"arguments":[{"expression":{"id":8156,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8140,"src":"2293:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8068_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8157,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2298:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8067,"src":"2293:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":8158,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8142,"src":"2312:3:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":8159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2317:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8160,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8148,"src":"2320:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8155,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8520,9044,9568],"referencedDeclaration":8520,"src":"2274:18:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":8161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2274:50:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2260:64:26"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8163,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8154,"src":"2341:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2348:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2341:8:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8168,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8140,"src":"2370:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8068_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2375:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8067,"src":"2370:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8170,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8154,"src":"2389:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2395:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2389:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8167,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8587,9111,9635],"referencedDeclaration":8587,"src":"2356:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$8073_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8073_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8174,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2398:6:26","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8072,"src":"2356:48:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":8175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2341:63:26","trueExpression":{"hexValue":"30","id":8166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2352:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":8146,"id":8176,"nodeType":"Return","src":"2334:70:26"}]},"documentation":{"id":8137,"nodeType":"StructuredDocumentation","src":"1953:156:26","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none."},"id":8178,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"2123:11:26","nodeType":"FunctionDefinition","parameters":{"id":8143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8140,"mutability":"mutable","name":"self","nameLocation":"2152:4:26","nodeType":"VariableDeclaration","scope":8178,"src":"2135:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8068_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":8139,"nodeType":"UserDefinedTypeName","pathNode":{"id":8138,"name":"Trace224","nameLocations":["2135:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":8068,"src":"2135:8:26"},"referencedDeclaration":8068,"src":"2135:8:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8068_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":8142,"mutability":"mutable","name":"key","nameLocation":"2165:3:26","nodeType":"VariableDeclaration","scope":8178,"src":"2158:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8141,"name":"uint32","nodeType":"ElementaryTypeName","src":"2158:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2134:35:26"},"returnParameters":{"id":8146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8178,"src":"2193:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8144,"name":"uint224","nodeType":"ElementaryTypeName","src":"2193:7:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2192:9:26"},"scope":9636,"src":"2114:297:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8262,"nodeType":"Block","src":"2810:512:26","statements":[{"assignments":[8190],"declarations":[{"constant":false,"id":8190,"mutability":"mutable","name":"len","nameLocation":"2828:3:26","nodeType":"VariableDeclaration","scope":8262,"src":"2820:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8189,"name":"uint256","nodeType":"ElementaryTypeName","src":"2820:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8194,"initialValue":{"expression":{"expression":{"id":8191,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8182,"src":"2834:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8068_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8192,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2839:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8067,"src":"2834:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":8193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2852:6:26","memberName":"length","nodeType":"MemberAccess","src":"2834:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2820:38:26"},{"assignments":[8196],"declarations":[{"constant":false,"id":8196,"mutability":"mutable","name":"low","nameLocation":"2877:3:26","nodeType":"VariableDeclaration","scope":8262,"src":"2869:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8195,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8198,"initialValue":{"hexValue":"30","id":8197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2883:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2869:15:26"},{"assignments":[8200],"declarations":[{"constant":false,"id":8200,"mutability":"mutable","name":"high","nameLocation":"2902:4:26","nodeType":"VariableDeclaration","scope":8262,"src":"2894:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8199,"name":"uint256","nodeType":"ElementaryTypeName","src":"2894:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8202,"initialValue":{"id":8201,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8190,"src":"2909:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2894:18:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8203,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8190,"src":"2927:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":8204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2933:1:26","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"2927:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8237,"nodeType":"IfStatement","src":"2923:234:26","trueBody":{"id":8236,"nodeType":"Block","src":"2936:221:26","statements":[{"assignments":[8207],"declarations":[{"constant":false,"id":8207,"mutability":"mutable","name":"mid","nameLocation":"2958:3:26","nodeType":"VariableDeclaration","scope":8236,"src":"2950:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8206,"name":"uint256","nodeType":"ElementaryTypeName","src":"2950:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8214,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8208,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8190,"src":"2964:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":8211,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8190,"src":"2980:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8209,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"2970:4:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6146_$","typeString":"type(library Math)"}},"id":8210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2975:4:26","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":5690,"src":"2970:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":8212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2970:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2964:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2950:34:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":8222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8215,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8184,"src":"3002:3:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":8217,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8182,"src":"3022:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8068_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8218,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3027:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8067,"src":"3022:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":8219,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8207,"src":"3041:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8216,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8587,9111,9635],"referencedDeclaration":8587,"src":"3008:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$8073_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3008:37:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8073_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8221,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3046:4:26","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8070,"src":"3008:42:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3002:48:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8234,"nodeType":"Block","src":"3101:46:26","statements":[{"expression":{"id":8232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8228,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8196,"src":"3119:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8229,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8207,"src":"3125:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3131:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3125:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3119:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8233,"nodeType":"ExpressionStatement","src":"3119:13:26"}]},"id":8235,"nodeType":"IfStatement","src":"2998:149:26","trueBody":{"id":8227,"nodeType":"Block","src":"3052:43:26","statements":[{"expression":{"id":8225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8223,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8200,"src":"3070:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8224,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8207,"src":"3077:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3070:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8226,"nodeType":"ExpressionStatement","src":"3070:10:26"}]}}]}},{"assignments":[8239],"declarations":[{"constant":false,"id":8239,"mutability":"mutable","name":"pos","nameLocation":"3175:3:26","nodeType":"VariableDeclaration","scope":8262,"src":"3167:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8238,"name":"uint256","nodeType":"ElementaryTypeName","src":"3167:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8247,"initialValue":{"arguments":[{"expression":{"id":8241,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8182,"src":"3200:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8068_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8242,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3205:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8067,"src":"3200:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":8243,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8184,"src":"3219:3:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8244,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8196,"src":"3224:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8245,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8200,"src":"3229:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8240,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8520,9044,9568],"referencedDeclaration":8520,"src":"3181:18:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":8246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3181:53:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3167:67:26"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8248,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8239,"src":"3252:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3259:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3252:8:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8253,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8182,"src":"3281:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8068_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8254,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3286:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8067,"src":"3281:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8255,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8239,"src":"3300:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3306:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3300:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8252,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8587,9111,9635],"referencedDeclaration":8587,"src":"3267:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$8073_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3267:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8073_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8259,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3309:6:26","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8072,"src":"3267:48:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":8260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3252:63:26","trueExpression":{"hexValue":"30","id":8251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3263:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":8188,"id":8261,"nodeType":"Return","src":"3245:70:26"}]},"documentation":{"id":8179,"nodeType":"StructuredDocumentation","src":"2417:294:26","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none.\n NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n keys)."},"id":8263,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookupRecent","nameLocation":"2725:17:26","nodeType":"FunctionDefinition","parameters":{"id":8185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8182,"mutability":"mutable","name":"self","nameLocation":"2760:4:26","nodeType":"VariableDeclaration","scope":8263,"src":"2743:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8068_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":8181,"nodeType":"UserDefinedTypeName","pathNode":{"id":8180,"name":"Trace224","nameLocations":["2743:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":8068,"src":"2743:8:26"},"referencedDeclaration":8068,"src":"2743:8:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8068_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":8184,"mutability":"mutable","name":"key","nameLocation":"2773:3:26","nodeType":"VariableDeclaration","scope":8263,"src":"2766:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8183,"name":"uint32","nodeType":"ElementaryTypeName","src":"2766:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2742:35:26"},"returnParameters":{"id":8188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8263,"src":"2801:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8186,"name":"uint224","nodeType":"ElementaryTypeName","src":"2801:7:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2800:9:26"},"scope":9636,"src":"2716:606:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8292,"nodeType":"Block","src":"3513:135:26","statements":[{"assignments":[8273],"declarations":[{"constant":false,"id":8273,"mutability":"mutable","name":"pos","nameLocation":"3531:3:26","nodeType":"VariableDeclaration","scope":8292,"src":"3523:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8272,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8277,"initialValue":{"expression":{"expression":{"id":8274,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"3537:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8068_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8275,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3542:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8067,"src":"3537:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":8276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3555:6:26","memberName":"length","nodeType":"MemberAccess","src":"3537:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3523:38:26"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8278,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8273,"src":"3578:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3585:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3578:8:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8283,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"3607:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8068_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8284,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3612:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8067,"src":"3607:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8285,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8273,"src":"3626:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3632:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3626:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8282,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8587,9111,9635],"referencedDeclaration":8587,"src":"3593:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$8073_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3593:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8073_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8289,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3635:6:26","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8072,"src":"3593:48:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":8290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3578:63:26","trueExpression":{"hexValue":"30","id":8281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3589:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":8271,"id":8291,"nodeType":"Return","src":"3571:70:26"}]},"documentation":{"id":8264,"nodeType":"StructuredDocumentation","src":"3328:109:26","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":8293,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"3451:6:26","nodeType":"FunctionDefinition","parameters":{"id":8268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8267,"mutability":"mutable","name":"self","nameLocation":"3475:4:26","nodeType":"VariableDeclaration","scope":8293,"src":"3458:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8068_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":8266,"nodeType":"UserDefinedTypeName","pathNode":{"id":8265,"name":"Trace224","nameLocations":["3458:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":8068,"src":"3458:8:26"},"referencedDeclaration":8068,"src":"3458:8:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8068_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"3457:23:26"},"returnParameters":{"id":8271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8293,"src":"3504:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8269,"name":"uint224","nodeType":"ElementaryTypeName","src":"3504:7:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3503:9:26"},"scope":9636,"src":"3442:206:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8341,"nodeType":"Block","src":"3941:275:26","statements":[{"assignments":[8307],"declarations":[{"constant":false,"id":8307,"mutability":"mutable","name":"pos","nameLocation":"3959:3:26","nodeType":"VariableDeclaration","scope":8341,"src":"3951:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8306,"name":"uint256","nodeType":"ElementaryTypeName","src":"3951:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8311,"initialValue":{"expression":{"expression":{"id":8308,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8297,"src":"3965:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8068_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8309,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3970:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8067,"src":"3965:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":8310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3983:6:26","memberName":"length","nodeType":"MemberAccess","src":"3965:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3951:38:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8312,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8307,"src":"4003:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4010:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4003:8:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8339,"nodeType":"Block","src":"4064:146:26","statements":[{"assignments":[8323],"declarations":[{"constant":false,"id":8323,"mutability":"mutable","name":"ckpt","nameLocation":"4100:4:26","nodeType":"VariableDeclaration","scope":8339,"src":"4078:26:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8073_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":8322,"nodeType":"UserDefinedTypeName","pathNode":{"id":8321,"name":"Checkpoint224","nameLocations":["4078:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":8073,"src":"4078:13:26"},"referencedDeclaration":8073,"src":"4078:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8073_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"id":8331,"initialValue":{"arguments":[{"expression":{"id":8325,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8297,"src":"4121:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8068_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8326,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4126:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8067,"src":"4121:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8327,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8307,"src":"4140:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4146:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4140:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8324,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8587,9111,9635],"referencedDeclaration":8587,"src":"4107:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$8073_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4107:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8073_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4078:70:26"},{"expression":{"components":[{"hexValue":"74727565","id":8332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4170:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":8333,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8323,"src":"4176:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8073_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8334,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4181:4:26","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8070,"src":"4176:9:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":8335,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8323,"src":"4187:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8073_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4192:6:26","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8072,"src":"4187:11:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":8337,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4169:30:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint32_$_t_uint224_$","typeString":"tuple(bool,uint32,uint224)"}},"functionReturnParameters":8305,"id":8338,"nodeType":"Return","src":"4162:37:26"}]},"id":8340,"nodeType":"IfStatement","src":"3999:211:26","trueBody":{"id":8320,"nodeType":"Block","src":"4013:45:26","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":8315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4035:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":8316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4042:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":8317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4045:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":8318,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4034:13:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":8305,"id":8319,"nodeType":"Return","src":"4027:20:26"}]}}]},"documentation":{"id":8294,"nodeType":"StructuredDocumentation","src":"3654:168:26","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":8342,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"3836:16:26","nodeType":"FunctionDefinition","parameters":{"id":8298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8297,"mutability":"mutable","name":"self","nameLocation":"3870:4:26","nodeType":"VariableDeclaration","scope":8342,"src":"3853:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8068_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":8296,"nodeType":"UserDefinedTypeName","pathNode":{"id":8295,"name":"Trace224","nameLocations":["3853:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":8068,"src":"3853:8:26"},"referencedDeclaration":8068,"src":"3853:8:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8068_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"3852:23:26"},"returnParameters":{"id":8305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8300,"mutability":"mutable","name":"exists","nameLocation":"3904:6:26","nodeType":"VariableDeclaration","scope":8342,"src":"3899:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8299,"name":"bool","nodeType":"ElementaryTypeName","src":"3899:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8302,"mutability":"mutable","name":"_key","nameLocation":"3919:4:26","nodeType":"VariableDeclaration","scope":8342,"src":"3912:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8301,"name":"uint32","nodeType":"ElementaryTypeName","src":"3912:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8304,"mutability":"mutable","name":"_value","nameLocation":"3933:6:26","nodeType":"VariableDeclaration","scope":8342,"src":"3925:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8303,"name":"uint224","nodeType":"ElementaryTypeName","src":"3925:7:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3898:42:26"},"scope":9636,"src":"3827:389:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8355,"nodeType":"Block","src":"4356:48:26","statements":[{"expression":{"expression":{"expression":{"id":8351,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8346,"src":"4373:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8068_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8352,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4378:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8067,"src":"4373:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":8353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4391:6:26","memberName":"length","nodeType":"MemberAccess","src":"4373:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8350,"id":8354,"nodeType":"Return","src":"4366:31:26"}]},"documentation":{"id":8343,"nodeType":"StructuredDocumentation","src":"4222:58:26","text":" @dev Returns the number of checkpoints."},"id":8356,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"4294:6:26","nodeType":"FunctionDefinition","parameters":{"id":8347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8346,"mutability":"mutable","name":"self","nameLocation":"4318:4:26","nodeType":"VariableDeclaration","scope":8356,"src":"4301:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8068_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":8345,"nodeType":"UserDefinedTypeName","pathNode":{"id":8344,"name":"Trace224","nameLocations":["4301:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":8068,"src":"4301:8:26"},"referencedDeclaration":8068,"src":"4301:8:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8068_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"4300:23:26"},"returnParameters":{"id":8350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8356,"src":"4347:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8348,"name":"uint256","nodeType":"ElementaryTypeName","src":"4347:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4346:9:26"},"scope":9636,"src":"4285:119:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8373,"nodeType":"Block","src":"4568:46:26","statements":[{"expression":{"baseExpression":{"expression":{"id":8368,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8360,"src":"4585:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8068_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8369,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4590:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8067,"src":"4585:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":8371,"indexExpression":{"id":8370,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8362,"src":"4603:3:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4585:22:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8073_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref"}},"functionReturnParameters":8367,"id":8372,"nodeType":"Return","src":"4578:29:26"}]},"documentation":{"id":8357,"nodeType":"StructuredDocumentation","src":"4410:61:26","text":" @dev Returns checkpoint at given position."},"id":8374,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"4485:2:26","nodeType":"FunctionDefinition","parameters":{"id":8363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8360,"mutability":"mutable","name":"self","nameLocation":"4505:4:26","nodeType":"VariableDeclaration","scope":8374,"src":"4488:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8068_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":8359,"nodeType":"UserDefinedTypeName","pathNode":{"id":8358,"name":"Trace224","nameLocations":["4488:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":8068,"src":"4488:8:26"},"referencedDeclaration":8068,"src":"4488:8:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$8068_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":8362,"mutability":"mutable","name":"pos","nameLocation":"4518:3:26","nodeType":"VariableDeclaration","scope":8374,"src":"4511:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8361,"name":"uint32","nodeType":"ElementaryTypeName","src":"4511:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4487:35:26"},"returnParameters":{"id":8367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8374,"src":"4546:20:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8073_memory_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":8365,"nodeType":"UserDefinedTypeName","pathNode":{"id":8364,"name":"Checkpoint224","nameLocations":["4546:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":8073,"src":"4546:13:26"},"referencedDeclaration":8073,"src":"4546:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8073_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"src":"4545:22:26"},"scope":9636,"src":"4476:138:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8467,"nodeType":"Block","src":"4947:765:26","statements":[{"assignments":[8391],"declarations":[{"constant":false,"id":8391,"mutability":"mutable","name":"pos","nameLocation":"4965:3:26","nodeType":"VariableDeclaration","scope":8467,"src":"4957:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8390,"name":"uint256","nodeType":"ElementaryTypeName","src":"4957:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8394,"initialValue":{"expression":{"id":8392,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8379,"src":"4971:4:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":8393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4976:6:26","memberName":"length","nodeType":"MemberAccess","src":"4971:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4957:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8395,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8391,"src":"4997:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4997:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8465,"nodeType":"Block","src":"5598:108:26","statements":[{"expression":{"arguments":[{"arguments":[{"id":8456,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8381,"src":"5643:3:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8383,"src":"5656:5:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":8455,"name":"Checkpoint224","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8073,"src":"5622:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint224_$8073_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5637:4:26","5648:6:26"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"5622:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8073_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint224_$8073_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}],"expression":{"id":8452,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8379,"src":"5612:4:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":8454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5617:4:26","memberName":"push","nodeType":"MemberAccess","src":"5612:9:26","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint224_$8073_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,struct Checkpoints.Checkpoint224 storage ref)"}},"id":8459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5612:52:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8460,"nodeType":"ExpressionStatement","src":"5612:52:26"},{"expression":{"components":[{"hexValue":"30","id":8461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5686:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8383,"src":"5689:5:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":8463,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5685:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint224_$","typeString":"tuple(int_const 0,uint224)"}},"functionReturnParameters":8389,"id":8464,"nodeType":"Return","src":"5678:17:26"}]},"id":8466,"nodeType":"IfStatement","src":"4993:713:26","trueBody":{"id":8451,"nodeType":"Block","src":"5006:586:26","statements":[{"assignments":[8400],"declarations":[{"constant":false,"id":8400,"mutability":"mutable","name":"last","nameLocation":"5042:4:26","nodeType":"VariableDeclaration","scope":8451,"src":"5020:26:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8073_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":8399,"nodeType":"UserDefinedTypeName","pathNode":{"id":8398,"name":"Checkpoint224","nameLocations":["5020:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":8073,"src":"5020:13:26"},"referencedDeclaration":8073,"src":"5020:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8073_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"id":8407,"initialValue":{"arguments":[{"id":8402,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8379,"src":"5063:4:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8403,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8391,"src":"5069:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5075:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5069:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8401,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8587,9111,9635],"referencedDeclaration":8587,"src":"5049:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$8073_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5049:28:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8073_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5020:57:26"},{"assignments":[8409],"declarations":[{"constant":false,"id":8409,"mutability":"mutable","name":"lastKey","nameLocation":"5098:7:26","nodeType":"VariableDeclaration","scope":8451,"src":"5091:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8408,"name":"uint32","nodeType":"ElementaryTypeName","src":"5091:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":8412,"initialValue":{"expression":{"id":8410,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"5108:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8073_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8411,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5113:4:26","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8070,"src":"5108:9:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"5091:26:26"},{"assignments":[8414],"declarations":[{"constant":false,"id":8414,"mutability":"mutable","name":"lastValue","nameLocation":"5139:9:26","nodeType":"VariableDeclaration","scope":8451,"src":"5131:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8413,"name":"uint224","nodeType":"ElementaryTypeName","src":"5131:7:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"id":8417,"initialValue":{"expression":{"id":8415,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"5151:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8073_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8416,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5156:6:26","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8072,"src":"5151:11:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"VariableDeclarationStatement","src":"5131:31:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":8420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8418,"name":"lastKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8409,"src":"5236:7:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8419,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8381,"src":"5246:3:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5236:13:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8425,"nodeType":"IfStatement","src":"5232:89:26","trueBody":{"id":8424,"nodeType":"Block","src":"5251:70:26","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8421,"name":"CheckpointUnorderedInsertion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8063,"src":"5276:28:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5276:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8423,"nodeType":"RevertStatement","src":"5269:37:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":8428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8426,"name":"lastKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8409,"src":"5384:7:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8427,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8381,"src":"5395:3:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5384:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8445,"nodeType":"Block","src":"5458:85:26","statements":[{"expression":{"arguments":[{"arguments":[{"id":8440,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8381,"src":"5507:3:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8383,"src":"5520:5:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":8439,"name":"Checkpoint224","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8073,"src":"5486:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint224_$8073_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5501:4:26","5512:6:26"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"5486:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8073_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint224_$8073_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}],"expression":{"id":8436,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8379,"src":"5476:4:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":8438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5481:4:26","memberName":"push","nodeType":"MemberAccess","src":"5476:9:26","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint224_$8073_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,struct Checkpoints.Checkpoint224 storage ref)"}},"id":8443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5476:52:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8444,"nodeType":"ExpressionStatement","src":"5476:52:26"}]},"id":8446,"nodeType":"IfStatement","src":"5380:163:26","trueBody":{"id":8435,"nodeType":"Block","src":"5400:52:26","statements":[{"expression":{"id":8433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8429,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"5418:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8073_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8431,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5423:6:26","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8072,"src":"5418:11:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8383,"src":"5432:5:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"5418:19:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":8434,"nodeType":"ExpressionStatement","src":"5418:19:26"}]}},{"expression":{"components":[{"id":8447,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8414,"src":"5564:9:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},{"id":8448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8383,"src":"5575:5:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":8449,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5563:18:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":8389,"id":8450,"nodeType":"Return","src":"5556:25:26"}]}}]},"documentation":{"id":8375,"nodeType":"StructuredDocumentation","src":"4620:165:26","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":8468,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"4799:7:26","nodeType":"FunctionDefinition","parameters":{"id":8384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8379,"mutability":"mutable","name":"self","nameLocation":"4840:4:26","nodeType":"VariableDeclaration","scope":8468,"src":"4816:28:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":8377,"nodeType":"UserDefinedTypeName","pathNode":{"id":8376,"name":"Checkpoint224","nameLocations":["4816:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":8073,"src":"4816:13:26"},"referencedDeclaration":8073,"src":"4816:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8073_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":8378,"nodeType":"ArrayTypeName","src":"4816:15:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":8381,"mutability":"mutable","name":"key","nameLocation":"4861:3:26","nodeType":"VariableDeclaration","scope":8468,"src":"4854:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8380,"name":"uint32","nodeType":"ElementaryTypeName","src":"4854:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8383,"mutability":"mutable","name":"value","nameLocation":"4882:5:26","nodeType":"VariableDeclaration","scope":8468,"src":"4874:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8382,"name":"uint224","nodeType":"ElementaryTypeName","src":"4874:7:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"4806:87:26"},"returnParameters":{"id":8389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8386,"mutability":"mutable","name":"oldValue","nameLocation":"4919:8:26","nodeType":"VariableDeclaration","scope":8468,"src":"4911:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8385,"name":"uint224","nodeType":"ElementaryTypeName","src":"4911:7:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":8388,"mutability":"mutable","name":"newValue","nameLocation":"4937:8:26","nodeType":"VariableDeclaration","scope":8468,"src":"4929:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8387,"name":"uint224","nodeType":"ElementaryTypeName","src":"4929:7:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"4910:36:26"},"scope":9636,"src":"4790:922:26","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":8519,"nodeType":"Block","src":"6228:267:26","statements":[{"body":{"id":8515,"nodeType":"Block","src":"6257:211:26","statements":[{"assignments":[8488],"declarations":[{"constant":false,"id":8488,"mutability":"mutable","name":"mid","nameLocation":"6279:3:26","nodeType":"VariableDeclaration","scope":8515,"src":"6271:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8487,"name":"uint256","nodeType":"ElementaryTypeName","src":"6271:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8494,"initialValue":{"arguments":[{"id":8491,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8477,"src":"6298:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8492,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8479,"src":"6303:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8489,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"6285:4:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6146_$","typeString":"type(library Math)"}},"id":8490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6290:7:26","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4875,"src":"6285:12:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":8493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6285:23:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6271:37:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":8501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8496,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8473,"src":"6340:4:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"id":8497,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8488,"src":"6346:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8495,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8587,9111,9635],"referencedDeclaration":8587,"src":"6326:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$8073_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6326:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8073_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8499,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6351:4:26","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8070,"src":"6326:29:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8500,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8475,"src":"6358:3:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"6326:35:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8513,"nodeType":"Block","src":"6412:46:26","statements":[{"expression":{"id":8511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8507,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8477,"src":"6430:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8508,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8488,"src":"6436:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6442:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6436:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6430:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8512,"nodeType":"ExpressionStatement","src":"6430:13:26"}]},"id":8514,"nodeType":"IfStatement","src":"6322:136:26","trueBody":{"id":8506,"nodeType":"Block","src":"6363:43:26","statements":[{"expression":{"id":8504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8502,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8479,"src":"6381:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8503,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8488,"src":"6388:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6381:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8505,"nodeType":"ExpressionStatement","src":"6381:10:26"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8484,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8477,"src":"6245:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8485,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8479,"src":"6251:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6245:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8516,"nodeType":"WhileStatement","src":"6238:230:26"},{"expression":{"id":8517,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8479,"src":"6484:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8483,"id":8518,"nodeType":"Return","src":"6477:11:26"}]},"documentation":{"id":8469,"nodeType":"StructuredDocumentation","src":"5718:339:26","text":" @dev Return the index of the first (oldest) checkpoint with key strictly bigger than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":8520,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"6071:18:26","nodeType":"FunctionDefinition","parameters":{"id":8480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8473,"mutability":"mutable","name":"self","nameLocation":"6123:4:26","nodeType":"VariableDeclaration","scope":8520,"src":"6099:28:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":8471,"nodeType":"UserDefinedTypeName","pathNode":{"id":8470,"name":"Checkpoint224","nameLocations":["6099:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":8073,"src":"6099:13:26"},"referencedDeclaration":8073,"src":"6099:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8073_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":8472,"nodeType":"ArrayTypeName","src":"6099:15:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":8475,"mutability":"mutable","name":"key","nameLocation":"6144:3:26","nodeType":"VariableDeclaration","scope":8520,"src":"6137:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8474,"name":"uint32","nodeType":"ElementaryTypeName","src":"6137:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8477,"mutability":"mutable","name":"low","nameLocation":"6165:3:26","nodeType":"VariableDeclaration","scope":8520,"src":"6157:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8476,"name":"uint256","nodeType":"ElementaryTypeName","src":"6157:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8479,"mutability":"mutable","name":"high","nameLocation":"6186:4:26","nodeType":"VariableDeclaration","scope":8520,"src":"6178:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8478,"name":"uint256","nodeType":"ElementaryTypeName","src":"6178:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6089:107:26"},"returnParameters":{"id":8483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8520,"src":"6219:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8481,"name":"uint256","nodeType":"ElementaryTypeName","src":"6219:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6218:9:26"},"scope":9636,"src":"6062:433:26","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":8571,"nodeType":"Block","src":"7012:267:26","statements":[{"body":{"id":8567,"nodeType":"Block","src":"7041:211:26","statements":[{"assignments":[8540],"declarations":[{"constant":false,"id":8540,"mutability":"mutable","name":"mid","nameLocation":"7063:3:26","nodeType":"VariableDeclaration","scope":8567,"src":"7055:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8539,"name":"uint256","nodeType":"ElementaryTypeName","src":"7055:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8546,"initialValue":{"arguments":[{"id":8543,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8529,"src":"7082:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8544,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8531,"src":"7087:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8541,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"7069:4:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6146_$","typeString":"type(library Math)"}},"id":8542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7074:7:26","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4875,"src":"7069:12:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":8545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7069:23:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7055:37:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":8553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8548,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8525,"src":"7124:4:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"id":8549,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8540,"src":"7130:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8547,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8587,9111,9635],"referencedDeclaration":8587,"src":"7110:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$8073_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7110:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8073_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8551,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7135:4:26","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8070,"src":"7110:29:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8552,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8527,"src":"7142:3:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"7110:35:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8565,"nodeType":"Block","src":"7199:43:26","statements":[{"expression":{"id":8563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8561,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8531,"src":"7217:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8562,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8540,"src":"7224:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7217:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8564,"nodeType":"ExpressionStatement","src":"7217:10:26"}]},"id":8566,"nodeType":"IfStatement","src":"7106:136:26","trueBody":{"id":8560,"nodeType":"Block","src":"7147:46:26","statements":[{"expression":{"id":8558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8554,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8529,"src":"7165:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8555,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8540,"src":"7171:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7177:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7171:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7165:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8559,"nodeType":"ExpressionStatement","src":"7165:13:26"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8536,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8529,"src":"7029:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8537,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8531,"src":"7035:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7029:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8568,"nodeType":"WhileStatement","src":"7022:230:26"},{"expression":{"id":8569,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8531,"src":"7268:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8535,"id":8570,"nodeType":"Return","src":"7261:11:26"}]},"documentation":{"id":8521,"nodeType":"StructuredDocumentation","src":"6501:340:26","text":" @dev Return the index of the first (oldest) checkpoint with key greater or equal than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":8572,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"6855:18:26","nodeType":"FunctionDefinition","parameters":{"id":8532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8525,"mutability":"mutable","name":"self","nameLocation":"6907:4:26","nodeType":"VariableDeclaration","scope":8572,"src":"6883:28:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":8523,"nodeType":"UserDefinedTypeName","pathNode":{"id":8522,"name":"Checkpoint224","nameLocations":["6883:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":8073,"src":"6883:13:26"},"referencedDeclaration":8073,"src":"6883:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8073_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":8524,"nodeType":"ArrayTypeName","src":"6883:15:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":8527,"mutability":"mutable","name":"key","nameLocation":"6928:3:26","nodeType":"VariableDeclaration","scope":8572,"src":"6921:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8526,"name":"uint32","nodeType":"ElementaryTypeName","src":"6921:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8529,"mutability":"mutable","name":"low","nameLocation":"6949:3:26","nodeType":"VariableDeclaration","scope":8572,"src":"6941:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8528,"name":"uint256","nodeType":"ElementaryTypeName","src":"6941:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8531,"mutability":"mutable","name":"high","nameLocation":"6970:4:26","nodeType":"VariableDeclaration","scope":8572,"src":"6962:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8530,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6873:107:26"},"returnParameters":{"id":8535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8572,"src":"7003:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8533,"name":"uint256","nodeType":"ElementaryTypeName","src":"7003:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7002:9:26"},"scope":9636,"src":"6846:433:26","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":8586,"nodeType":"Block","src":"7562:125:26","statements":[{"AST":{"nodeType":"YulBlock","src":"7581:100:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7602:1:26","type":"","value":"0"},{"name":"self.slot","nodeType":"YulIdentifier","src":"7605:9:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7595:6:26"},"nodeType":"YulFunctionCall","src":"7595:20:26"},"nodeType":"YulExpressionStatement","src":"7595:20:26"},{"nodeType":"YulAssignment","src":"7628:43:26","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7657:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7660:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7647:9:26"},"nodeType":"YulFunctionCall","src":"7647:18:26"},{"name":"pos","nodeType":"YulIdentifier","src":"7667:3:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7643:3:26"},"nodeType":"YulFunctionCall","src":"7643:28:26"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"7628:11:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8579,"isOffset":false,"isSlot":false,"src":"7667:3:26","valueSize":1},{"declaration":8583,"isOffset":false,"isSlot":true,"src":"7628:11:26","suffix":"slot","valueSize":1},{"declaration":8577,"isOffset":false,"isSlot":true,"src":"7605:9:26","suffix":"slot","valueSize":1}],"id":8585,"nodeType":"InlineAssembly","src":"7572:109:26"}]},"documentation":{"id":8573,"nodeType":"StructuredDocumentation","src":"7285:132:26","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":8587,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"7431:13:26","nodeType":"FunctionDefinition","parameters":{"id":8580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8577,"mutability":"mutable","name":"self","nameLocation":"7478:4:26","nodeType":"VariableDeclaration","scope":8587,"src":"7454:28:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":8575,"nodeType":"UserDefinedTypeName","pathNode":{"id":8574,"name":"Checkpoint224","nameLocations":["7454:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":8073,"src":"7454:13:26"},"referencedDeclaration":8073,"src":"7454:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8073_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":8576,"nodeType":"ArrayTypeName","src":"7454:15:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$8073_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":8579,"mutability":"mutable","name":"pos","nameLocation":"7500:3:26","nodeType":"VariableDeclaration","scope":8587,"src":"7492:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8578,"name":"uint256","nodeType":"ElementaryTypeName","src":"7492:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7444:65:26"},"returnParameters":{"id":8584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8583,"mutability":"mutable","name":"result","nameLocation":"7554:6:26","nodeType":"VariableDeclaration","scope":8587,"src":"7532:28:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8073_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":8582,"nodeType":"UserDefinedTypeName","pathNode":{"id":8581,"name":"Checkpoint224","nameLocations":["7532:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":8073,"src":"7532:13:26"},"referencedDeclaration":8073,"src":"7532:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$8073_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"src":"7531:30:26"},"scope":9636,"src":"7422:265:26","stateMutability":"pure","virtual":false,"visibility":"private"},{"canonicalName":"Checkpoints.Trace208","id":8592,"members":[{"constant":false,"id":8591,"mutability":"mutable","name":"_checkpoints","nameLocation":"7735:12:26","nodeType":"VariableDeclaration","scope":8592,"src":"7719:28:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":8589,"nodeType":"UserDefinedTypeName","pathNode":{"id":8588,"name":"Checkpoint208","nameLocations":["7719:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":8597,"src":"7719:13:26"},"referencedDeclaration":8597,"src":"7719:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":8590,"nodeType":"ArrayTypeName","src":"7719:15:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"}],"name":"Trace208","nameLocation":"7700:8:26","nodeType":"StructDefinition","scope":9636,"src":"7693:61:26","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint208","id":8597,"members":[{"constant":false,"id":8594,"mutability":"mutable","name":"_key","nameLocation":"7798:4:26","nodeType":"VariableDeclaration","scope":8597,"src":"7791:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8593,"name":"uint48","nodeType":"ElementaryTypeName","src":"7791:6:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":8596,"mutability":"mutable","name":"_value","nameLocation":"7820:6:26","nodeType":"VariableDeclaration","scope":8597,"src":"7812:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8595,"name":"uint208","nodeType":"ElementaryTypeName","src":"7812:7:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"name":"Checkpoint208","nameLocation":"7767:13:26","nodeType":"StructDefinition","scope":9636,"src":"7760:73:26","visibility":"public"},{"body":{"id":8619,"nodeType":"Block","src":"8294:62:26","statements":[{"expression":{"arguments":[{"expression":{"id":8613,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8601,"src":"8319:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8614,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8324:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8591,"src":"8319:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":8615,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8603,"src":"8338:3:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":8616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8605,"src":"8343:5:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":8612,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[8468,8992,9516],"referencedDeclaration":8992,"src":"8311:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint208) returns (uint208,uint208)"}},"id":8617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8311:38:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"functionReturnParameters":8611,"id":8618,"nodeType":"Return","src":"8304:45:26"}]},"documentation":{"id":8598,"nodeType":"StructuredDocumentation","src":"7839:302:26","text":" @dev Pushes a (`key`, `value`) pair into a Trace208 so that it is stored as the checkpoint.\n Returns previous value and new value.\n IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint48).max` key set will disable the\n library."},"id":8620,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"8155:4:26","nodeType":"FunctionDefinition","parameters":{"id":8606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8601,"mutability":"mutable","name":"self","nameLocation":"8186:4:26","nodeType":"VariableDeclaration","scope":8620,"src":"8169:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8600,"nodeType":"UserDefinedTypeName","pathNode":{"id":8599,"name":"Trace208","nameLocations":["8169:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":8592,"src":"8169:8:26"},"referencedDeclaration":8592,"src":"8169:8:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":8603,"mutability":"mutable","name":"key","nameLocation":"8207:3:26","nodeType":"VariableDeclaration","scope":8620,"src":"8200:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8602,"name":"uint48","nodeType":"ElementaryTypeName","src":"8200:6:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":8605,"mutability":"mutable","name":"value","nameLocation":"8228:5:26","nodeType":"VariableDeclaration","scope":8620,"src":"8220:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8604,"name":"uint208","nodeType":"ElementaryTypeName","src":"8220:7:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"8159:80:26"},"returnParameters":{"id":8611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8608,"mutability":"mutable","name":"oldValue","nameLocation":"8266:8:26","nodeType":"VariableDeclaration","scope":8620,"src":"8258:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8607,"name":"uint208","nodeType":"ElementaryTypeName","src":"8258:7:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":8610,"mutability":"mutable","name":"newValue","nameLocation":"8284:8:26","nodeType":"VariableDeclaration","scope":8620,"src":"8276:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8609,"name":"uint208","nodeType":"ElementaryTypeName","src":"8276:7:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"8257:36:26"},"scope":9636,"src":"8146:210:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8659,"nodeType":"Block","src":"8609:207:26","statements":[{"assignments":[8632],"declarations":[{"constant":false,"id":8632,"mutability":"mutable","name":"len","nameLocation":"8627:3:26","nodeType":"VariableDeclaration","scope":8659,"src":"8619:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8631,"name":"uint256","nodeType":"ElementaryTypeName","src":"8619:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8636,"initialValue":{"expression":{"expression":{"id":8633,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8624,"src":"8633:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8634,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8638:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8591,"src":"8633:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8651:6:26","memberName":"length","nodeType":"MemberAccess","src":"8633:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8619:38:26"},{"assignments":[8638],"declarations":[{"constant":false,"id":8638,"mutability":"mutable","name":"pos","nameLocation":"8675:3:26","nodeType":"VariableDeclaration","scope":8659,"src":"8667:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8637,"name":"uint256","nodeType":"ElementaryTypeName","src":"8667:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8646,"initialValue":{"arguments":[{"expression":{"id":8640,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8624,"src":"8700:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8641,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8705:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8591,"src":"8700:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":8642,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8626,"src":"8719:3:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"hexValue":"30","id":8643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8724:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8644,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8632,"src":"8727:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8639,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8572,9096,9620],"referencedDeclaration":9096,"src":"8681:18:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint256,uint256) view returns (uint256)"}},"id":8645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8681:50:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8667:64:26"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8647,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8638,"src":"8748:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8648,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8632,"src":"8755:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8748:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8652,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8624,"src":"8779:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8653,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8784:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8591,"src":"8779:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":8654,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8638,"src":"8798:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8651,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8587,9111,9635],"referencedDeclaration":9111,"src":"8765:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8597_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8765:37:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8656,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8803:6:26","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8596,"src":"8765:44:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":8657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8748:61:26","trueExpression":{"hexValue":"30","id":8650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8761:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":8630,"id":8658,"nodeType":"Return","src":"8741:68:26"}]},"documentation":{"id":8621,"nodeType":"StructuredDocumentation","src":"8362:154:26","text":" @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n there is none."},"id":8660,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"8530:11:26","nodeType":"FunctionDefinition","parameters":{"id":8627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8624,"mutability":"mutable","name":"self","nameLocation":"8559:4:26","nodeType":"VariableDeclaration","scope":8660,"src":"8542:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8623,"nodeType":"UserDefinedTypeName","pathNode":{"id":8622,"name":"Trace208","nameLocations":["8542:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":8592,"src":"8542:8:26"},"referencedDeclaration":8592,"src":"8542:8:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":8626,"mutability":"mutable","name":"key","nameLocation":"8572:3:26","nodeType":"VariableDeclaration","scope":8660,"src":"8565:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8625,"name":"uint48","nodeType":"ElementaryTypeName","src":"8565:6:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"8541:35:26"},"returnParameters":{"id":8630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8660,"src":"8600:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8628,"name":"uint208","nodeType":"ElementaryTypeName","src":"8600:7:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"8599:9:26"},"scope":9636,"src":"8521:295:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8701,"nodeType":"Block","src":"9071:209:26","statements":[{"assignments":[8672],"declarations":[{"constant":false,"id":8672,"mutability":"mutable","name":"len","nameLocation":"9089:3:26","nodeType":"VariableDeclaration","scope":8701,"src":"9081:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8671,"name":"uint256","nodeType":"ElementaryTypeName","src":"9081:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8676,"initialValue":{"expression":{"expression":{"id":8673,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8664,"src":"9095:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8674,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9100:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8591,"src":"9095:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9113:6:26","memberName":"length","nodeType":"MemberAccess","src":"9095:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9081:38:26"},{"assignments":[8678],"declarations":[{"constant":false,"id":8678,"mutability":"mutable","name":"pos","nameLocation":"9137:3:26","nodeType":"VariableDeclaration","scope":8701,"src":"9129:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8677,"name":"uint256","nodeType":"ElementaryTypeName","src":"9129:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8686,"initialValue":{"arguments":[{"expression":{"id":8680,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8664,"src":"9162:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8681,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9167:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8591,"src":"9162:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":8682,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8666,"src":"9181:3:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"hexValue":"30","id":8683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9186:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8684,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8672,"src":"9189:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8679,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8520,9044,9568],"referencedDeclaration":9044,"src":"9143:18:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint256,uint256) view returns (uint256)"}},"id":8685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9143:50:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9129:64:26"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8687,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8678,"src":"9210:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9217:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9210:8:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8692,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8664,"src":"9239:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8693,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9244:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8591,"src":"9239:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8694,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8678,"src":"9258:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9264:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9258:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8691,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8587,9111,9635],"referencedDeclaration":9111,"src":"9225:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8597_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9225:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8698,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9267:6:26","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8596,"src":"9225:48:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":8699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9210:63:26","trueExpression":{"hexValue":"30","id":8690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9221:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":8670,"id":8700,"nodeType":"Return","src":"9203:70:26"}]},"documentation":{"id":8661,"nodeType":"StructuredDocumentation","src":"8822:156:26","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none."},"id":8702,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"8992:11:26","nodeType":"FunctionDefinition","parameters":{"id":8667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8664,"mutability":"mutable","name":"self","nameLocation":"9021:4:26","nodeType":"VariableDeclaration","scope":8702,"src":"9004:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8663,"nodeType":"UserDefinedTypeName","pathNode":{"id":8662,"name":"Trace208","nameLocations":["9004:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":8592,"src":"9004:8:26"},"referencedDeclaration":8592,"src":"9004:8:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":8666,"mutability":"mutable","name":"key","nameLocation":"9034:3:26","nodeType":"VariableDeclaration","scope":8702,"src":"9027:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8665,"name":"uint48","nodeType":"ElementaryTypeName","src":"9027:6:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"9003:35:26"},"returnParameters":{"id":8670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8702,"src":"9062:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8668,"name":"uint208","nodeType":"ElementaryTypeName","src":"9062:7:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9061:9:26"},"scope":9636,"src":"8983:297:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8786,"nodeType":"Block","src":"9679:512:26","statements":[{"assignments":[8714],"declarations":[{"constant":false,"id":8714,"mutability":"mutable","name":"len","nameLocation":"9697:3:26","nodeType":"VariableDeclaration","scope":8786,"src":"9689:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8713,"name":"uint256","nodeType":"ElementaryTypeName","src":"9689:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8718,"initialValue":{"expression":{"expression":{"id":8715,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8706,"src":"9703:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8716,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9708:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8591,"src":"9703:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9721:6:26","memberName":"length","nodeType":"MemberAccess","src":"9703:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9689:38:26"},{"assignments":[8720],"declarations":[{"constant":false,"id":8720,"mutability":"mutable","name":"low","nameLocation":"9746:3:26","nodeType":"VariableDeclaration","scope":8786,"src":"9738:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8719,"name":"uint256","nodeType":"ElementaryTypeName","src":"9738:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8722,"initialValue":{"hexValue":"30","id":8721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9752:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9738:15:26"},{"assignments":[8724],"declarations":[{"constant":false,"id":8724,"mutability":"mutable","name":"high","nameLocation":"9771:4:26","nodeType":"VariableDeclaration","scope":8786,"src":"9763:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8723,"name":"uint256","nodeType":"ElementaryTypeName","src":"9763:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8726,"initialValue":{"id":8725,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8714,"src":"9778:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9763:18:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8727,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8714,"src":"9796:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":8728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9802:1:26","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"9796:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8761,"nodeType":"IfStatement","src":"9792:234:26","trueBody":{"id":8760,"nodeType":"Block","src":"9805:221:26","statements":[{"assignments":[8731],"declarations":[{"constant":false,"id":8731,"mutability":"mutable","name":"mid","nameLocation":"9827:3:26","nodeType":"VariableDeclaration","scope":8760,"src":"9819:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8730,"name":"uint256","nodeType":"ElementaryTypeName","src":"9819:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8738,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8732,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8714,"src":"9833:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":8735,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8714,"src":"9849:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8733,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"9839:4:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6146_$","typeString":"type(library Math)"}},"id":8734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9844:4:26","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":5690,"src":"9839:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":8736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9839:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9833:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9819:34:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":8746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8739,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8708,"src":"9871:3:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":8741,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8706,"src":"9891:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8742,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9896:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8591,"src":"9891:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":8743,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8731,"src":"9910:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8740,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8587,9111,9635],"referencedDeclaration":9111,"src":"9877:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8597_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9877:37:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8745,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9915:4:26","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8594,"src":"9877:42:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"9871:48:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8758,"nodeType":"Block","src":"9970:46:26","statements":[{"expression":{"id":8756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8752,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8720,"src":"9988:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8753,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8731,"src":"9994:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10000:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9994:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9988:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8757,"nodeType":"ExpressionStatement","src":"9988:13:26"}]},"id":8759,"nodeType":"IfStatement","src":"9867:149:26","trueBody":{"id":8751,"nodeType":"Block","src":"9921:43:26","statements":[{"expression":{"id":8749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8747,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8724,"src":"9939:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8748,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8731,"src":"9946:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9939:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8750,"nodeType":"ExpressionStatement","src":"9939:10:26"}]}}]}},{"assignments":[8763],"declarations":[{"constant":false,"id":8763,"mutability":"mutable","name":"pos","nameLocation":"10044:3:26","nodeType":"VariableDeclaration","scope":8786,"src":"10036:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8762,"name":"uint256","nodeType":"ElementaryTypeName","src":"10036:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8771,"initialValue":{"arguments":[{"expression":{"id":8765,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8706,"src":"10069:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8766,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10074:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8591,"src":"10069:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":8767,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8708,"src":"10088:3:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":8768,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8720,"src":"10093:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8769,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8724,"src":"10098:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8764,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8520,9044,9568],"referencedDeclaration":9044,"src":"10050:18:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint256,uint256) view returns (uint256)"}},"id":8770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10050:53:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10036:67:26"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8772,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8763,"src":"10121:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10128:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10121:8:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8777,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8706,"src":"10150:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8778,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10155:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8591,"src":"10150:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8779,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8763,"src":"10169:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10175:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10169:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8776,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8587,9111,9635],"referencedDeclaration":9111,"src":"10136:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8597_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10136:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8783,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10178:6:26","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8596,"src":"10136:48:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":8784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10121:63:26","trueExpression":{"hexValue":"30","id":8775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":8712,"id":8785,"nodeType":"Return","src":"10114:70:26"}]},"documentation":{"id":8703,"nodeType":"StructuredDocumentation","src":"9286:294:26","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none.\n NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n keys)."},"id":8787,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookupRecent","nameLocation":"9594:17:26","nodeType":"FunctionDefinition","parameters":{"id":8709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8706,"mutability":"mutable","name":"self","nameLocation":"9629:4:26","nodeType":"VariableDeclaration","scope":8787,"src":"9612:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8705,"nodeType":"UserDefinedTypeName","pathNode":{"id":8704,"name":"Trace208","nameLocations":["9612:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":8592,"src":"9612:8:26"},"referencedDeclaration":8592,"src":"9612:8:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":8708,"mutability":"mutable","name":"key","nameLocation":"9642:3:26","nodeType":"VariableDeclaration","scope":8787,"src":"9635:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8707,"name":"uint48","nodeType":"ElementaryTypeName","src":"9635:6:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"9611:35:26"},"returnParameters":{"id":8712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8787,"src":"9670:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8710,"name":"uint208","nodeType":"ElementaryTypeName","src":"9670:7:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9669:9:26"},"scope":9636,"src":"9585:606:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8816,"nodeType":"Block","src":"10382:135:26","statements":[{"assignments":[8797],"declarations":[{"constant":false,"id":8797,"mutability":"mutable","name":"pos","nameLocation":"10400:3:26","nodeType":"VariableDeclaration","scope":8816,"src":"10392:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8796,"name":"uint256","nodeType":"ElementaryTypeName","src":"10392:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8801,"initialValue":{"expression":{"expression":{"id":8798,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8791,"src":"10406:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8799,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10411:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8591,"src":"10406:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10424:6:26","memberName":"length","nodeType":"MemberAccess","src":"10406:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10392:38:26"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8802,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8797,"src":"10447:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10454:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10447:8:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8807,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8791,"src":"10476:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8808,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10481:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8591,"src":"10476:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8809,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8797,"src":"10495:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10501:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10495:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8806,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8587,9111,9635],"referencedDeclaration":9111,"src":"10462:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8597_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10462:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8813,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10504:6:26","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8596,"src":"10462:48:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":8814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10447:63:26","trueExpression":{"hexValue":"30","id":8805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10458:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":8795,"id":8815,"nodeType":"Return","src":"10440:70:26"}]},"documentation":{"id":8788,"nodeType":"StructuredDocumentation","src":"10197:109:26","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":8817,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"10320:6:26","nodeType":"FunctionDefinition","parameters":{"id":8792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8791,"mutability":"mutable","name":"self","nameLocation":"10344:4:26","nodeType":"VariableDeclaration","scope":8817,"src":"10327:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8790,"nodeType":"UserDefinedTypeName","pathNode":{"id":8789,"name":"Trace208","nameLocations":["10327:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":8592,"src":"10327:8:26"},"referencedDeclaration":8592,"src":"10327:8:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"}],"src":"10326:23:26"},"returnParameters":{"id":8795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8817,"src":"10373:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8793,"name":"uint208","nodeType":"ElementaryTypeName","src":"10373:7:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"10372:9:26"},"scope":9636,"src":"10311:206:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8865,"nodeType":"Block","src":"10810:275:26","statements":[{"assignments":[8831],"declarations":[{"constant":false,"id":8831,"mutability":"mutable","name":"pos","nameLocation":"10828:3:26","nodeType":"VariableDeclaration","scope":8865,"src":"10820:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8830,"name":"uint256","nodeType":"ElementaryTypeName","src":"10820:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8835,"initialValue":{"expression":{"expression":{"id":8832,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8821,"src":"10834:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8833,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10839:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8591,"src":"10834:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10852:6:26","memberName":"length","nodeType":"MemberAccess","src":"10834:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10820:38:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8836,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8831,"src":"10872:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10879:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10872:8:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8863,"nodeType":"Block","src":"10933:146:26","statements":[{"assignments":[8847],"declarations":[{"constant":false,"id":8847,"mutability":"mutable","name":"ckpt","nameLocation":"10969:4:26","nodeType":"VariableDeclaration","scope":8863,"src":"10947:26:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":8846,"nodeType":"UserDefinedTypeName","pathNode":{"id":8845,"name":"Checkpoint208","nameLocations":["10947:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":8597,"src":"10947:13:26"},"referencedDeclaration":8597,"src":"10947:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"id":8855,"initialValue":{"arguments":[{"expression":{"id":8849,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8821,"src":"10990:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8850,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10995:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8591,"src":"10990:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8851,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8831,"src":"11009:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11015:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11009:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8848,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8587,9111,9635],"referencedDeclaration":9111,"src":"10976:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8597_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10976:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"10947:70:26"},{"expression":{"components":[{"hexValue":"74727565","id":8856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11039:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":8857,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8847,"src":"11045:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8858,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11050:4:26","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8594,"src":"11045:9:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"expression":{"id":8859,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8847,"src":"11056:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8860,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11061:6:26","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8596,"src":"11056:11:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"id":8861,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11038:30:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint48_$_t_uint208_$","typeString":"tuple(bool,uint48,uint208)"}},"functionReturnParameters":8829,"id":8862,"nodeType":"Return","src":"11031:37:26"}]},"id":8864,"nodeType":"IfStatement","src":"10868:211:26","trueBody":{"id":8844,"nodeType":"Block","src":"10882:45:26","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":8839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10904:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":8840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10911:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":8841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10914:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":8842,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10903:13:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":8829,"id":8843,"nodeType":"Return","src":"10896:20:26"}]}}]},"documentation":{"id":8818,"nodeType":"StructuredDocumentation","src":"10523:168:26","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":8866,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"10705:16:26","nodeType":"FunctionDefinition","parameters":{"id":8822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8821,"mutability":"mutable","name":"self","nameLocation":"10739:4:26","nodeType":"VariableDeclaration","scope":8866,"src":"10722:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8820,"nodeType":"UserDefinedTypeName","pathNode":{"id":8819,"name":"Trace208","nameLocations":["10722:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":8592,"src":"10722:8:26"},"referencedDeclaration":8592,"src":"10722:8:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"}],"src":"10721:23:26"},"returnParameters":{"id":8829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8824,"mutability":"mutable","name":"exists","nameLocation":"10773:6:26","nodeType":"VariableDeclaration","scope":8866,"src":"10768:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8823,"name":"bool","nodeType":"ElementaryTypeName","src":"10768:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8826,"mutability":"mutable","name":"_key","nameLocation":"10788:4:26","nodeType":"VariableDeclaration","scope":8866,"src":"10781:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8825,"name":"uint48","nodeType":"ElementaryTypeName","src":"10781:6:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":8828,"mutability":"mutable","name":"_value","nameLocation":"10802:6:26","nodeType":"VariableDeclaration","scope":8866,"src":"10794:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8827,"name":"uint208","nodeType":"ElementaryTypeName","src":"10794:7:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"10767:42:26"},"scope":9636,"src":"10696:389:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8879,"nodeType":"Block","src":"11225:48:26","statements":[{"expression":{"expression":{"expression":{"id":8875,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8870,"src":"11242:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8876,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11247:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8591,"src":"11242:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11260:6:26","memberName":"length","nodeType":"MemberAccess","src":"11242:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8874,"id":8878,"nodeType":"Return","src":"11235:31:26"}]},"documentation":{"id":8867,"nodeType":"StructuredDocumentation","src":"11091:58:26","text":" @dev Returns the number of checkpoints."},"id":8880,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11163:6:26","nodeType":"FunctionDefinition","parameters":{"id":8871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8870,"mutability":"mutable","name":"self","nameLocation":"11187:4:26","nodeType":"VariableDeclaration","scope":8880,"src":"11170:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8869,"nodeType":"UserDefinedTypeName","pathNode":{"id":8868,"name":"Trace208","nameLocations":["11170:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":8592,"src":"11170:8:26"},"referencedDeclaration":8592,"src":"11170:8:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"}],"src":"11169:23:26"},"returnParameters":{"id":8874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8880,"src":"11216:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8872,"name":"uint256","nodeType":"ElementaryTypeName","src":"11216:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11215:9:26"},"scope":9636,"src":"11154:119:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8897,"nodeType":"Block","src":"11437:46:26","statements":[{"expression":{"baseExpression":{"expression":{"id":8892,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8884,"src":"11454:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8893,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11459:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8591,"src":"11454:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8895,"indexExpression":{"id":8894,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8886,"src":"11472:3:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11454:22:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref"}},"functionReturnParameters":8891,"id":8896,"nodeType":"Return","src":"11447:29:26"}]},"documentation":{"id":8881,"nodeType":"StructuredDocumentation","src":"11279:61:26","text":" @dev Returns checkpoint at given position."},"id":8898,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11354:2:26","nodeType":"FunctionDefinition","parameters":{"id":8887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8884,"mutability":"mutable","name":"self","nameLocation":"11374:4:26","nodeType":"VariableDeclaration","scope":8898,"src":"11357:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8883,"nodeType":"UserDefinedTypeName","pathNode":{"id":8882,"name":"Trace208","nameLocations":["11357:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":8592,"src":"11357:8:26"},"referencedDeclaration":8592,"src":"11357:8:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8592_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":8886,"mutability":"mutable","name":"pos","nameLocation":"11387:3:26","nodeType":"VariableDeclaration","scope":8898,"src":"11380:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8885,"name":"uint32","nodeType":"ElementaryTypeName","src":"11380:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"11356:35:26"},"returnParameters":{"id":8891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8898,"src":"11415:20:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":8889,"nodeType":"UserDefinedTypeName","pathNode":{"id":8888,"name":"Checkpoint208","nameLocations":["11415:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":8597,"src":"11415:13:26"},"referencedDeclaration":8597,"src":"11415:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"11414:22:26"},"scope":9636,"src":"11345:138:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8991,"nodeType":"Block","src":"11816:765:26","statements":[{"assignments":[8915],"declarations":[{"constant":false,"id":8915,"mutability":"mutable","name":"pos","nameLocation":"11834:3:26","nodeType":"VariableDeclaration","scope":8991,"src":"11826:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8914,"name":"uint256","nodeType":"ElementaryTypeName","src":"11826:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8918,"initialValue":{"expression":{"id":8916,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8903,"src":"11840:4:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},"id":8917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11845:6:26","memberName":"length","nodeType":"MemberAccess","src":"11840:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11826:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8919,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8915,"src":"11866:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11872:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11866:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8989,"nodeType":"Block","src":"12467:108:26","statements":[{"expression":{"arguments":[{"arguments":[{"id":8980,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8905,"src":"12512:3:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":8981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8907,"src":"12525:5:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":8979,"name":"Checkpoint208","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8597,"src":"12491:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint208_$8597_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["12506:4:26","12517:6:26"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"12491:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint208_$8597_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}],"expression":{"id":8976,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8903,"src":"12481:4:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},"id":8978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12486:4:26","memberName":"push","nodeType":"MemberAccess","src":"12481:9:26","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint208_$8597_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,struct Checkpoints.Checkpoint208 storage ref)"}},"id":8983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12481:52:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8984,"nodeType":"ExpressionStatement","src":"12481:52:26"},{"expression":{"components":[{"hexValue":"30","id":8985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12555:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8907,"src":"12558:5:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"id":8987,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12554:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint208_$","typeString":"tuple(int_const 0,uint208)"}},"functionReturnParameters":8913,"id":8988,"nodeType":"Return","src":"12547:17:26"}]},"id":8990,"nodeType":"IfStatement","src":"11862:713:26","trueBody":{"id":8975,"nodeType":"Block","src":"11875:586:26","statements":[{"assignments":[8924],"declarations":[{"constant":false,"id":8924,"mutability":"mutable","name":"last","nameLocation":"11911:4:26","nodeType":"VariableDeclaration","scope":8975,"src":"11889:26:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":8923,"nodeType":"UserDefinedTypeName","pathNode":{"id":8922,"name":"Checkpoint208","nameLocations":["11889:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":8597,"src":"11889:13:26"},"referencedDeclaration":8597,"src":"11889:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"id":8931,"initialValue":{"arguments":[{"id":8926,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8903,"src":"11932:4:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8927,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8915,"src":"11938:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11944:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11938:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8925,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8587,9111,9635],"referencedDeclaration":9111,"src":"11918:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8597_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11918:28:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"11889:57:26"},{"assignments":[8933],"declarations":[{"constant":false,"id":8933,"mutability":"mutable","name":"lastKey","nameLocation":"11967:7:26","nodeType":"VariableDeclaration","scope":8975,"src":"11960:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8932,"name":"uint48","nodeType":"ElementaryTypeName","src":"11960:6:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":8936,"initialValue":{"expression":{"id":8934,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8924,"src":"11977:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8935,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11982:4:26","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8594,"src":"11977:9:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"11960:26:26"},{"assignments":[8938],"declarations":[{"constant":false,"id":8938,"mutability":"mutable","name":"lastValue","nameLocation":"12008:9:26","nodeType":"VariableDeclaration","scope":8975,"src":"12000:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8937,"name":"uint208","nodeType":"ElementaryTypeName","src":"12000:7:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"id":8941,"initialValue":{"expression":{"id":8939,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8924,"src":"12020:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8940,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12025:6:26","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8596,"src":"12020:11:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"VariableDeclarationStatement","src":"12000:31:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":8944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8942,"name":"lastKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8933,"src":"12105:7:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8943,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8905,"src":"12115:3:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"12105:13:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8949,"nodeType":"IfStatement","src":"12101:89:26","trueBody":{"id":8948,"nodeType":"Block","src":"12120:70:26","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8945,"name":"CheckpointUnorderedInsertion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8063,"src":"12145:28:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12145:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8947,"nodeType":"RevertStatement","src":"12138:37:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":8952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8950,"name":"lastKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8933,"src":"12253:7:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8951,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8905,"src":"12264:3:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"12253:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8969,"nodeType":"Block","src":"12327:85:26","statements":[{"expression":{"arguments":[{"arguments":[{"id":8964,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8905,"src":"12376:3:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":8965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8907,"src":"12389:5:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":8963,"name":"Checkpoint208","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8597,"src":"12355:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint208_$8597_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["12370:4:26","12381:6:26"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"12355:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint208_$8597_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}],"expression":{"id":8960,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8903,"src":"12345:4:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},"id":8962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12350:4:26","memberName":"push","nodeType":"MemberAccess","src":"12345:9:26","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint208_$8597_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,struct Checkpoints.Checkpoint208 storage ref)"}},"id":8967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12345:52:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8968,"nodeType":"ExpressionStatement","src":"12345:52:26"}]},"id":8970,"nodeType":"IfStatement","src":"12249:163:26","trueBody":{"id":8959,"nodeType":"Block","src":"12269:52:26","statements":[{"expression":{"id":8957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8953,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8924,"src":"12287:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8955,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12292:6:26","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8596,"src":"12287:11:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8907,"src":"12301:5:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"12287:19:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":8958,"nodeType":"ExpressionStatement","src":"12287:19:26"}]}},{"expression":{"components":[{"id":8971,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8938,"src":"12433:9:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},{"id":8972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8907,"src":"12444:5:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"id":8973,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12432:18:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"functionReturnParameters":8913,"id":8974,"nodeType":"Return","src":"12425:25:26"}]}}]},"documentation":{"id":8899,"nodeType":"StructuredDocumentation","src":"11489:165:26","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":8992,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"11668:7:26","nodeType":"FunctionDefinition","parameters":{"id":8908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8903,"mutability":"mutable","name":"self","nameLocation":"11709:4:26","nodeType":"VariableDeclaration","scope":8992,"src":"11685:28:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":8901,"nodeType":"UserDefinedTypeName","pathNode":{"id":8900,"name":"Checkpoint208","nameLocations":["11685:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":8597,"src":"11685:13:26"},"referencedDeclaration":8597,"src":"11685:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":8902,"nodeType":"ArrayTypeName","src":"11685:15:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":8905,"mutability":"mutable","name":"key","nameLocation":"11730:3:26","nodeType":"VariableDeclaration","scope":8992,"src":"11723:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8904,"name":"uint48","nodeType":"ElementaryTypeName","src":"11723:6:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":8907,"mutability":"mutable","name":"value","nameLocation":"11751:5:26","nodeType":"VariableDeclaration","scope":8992,"src":"11743:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8906,"name":"uint208","nodeType":"ElementaryTypeName","src":"11743:7:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"11675:87:26"},"returnParameters":{"id":8913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8910,"mutability":"mutable","name":"oldValue","nameLocation":"11788:8:26","nodeType":"VariableDeclaration","scope":8992,"src":"11780:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8909,"name":"uint208","nodeType":"ElementaryTypeName","src":"11780:7:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":8912,"mutability":"mutable","name":"newValue","nameLocation":"11806:8:26","nodeType":"VariableDeclaration","scope":8992,"src":"11798:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8911,"name":"uint208","nodeType":"ElementaryTypeName","src":"11798:7:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"11779:36:26"},"scope":9636,"src":"11659:922:26","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":9043,"nodeType":"Block","src":"13097:267:26","statements":[{"body":{"id":9039,"nodeType":"Block","src":"13126:211:26","statements":[{"assignments":[9012],"declarations":[{"constant":false,"id":9012,"mutability":"mutable","name":"mid","nameLocation":"13148:3:26","nodeType":"VariableDeclaration","scope":9039,"src":"13140:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9011,"name":"uint256","nodeType":"ElementaryTypeName","src":"13140:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9018,"initialValue":{"arguments":[{"id":9015,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9001,"src":"13167:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9016,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9003,"src":"13172:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9013,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"13154:4:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6146_$","typeString":"type(library Math)"}},"id":9014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13159:7:26","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4875,"src":"13154:12:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":9017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13154:23:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13140:37:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":9025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":9020,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8997,"src":"13209:4:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},{"id":9021,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9012,"src":"13215:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9019,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8587,9111,9635],"referencedDeclaration":9111,"src":"13195:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8597_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":9022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13195:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":9023,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13220:4:26","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8594,"src":"13195:29:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":9024,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8999,"src":"13227:3:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"13195:35:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9037,"nodeType":"Block","src":"13281:46:26","statements":[{"expression":{"id":9035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9031,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9001,"src":"13299:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9032,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9012,"src":"13305:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":9033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13311:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13305:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13299:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9036,"nodeType":"ExpressionStatement","src":"13299:13:26"}]},"id":9038,"nodeType":"IfStatement","src":"13191:136:26","trueBody":{"id":9030,"nodeType":"Block","src":"13232:43:26","statements":[{"expression":{"id":9028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9026,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9003,"src":"13250:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9027,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9012,"src":"13257:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13250:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9029,"nodeType":"ExpressionStatement","src":"13250:10:26"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9008,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9001,"src":"13114:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9009,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9003,"src":"13120:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13114:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9040,"nodeType":"WhileStatement","src":"13107:230:26"},{"expression":{"id":9041,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9003,"src":"13353:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9007,"id":9042,"nodeType":"Return","src":"13346:11:26"}]},"documentation":{"id":8993,"nodeType":"StructuredDocumentation","src":"12587:339:26","text":" @dev Return the index of the first (oldest) checkpoint with key strictly bigger than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":9044,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"12940:18:26","nodeType":"FunctionDefinition","parameters":{"id":9004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8997,"mutability":"mutable","name":"self","nameLocation":"12992:4:26","nodeType":"VariableDeclaration","scope":9044,"src":"12968:28:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":8995,"nodeType":"UserDefinedTypeName","pathNode":{"id":8994,"name":"Checkpoint208","nameLocations":["12968:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":8597,"src":"12968:13:26"},"referencedDeclaration":8597,"src":"12968:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":8996,"nodeType":"ArrayTypeName","src":"12968:15:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":8999,"mutability":"mutable","name":"key","nameLocation":"13013:3:26","nodeType":"VariableDeclaration","scope":9044,"src":"13006:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8998,"name":"uint48","nodeType":"ElementaryTypeName","src":"13006:6:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":9001,"mutability":"mutable","name":"low","nameLocation":"13034:3:26","nodeType":"VariableDeclaration","scope":9044,"src":"13026:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9000,"name":"uint256","nodeType":"ElementaryTypeName","src":"13026:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9003,"mutability":"mutable","name":"high","nameLocation":"13055:4:26","nodeType":"VariableDeclaration","scope":9044,"src":"13047:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9002,"name":"uint256","nodeType":"ElementaryTypeName","src":"13047:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12958:107:26"},"returnParameters":{"id":9007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9044,"src":"13088:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9005,"name":"uint256","nodeType":"ElementaryTypeName","src":"13088:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13087:9:26"},"scope":9636,"src":"12931:433:26","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":9095,"nodeType":"Block","src":"13881:267:26","statements":[{"body":{"id":9091,"nodeType":"Block","src":"13910:211:26","statements":[{"assignments":[9064],"declarations":[{"constant":false,"id":9064,"mutability":"mutable","name":"mid","nameLocation":"13932:3:26","nodeType":"VariableDeclaration","scope":9091,"src":"13924:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9063,"name":"uint256","nodeType":"ElementaryTypeName","src":"13924:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9070,"initialValue":{"arguments":[{"id":9067,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9053,"src":"13951:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9068,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9055,"src":"13956:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9065,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"13938:4:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6146_$","typeString":"type(library Math)"}},"id":9066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13943:7:26","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4875,"src":"13938:12:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":9069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13938:23:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13924:37:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":9077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":9072,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9049,"src":"13993:4:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},{"id":9073,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9064,"src":"13999:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9071,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8587,9111,9635],"referencedDeclaration":9111,"src":"13979:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8597_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":9074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13979:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":9075,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14004:4:26","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8594,"src":"13979:29:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9076,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9051,"src":"14011:3:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"13979:35:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9089,"nodeType":"Block","src":"14068:43:26","statements":[{"expression":{"id":9087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9085,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9055,"src":"14086:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9086,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9064,"src":"14093:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14086:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9088,"nodeType":"ExpressionStatement","src":"14086:10:26"}]},"id":9090,"nodeType":"IfStatement","src":"13975:136:26","trueBody":{"id":9084,"nodeType":"Block","src":"14016:46:26","statements":[{"expression":{"id":9082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9078,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9053,"src":"14034:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9079,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9064,"src":"14040:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":9080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14040:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14034:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9083,"nodeType":"ExpressionStatement","src":"14034:13:26"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9060,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9053,"src":"13898:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9061,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9055,"src":"13904:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13898:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9092,"nodeType":"WhileStatement","src":"13891:230:26"},{"expression":{"id":9093,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9055,"src":"14137:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9059,"id":9094,"nodeType":"Return","src":"14130:11:26"}]},"documentation":{"id":9045,"nodeType":"StructuredDocumentation","src":"13370:340:26","text":" @dev Return the index of the first (oldest) checkpoint with key greater or equal than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":9096,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"13724:18:26","nodeType":"FunctionDefinition","parameters":{"id":9056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9049,"mutability":"mutable","name":"self","nameLocation":"13776:4:26","nodeType":"VariableDeclaration","scope":9096,"src":"13752:28:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":9047,"nodeType":"UserDefinedTypeName","pathNode":{"id":9046,"name":"Checkpoint208","nameLocations":["13752:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":8597,"src":"13752:13:26"},"referencedDeclaration":8597,"src":"13752:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":9048,"nodeType":"ArrayTypeName","src":"13752:15:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":9051,"mutability":"mutable","name":"key","nameLocation":"13797:3:26","nodeType":"VariableDeclaration","scope":9096,"src":"13790:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9050,"name":"uint48","nodeType":"ElementaryTypeName","src":"13790:6:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":9053,"mutability":"mutable","name":"low","nameLocation":"13818:3:26","nodeType":"VariableDeclaration","scope":9096,"src":"13810:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9052,"name":"uint256","nodeType":"ElementaryTypeName","src":"13810:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9055,"mutability":"mutable","name":"high","nameLocation":"13839:4:26","nodeType":"VariableDeclaration","scope":9096,"src":"13831:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9054,"name":"uint256","nodeType":"ElementaryTypeName","src":"13831:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13742:107:26"},"returnParameters":{"id":9059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9096,"src":"13872:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9057,"name":"uint256","nodeType":"ElementaryTypeName","src":"13872:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13871:9:26"},"scope":9636,"src":"13715:433:26","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":9110,"nodeType":"Block","src":"14431:125:26","statements":[{"AST":{"nodeType":"YulBlock","src":"14450:100:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14471:1:26","type":"","value":"0"},{"name":"self.slot","nodeType":"YulIdentifier","src":"14474:9:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14464:6:26"},"nodeType":"YulFunctionCall","src":"14464:20:26"},"nodeType":"YulExpressionStatement","src":"14464:20:26"},{"nodeType":"YulAssignment","src":"14497:43:26","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14526:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14529:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"14516:9:26"},"nodeType":"YulFunctionCall","src":"14516:18:26"},{"name":"pos","nodeType":"YulIdentifier","src":"14536:3:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14512:3:26"},"nodeType":"YulFunctionCall","src":"14512:28:26"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"14497:11:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":9103,"isOffset":false,"isSlot":false,"src":"14536:3:26","valueSize":1},{"declaration":9107,"isOffset":false,"isSlot":true,"src":"14497:11:26","suffix":"slot","valueSize":1},{"declaration":9101,"isOffset":false,"isSlot":true,"src":"14474:9:26","suffix":"slot","valueSize":1}],"id":9109,"nodeType":"InlineAssembly","src":"14441:109:26"}]},"documentation":{"id":9097,"nodeType":"StructuredDocumentation","src":"14154:132:26","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":9111,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"14300:13:26","nodeType":"FunctionDefinition","parameters":{"id":9104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9101,"mutability":"mutable","name":"self","nameLocation":"14347:4:26","nodeType":"VariableDeclaration","scope":9111,"src":"14323:28:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":9099,"nodeType":"UserDefinedTypeName","pathNode":{"id":9098,"name":"Checkpoint208","nameLocations":["14323:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":8597,"src":"14323:13:26"},"referencedDeclaration":8597,"src":"14323:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":9100,"nodeType":"ArrayTypeName","src":"14323:15:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8597_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":9103,"mutability":"mutable","name":"pos","nameLocation":"14369:3:26","nodeType":"VariableDeclaration","scope":9111,"src":"14361:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9102,"name":"uint256","nodeType":"ElementaryTypeName","src":"14361:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:65:26"},"returnParameters":{"id":9108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9107,"mutability":"mutable","name":"result","nameLocation":"14423:6:26","nodeType":"VariableDeclaration","scope":9111,"src":"14401:28:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":9106,"nodeType":"UserDefinedTypeName","pathNode":{"id":9105,"name":"Checkpoint208","nameLocations":["14401:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":8597,"src":"14401:13:26"},"referencedDeclaration":8597,"src":"14401:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8597_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"14400:30:26"},"scope":9636,"src":"14291:265:26","stateMutability":"pure","virtual":false,"visibility":"private"},{"canonicalName":"Checkpoints.Trace160","id":9116,"members":[{"constant":false,"id":9115,"mutability":"mutable","name":"_checkpoints","nameLocation":"14604:12:26","nodeType":"VariableDeclaration","scope":9116,"src":"14588:28:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":9113,"nodeType":"UserDefinedTypeName","pathNode":{"id":9112,"name":"Checkpoint160","nameLocations":["14588:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":9121,"src":"14588:13:26"},"referencedDeclaration":9121,"src":"14588:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9121_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":9114,"nodeType":"ArrayTypeName","src":"14588:15:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"}],"name":"Trace160","nameLocation":"14569:8:26","nodeType":"StructDefinition","scope":9636,"src":"14562:61:26","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint160","id":9121,"members":[{"constant":false,"id":9118,"mutability":"mutable","name":"_key","nameLocation":"14667:4:26","nodeType":"VariableDeclaration","scope":9121,"src":"14660:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9117,"name":"uint96","nodeType":"ElementaryTypeName","src":"14660:6:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":9120,"mutability":"mutable","name":"_value","nameLocation":"14689:6:26","nodeType":"VariableDeclaration","scope":9121,"src":"14681:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9119,"name":"uint160","nodeType":"ElementaryTypeName","src":"14681:7:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"Checkpoint160","nameLocation":"14636:13:26","nodeType":"StructDefinition","scope":9636,"src":"14629:73:26","visibility":"public"},{"body":{"id":9143,"nodeType":"Block","src":"15163:62:26","statements":[{"expression":{"arguments":[{"expression":{"id":9137,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9125,"src":"15188:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9116_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9138,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15193:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9115,"src":"15188:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":9139,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9127,"src":"15207:3:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":9140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9129,"src":"15212:5:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":9136,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[8468,8992,9516],"referencedDeclaration":9516,"src":"15180:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint160_$returns$_t_uint160_$_t_uint160_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint160) returns (uint160,uint160)"}},"id":9141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15180:38:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint160_$","typeString":"tuple(uint160,uint160)"}},"functionReturnParameters":9135,"id":9142,"nodeType":"Return","src":"15173:45:26"}]},"documentation":{"id":9122,"nodeType":"StructuredDocumentation","src":"14708:302:26","text":" @dev Pushes a (`key`, `value`) pair into a Trace160 so that it is stored as the checkpoint.\n Returns previous value and new value.\n IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint96).max` key set will disable the\n library."},"id":9144,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"15024:4:26","nodeType":"FunctionDefinition","parameters":{"id":9130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9125,"mutability":"mutable","name":"self","nameLocation":"15055:4:26","nodeType":"VariableDeclaration","scope":9144,"src":"15038:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9116_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":9124,"nodeType":"UserDefinedTypeName","pathNode":{"id":9123,"name":"Trace160","nameLocations":["15038:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":9116,"src":"15038:8:26"},"referencedDeclaration":9116,"src":"15038:8:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9116_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":9127,"mutability":"mutable","name":"key","nameLocation":"15076:3:26","nodeType":"VariableDeclaration","scope":9144,"src":"15069:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9126,"name":"uint96","nodeType":"ElementaryTypeName","src":"15069:6:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":9129,"mutability":"mutable","name":"value","nameLocation":"15097:5:26","nodeType":"VariableDeclaration","scope":9144,"src":"15089:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9128,"name":"uint160","nodeType":"ElementaryTypeName","src":"15089:7:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15028:80:26"},"returnParameters":{"id":9135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9132,"mutability":"mutable","name":"oldValue","nameLocation":"15135:8:26","nodeType":"VariableDeclaration","scope":9144,"src":"15127:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9131,"name":"uint160","nodeType":"ElementaryTypeName","src":"15127:7:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":9134,"mutability":"mutable","name":"newValue","nameLocation":"15153:8:26","nodeType":"VariableDeclaration","scope":9144,"src":"15145:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9133,"name":"uint160","nodeType":"ElementaryTypeName","src":"15145:7:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15126:36:26"},"scope":9636,"src":"15015:210:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9183,"nodeType":"Block","src":"15478:207:26","statements":[{"assignments":[9156],"declarations":[{"constant":false,"id":9156,"mutability":"mutable","name":"len","nameLocation":"15496:3:26","nodeType":"VariableDeclaration","scope":9183,"src":"15488:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9155,"name":"uint256","nodeType":"ElementaryTypeName","src":"15488:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9160,"initialValue":{"expression":{"expression":{"id":9157,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9148,"src":"15502:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9116_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9158,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15507:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9115,"src":"15502:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":9159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15520:6:26","memberName":"length","nodeType":"MemberAccess","src":"15502:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15488:38:26"},{"assignments":[9162],"declarations":[{"constant":false,"id":9162,"mutability":"mutable","name":"pos","nameLocation":"15544:3:26","nodeType":"VariableDeclaration","scope":9183,"src":"15536:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9161,"name":"uint256","nodeType":"ElementaryTypeName","src":"15536:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9170,"initialValue":{"arguments":[{"expression":{"id":9164,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9148,"src":"15569:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9116_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15574:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9115,"src":"15569:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":9166,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9150,"src":"15588:3:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":9167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15593:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":9168,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9156,"src":"15596:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9163,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8572,9096,9620],"referencedDeclaration":9620,"src":"15550:18:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":9169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15550:50:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15536:64:26"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9171,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9162,"src":"15617:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9172,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9156,"src":"15624:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15617:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":9176,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9148,"src":"15648:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9116_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9177,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15653:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9115,"src":"15648:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":9178,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9162,"src":"15667:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9175,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8587,9111,9635],"referencedDeclaration":9635,"src":"15634:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$9121_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15634:37:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9121_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9180,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15672:6:26","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":9120,"src":"15634:44:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":9181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15617:61:26","trueExpression":{"hexValue":"30","id":9174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15630:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":9154,"id":9182,"nodeType":"Return","src":"15610:68:26"}]},"documentation":{"id":9145,"nodeType":"StructuredDocumentation","src":"15231:154:26","text":" @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n there is none."},"id":9184,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"15399:11:26","nodeType":"FunctionDefinition","parameters":{"id":9151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9148,"mutability":"mutable","name":"self","nameLocation":"15428:4:26","nodeType":"VariableDeclaration","scope":9184,"src":"15411:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9116_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":9147,"nodeType":"UserDefinedTypeName","pathNode":{"id":9146,"name":"Trace160","nameLocations":["15411:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":9116,"src":"15411:8:26"},"referencedDeclaration":9116,"src":"15411:8:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9116_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":9150,"mutability":"mutable","name":"key","nameLocation":"15441:3:26","nodeType":"VariableDeclaration","scope":9184,"src":"15434:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9149,"name":"uint96","nodeType":"ElementaryTypeName","src":"15434:6:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"15410:35:26"},"returnParameters":{"id":9154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9184,"src":"15469:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9152,"name":"uint160","nodeType":"ElementaryTypeName","src":"15469:7:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15468:9:26"},"scope":9636,"src":"15390:295:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9225,"nodeType":"Block","src":"15940:209:26","statements":[{"assignments":[9196],"declarations":[{"constant":false,"id":9196,"mutability":"mutable","name":"len","nameLocation":"15958:3:26","nodeType":"VariableDeclaration","scope":9225,"src":"15950:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9195,"name":"uint256","nodeType":"ElementaryTypeName","src":"15950:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9200,"initialValue":{"expression":{"expression":{"id":9197,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9188,"src":"15964:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9116_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9198,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15969:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9115,"src":"15964:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":9199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15982:6:26","memberName":"length","nodeType":"MemberAccess","src":"15964:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15950:38:26"},{"assignments":[9202],"declarations":[{"constant":false,"id":9202,"mutability":"mutable","name":"pos","nameLocation":"16006:3:26","nodeType":"VariableDeclaration","scope":9225,"src":"15998:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9201,"name":"uint256","nodeType":"ElementaryTypeName","src":"15998:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9210,"initialValue":{"arguments":[{"expression":{"id":9204,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9188,"src":"16031:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9116_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9205,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16036:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9115,"src":"16031:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":9206,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9190,"src":"16050:3:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":9207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16055:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":9208,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9196,"src":"16058:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9203,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8520,9044,9568],"referencedDeclaration":9568,"src":"16012:18:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":9209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16012:50:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15998:64:26"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9211,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9202,"src":"16079:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16086:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16079:8:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":9216,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9188,"src":"16108:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9116_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9217,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16113:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9115,"src":"16108:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9218,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9202,"src":"16127:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16133:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16127:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9215,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8587,9111,9635],"referencedDeclaration":9635,"src":"16094:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$9121_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16094:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9121_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9222,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16136:6:26","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":9120,"src":"16094:48:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":9223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"16079:63:26","trueExpression":{"hexValue":"30","id":9214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16090:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":9194,"id":9224,"nodeType":"Return","src":"16072:70:26"}]},"documentation":{"id":9185,"nodeType":"StructuredDocumentation","src":"15691:156:26","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none."},"id":9226,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"15861:11:26","nodeType":"FunctionDefinition","parameters":{"id":9191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9188,"mutability":"mutable","name":"self","nameLocation":"15890:4:26","nodeType":"VariableDeclaration","scope":9226,"src":"15873:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9116_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":9187,"nodeType":"UserDefinedTypeName","pathNode":{"id":9186,"name":"Trace160","nameLocations":["15873:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":9116,"src":"15873:8:26"},"referencedDeclaration":9116,"src":"15873:8:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9116_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":9190,"mutability":"mutable","name":"key","nameLocation":"15903:3:26","nodeType":"VariableDeclaration","scope":9226,"src":"15896:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9189,"name":"uint96","nodeType":"ElementaryTypeName","src":"15896:6:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"15872:35:26"},"returnParameters":{"id":9194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9226,"src":"15931:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9192,"name":"uint160","nodeType":"ElementaryTypeName","src":"15931:7:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15930:9:26"},"scope":9636,"src":"15852:297:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9310,"nodeType":"Block","src":"16548:512:26","statements":[{"assignments":[9238],"declarations":[{"constant":false,"id":9238,"mutability":"mutable","name":"len","nameLocation":"16566:3:26","nodeType":"VariableDeclaration","scope":9310,"src":"16558:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9237,"name":"uint256","nodeType":"ElementaryTypeName","src":"16558:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9242,"initialValue":{"expression":{"expression":{"id":9239,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9230,"src":"16572:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9116_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16577:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9115,"src":"16572:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":9241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16590:6:26","memberName":"length","nodeType":"MemberAccess","src":"16572:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16558:38:26"},{"assignments":[9244],"declarations":[{"constant":false,"id":9244,"mutability":"mutable","name":"low","nameLocation":"16615:3:26","nodeType":"VariableDeclaration","scope":9310,"src":"16607:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9243,"name":"uint256","nodeType":"ElementaryTypeName","src":"16607:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9246,"initialValue":{"hexValue":"30","id":9245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16621:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16607:15:26"},{"assignments":[9248],"declarations":[{"constant":false,"id":9248,"mutability":"mutable","name":"high","nameLocation":"16640:4:26","nodeType":"VariableDeclaration","scope":9310,"src":"16632:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9247,"name":"uint256","nodeType":"ElementaryTypeName","src":"16632:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9250,"initialValue":{"id":9249,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9238,"src":"16647:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16632:18:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9251,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9238,"src":"16665:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":9252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16671:1:26","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"16665:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9285,"nodeType":"IfStatement","src":"16661:234:26","trueBody":{"id":9284,"nodeType":"Block","src":"16674:221:26","statements":[{"assignments":[9255],"declarations":[{"constant":false,"id":9255,"mutability":"mutable","name":"mid","nameLocation":"16696:3:26","nodeType":"VariableDeclaration","scope":9284,"src":"16688:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9254,"name":"uint256","nodeType":"ElementaryTypeName","src":"16688:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9262,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9256,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9238,"src":"16702:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":9259,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9238,"src":"16718:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9257,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"16708:4:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6146_$","typeString":"type(library Math)"}},"id":9258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16713:4:26","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":5690,"src":"16708:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":9260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16708:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16702:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16688:34:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":9270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9263,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9232,"src":"16740:3:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":9265,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9230,"src":"16760:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9116_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9266,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16765:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9115,"src":"16760:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":9267,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9255,"src":"16779:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9264,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8587,9111,9635],"referencedDeclaration":9635,"src":"16746:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$9121_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16746:37:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9121_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9269,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16784:4:26","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":9118,"src":"16746:42:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"16740:48:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9282,"nodeType":"Block","src":"16839:46:26","statements":[{"expression":{"id":9280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9276,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9244,"src":"16857:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9277,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9255,"src":"16863:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":9278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16869:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16863:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16857:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9281,"nodeType":"ExpressionStatement","src":"16857:13:26"}]},"id":9283,"nodeType":"IfStatement","src":"16736:149:26","trueBody":{"id":9275,"nodeType":"Block","src":"16790:43:26","statements":[{"expression":{"id":9273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9271,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9248,"src":"16808:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9272,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9255,"src":"16815:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16808:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9274,"nodeType":"ExpressionStatement","src":"16808:10:26"}]}}]}},{"assignments":[9287],"declarations":[{"constant":false,"id":9287,"mutability":"mutable","name":"pos","nameLocation":"16913:3:26","nodeType":"VariableDeclaration","scope":9310,"src":"16905:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9286,"name":"uint256","nodeType":"ElementaryTypeName","src":"16905:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9295,"initialValue":{"arguments":[{"expression":{"id":9289,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9230,"src":"16938:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9116_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9290,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16943:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9115,"src":"16938:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":9291,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9232,"src":"16957:3:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":9292,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9244,"src":"16962:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9293,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9248,"src":"16967:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9288,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8520,9044,9568],"referencedDeclaration":9568,"src":"16919:18:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":9294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16919:53:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16905:67:26"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9296,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9287,"src":"16990:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16997:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16990:8:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":9301,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9230,"src":"17019:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9116_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9302,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17024:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9115,"src":"17019:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9303,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9287,"src":"17038:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17044:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17038:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9300,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8587,9111,9635],"referencedDeclaration":9635,"src":"17005:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$9121_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17005:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9121_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9307,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17047:6:26","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":9120,"src":"17005:48:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":9308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"16990:63:26","trueExpression":{"hexValue":"30","id":9299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17001:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":9236,"id":9309,"nodeType":"Return","src":"16983:70:26"}]},"documentation":{"id":9227,"nodeType":"StructuredDocumentation","src":"16155:294:26","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none.\n NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n keys)."},"id":9311,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookupRecent","nameLocation":"16463:17:26","nodeType":"FunctionDefinition","parameters":{"id":9233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9230,"mutability":"mutable","name":"self","nameLocation":"16498:4:26","nodeType":"VariableDeclaration","scope":9311,"src":"16481:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9116_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":9229,"nodeType":"UserDefinedTypeName","pathNode":{"id":9228,"name":"Trace160","nameLocations":["16481:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":9116,"src":"16481:8:26"},"referencedDeclaration":9116,"src":"16481:8:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9116_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":9232,"mutability":"mutable","name":"key","nameLocation":"16511:3:26","nodeType":"VariableDeclaration","scope":9311,"src":"16504:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9231,"name":"uint96","nodeType":"ElementaryTypeName","src":"16504:6:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"16480:35:26"},"returnParameters":{"id":9236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9311,"src":"16539:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9234,"name":"uint160","nodeType":"ElementaryTypeName","src":"16539:7:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"16538:9:26"},"scope":9636,"src":"16454:606:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9340,"nodeType":"Block","src":"17251:135:26","statements":[{"assignments":[9321],"declarations":[{"constant":false,"id":9321,"mutability":"mutable","name":"pos","nameLocation":"17269:3:26","nodeType":"VariableDeclaration","scope":9340,"src":"17261:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9320,"name":"uint256","nodeType":"ElementaryTypeName","src":"17261:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9325,"initialValue":{"expression":{"expression":{"id":9322,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9315,"src":"17275:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9116_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17280:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9115,"src":"17275:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":9324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17293:6:26","memberName":"length","nodeType":"MemberAccess","src":"17275:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17261:38:26"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9326,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9321,"src":"17316:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17323:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17316:8:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":9331,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9315,"src":"17345:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9116_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9332,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17350:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9115,"src":"17345:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9333,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9321,"src":"17364:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17370:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17364:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9330,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8587,9111,9635],"referencedDeclaration":9635,"src":"17331:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$9121_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17331:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9121_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9337,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17373:6:26","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":9120,"src":"17331:48:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":9338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"17316:63:26","trueExpression":{"hexValue":"30","id":9329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17327:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":9319,"id":9339,"nodeType":"Return","src":"17309:70:26"}]},"documentation":{"id":9312,"nodeType":"StructuredDocumentation","src":"17066:109:26","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":9341,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"17189:6:26","nodeType":"FunctionDefinition","parameters":{"id":9316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9315,"mutability":"mutable","name":"self","nameLocation":"17213:4:26","nodeType":"VariableDeclaration","scope":9341,"src":"17196:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9116_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":9314,"nodeType":"UserDefinedTypeName","pathNode":{"id":9313,"name":"Trace160","nameLocations":["17196:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":9116,"src":"17196:8:26"},"referencedDeclaration":9116,"src":"17196:8:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9116_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"17195:23:26"},"returnParameters":{"id":9319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9341,"src":"17242:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9317,"name":"uint160","nodeType":"ElementaryTypeName","src":"17242:7:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"17241:9:26"},"scope":9636,"src":"17180:206:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9389,"nodeType":"Block","src":"17679:275:26","statements":[{"assignments":[9355],"declarations":[{"constant":false,"id":9355,"mutability":"mutable","name":"pos","nameLocation":"17697:3:26","nodeType":"VariableDeclaration","scope":9389,"src":"17689:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9354,"name":"uint256","nodeType":"ElementaryTypeName","src":"17689:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9359,"initialValue":{"expression":{"expression":{"id":9356,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9345,"src":"17703:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9116_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9357,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17708:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9115,"src":"17703:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":9358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17721:6:26","memberName":"length","nodeType":"MemberAccess","src":"17703:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17689:38:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9360,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9355,"src":"17741:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17748:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17741:8:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9387,"nodeType":"Block","src":"17802:146:26","statements":[{"assignments":[9371],"declarations":[{"constant":false,"id":9371,"mutability":"mutable","name":"ckpt","nameLocation":"17838:4:26","nodeType":"VariableDeclaration","scope":9387,"src":"17816:26:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9121_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":9370,"nodeType":"UserDefinedTypeName","pathNode":{"id":9369,"name":"Checkpoint160","nameLocations":["17816:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":9121,"src":"17816:13:26"},"referencedDeclaration":9121,"src":"17816:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9121_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"id":9379,"initialValue":{"arguments":[{"expression":{"id":9373,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9345,"src":"17859:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9116_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9374,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17864:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9115,"src":"17859:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9375,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9355,"src":"17878:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17884:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17878:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9372,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8587,9111,9635],"referencedDeclaration":9635,"src":"17845:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$9121_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17845:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9121_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"17816:70:26"},{"expression":{"components":[{"hexValue":"74727565","id":9380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17908:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":9381,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9371,"src":"17914:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9121_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9382,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17919:4:26","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":9118,"src":"17914:9:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"expression":{"id":9383,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9371,"src":"17925:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9121_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9384,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17930:6:26","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":9120,"src":"17925:11:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":9385,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17907:30:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint96_$_t_uint160_$","typeString":"tuple(bool,uint96,uint160)"}},"functionReturnParameters":9353,"id":9386,"nodeType":"Return","src":"17900:37:26"}]},"id":9388,"nodeType":"IfStatement","src":"17737:211:26","trueBody":{"id":9368,"nodeType":"Block","src":"17751:45:26","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":9363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17773:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":9364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17780:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":9365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17783:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":9366,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17772:13:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":9353,"id":9367,"nodeType":"Return","src":"17765:20:26"}]}}]},"documentation":{"id":9342,"nodeType":"StructuredDocumentation","src":"17392:168:26","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":9390,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"17574:16:26","nodeType":"FunctionDefinition","parameters":{"id":9346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9345,"mutability":"mutable","name":"self","nameLocation":"17608:4:26","nodeType":"VariableDeclaration","scope":9390,"src":"17591:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9116_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":9344,"nodeType":"UserDefinedTypeName","pathNode":{"id":9343,"name":"Trace160","nameLocations":["17591:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":9116,"src":"17591:8:26"},"referencedDeclaration":9116,"src":"17591:8:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9116_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"17590:23:26"},"returnParameters":{"id":9353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9348,"mutability":"mutable","name":"exists","nameLocation":"17642:6:26","nodeType":"VariableDeclaration","scope":9390,"src":"17637:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9347,"name":"bool","nodeType":"ElementaryTypeName","src":"17637:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9350,"mutability":"mutable","name":"_key","nameLocation":"17657:4:26","nodeType":"VariableDeclaration","scope":9390,"src":"17650:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9349,"name":"uint96","nodeType":"ElementaryTypeName","src":"17650:6:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":9352,"mutability":"mutable","name":"_value","nameLocation":"17671:6:26","nodeType":"VariableDeclaration","scope":9390,"src":"17663:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9351,"name":"uint160","nodeType":"ElementaryTypeName","src":"17663:7:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"17636:42:26"},"scope":9636,"src":"17565:389:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9403,"nodeType":"Block","src":"18094:48:26","statements":[{"expression":{"expression":{"expression":{"id":9399,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9394,"src":"18111:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9116_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9400,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18116:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9115,"src":"18111:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":9401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18129:6:26","memberName":"length","nodeType":"MemberAccess","src":"18111:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9398,"id":9402,"nodeType":"Return","src":"18104:31:26"}]},"documentation":{"id":9391,"nodeType":"StructuredDocumentation","src":"17960:58:26","text":" @dev Returns the number of checkpoints."},"id":9404,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"18032:6:26","nodeType":"FunctionDefinition","parameters":{"id":9395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9394,"mutability":"mutable","name":"self","nameLocation":"18056:4:26","nodeType":"VariableDeclaration","scope":9404,"src":"18039:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9116_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":9393,"nodeType":"UserDefinedTypeName","pathNode":{"id":9392,"name":"Trace160","nameLocations":["18039:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":9116,"src":"18039:8:26"},"referencedDeclaration":9116,"src":"18039:8:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9116_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"18038:23:26"},"returnParameters":{"id":9398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9404,"src":"18085:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9396,"name":"uint256","nodeType":"ElementaryTypeName","src":"18085:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18084:9:26"},"scope":9636,"src":"18023:119:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9421,"nodeType":"Block","src":"18306:46:26","statements":[{"expression":{"baseExpression":{"expression":{"id":9416,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9408,"src":"18323:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9116_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9417,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18328:12:26","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9115,"src":"18323:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":9419,"indexExpression":{"id":9418,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9410,"src":"18341:3:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18323:22:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9121_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref"}},"functionReturnParameters":9415,"id":9420,"nodeType":"Return","src":"18316:29:26"}]},"documentation":{"id":9405,"nodeType":"StructuredDocumentation","src":"18148:61:26","text":" @dev Returns checkpoint at given position."},"id":9422,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"18223:2:26","nodeType":"FunctionDefinition","parameters":{"id":9411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9408,"mutability":"mutable","name":"self","nameLocation":"18243:4:26","nodeType":"VariableDeclaration","scope":9422,"src":"18226:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9116_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":9407,"nodeType":"UserDefinedTypeName","pathNode":{"id":9406,"name":"Trace160","nameLocations":["18226:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":9116,"src":"18226:8:26"},"referencedDeclaration":9116,"src":"18226:8:26","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9116_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":9410,"mutability":"mutable","name":"pos","nameLocation":"18256:3:26","nodeType":"VariableDeclaration","scope":9422,"src":"18249:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9409,"name":"uint32","nodeType":"ElementaryTypeName","src":"18249:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"18225:35:26"},"returnParameters":{"id":9415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9422,"src":"18284:20:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9121_memory_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":9413,"nodeType":"UserDefinedTypeName","pathNode":{"id":9412,"name":"Checkpoint160","nameLocations":["18284:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":9121,"src":"18284:13:26"},"referencedDeclaration":9121,"src":"18284:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9121_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"src":"18283:22:26"},"scope":9636,"src":"18214:138:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9515,"nodeType":"Block","src":"18685:765:26","statements":[{"assignments":[9439],"declarations":[{"constant":false,"id":9439,"mutability":"mutable","name":"pos","nameLocation":"18703:3:26","nodeType":"VariableDeclaration","scope":9515,"src":"18695:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9438,"name":"uint256","nodeType":"ElementaryTypeName","src":"18695:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9442,"initialValue":{"expression":{"id":9440,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9427,"src":"18709:4:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":9441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18714:6:26","memberName":"length","nodeType":"MemberAccess","src":"18709:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18695:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9443,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9439,"src":"18735:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18741:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18735:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9513,"nodeType":"Block","src":"19336:108:26","statements":[{"expression":{"arguments":[{"arguments":[{"id":9504,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9429,"src":"19381:3:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":9505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9431,"src":"19394:5:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":9503,"name":"Checkpoint160","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9121,"src":"19360:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint160_$9121_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["19375:4:26","19386:6:26"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"19360:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9121_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint160_$9121_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}],"expression":{"id":9500,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9427,"src":"19350:4:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":9502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19355:4:26","memberName":"push","nodeType":"MemberAccess","src":"19350:9:26","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint160_$9121_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,struct Checkpoints.Checkpoint160 storage ref)"}},"id":9507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19350:52:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9508,"nodeType":"ExpressionStatement","src":"19350:52:26"},{"expression":{"components":[{"hexValue":"30","id":9509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19424:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":9510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9431,"src":"19427:5:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":9511,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19423:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint160_$","typeString":"tuple(int_const 0,uint160)"}},"functionReturnParameters":9437,"id":9512,"nodeType":"Return","src":"19416:17:26"}]},"id":9514,"nodeType":"IfStatement","src":"18731:713:26","trueBody":{"id":9499,"nodeType":"Block","src":"18744:586:26","statements":[{"assignments":[9448],"declarations":[{"constant":false,"id":9448,"mutability":"mutable","name":"last","nameLocation":"18780:4:26","nodeType":"VariableDeclaration","scope":9499,"src":"18758:26:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9121_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":9447,"nodeType":"UserDefinedTypeName","pathNode":{"id":9446,"name":"Checkpoint160","nameLocations":["18758:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":9121,"src":"18758:13:26"},"referencedDeclaration":9121,"src":"18758:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9121_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"id":9455,"initialValue":{"arguments":[{"id":9450,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9427,"src":"18801:4:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9451,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9439,"src":"18807:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18813:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18807:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9449,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8587,9111,9635],"referencedDeclaration":9635,"src":"18787:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$9121_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18787:28:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9121_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"18758:57:26"},{"assignments":[9457],"declarations":[{"constant":false,"id":9457,"mutability":"mutable","name":"lastKey","nameLocation":"18836:7:26","nodeType":"VariableDeclaration","scope":9499,"src":"18829:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9456,"name":"uint96","nodeType":"ElementaryTypeName","src":"18829:6:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":9460,"initialValue":{"expression":{"id":9458,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9448,"src":"18846:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9121_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9459,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18851:4:26","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":9118,"src":"18846:9:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"18829:26:26"},{"assignments":[9462],"declarations":[{"constant":false,"id":9462,"mutability":"mutable","name":"lastValue","nameLocation":"18877:9:26","nodeType":"VariableDeclaration","scope":9499,"src":"18869:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9461,"name":"uint160","nodeType":"ElementaryTypeName","src":"18869:7:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"id":9465,"initialValue":{"expression":{"id":9463,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9448,"src":"18889:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9121_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9464,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18894:6:26","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":9120,"src":"18889:11:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"VariableDeclarationStatement","src":"18869:31:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":9468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9466,"name":"lastKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9457,"src":"18974:7:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":9467,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9429,"src":"18984:3:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18974:13:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9473,"nodeType":"IfStatement","src":"18970:89:26","trueBody":{"id":9472,"nodeType":"Block","src":"18989:70:26","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9469,"name":"CheckpointUnorderedInsertion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8063,"src":"19014:28:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19014:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9471,"nodeType":"RevertStatement","src":"19007:37:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":9476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9474,"name":"lastKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9457,"src":"19122:7:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9475,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9429,"src":"19133:3:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"19122:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9493,"nodeType":"Block","src":"19196:85:26","statements":[{"expression":{"arguments":[{"arguments":[{"id":9488,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9429,"src":"19245:3:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":9489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9431,"src":"19258:5:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":9487,"name":"Checkpoint160","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9121,"src":"19224:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint160_$9121_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["19239:4:26","19250:6:26"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"19224:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9121_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint160_$9121_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}],"expression":{"id":9484,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9427,"src":"19214:4:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":9486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19219:4:26","memberName":"push","nodeType":"MemberAccess","src":"19214:9:26","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint160_$9121_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,struct Checkpoints.Checkpoint160 storage ref)"}},"id":9491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19214:52:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9492,"nodeType":"ExpressionStatement","src":"19214:52:26"}]},"id":9494,"nodeType":"IfStatement","src":"19118:163:26","trueBody":{"id":9483,"nodeType":"Block","src":"19138:52:26","statements":[{"expression":{"id":9481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9477,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9448,"src":"19156:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9121_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9479,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"19161:6:26","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":9120,"src":"19156:11:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9431,"src":"19170:5:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"19156:19:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":9482,"nodeType":"ExpressionStatement","src":"19156:19:26"}]}},{"expression":{"components":[{"id":9495,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9462,"src":"19302:9:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":9496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9431,"src":"19313:5:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":9497,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19301:18:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint160_$","typeString":"tuple(uint160,uint160)"}},"functionReturnParameters":9437,"id":9498,"nodeType":"Return","src":"19294:25:26"}]}}]},"documentation":{"id":9423,"nodeType":"StructuredDocumentation","src":"18358:165:26","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":9516,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"18537:7:26","nodeType":"FunctionDefinition","parameters":{"id":9432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9427,"mutability":"mutable","name":"self","nameLocation":"18578:4:26","nodeType":"VariableDeclaration","scope":9516,"src":"18554:28:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":9425,"nodeType":"UserDefinedTypeName","pathNode":{"id":9424,"name":"Checkpoint160","nameLocations":["18554:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":9121,"src":"18554:13:26"},"referencedDeclaration":9121,"src":"18554:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9121_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":9426,"nodeType":"ArrayTypeName","src":"18554:15:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":9429,"mutability":"mutable","name":"key","nameLocation":"18599:3:26","nodeType":"VariableDeclaration","scope":9516,"src":"18592:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9428,"name":"uint96","nodeType":"ElementaryTypeName","src":"18592:6:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":9431,"mutability":"mutable","name":"value","nameLocation":"18620:5:26","nodeType":"VariableDeclaration","scope":9516,"src":"18612:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9430,"name":"uint160","nodeType":"ElementaryTypeName","src":"18612:7:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"18544:87:26"},"returnParameters":{"id":9437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9434,"mutability":"mutable","name":"oldValue","nameLocation":"18657:8:26","nodeType":"VariableDeclaration","scope":9516,"src":"18649:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9433,"name":"uint160","nodeType":"ElementaryTypeName","src":"18649:7:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":9436,"mutability":"mutable","name":"newValue","nameLocation":"18675:8:26","nodeType":"VariableDeclaration","scope":9516,"src":"18667:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9435,"name":"uint160","nodeType":"ElementaryTypeName","src":"18667:7:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"18648:36:26"},"scope":9636,"src":"18528:922:26","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":9567,"nodeType":"Block","src":"19966:267:26","statements":[{"body":{"id":9563,"nodeType":"Block","src":"19995:211:26","statements":[{"assignments":[9536],"declarations":[{"constant":false,"id":9536,"mutability":"mutable","name":"mid","nameLocation":"20017:3:26","nodeType":"VariableDeclaration","scope":9563,"src":"20009:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9535,"name":"uint256","nodeType":"ElementaryTypeName","src":"20009:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9542,"initialValue":{"arguments":[{"id":9539,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9525,"src":"20036:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9540,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9527,"src":"20041:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9537,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"20023:4:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6146_$","typeString":"type(library Math)"}},"id":9538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20028:7:26","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4875,"src":"20023:12:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":9541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20023:23:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20009:37:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":9549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":9544,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9521,"src":"20078:4:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"id":9545,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9536,"src":"20084:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9543,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8587,9111,9635],"referencedDeclaration":9635,"src":"20064:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$9121_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20064:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9121_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9547,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20089:4:26","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":9118,"src":"20064:29:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":9548,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9523,"src":"20096:3:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"20064:35:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9561,"nodeType":"Block","src":"20150:46:26","statements":[{"expression":{"id":9559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9555,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9525,"src":"20168:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9556,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9536,"src":"20174:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":9557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20180:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20174:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20168:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9560,"nodeType":"ExpressionStatement","src":"20168:13:26"}]},"id":9562,"nodeType":"IfStatement","src":"20060:136:26","trueBody":{"id":9554,"nodeType":"Block","src":"20101:43:26","statements":[{"expression":{"id":9552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9550,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9527,"src":"20119:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9551,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9536,"src":"20126:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20119:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9553,"nodeType":"ExpressionStatement","src":"20119:10:26"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9532,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9525,"src":"19983:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9533,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9527,"src":"19989:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19983:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9564,"nodeType":"WhileStatement","src":"19976:230:26"},{"expression":{"id":9565,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9527,"src":"20222:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9531,"id":9566,"nodeType":"Return","src":"20215:11:26"}]},"documentation":{"id":9517,"nodeType":"StructuredDocumentation","src":"19456:339:26","text":" @dev Return the index of the first (oldest) checkpoint with key strictly bigger than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":9568,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"19809:18:26","nodeType":"FunctionDefinition","parameters":{"id":9528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9521,"mutability":"mutable","name":"self","nameLocation":"19861:4:26","nodeType":"VariableDeclaration","scope":9568,"src":"19837:28:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":9519,"nodeType":"UserDefinedTypeName","pathNode":{"id":9518,"name":"Checkpoint160","nameLocations":["19837:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":9121,"src":"19837:13:26"},"referencedDeclaration":9121,"src":"19837:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9121_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":9520,"nodeType":"ArrayTypeName","src":"19837:15:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":9523,"mutability":"mutable","name":"key","nameLocation":"19882:3:26","nodeType":"VariableDeclaration","scope":9568,"src":"19875:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9522,"name":"uint96","nodeType":"ElementaryTypeName","src":"19875:6:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":9525,"mutability":"mutable","name":"low","nameLocation":"19903:3:26","nodeType":"VariableDeclaration","scope":9568,"src":"19895:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9524,"name":"uint256","nodeType":"ElementaryTypeName","src":"19895:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9527,"mutability":"mutable","name":"high","nameLocation":"19924:4:26","nodeType":"VariableDeclaration","scope":9568,"src":"19916:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9526,"name":"uint256","nodeType":"ElementaryTypeName","src":"19916:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19827:107:26"},"returnParameters":{"id":9531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9568,"src":"19957:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9529,"name":"uint256","nodeType":"ElementaryTypeName","src":"19957:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19956:9:26"},"scope":9636,"src":"19800:433:26","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":9619,"nodeType":"Block","src":"20750:267:26","statements":[{"body":{"id":9615,"nodeType":"Block","src":"20779:211:26","statements":[{"assignments":[9588],"declarations":[{"constant":false,"id":9588,"mutability":"mutable","name":"mid","nameLocation":"20801:3:26","nodeType":"VariableDeclaration","scope":9615,"src":"20793:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9587,"name":"uint256","nodeType":"ElementaryTypeName","src":"20793:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9594,"initialValue":{"arguments":[{"id":9591,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9577,"src":"20820:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9592,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9579,"src":"20825:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9589,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"20807:4:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6146_$","typeString":"type(library Math)"}},"id":9590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20812:7:26","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4875,"src":"20807:12:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":9593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20807:23:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20793:37:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":9601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":9596,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9573,"src":"20862:4:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"id":9597,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9588,"src":"20868:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9595,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8587,9111,9635],"referencedDeclaration":9635,"src":"20848:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$9121_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20848:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9121_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9599,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20873:4:26","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":9118,"src":"20848:29:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9600,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9575,"src":"20880:3:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"20848:35:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9613,"nodeType":"Block","src":"20937:43:26","statements":[{"expression":{"id":9611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9609,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9579,"src":"20955:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9610,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9588,"src":"20962:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20955:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9612,"nodeType":"ExpressionStatement","src":"20955:10:26"}]},"id":9614,"nodeType":"IfStatement","src":"20844:136:26","trueBody":{"id":9608,"nodeType":"Block","src":"20885:46:26","statements":[{"expression":{"id":9606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9602,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9577,"src":"20903:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9603,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9588,"src":"20909:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":9604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20915:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20909:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20903:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9607,"nodeType":"ExpressionStatement","src":"20903:13:26"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9584,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9577,"src":"20767:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9585,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9579,"src":"20773:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20767:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9616,"nodeType":"WhileStatement","src":"20760:230:26"},{"expression":{"id":9617,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9579,"src":"21006:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9583,"id":9618,"nodeType":"Return","src":"20999:11:26"}]},"documentation":{"id":9569,"nodeType":"StructuredDocumentation","src":"20239:340:26","text":" @dev Return the index of the first (oldest) checkpoint with key greater or equal than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":9620,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"20593:18:26","nodeType":"FunctionDefinition","parameters":{"id":9580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9573,"mutability":"mutable","name":"self","nameLocation":"20645:4:26","nodeType":"VariableDeclaration","scope":9620,"src":"20621:28:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":9571,"nodeType":"UserDefinedTypeName","pathNode":{"id":9570,"name":"Checkpoint160","nameLocations":["20621:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":9121,"src":"20621:13:26"},"referencedDeclaration":9121,"src":"20621:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9121_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":9572,"nodeType":"ArrayTypeName","src":"20621:15:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":9575,"mutability":"mutable","name":"key","nameLocation":"20666:3:26","nodeType":"VariableDeclaration","scope":9620,"src":"20659:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9574,"name":"uint96","nodeType":"ElementaryTypeName","src":"20659:6:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":9577,"mutability":"mutable","name":"low","nameLocation":"20687:3:26","nodeType":"VariableDeclaration","scope":9620,"src":"20679:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9576,"name":"uint256","nodeType":"ElementaryTypeName","src":"20679:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9579,"mutability":"mutable","name":"high","nameLocation":"20708:4:26","nodeType":"VariableDeclaration","scope":9620,"src":"20700:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9578,"name":"uint256","nodeType":"ElementaryTypeName","src":"20700:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20611:107:26"},"returnParameters":{"id":9583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9620,"src":"20741:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9581,"name":"uint256","nodeType":"ElementaryTypeName","src":"20741:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20740:9:26"},"scope":9636,"src":"20584:433:26","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":9634,"nodeType":"Block","src":"21300:125:26","statements":[{"AST":{"nodeType":"YulBlock","src":"21319:100:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21340:1:26","type":"","value":"0"},{"name":"self.slot","nodeType":"YulIdentifier","src":"21343:9:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21333:6:26"},"nodeType":"YulFunctionCall","src":"21333:20:26"},"nodeType":"YulExpressionStatement","src":"21333:20:26"},{"nodeType":"YulAssignment","src":"21366:43:26","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21395:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21398:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"21385:9:26"},"nodeType":"YulFunctionCall","src":"21385:18:26"},{"name":"pos","nodeType":"YulIdentifier","src":"21405:3:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21381:3:26"},"nodeType":"YulFunctionCall","src":"21381:28:26"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"21366:11:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":9627,"isOffset":false,"isSlot":false,"src":"21405:3:26","valueSize":1},{"declaration":9631,"isOffset":false,"isSlot":true,"src":"21366:11:26","suffix":"slot","valueSize":1},{"declaration":9625,"isOffset":false,"isSlot":true,"src":"21343:9:26","suffix":"slot","valueSize":1}],"id":9633,"nodeType":"InlineAssembly","src":"21310:109:26"}]},"documentation":{"id":9621,"nodeType":"StructuredDocumentation","src":"21023:132:26","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":9635,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"21169:13:26","nodeType":"FunctionDefinition","parameters":{"id":9628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9625,"mutability":"mutable","name":"self","nameLocation":"21216:4:26","nodeType":"VariableDeclaration","scope":9635,"src":"21192:28:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":9623,"nodeType":"UserDefinedTypeName","pathNode":{"id":9622,"name":"Checkpoint160","nameLocations":["21192:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":9121,"src":"21192:13:26"},"referencedDeclaration":9121,"src":"21192:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9121_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":9624,"nodeType":"ArrayTypeName","src":"21192:15:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9121_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":9627,"mutability":"mutable","name":"pos","nameLocation":"21238:3:26","nodeType":"VariableDeclaration","scope":9635,"src":"21230:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9626,"name":"uint256","nodeType":"ElementaryTypeName","src":"21230:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21182:65:26"},"returnParameters":{"id":9632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9631,"mutability":"mutable","name":"result","nameLocation":"21292:6:26","nodeType":"VariableDeclaration","scope":9635,"src":"21270:28:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9121_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":9630,"nodeType":"UserDefinedTypeName","pathNode":{"id":9629,"name":"Checkpoint160","nameLocations":["21270:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":9121,"src":"21270:13:26"},"referencedDeclaration":9121,"src":"21270:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9121_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"src":"21269:30:26"},"scope":9636,"src":"21160:265:26","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":9637,"src":"668:20759:26","usedErrors":[8063],"usedEvents":[]}],"src":"201:21227:26"},"id":26},"@openzeppelin/contracts/utils/types/Time.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/types/Time.sol","exportedSymbols":{"Math":[6146],"SafeCast":[7911],"Time":[9910]},"id":9911,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9638,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"104:24:27"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"../math/Math.sol","id":9640,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9911,"sourceUnit":6147,"src":"130:38:27","symbolAliases":[{"foreign":{"id":9639,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"138:4:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../math/SafeCast.sol","id":9642,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9911,"sourceUnit":7912,"src":"169:46:27","symbolAliases":[{"foreign":{"id":9641,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"177:8:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Time","contractDependencies":[],"contractKind":"library","documentation":{"id":9643,"nodeType":"StructuredDocumentation","src":"217:422:27","text":" @dev This library provides helpers for manipulating time-related objects.\n It uses the following types:\n - `uint48` for timepoints\n - `uint32` for durations\n While the library doesn't provide specific types for timepoints and duration, it does provide:\n - a `Delay` type to represent duration that can be programmed to change value automatically at a given point\n - additional helper functions"},"fullyImplemented":true,"id":9910,"linearizedBaseContracts":[9910],"name":"Time","nameLocation":"648:4:27","nodeType":"ContractDefinition","nodes":[{"global":false,"id":9645,"libraryName":{"id":9644,"name":"Time","nameLocations":["665:4:27"],"nodeType":"IdentifierPath","referencedDeclaration":9910,"src":"665:4:27"},"nodeType":"UsingForDirective","src":"659:17:27"},{"body":{"id":9657,"nodeType":"Block","src":"802:58:27","statements":[{"expression":{"arguments":[{"expression":{"id":9653,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"837:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"843:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"837:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9651,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"819:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7911_$","typeString":"type(library SafeCast)"}},"id":9652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"828:8:27","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":6901,"src":"819:17:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":9655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"819:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":9650,"id":9656,"nodeType":"Return","src":"812:41:27"}]},"documentation":{"id":9646,"nodeType":"StructuredDocumentation","src":"682:63:27","text":" @dev Get the block timestamp as a Timepoint."},"id":9658,"implemented":true,"kind":"function","modifiers":[],"name":"timestamp","nameLocation":"759:9:27","nodeType":"FunctionDefinition","parameters":{"id":9647,"nodeType":"ParameterList","parameters":[],"src":"768:2:27"},"returnParameters":{"id":9650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9658,"src":"794:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9648,"name":"uint48","nodeType":"ElementaryTypeName","src":"794:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"793:8:27"},"scope":9910,"src":"750:110:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9670,"nodeType":"Block","src":"985:55:27","statements":[{"expression":{"arguments":[{"expression":{"id":9666,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1020:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1026:6:27","memberName":"number","nodeType":"MemberAccess","src":"1020:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9664,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"1002:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7911_$","typeString":"type(library SafeCast)"}},"id":9665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1011:8:27","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":6901,"src":"1002:17:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":9668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1002:31:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":9663,"id":9669,"nodeType":"Return","src":"995:38:27"}]},"documentation":{"id":9659,"nodeType":"StructuredDocumentation","src":"866:60:27","text":" @dev Get the block number as a Timepoint."},"id":9671,"implemented":true,"kind":"function","modifiers":[],"name":"blockNumber","nameLocation":"940:11:27","nodeType":"FunctionDefinition","parameters":{"id":9660,"nodeType":"ParameterList","parameters":[],"src":"951:2:27"},"returnParameters":{"id":9663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9662,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9671,"src":"977:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9661,"name":"uint48","nodeType":"ElementaryTypeName","src":"977:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"976:8:27"},"scope":9910,"src":"931:109:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"Time.Delay","id":9673,"name":"Delay","nameLocation":"2377:5:27","nodeType":"UserDefinedValueTypeDefinition","src":"2372:22:27","underlyingType":{"id":9672,"name":"uint112","nodeType":"ElementaryTypeName","src":"2386:7:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}},{"body":{"id":9687,"nodeType":"Block","src":"2572:44:27","statements":[{"expression":{"arguments":[{"id":9684,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9676,"src":"2600:8:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":9682,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9673,"src":"2589:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$9673_$","typeString":"type(Time.Delay)"}},"id":9683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2595:4:27","memberName":"wrap","nodeType":"MemberAccess","src":"2589:10:27","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_uint112_$returns$_t_userDefinedValueType$_Delay_$9673_$","typeString":"function (uint112) pure returns (Time.Delay)"}},"id":9685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2589:20:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9673","typeString":"Time.Delay"}},"functionReturnParameters":9681,"id":9686,"nodeType":"Return","src":"2582:27:27"}]},"documentation":{"id":9674,"nodeType":"StructuredDocumentation","src":"2400:103:27","text":" @dev Wrap a duration into a Delay to add the one-step \"update in the future\" feature"},"id":9688,"implemented":true,"kind":"function","modifiers":[],"name":"toDelay","nameLocation":"2517:7:27","nodeType":"FunctionDefinition","parameters":{"id":9677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9676,"mutability":"mutable","name":"duration","nameLocation":"2532:8:27","nodeType":"VariableDeclaration","scope":9688,"src":"2525:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9675,"name":"uint32","nodeType":"ElementaryTypeName","src":"2525:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2524:17:27"},"returnParameters":{"id":9681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9688,"src":"2565:5:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9673","typeString":"Time.Delay"},"typeName":{"id":9679,"nodeType":"UserDefinedTypeName","pathNode":{"id":9678,"name":"Delay","nameLocations":["2565:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":9673,"src":"2565:5:27"},"referencedDeclaration":9673,"src":"2565:5:27","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9673","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"2564:7:27"},"scope":9910,"src":"2508:108:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9725,"nodeType":"Block","src":"3016:159:27","statements":[{"expression":{"id":9710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":9703,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9697,"src":"3027:11:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9704,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9699,"src":"3040:10:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9705,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9701,"src":"3052:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":9706,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"3026:33:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9707,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9692,"src":"3062:4:27","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9673","typeString":"Time.Delay"}},"id":9708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3067:6:27","memberName":"unpack","nodeType":"MemberAccess","referencedDeclaration":9871,"src":"3062:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Delay_$9673_$returns$_t_uint32_$_t_uint32_$_t_uint48_$attached_to$_t_userDefinedValueType$_Delay_$9673_$","typeString":"function (Time.Delay) pure returns (uint32,uint32,uint48)"}},"id":9709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3062:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"src":"3026:49:27","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9711,"nodeType":"ExpressionStatement","src":"3026:49:27"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":9714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9712,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9701,"src":"3092:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":9713,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9694,"src":"3102:9:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"3092:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"id":9719,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9697,"src":"3136:11:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9720,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9699,"src":"3149:10:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9721,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9701,"src":"3161:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":9722,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3135:33:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"id":9723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3092:76:27","trueExpression":{"components":[{"id":9715,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9699,"src":"3115:10:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":9716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3127:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":9717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3130:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":9718,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3114:18:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(uint32,int_const 0,int_const 0)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":9702,"id":9724,"nodeType":"Return","src":"3085:83:27"}]},"documentation":{"id":9689,"nodeType":"StructuredDocumentation","src":"2622:241:27","text":" @dev Get the value at a given timepoint plus the pending value and effect timepoint if there is a scheduled\n change after this timepoint. If the effect timepoint is 0, then the pending value should not be considered."},"id":9726,"implemented":true,"kind":"function","modifiers":[],"name":"_getFullAt","nameLocation":"2877:10:27","nodeType":"FunctionDefinition","parameters":{"id":9695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9692,"mutability":"mutable","name":"self","nameLocation":"2903:4:27","nodeType":"VariableDeclaration","scope":9726,"src":"2897:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9673","typeString":"Time.Delay"},"typeName":{"id":9691,"nodeType":"UserDefinedTypeName","pathNode":{"id":9690,"name":"Delay","nameLocations":["2897:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":9673,"src":"2897:5:27"},"referencedDeclaration":9673,"src":"2897:5:27","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9673","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":9694,"mutability":"mutable","name":"timepoint","nameLocation":"2924:9:27","nodeType":"VariableDeclaration","scope":9726,"src":"2917:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9693,"name":"uint48","nodeType":"ElementaryTypeName","src":"2917:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2887:52:27"},"returnParameters":{"id":9702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9697,"mutability":"mutable","name":"valueBefore","nameLocation":"2969:11:27","nodeType":"VariableDeclaration","scope":9726,"src":"2962:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9696,"name":"uint32","nodeType":"ElementaryTypeName","src":"2962:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9699,"mutability":"mutable","name":"valueAfter","nameLocation":"2989:10:27","nodeType":"VariableDeclaration","scope":9726,"src":"2982:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9698,"name":"uint32","nodeType":"ElementaryTypeName","src":"2982:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9701,"mutability":"mutable","name":"effect","nameLocation":"3008:6:27","nodeType":"VariableDeclaration","scope":9726,"src":"3001:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9700,"name":"uint48","nodeType":"ElementaryTypeName","src":"3001:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2961:54:27"},"scope":9910,"src":"2868:307:27","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":9745,"nodeType":"Block","src":"3499:53:27","statements":[{"expression":{"arguments":[{"id":9740,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9730,"src":"3527:4:27","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9673","typeString":"Time.Delay"}},{"arguments":[],"expression":{"argumentTypes":[],"id":9741,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9658,"src":"3533:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":9742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3533:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Delay_$9673","typeString":"Time.Delay"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":9739,"name":"_getFullAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9726,"src":"3516:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Delay_$9673_$_t_uint48_$returns$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"function (Time.Delay,uint48) pure returns (uint32,uint32,uint48)"}},"id":9743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3516:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":9738,"id":9744,"nodeType":"Return","src":"3509:36:27"}]},"documentation":{"id":9727,"nodeType":"StructuredDocumentation","src":"3181:207:27","text":" @dev Get the current value plus the pending value and effect timepoint if there is a scheduled change. If the\n effect timepoint is 0, then the pending value should not be considered."},"id":9746,"implemented":true,"kind":"function","modifiers":[],"name":"getFull","nameLocation":"3402:7:27","nodeType":"FunctionDefinition","parameters":{"id":9731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9730,"mutability":"mutable","name":"self","nameLocation":"3416:4:27","nodeType":"VariableDeclaration","scope":9746,"src":"3410:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9673","typeString":"Time.Delay"},"typeName":{"id":9729,"nodeType":"UserDefinedTypeName","pathNode":{"id":9728,"name":"Delay","nameLocations":["3410:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":9673,"src":"3410:5:27"},"referencedDeclaration":9673,"src":"3410:5:27","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9673","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"3409:12:27"},"returnParameters":{"id":9738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9733,"mutability":"mutable","name":"valueBefore","nameLocation":"3452:11:27","nodeType":"VariableDeclaration","scope":9746,"src":"3445:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9732,"name":"uint32","nodeType":"ElementaryTypeName","src":"3445:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9735,"mutability":"mutable","name":"valueAfter","nameLocation":"3472:10:27","nodeType":"VariableDeclaration","scope":9746,"src":"3465:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9734,"name":"uint32","nodeType":"ElementaryTypeName","src":"3465:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9737,"mutability":"mutable","name":"effect","nameLocation":"3491:6:27","nodeType":"VariableDeclaration","scope":9746,"src":"3484:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9736,"name":"uint48","nodeType":"ElementaryTypeName","src":"3484:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"3444:54:27"},"scope":9910,"src":"3393:159:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9763,"nodeType":"Block","src":"3665:74:27","statements":[{"assignments":[9756,null,null],"declarations":[{"constant":false,"id":9756,"mutability":"mutable","name":"delay","nameLocation":"3683:5:27","nodeType":"VariableDeclaration","scope":9763,"src":"3676:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9755,"name":"uint32","nodeType":"ElementaryTypeName","src":"3676:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},null,null],"id":9760,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9757,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9750,"src":"3696:4:27","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9673","typeString":"Time.Delay"}},"id":9758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3701:7:27","memberName":"getFull","nodeType":"MemberAccess","referencedDeclaration":9746,"src":"3696:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_Delay_$9673_$returns$_t_uint32_$_t_uint32_$_t_uint48_$attached_to$_t_userDefinedValueType$_Delay_$9673_$","typeString":"function (Time.Delay) view returns (uint32,uint32,uint48)"}},"id":9759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3696:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"nodeType":"VariableDeclarationStatement","src":"3675:35:27"},{"expression":{"id":9761,"name":"delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9756,"src":"3727:5:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":9754,"id":9762,"nodeType":"Return","src":"3720:12:27"}]},"documentation":{"id":9747,"nodeType":"StructuredDocumentation","src":"3558:46:27","text":" @dev Get the current value."},"id":9764,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"3618:3:27","nodeType":"FunctionDefinition","parameters":{"id":9751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9750,"mutability":"mutable","name":"self","nameLocation":"3628:4:27","nodeType":"VariableDeclaration","scope":9764,"src":"3622:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9673","typeString":"Time.Delay"},"typeName":{"id":9749,"nodeType":"UserDefinedTypeName","pathNode":{"id":9748,"name":"Delay","nameLocations":["3622:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":9673,"src":"3622:5:27"},"referencedDeclaration":9673,"src":"3622:5:27","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9673","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"3621:12:27"},"returnParameters":{"id":9754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9753,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9764,"src":"3657:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9752,"name":"uint32","nodeType":"ElementaryTypeName","src":"3657:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3656:8:27"},"scope":9910,"src":"3609:130:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9819,"nodeType":"Block","src":"4189:234:27","statements":[{"assignments":[9781],"declarations":[{"constant":false,"id":9781,"mutability":"mutable","name":"value","nameLocation":"4206:5:27","nodeType":"VariableDeclaration","scope":9819,"src":"4199:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9780,"name":"uint32","nodeType":"ElementaryTypeName","src":"4199:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":9785,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9782,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9768,"src":"4214:4:27","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9673","typeString":"Time.Delay"}},"id":9783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4219:3:27","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":9764,"src":"4214:8:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_Delay_$9673_$returns$_t_uint32_$attached_to$_t_userDefinedValueType$_Delay_$9673_$","typeString":"function (Time.Delay) view returns (uint32)"}},"id":9784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"4199:25:27"},{"assignments":[9787],"declarations":[{"constant":false,"id":9787,"mutability":"mutable","name":"setback","nameLocation":"4241:7:27","nodeType":"VariableDeclaration","scope":9819,"src":"4234:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9786,"name":"uint32","nodeType":"ElementaryTypeName","src":"4234:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":9803,"initialValue":{"arguments":[{"arguments":[{"id":9792,"name":"minSetback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9772,"src":"4267:10:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":9795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9781,"src":"4279:5:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":9794,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9770,"src":"4287:8:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4279:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":9799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4317:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":9800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4279:39:27","trueExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":9798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9781,"src":"4298:5:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9797,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9770,"src":"4306:8:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4298:16:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":9790,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"4258:4:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6146_$","typeString":"type(library Math)"}},"id":9791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4263:3:27","memberName":"max","nodeType":"MemberAccess","referencedDeclaration":4833,"src":"4258:8:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":9801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4258:61:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4251:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":9788,"name":"uint32","nodeType":"ElementaryTypeName","src":"4251:6:27","typeDescriptions":{}}},"id":9802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4251:69:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"4234:86:27"},{"expression":{"id":9809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9804,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9778,"src":"4330:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":9808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9805,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9658,"src":"4339:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":9806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4339:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9807,"name":"setback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9787,"src":"4353:7:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4339:21:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4330:30:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":9810,"nodeType":"ExpressionStatement","src":"4330:30:27"},{"expression":{"components":[{"arguments":[{"id":9812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9781,"src":"4383:5:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9813,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9770,"src":"4390:8:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9814,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9778,"src":"4400:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":9811,"name":"pack","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9909,"src":"4378:4:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint32_$_t_uint32_$_t_uint48_$returns$_t_userDefinedValueType$_Delay_$9673_$","typeString":"function (uint32,uint32,uint48) pure returns (Time.Delay)"}},"id":9815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4378:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9673","typeString":"Time.Delay"}},{"id":9816,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9778,"src":"4409:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":9817,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4377:39:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_userDefinedValueType$_Delay_$9673_$_t_uint48_$","typeString":"tuple(Time.Delay,uint48)"}},"functionReturnParameters":9779,"id":9818,"nodeType":"Return","src":"4370:46:27"}]},"documentation":{"id":9765,"nodeType":"StructuredDocumentation","src":"3745:283:27","text":" @dev Update a Delay object so that it takes a new duration after a timepoint that is automatically computed to\n enforce the old delay at the moment of the update. Returns the updated Delay object and the timestamp when the\n new delay becomes effective."},"id":9820,"implemented":true,"kind":"function","modifiers":[],"name":"withUpdate","nameLocation":"4042:10:27","nodeType":"FunctionDefinition","parameters":{"id":9773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9768,"mutability":"mutable","name":"self","nameLocation":"4068:4:27","nodeType":"VariableDeclaration","scope":9820,"src":"4062:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9673","typeString":"Time.Delay"},"typeName":{"id":9767,"nodeType":"UserDefinedTypeName","pathNode":{"id":9766,"name":"Delay","nameLocations":["4062:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":9673,"src":"4062:5:27"},"referencedDeclaration":9673,"src":"4062:5:27","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9673","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":9770,"mutability":"mutable","name":"newValue","nameLocation":"4089:8:27","nodeType":"VariableDeclaration","scope":9820,"src":"4082:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9769,"name":"uint32","nodeType":"ElementaryTypeName","src":"4082:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9772,"mutability":"mutable","name":"minSetback","nameLocation":"4114:10:27","nodeType":"VariableDeclaration","scope":9820,"src":"4107:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9771,"name":"uint32","nodeType":"ElementaryTypeName","src":"4107:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4052:78:27"},"returnParameters":{"id":9779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9776,"mutability":"mutable","name":"updatedDelay","nameLocation":"4160:12:27","nodeType":"VariableDeclaration","scope":9820,"src":"4154:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9673","typeString":"Time.Delay"},"typeName":{"id":9775,"nodeType":"UserDefinedTypeName","pathNode":{"id":9774,"name":"Delay","nameLocations":["4154:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":9673,"src":"4154:5:27"},"referencedDeclaration":9673,"src":"4154:5:27","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9673","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":9778,"mutability":"mutable","name":"effect","nameLocation":"4181:6:27","nodeType":"VariableDeclaration","scope":9820,"src":"4174:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9777,"name":"uint48","nodeType":"ElementaryTypeName","src":"4174:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4153:35:27"},"scope":9910,"src":"4033:390:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9870,"nodeType":"Block","src":"4656:212:27","statements":[{"assignments":[9834],"declarations":[{"constant":false,"id":9834,"mutability":"mutable","name":"raw","nameLocation":"4674:3:27","nodeType":"VariableDeclaration","scope":9870,"src":"4666:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":9833,"name":"uint112","nodeType":"ElementaryTypeName","src":"4666:7:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"id":9839,"initialValue":{"arguments":[{"id":9837,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9824,"src":"4693:4:27","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9673","typeString":"Time.Delay"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Delay_$9673","typeString":"Time.Delay"}],"expression":{"id":9835,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9673,"src":"4680:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$9673_$","typeString":"type(Time.Delay)"}},"id":9836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4686:6:27","memberName":"unwrap","nodeType":"MemberAccess","src":"4680:12:27","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_Delay_$9673_$returns$_t_uint112_$","typeString":"function (Time.Delay) pure returns (uint112)"}},"id":9838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4680:18:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"VariableDeclarationStatement","src":"4666:32:27"},{"expression":{"id":9845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9840,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9829,"src":"4709:10:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9843,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9834,"src":"4729:3:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":9842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4722:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":9841,"name":"uint32","nodeType":"ElementaryTypeName","src":"4722:6:27","typeDescriptions":{}}},"id":9844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4722:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4709:24:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":9846,"nodeType":"ExpressionStatement","src":"4709:24:27"},{"expression":{"id":9854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9847,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9827,"src":"4743:11:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":9852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9850,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9834,"src":"4764:3:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":9851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4771:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4764:9:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":9849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4757:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":9848,"name":"uint32","nodeType":"ElementaryTypeName","src":"4757:6:27","typeDescriptions":{}}},"id":9853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4757:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4743:31:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":9855,"nodeType":"ExpressionStatement","src":"4743:31:27"},{"expression":{"id":9863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9856,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9831,"src":"4784:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":9861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9859,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9834,"src":"4800:3:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":9860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4807:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"4800:9:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":9858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4793:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":9857,"name":"uint48","nodeType":"ElementaryTypeName","src":"4793:6:27","typeDescriptions":{}}},"id":9862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4793:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4784:26:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":9864,"nodeType":"ExpressionStatement","src":"4784:26:27"},{"expression":{"components":[{"id":9865,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9827,"src":"4829:11:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9866,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9829,"src":"4842:10:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9867,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9831,"src":"4854:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":9868,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4828:33:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":9832,"id":9869,"nodeType":"Return","src":"4821:40:27"}]},"documentation":{"id":9821,"nodeType":"StructuredDocumentation","src":"4429:117:27","text":" @dev Split a delay into its components: valueBefore, valueAfter and effect (transition timepoint)."},"id":9871,"implemented":true,"kind":"function","modifiers":[],"name":"unpack","nameLocation":"4560:6:27","nodeType":"FunctionDefinition","parameters":{"id":9825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9824,"mutability":"mutable","name":"self","nameLocation":"4573:4:27","nodeType":"VariableDeclaration","scope":9871,"src":"4567:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9673","typeString":"Time.Delay"},"typeName":{"id":9823,"nodeType":"UserDefinedTypeName","pathNode":{"id":9822,"name":"Delay","nameLocations":["4567:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":9673,"src":"4567:5:27"},"referencedDeclaration":9673,"src":"4567:5:27","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9673","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"4566:12:27"},"returnParameters":{"id":9832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9827,"mutability":"mutable","name":"valueBefore","nameLocation":"4609:11:27","nodeType":"VariableDeclaration","scope":9871,"src":"4602:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9826,"name":"uint32","nodeType":"ElementaryTypeName","src":"4602:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9829,"mutability":"mutable","name":"valueAfter","nameLocation":"4629:10:27","nodeType":"VariableDeclaration","scope":9871,"src":"4622:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9828,"name":"uint32","nodeType":"ElementaryTypeName","src":"4622:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9831,"mutability":"mutable","name":"effect","nameLocation":"4648:6:27","nodeType":"VariableDeclaration","scope":9871,"src":"4641:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9830,"name":"uint48","nodeType":"ElementaryTypeName","src":"4641:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4601:54:27"},"scope":9910,"src":"4551:317:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9908,"nodeType":"Block","src":"5041:112:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":9905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":9900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":9891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9888,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9878,"src":"5078:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":9887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5070:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":9886,"name":"uint112","nodeType":"ElementaryTypeName","src":"5070:7:27","typeDescriptions":{}}},"id":9889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5070:15:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":9890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5089:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"5070:21:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"id":9892,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5069:23:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":9898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9895,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9874,"src":"5104:11:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":9894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5096:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":9893,"name":"uint112","nodeType":"ElementaryTypeName","src":"5096:7:27","typeDescriptions":{}}},"id":9896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5096:20:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":9897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5120:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"5096:26:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"id":9899,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5095:28:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"5069:54:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"id":9903,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9876,"src":"5134:10:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":9902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5126:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":9901,"name":"uint112","nodeType":"ElementaryTypeName","src":"5126:7:27","typeDescriptions":{}}},"id":9904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5126:19:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"5069:76:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"expression":{"id":9884,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9673,"src":"5058:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$9673_$","typeString":"type(Time.Delay)"}},"id":9885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5064:4:27","memberName":"wrap","nodeType":"MemberAccess","src":"5058:10:27","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_uint112_$returns$_t_userDefinedValueType$_Delay_$9673_$","typeString":"function (uint112) pure returns (Time.Delay)"}},"id":9906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5058:88:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9673","typeString":"Time.Delay"}},"functionReturnParameters":9883,"id":9907,"nodeType":"Return","src":"5051:95:27"}]},"documentation":{"id":9872,"nodeType":"StructuredDocumentation","src":"4874:64:27","text":" @dev pack the components into a Delay object."},"id":9909,"implemented":true,"kind":"function","modifiers":[],"name":"pack","nameLocation":"4952:4:27","nodeType":"FunctionDefinition","parameters":{"id":9879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9874,"mutability":"mutable","name":"valueBefore","nameLocation":"4964:11:27","nodeType":"VariableDeclaration","scope":9909,"src":"4957:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9873,"name":"uint32","nodeType":"ElementaryTypeName","src":"4957:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9876,"mutability":"mutable","name":"valueAfter","nameLocation":"4984:10:27","nodeType":"VariableDeclaration","scope":9909,"src":"4977:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9875,"name":"uint32","nodeType":"ElementaryTypeName","src":"4977:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9878,"mutability":"mutable","name":"effect","nameLocation":"5003:6:27","nodeType":"VariableDeclaration","scope":9909,"src":"4996:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9877,"name":"uint48","nodeType":"ElementaryTypeName","src":"4996:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4956:54:27"},"returnParameters":{"id":9883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9909,"src":"5034:5:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9673","typeString":"Time.Delay"},"typeName":{"id":9881,"nodeType":"UserDefinedTypeName","pathNode":{"id":9880,"name":"Delay","nameLocations":["5034:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":9673,"src":"5034:5:27"},"referencedDeclaration":9673,"src":"5034:5:27","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9673","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"5033:7:27"},"scope":9910,"src":"4943:210:27","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":9911,"src":"640:4515:27","usedErrors":[],"usedEvents":[]}],"src":"104:5052:27"},"id":27},"contracts/AgentLaunchpadCoreV2Minimal.sol":{"ast":{"absolutePath":"contracts/AgentLaunchpadCoreV2Minimal.sol","exportedSymbols":{"AgentLaunchpadCoreV2Minimal":[10927],"AgentToken":[11516],"Checkpoints":[9636],"Context":[1932],"ECDSA":[4212],"EIP712":[4439],"ERC20":[1476],"ERC20Permit":[1708],"ERC20Votes":[1840],"IERC20":[1554],"IERC20Errors":[866],"IERC20Metadata":[1866],"IERC20Permit":[1902],"ISimpleAMM":[9929],"Nonces":[2000],"Ownable":[147],"ReentrancyGuard":[2121],"Votes":[773]},"id":10928,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9912,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:28"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":9913,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10928,"sourceUnit":148,"src":"58:52:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":9914,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10928,"sourceUnit":2122,"src":"111:59:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/AgentToken.sol","file":"./AgentToken.sol","id":9915,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10928,"sourceUnit":11517,"src":"171:26:28","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ISimpleAMM","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":9929,"linearizedBaseContracts":[9929],"name":"ISimpleAMM","nameLocation":"209:10:28","nodeType":"ContractDefinition","nodes":[{"functionSelector":"a8f0ad45","id":9928,"implemented":false,"kind":"function","modifiers":[],"name":"createLiquidityPool","nameLocation":"235:19:28","nodeType":"FunctionDefinition","parameters":{"id":9924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9917,"mutability":"mutable","name":"agentId","nameLocation":"263:7:28","nodeType":"VariableDeclaration","scope":9928,"src":"255:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9916,"name":"uint256","nodeType":"ElementaryTypeName","src":"255:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9919,"mutability":"mutable","name":"tokenAddress","nameLocation":"280:12:28","nodeType":"VariableDeclaration","scope":9928,"src":"272:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9918,"name":"address","nodeType":"ElementaryTypeName","src":"272:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9921,"mutability":"mutable","name":"tokenAmount","nameLocation":"302:11:28","nodeType":"VariableDeclaration","scope":9928,"src":"294:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9920,"name":"uint256","nodeType":"ElementaryTypeName","src":"294:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9923,"mutability":"mutable","name":"agentConfigJSON","nameLocation":"331:15:28","nodeType":"VariableDeclaration","scope":9928,"src":"315:31:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9922,"name":"string","nodeType":"ElementaryTypeName","src":"315:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"254:93:28"},"returnParameters":{"id":9927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9926,"mutability":"mutable","name":"lpPair","nameLocation":"382:6:28","nodeType":"VariableDeclaration","scope":9928,"src":"374:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9925,"name":"address","nodeType":"ElementaryTypeName","src":"374:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"373:16:28"},"scope":9929,"src":"226:164:28","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":10928,"src":"199:193:28","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":9930,"name":"Ownable","nameLocations":["434:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"434:7:28"},"id":9931,"nodeType":"InheritanceSpecifier","src":"434:7:28"},{"baseName":{"id":9932,"name":"ReentrancyGuard","nameLocations":["443:15:28"],"nodeType":"IdentifierPath","referencedDeclaration":2121,"src":"443:15:28"},"id":9933,"nodeType":"InheritanceSpecifier","src":"443:15:28"}],"canonicalName":"AgentLaunchpadCoreV2Minimal","contractDependencies":[11516],"contractKind":"contract","fullyImplemented":true,"id":10927,"linearizedBaseContracts":[10927,2121,147,1932],"name":"AgentLaunchpadCoreV2Minimal","nameLocation":"403:27:28","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AgentLaunchpadCoreV2Minimal.AgentConfig","id":9956,"members":[{"constant":false,"id":9935,"mutability":"mutable","name":"name","nameLocation":"506:4:28","nodeType":"VariableDeclaration","scope":9956,"src":"499:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":9934,"name":"string","nodeType":"ElementaryTypeName","src":"499:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9937,"mutability":"mutable","name":"symbol","nameLocation":"527:6:28","nodeType":"VariableDeclaration","scope":9956,"src":"520:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":9936,"name":"string","nodeType":"ElementaryTypeName","src":"520:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9939,"mutability":"mutable","name":"agentName","nameLocation":"550:9:28","nodeType":"VariableDeclaration","scope":9956,"src":"543:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":9938,"name":"string","nodeType":"ElementaryTypeName","src":"543:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9941,"mutability":"mutable","name":"fundingTarget","nameLocation":"577:13:28","nodeType":"VariableDeclaration","scope":9956,"src":"569:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9940,"name":"uint256","nodeType":"ElementaryTypeName","src":"569:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9943,"mutability":"mutable","name":"tokenSupply","nameLocation":"608:11:28","nodeType":"VariableDeclaration","scope":9956,"src":"600:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9942,"name":"uint256","nodeType":"ElementaryTypeName","src":"600:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9945,"mutability":"mutable","name":"creator","nameLocation":"637:7:28","nodeType":"VariableDeclaration","scope":9956,"src":"629:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9944,"name":"address","nodeType":"ElementaryTypeName","src":"629:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9947,"mutability":"mutable","name":"isBonded","nameLocation":"659:8:28","nodeType":"VariableDeclaration","scope":9956,"src":"654:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9946,"name":"bool","nodeType":"ElementaryTypeName","src":"654:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9949,"mutability":"mutable","name":"totalRaised","nameLocation":"685:11:28","nodeType":"VariableDeclaration","scope":9956,"src":"677:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9948,"name":"uint256","nodeType":"ElementaryTypeName","src":"677:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9951,"mutability":"mutable","name":"tokenAddress","nameLocation":"714:12:28","nodeType":"VariableDeclaration","scope":9956,"src":"706:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9950,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9953,"mutability":"mutable","name":"lpPairAddress","nameLocation":"744:13:28","nodeType":"VariableDeclaration","scope":9956,"src":"736:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9952,"name":"address","nodeType":"ElementaryTypeName","src":"736:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9955,"mutability":"mutable","name":"agentConfigJSON","nameLocation":"774:15:28","nodeType":"VariableDeclaration","scope":9956,"src":"767:22:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":9954,"name":"string","nodeType":"ElementaryTypeName","src":"767:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"AgentConfig","nameLocation":"477:11:28","nodeType":"StructDefinition","scope":10927,"src":"470:326:28","visibility":"public"},{"constant":false,"id":9958,"mutability":"mutable","name":"_agentIdCounter","nameLocation":"822:15:28","nodeType":"VariableDeclaration","scope":10927,"src":"806:31:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9957,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"functionSelector":"513856c8","id":9963,"mutability":"mutable","name":"agents","nameLocation":"882:6:28","nodeType":"VariableDeclaration","scope":10927,"src":"843:45:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AgentConfig_$9956_storage_$","typeString":"mapping(uint256 => struct AgentLaunchpadCoreV2Minimal.AgentConfig)"},"typeName":{"id":9962,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9959,"name":"uint256","nodeType":"ElementaryTypeName","src":"851:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"843:31:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AgentConfig_$9956_storage_$","typeString":"mapping(uint256 => struct AgentLaunchpadCoreV2Minimal.AgentConfig)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9961,"nodeType":"UserDefinedTypeName","pathNode":{"id":9960,"name":"AgentConfig","nameLocations":["862:11:28"],"nodeType":"IdentifierPath","referencedDeclaration":9956,"src":"862:11:28"},"referencedDeclaration":9956,"src":"862:11:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig"}}},"visibility":"public"},{"constant":false,"functionSelector":"3d891f59","id":9969,"mutability":"mutable","name":"contributions","nameLocation":"949:13:28","nodeType":"VariableDeclaration","scope":10927,"src":"894:68:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":9968,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9964,"name":"uint256","nodeType":"ElementaryTypeName","src":"902:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"894:47:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9967,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9965,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"913:27:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9966,"name":"uint256","nodeType":"ElementaryTypeName","src":"932:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"1c18ce2e","id":9972,"mutability":"mutable","name":"bondedAgentIds","nameLocation":"985:14:28","nodeType":"VariableDeclaration","scope":10927,"src":"968:31:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":9970,"name":"uint256","nodeType":"ElementaryTypeName","src":"968:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9971,"nodeType":"ArrayTypeName","src":"968:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"public"},{"constant":false,"functionSelector":"c2161409","id":9975,"mutability":"mutable","name":"inProgressAgentIds","nameLocation":"1022:18:28","nodeType":"VariableDeclaration","scope":10927,"src":"1005:35:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":9973,"name":"uint256","nodeType":"ElementaryTypeName","src":"1005:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9974,"nodeType":"ArrayTypeName","src":"1005:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"public"},{"constant":false,"functionSelector":"9a52878a","id":9979,"mutability":"mutable","name":"tokenToAgentId","nameLocation":"1081:14:28","nodeType":"VariableDeclaration","scope":10927,"src":"1046:49:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":9978,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9976,"name":"address","nodeType":"ElementaryTypeName","src":"1054:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1046:27:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9977,"name":"uint256","nodeType":"ElementaryTypeName","src":"1065:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"c5f956af","id":9981,"mutability":"mutable","name":"treasuryAddress","nameLocation":"1121:15:28","nodeType":"VariableDeclaration","scope":10927,"src":"1106:30:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9980,"name":"address","nodeType":"ElementaryTypeName","src":"1106:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"33827438","id":9983,"mutability":"mutable","name":"liquidityManager","nameLocation":"1157:16:28","nodeType":"VariableDeclaration","scope":10927,"src":"1142:31:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9982,"name":"address","nodeType":"ElementaryTypeName","src":"1142:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"8e50e509","id":9986,"mutability":"mutable","name":"protocolFeePercentage","nameLocation":"1194:21:28","nodeType":"VariableDeclaration","scope":10927,"src":"1179:42:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9984,"name":"uint256","nodeType":"ElementaryTypeName","src":"1179:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333030","id":9985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1218:3:28","typeDescriptions":{"typeIdentifier":"t_rational_300_by_1","typeString":"int_const 300"},"value":"300"},"visibility":"public"},{"constant":true,"functionSelector":"e1f1c4a7","id":9989,"mutability":"constant","name":"BASIS_POINTS","nameLocation":"1251:12:28","nodeType":"VariableDeclaration","scope":10927,"src":"1227:44:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9987,"name":"uint256","nodeType":"ElementaryTypeName","src":"1227:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130303030","id":9988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1266:5:28","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"visibility":"public"},{"constant":false,"functionSelector":"e379dcaf","id":9992,"mutability":"mutable","name":"defaultLiquidityPercentage","nameLocation":"1292:26:28","nodeType":"VariableDeclaration","scope":10927,"src":"1277:48:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9990,"name":"uint256","nodeType":"ElementaryTypeName","src":"1277:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"38303030","id":9991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:4:28","typeDescriptions":{"typeIdentifier":"t_rational_8000_by_1","typeString":"int_const 8000"},"value":"8000"},"visibility":"public"},{"constant":false,"functionSelector":"bfd1769e","id":9995,"mutability":"mutable","name":"defaultTokenLPPercentage","nameLocation":"1346:24:28","nodeType":"VariableDeclaration","scope":10927,"src":"1331:46:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9993,"name":"uint256","nodeType":"ElementaryTypeName","src":"1331:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"39303030","id":9994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1373:4:28","typeDescriptions":{"typeIdentifier":"t_rational_9000_by_1","typeString":"int_const 9000"},"value":"9000"},"visibility":"public"},{"anonymous":false,"eventSelector":"e5e423600cef64b5f4620e0388d75415036da0de388da33d376934be9b0bd392","id":10003,"name":"AgentCreated","nameLocation":"1394:12:28","nodeType":"EventDefinition","parameters":{"id":10002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9997,"indexed":true,"mutability":"mutable","name":"agentId","nameLocation":"1423:7:28","nodeType":"VariableDeclaration","scope":10003,"src":"1407:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9996,"name":"uint256","nodeType":"ElementaryTypeName","src":"1407:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9999,"indexed":true,"mutability":"mutable","name":"creator","nameLocation":"1448:7:28","nodeType":"VariableDeclaration","scope":10003,"src":"1432:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9998,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10001,"indexed":false,"mutability":"mutable","name":"tokenAddress","nameLocation":"1465:12:28","nodeType":"VariableDeclaration","scope":10003,"src":"1457:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10000,"name":"address","nodeType":"ElementaryTypeName","src":"1457:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1406:72:28"},"src":"1388:91:28"},{"anonymous":false,"eventSelector":"b2ed2e021651f85a4754a44651fc09ac5141bc0329ce4dfe8dd712a5d04a8b39","id":10011,"name":"Contributed","nameLocation":"1490:11:28","nodeType":"EventDefinition","parameters":{"id":10010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10005,"indexed":true,"mutability":"mutable","name":"agentId","nameLocation":"1518:7:28","nodeType":"VariableDeclaration","scope":10011,"src":"1502:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10004,"name":"uint256","nodeType":"ElementaryTypeName","src":"1502:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10007,"indexed":true,"mutability":"mutable","name":"contributor","nameLocation":"1543:11:28","nodeType":"VariableDeclaration","scope":10011,"src":"1527:27:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10006,"name":"address","nodeType":"ElementaryTypeName","src":"1527:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10009,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1564:6:28","nodeType":"VariableDeclaration","scope":10011,"src":"1556:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10008,"name":"uint256","nodeType":"ElementaryTypeName","src":"1556:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1501:70:28"},"src":"1484:88:28"},{"anonymous":false,"eventSelector":"6fb060de3018a5bab77159e4ff4939deb91858ddb2995fb7bc9cdac6552fa328","id":10019,"name":"AgentBonded","nameLocation":"1583:11:28","nodeType":"EventDefinition","parameters":{"id":10018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10013,"indexed":true,"mutability":"mutable","name":"agentId","nameLocation":"1611:7:28","nodeType":"VariableDeclaration","scope":10019,"src":"1595:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10012,"name":"uint256","nodeType":"ElementaryTypeName","src":"1595:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10015,"indexed":true,"mutability":"mutable","name":"tokenAddress","nameLocation":"1636:12:28","nodeType":"VariableDeclaration","scope":10019,"src":"1620:28:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10014,"name":"address","nodeType":"ElementaryTypeName","src":"1620:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10017,"indexed":true,"mutability":"mutable","name":"lpPairAddress","nameLocation":"1666:13:28","nodeType":"VariableDeclaration","scope":10019,"src":"1650:29:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10016,"name":"address","nodeType":"ElementaryTypeName","src":"1650:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1594:86:28"},"src":"1577:104:28"},{"body":{"id":10042,"nodeType":"Block","src":"1749:120:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10029,"name":"_treasuryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10021,"src":"1767:16:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":10032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1795:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1787:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10030,"name":"address","nodeType":"ElementaryTypeName","src":"1787:7:28","typeDescriptions":{}}},"id":10033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1787:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1767:30:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207472656173757279","id":10035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1799:18:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea","typeString":"literal_string \"Invalid treasury\""},"value":"Invalid treasury"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_842f4c922a629248a4499edaa069acb7416ff51e29393531f399e835fec026ea","typeString":"literal_string \"Invalid treasury\""}],"id":10028,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1759:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1759:59:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10037,"nodeType":"ExpressionStatement","src":"1759:59:28"},{"expression":{"id":10040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10038,"name":"treasuryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9981,"src":"1828:15:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10039,"name":"_treasuryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10021,"src":"1846:16:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1828:34:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10041,"nodeType":"ExpressionStatement","src":"1828:34:28"}]},"id":10043,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":10024,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1737:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1741:6:28","memberName":"sender","nodeType":"MemberAccess","src":"1737:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10026,"kind":"baseConstructorSpecifier","modifierName":{"id":10023,"name":"Ownable","nameLocations":["1729:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1729:7:28"},"nodeType":"ModifierInvocation","src":"1729:19:28"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":10022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10021,"mutability":"mutable","name":"_treasuryAddress","nameLocation":"1711:16:28","nodeType":"VariableDeclaration","scope":10043,"src":"1703:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10020,"name":"address","nodeType":"ElementaryTypeName","src":"1703:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1702:26:28"},"returnParameters":{"id":10027,"nodeType":"ParameterList","parameters":[],"src":"1749:0:28"},"scope":10927,"src":"1691:178:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10149,"nodeType":"Block","src":"2211:909:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10065,"name":"fundingTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10055,"src":"2229:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2245:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2229:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10068,"name":"tokenSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10057,"src":"2250:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2264:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2250:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2229:36:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420706172616d73","id":10072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2267:16:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_273fee8eb1a0303abb639e8b55b50b58107d01a248097a66ca063dfed07500a8","typeString":"literal_string \"Invalid params\""},"value":"Invalid params"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_273fee8eb1a0303abb639e8b55b50b58107d01a248097a66ca063dfed07500a8","typeString":"literal_string \"Invalid params\""}],"id":10064,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2221:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2221:63:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10074,"nodeType":"ExpressionStatement","src":"2221:63:28"},{"expression":{"id":10078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10075,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10062,"src":"2303:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2313:17:28","subExpression":{"id":10076,"name":"_agentIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9958,"src":"2313:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2303:27:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10079,"nodeType":"ExpressionStatement","src":"2303:27:28"},{"assignments":[10082],"declarations":[{"constant":false,"id":10082,"mutability":"mutable","name":"agentToken","nameLocation":"2360:10:28","nodeType":"VariableDeclaration","scope":10149,"src":"2349:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AgentToken_$11516","typeString":"contract AgentToken"},"typeName":{"id":10081,"nodeType":"UserDefinedTypeName","pathNode":{"id":10080,"name":"AgentToken","nameLocations":["2349:10:28"],"nodeType":"IdentifierPath","referencedDeclaration":11516,"src":"2349:10:28"},"referencedDeclaration":11516,"src":"2349:10:28","typeDescriptions":{"typeIdentifier":"t_contract$_AgentToken_$11516","typeString":"contract AgentToken"}},"visibility":"internal"}],"id":10098,"initialValue":{"arguments":[{"id":10086,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10045,"src":"2388:4:28","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":10087,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10047,"src":"2394:6:28","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":10088,"name":"agentName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10049,"src":"2402:9:28","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":10089,"name":"archetype","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10051,"src":"2413:9:28","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":10090,"name":"metadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10053,"src":"2424:11:28","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":10091,"name":"tokenSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10057,"src":"2437:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":10094,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2458:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_AgentLaunchpadCoreV2Minimal_$10927","typeString":"contract AgentLaunchpadCoreV2Minimal"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AgentLaunchpadCoreV2Minimal_$10927","typeString":"contract AgentLaunchpadCoreV2Minimal"}],"id":10093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2450:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10092,"name":"address","nodeType":"ElementaryTypeName","src":"2450:7:28","typeDescriptions":{}}},"id":10095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2450:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10096,"name":"agentConfigJSON","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10059,"src":"2465:15:28","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":10085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"2373:14:28","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$_t_contract$_AgentToken_$11516_$","typeString":"function (string memory,string memory,string memory,string memory,string memory,uint256,address,string memory) returns (contract AgentToken)"},"typeName":{"id":10084,"nodeType":"UserDefinedTypeName","pathNode":{"id":10083,"name":"AgentToken","nameLocations":["2377:10:28"],"nodeType":"IdentifierPath","referencedDeclaration":11516,"src":"2377:10:28"},"referencedDeclaration":11516,"src":"2377:10:28","typeDescriptions":{"typeIdentifier":"t_contract$_AgentToken_$11516","typeString":"contract AgentToken"}}},"id":10097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2373:108:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AgentToken_$11516","typeString":"contract AgentToken"}},"nodeType":"VariableDeclarationStatement","src":"2349:132:28"},{"expression":{"id":10122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10099,"name":"agents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9963,"src":"2500:6:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AgentConfig_$9956_storage_$","typeString":"mapping(uint256 => struct AgentLaunchpadCoreV2Minimal.AgentConfig storage ref)"}},"id":10101,"indexExpression":{"id":10100,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10062,"src":"2507:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2500:15:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10103,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10045,"src":"2550:4:28","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":10104,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10047,"src":"2576:6:28","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":10105,"name":"agentName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10049,"src":"2607:9:28","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":10106,"name":"fundingTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10055,"src":"2645:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10107,"name":"tokenSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10057,"src":"2685:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10108,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2719:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2723:6:28","memberName":"sender","nodeType":"MemberAccess","src":"2719:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":10110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2753:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":10111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2785:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"arguments":[{"id":10114,"name":"agentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10082,"src":"2822:10:28","typeDescriptions":{"typeIdentifier":"t_contract$_AgentToken_$11516","typeString":"contract AgentToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AgentToken_$11516","typeString":"contract AgentToken"}],"id":10113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2814:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10112,"name":"address","nodeType":"ElementaryTypeName","src":"2814:7:28","typeDescriptions":{}}},"id":10115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2814:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":10118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2870:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2862:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10116,"name":"address","nodeType":"ElementaryTypeName","src":"2862:7:28","typeDescriptions":{}}},"id":10119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2862:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10120,"name":"agentConfigJSON","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10059,"src":"2903:15:28","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":10102,"name":"AgentConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9956,"src":"2518:11:28","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AgentConfig_$9956_storage_ptr_$","typeString":"type(struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer)"}},"id":10121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2544:4:28","2568:6:28","2596:9:28","2630:13:28","2672:11:28","2710:7:28","2743:8:28","2772:11:28","2800:12:28","2847:13:28","2886:15:28"],"names":["name","symbol","agentName","fundingTarget","tokenSupply","creator","isBonded","totalRaised","tokenAddress","lpPairAddress","agentConfigJSON"],"nodeType":"FunctionCall","src":"2518:411:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_memory_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig memory"}},"src":"2500:429:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage ref"}},"id":10123,"nodeType":"ExpressionStatement","src":"2500:429:28"},{"expression":{"arguments":[{"id":10127,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10062,"src":"2972:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":10124,"name":"inProgressAgentIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9975,"src":"2948:18:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":10126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2967:4:28","memberName":"push","nodeType":"MemberAccess","src":"2948:23:28","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":10128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2948:32:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10129,"nodeType":"ExpressionStatement","src":"2948:32:28"},{"expression":{"id":10137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10130,"name":"tokenToAgentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9979,"src":"2990:14:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10135,"indexExpression":{"arguments":[{"id":10133,"name":"agentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10082,"src":"3013:10:28","typeDescriptions":{"typeIdentifier":"t_contract$_AgentToken_$11516","typeString":"contract AgentToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AgentToken_$11516","typeString":"contract AgentToken"}],"id":10132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3005:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10131,"name":"address","nodeType":"ElementaryTypeName","src":"3005:7:28","typeDescriptions":{}}},"id":10134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3005:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2990:35:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10136,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10062,"src":"3028:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2990:45:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10138,"nodeType":"ExpressionStatement","src":"2990:45:28"},{"eventCall":{"arguments":[{"id":10140,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10062,"src":"3072:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10141,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3081:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3085:6:28","memberName":"sender","nodeType":"MemberAccess","src":"3081:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":10145,"name":"agentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10082,"src":"3101:10:28","typeDescriptions":{"typeIdentifier":"t_contract$_AgentToken_$11516","typeString":"contract AgentToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AgentToken_$11516","typeString":"contract AgentToken"}],"id":10144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3093:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10143,"name":"address","nodeType":"ElementaryTypeName","src":"3093:7:28","typeDescriptions":{}}},"id":10146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3093:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10139,"name":"AgentCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10003,"src":"3059:12:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256,address,address)"}},"id":10147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3059:54:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10148,"nodeType":"EmitStatement","src":"3054:59:28"}]},"functionSelector":"754c5e89","id":10150,"implemented":true,"kind":"function","modifiers":[],"name":"createAgent","nameLocation":"1888:11:28","nodeType":"FunctionDefinition","parameters":{"id":10060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10045,"mutability":"mutable","name":"name","nameLocation":"1925:4:28","nodeType":"VariableDeclaration","scope":10150,"src":"1909:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10044,"name":"string","nodeType":"ElementaryTypeName","src":"1909:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10047,"mutability":"mutable","name":"symbol","nameLocation":"1955:6:28","nodeType":"VariableDeclaration","scope":10150,"src":"1939:22:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10046,"name":"string","nodeType":"ElementaryTypeName","src":"1939:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10049,"mutability":"mutable","name":"agentName","nameLocation":"1987:9:28","nodeType":"VariableDeclaration","scope":10150,"src":"1971:25:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10048,"name":"string","nodeType":"ElementaryTypeName","src":"1971:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10051,"mutability":"mutable","name":"archetype","nameLocation":"2022:9:28","nodeType":"VariableDeclaration","scope":10150,"src":"2006:25:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10050,"name":"string","nodeType":"ElementaryTypeName","src":"2006:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10053,"mutability":"mutable","name":"metadataURI","nameLocation":"2057:11:28","nodeType":"VariableDeclaration","scope":10150,"src":"2041:27:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10052,"name":"string","nodeType":"ElementaryTypeName","src":"2041:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10055,"mutability":"mutable","name":"fundingTarget","nameLocation":"2086:13:28","nodeType":"VariableDeclaration","scope":10150,"src":"2078:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10054,"name":"uint256","nodeType":"ElementaryTypeName","src":"2078:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10057,"mutability":"mutable","name":"tokenSupply","nameLocation":"2117:11:28","nodeType":"VariableDeclaration","scope":10150,"src":"2109:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10056,"name":"uint256","nodeType":"ElementaryTypeName","src":"2109:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10059,"mutability":"mutable","name":"agentConfigJSON","nameLocation":"2154:15:28","nodeType":"VariableDeclaration","scope":10150,"src":"2138:31:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10058,"name":"string","nodeType":"ElementaryTypeName","src":"2138:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1899:276:28"},"returnParameters":{"id":10063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10062,"mutability":"mutable","name":"agentId","nameLocation":"2202:7:28","nodeType":"VariableDeclaration","scope":10150,"src":"2194:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10061,"name":"uint256","nodeType":"ElementaryTypeName","src":"2194:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2193:17:28"},"scope":10927,"src":"1879:1241:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10238,"nodeType":"Block","src":"3197:591:28","statements":[{"assignments":[10159],"declarations":[{"constant":false,"id":10159,"mutability":"mutable","name":"agent","nameLocation":"3227:5:28","nodeType":"VariableDeclaration","scope":10238,"src":"3207:25:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig"},"typeName":{"id":10158,"nodeType":"UserDefinedTypeName","pathNode":{"id":10157,"name":"AgentConfig","nameLocations":["3207:11:28"],"nodeType":"IdentifierPath","referencedDeclaration":9956,"src":"3207:11:28"},"referencedDeclaration":9956,"src":"3207:11:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig"}},"visibility":"internal"}],"id":10163,"initialValue":{"baseExpression":{"id":10160,"name":"agents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9963,"src":"3235:6:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AgentConfig_$9956_storage_$","typeString":"mapping(uint256 => struct AgentLaunchpadCoreV2Minimal.AgentConfig storage ref)"}},"id":10162,"indexExpression":{"id":10161,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10152,"src":"3242:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3235:15:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3207:43:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10165,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10159,"src":"3268:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10166,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3274:7:28","memberName":"creator","nodeType":"MemberAccess","referencedDeclaration":9945,"src":"3268:13:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":10169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3293:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3285:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10167,"name":"address","nodeType":"ElementaryTypeName","src":"3285:7:28","typeDescriptions":{}}},"id":10170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3285:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3268:27:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4167656e74206e6f7420666f756e64","id":10172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3297:17:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_69ca3bc381824e6c40df5d13177f15b3a20ad9875699c832e2615b92300e1933","typeString":"literal_string \"Agent not found\""},"value":"Agent not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_69ca3bc381824e6c40df5d13177f15b3a20ad9875699c832e2615b92300e1933","typeString":"literal_string \"Agent not found\""}],"id":10164,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3260:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3260:55:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10174,"nodeType":"ExpressionStatement","src":"3260:55:28"},{"expression":{"arguments":[{"id":10178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3333:15:28","subExpression":{"expression":{"id":10176,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10159,"src":"3334:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10177,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3340:8:28","memberName":"isBonded","nodeType":"MemberAccess","referencedDeclaration":9947,"src":"3334:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920626f6e646564","id":10179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3350:16:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_7cb79b5073abe52785fc76124dee431e41c65c8818cdbe9c3f10e5ab70758c45","typeString":"literal_string \"Already bonded\""},"value":"Already bonded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7cb79b5073abe52785fc76124dee431e41c65c8818cdbe9c3f10e5ab70758c45","typeString":"literal_string \"Already bonded\""}],"id":10175,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3325:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3325:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10181,"nodeType":"ExpressionStatement","src":"3325:42:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10183,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3385:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3389:5:28","memberName":"value","nodeType":"MemberAccess","src":"3385:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3397:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3385:13:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2076616c7565","id":10187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3400:10:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_a95d22a2616d21123a8027e11cd68edb847637bfebe8417876817874e9172936","typeString":"literal_string \"No value\""},"value":"No value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a95d22a2616d21123a8027e11cd68edb847637bfebe8417876817874e9172936","typeString":"literal_string \"No value\""}],"id":10182,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3377:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3377:34:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10189,"nodeType":"ExpressionStatement","src":"3377:34:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10191,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10159,"src":"3429:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10192,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3435:11:28","memberName":"totalRaised","nodeType":"MemberAccess","referencedDeclaration":9949,"src":"3429:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":10193,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3449:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3453:5:28","memberName":"value","nodeType":"MemberAccess","src":"3449:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3429:29:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":10196,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10159,"src":"3462:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10197,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3468:13:28","memberName":"fundingTarget","nodeType":"MemberAccess","referencedDeclaration":9941,"src":"3462:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3429:52:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4578636565647320746172676574","id":10199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3483:16:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_1cd1ab511cec53823135cc201ff726b8feb0d945745cd1ee867d4eaeff20b99e","typeString":"literal_string \"Exceeds target\""},"value":"Exceeds target"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1cd1ab511cec53823135cc201ff726b8feb0d945745cd1ee867d4eaeff20b99e","typeString":"literal_string \"Exceeds target\""}],"id":10190,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3421:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3421:79:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10201,"nodeType":"ExpressionStatement","src":"3421:79:28"},{"expression":{"id":10210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":10202,"name":"contributions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9969,"src":"3519:13:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":10206,"indexExpression":{"id":10203,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10152,"src":"3533:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3519:22:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10207,"indexExpression":{"expression":{"id":10204,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3542:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3546:6:28","memberName":"sender","nodeType":"MemberAccess","src":"3542:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3519:34:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":10208,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3557:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3561:5:28","memberName":"value","nodeType":"MemberAccess","src":"3557:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3519:47:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10211,"nodeType":"ExpressionStatement","src":"3519:47:28"},{"expression":{"id":10217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10212,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10159,"src":"3576:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10214,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3582:11:28","memberName":"totalRaised","nodeType":"MemberAccess","referencedDeclaration":9949,"src":"3576:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":10215,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3597:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3601:5:28","memberName":"value","nodeType":"MemberAccess","src":"3597:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3576:30:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10218,"nodeType":"ExpressionStatement","src":"3576:30:28"},{"eventCall":{"arguments":[{"id":10220,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10152,"src":"3642:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10221,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3651:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3655:6:28","memberName":"sender","nodeType":"MemberAccess","src":"3651:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":10223,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3663:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3667:5:28","memberName":"value","nodeType":"MemberAccess","src":"3663:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10219,"name":"Contributed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10011,"src":"3630:11:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":10225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3630:43:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10226,"nodeType":"EmitStatement","src":"3625:48:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10227,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10159,"src":"3696:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10228,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3702:11:28","memberName":"totalRaised","nodeType":"MemberAccess","referencedDeclaration":9949,"src":"3696:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":10229,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10159,"src":"3717:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10230,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3723:13:28","memberName":"fundingTarget","nodeType":"MemberAccess","referencedDeclaration":9941,"src":"3717:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3696:40:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10237,"nodeType":"IfStatement","src":"3692:90:28","trueBody":{"id":10236,"nodeType":"Block","src":"3738:44:28","statements":[{"expression":{"arguments":[{"id":10233,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10152,"src":"3763:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10232,"name":"_bondAgent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10429,"src":"3752:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":10234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3752:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10235,"nodeType":"ExpressionStatement","src":"3752:19:28"}]}}]},"functionSelector":"c1cbbca7","id":10239,"implemented":true,"kind":"function","modifiers":[{"id":10155,"kind":"modifierInvocation","modifierName":{"id":10154,"name":"nonReentrant","nameLocations":["3184:12:28"],"nodeType":"IdentifierPath","referencedDeclaration":2085,"src":"3184:12:28"},"nodeType":"ModifierInvocation","src":"3184:12:28"}],"name":"contribute","nameLocation":"3139:10:28","nodeType":"FunctionDefinition","parameters":{"id":10153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10152,"mutability":"mutable","name":"agentId","nameLocation":"3158:7:28","nodeType":"VariableDeclaration","scope":10239,"src":"3150:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10151,"name":"uint256","nodeType":"ElementaryTypeName","src":"3150:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3149:17:28"},"returnParameters":{"id":10156,"nodeType":"ParameterList","parameters":[],"src":"3197:0:28"},"scope":10927,"src":"3130:658:28","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":10428,"nodeType":"Block","src":"3844:1633:28","statements":[{"assignments":[10246],"declarations":[{"constant":false,"id":10246,"mutability":"mutable","name":"agent","nameLocation":"3874:5:28","nodeType":"VariableDeclaration","scope":10428,"src":"3854:25:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig"},"typeName":{"id":10245,"nodeType":"UserDefinedTypeName","pathNode":{"id":10244,"name":"AgentConfig","nameLocations":["3854:11:28"],"nodeType":"IdentifierPath","referencedDeclaration":9956,"src":"3854:11:28"},"referencedDeclaration":9956,"src":"3854:11:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig"}},"visibility":"internal"}],"id":10250,"initialValue":{"baseExpression":{"id":10247,"name":"agents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9963,"src":"3882:6:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AgentConfig_$9956_storage_$","typeString":"mapping(uint256 => struct AgentLaunchpadCoreV2Minimal.AgentConfig storage ref)"}},"id":10249,"indexExpression":{"id":10248,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10241,"src":"3889:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3882:15:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3854:43:28"},{"assignments":[10252],"declarations":[{"constant":false,"id":10252,"mutability":"mutable","name":"protocolFee","nameLocation":"3924:11:28","nodeType":"VariableDeclaration","scope":10428,"src":"3916:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10251,"name":"uint256","nodeType":"ElementaryTypeName","src":"3916:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10260,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10253,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10246,"src":"3939:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10254,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3945:11:28","memberName":"totalRaised","nodeType":"MemberAccess","referencedDeclaration":9949,"src":"3939:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":10255,"name":"protocolFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9986,"src":"3959:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3939:41:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10257,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3938:43:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":10258,"name":"BASIS_POINTS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9989,"src":"3984:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3938:58:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3916:80:28"},{"assignments":[10262],"declarations":[{"constant":false,"id":10262,"mutability":"mutable","name":"liquidityETH","nameLocation":"4014:12:28","nodeType":"VariableDeclaration","scope":10428,"src":"4006:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10261,"name":"uint256","nodeType":"ElementaryTypeName","src":"4006:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10273,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10263,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10246,"src":"4031:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10264,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4037:11:28","memberName":"totalRaised","nodeType":"MemberAccess","referencedDeclaration":9949,"src":"4031:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":10265,"name":"protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10252,"src":"4051:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4031:31:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10267,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4030:33:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":10268,"name":"defaultLiquidityPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9992,"src":"4066:26:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4030:62:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10270,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4029:64:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":10271,"name":"BASIS_POINTS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9989,"src":"4096:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4029:79:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4006:102:28"},{"assignments":[10275],"declarations":[{"constant":false,"id":10275,"mutability":"mutable","name":"remainingETH","nameLocation":"4126:12:28","nodeType":"VariableDeclaration","scope":10428,"src":"4118:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10274,"name":"uint256","nodeType":"ElementaryTypeName","src":"4118:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10282,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10276,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10246,"src":"4141:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10277,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4147:11:28","memberName":"totalRaised","nodeType":"MemberAccess","referencedDeclaration":9949,"src":"4141:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":10278,"name":"protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10252,"src":"4161:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4141:31:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":10280,"name":"liquidityETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10262,"src":"4175:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4141:46:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4118:69:28"},{"expression":{"id":10287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10283,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10246,"src":"4206:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10285,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4212:8:28","memberName":"isBonded","nodeType":"MemberAccess","referencedDeclaration":9947,"src":"4206:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":10286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4223:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4206:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10288,"nodeType":"ExpressionStatement","src":"4206:21:28"},{"expression":{"arguments":[{"id":10290,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10241,"src":"4268:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10289,"name":"_removeFromInProgress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10472,"src":"4246:21:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":10291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4246:30:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10292,"nodeType":"ExpressionStatement","src":"4246:30:28"},{"expression":{"arguments":[{"id":10296,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10241,"src":"4306:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":10293,"name":"bondedAgentIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9972,"src":"4286:14:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":10295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4301:4:28","memberName":"push","nodeType":"MemberAccess","src":"4286:19:28","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":10297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4286:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10298,"nodeType":"ExpressionStatement","src":"4286:28:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10299,"name":"protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10252,"src":"4337:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4351:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4337:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10311,"nodeType":"IfStatement","src":"4333:92:28","trueBody":{"id":10310,"nodeType":"Block","src":"4354:71:28","statements":[{"expression":{"arguments":[{"id":10307,"name":"protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10252,"src":"4402:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":10304,"name":"treasuryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9981,"src":"4376:15:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4368:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":10302,"name":"address","nodeType":"ElementaryTypeName","src":"4368:8:28","stateMutability":"payable","typeDescriptions":{}}},"id":10305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4368:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":10306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4393:8:28","memberName":"transfer","nodeType":"MemberAccess","src":"4368:33:28","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":10308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4368:46:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10309,"nodeType":"ExpressionStatement","src":"4368:46:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10312,"name":"remainingETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10275,"src":"4447:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4462:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4447:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10325,"nodeType":"IfStatement","src":"4443:92:28","trueBody":{"id":10324,"nodeType":"Block","src":"4465:70:28","statements":[{"expression":{"arguments":[{"id":10321,"name":"remainingETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10275,"src":"4511:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":10317,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10246,"src":"4487:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10318,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4493:7:28","memberName":"creator","nodeType":"MemberAccess","referencedDeclaration":9945,"src":"4487:13:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4479:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":10315,"name":"address","nodeType":"ElementaryTypeName","src":"4479:8:28","stateMutability":"payable","typeDescriptions":{}}},"id":10319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4479:22:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":10320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4502:8:28","memberName":"transfer","nodeType":"MemberAccess","src":"4479:31:28","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":10322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4479:45:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10323,"nodeType":"ExpressionStatement","src":"4479:45:28"}]}},{"assignments":[10327],"declarations":[{"constant":false,"id":10327,"mutability":"mutable","name":"lpPair","nameLocation":"4561:6:28","nodeType":"VariableDeclaration","scope":10428,"src":"4553:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10326,"name":"address","nodeType":"ElementaryTypeName","src":"4553:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":10332,"initialValue":{"arguments":[{"hexValue":"30","id":10330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4578:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4570:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10328,"name":"address","nodeType":"ElementaryTypeName","src":"4570:7:28","typeDescriptions":{}}},"id":10331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4570:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4553:27:28"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10333,"name":"liquidityManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9983,"src":"4594:16:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":10336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4622:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4614:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10334,"name":"address","nodeType":"ElementaryTypeName","src":"4614:7:28","typeDescriptions":{}}},"id":10337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4594:30:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10339,"name":"liquidityETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10262,"src":"4628:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4643:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4628:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4594:50:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":10419,"nodeType":"Block","src":"5299:100:28","statements":[{"expression":{"arguments":[{"id":10414,"name":"treasuryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9981,"src":"5353:15:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":10415,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10246,"src":"5370:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10416,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5376:11:28","memberName":"tokenSupply","nodeType":"MemberAccess","referencedDeclaration":9943,"src":"5370:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":10410,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10246,"src":"5324:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10411,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5330:12:28","memberName":"tokenAddress","nodeType":"MemberAccess","referencedDeclaration":9951,"src":"5324:18:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10409,"name":"AgentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11516,"src":"5313:10:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AgentToken_$11516_$","typeString":"type(contract AgentToken)"}},"id":10412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5313:30:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AgentToken_$11516","typeString":"contract AgentToken"}},"id":10413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5344:8:28","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1086,"src":"5313:39:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":10417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5313:75:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10418,"nodeType":"ExpressionStatement","src":"5313:75:28"}]},"id":10420,"nodeType":"IfStatement","src":"4590:809:28","trueBody":{"id":10408,"nodeType":"Block","src":"4646:647:28","statements":[{"assignments":[10344],"declarations":[{"constant":false,"id":10344,"mutability":"mutable","name":"liquidityTokens","nameLocation":"4668:15:28","nodeType":"VariableDeclaration","scope":10408,"src":"4660:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10343,"name":"uint256","nodeType":"ElementaryTypeName","src":"4660:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10352,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10345,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10246,"src":"4687:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10346,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4693:11:28","memberName":"tokenSupply","nodeType":"MemberAccess","referencedDeclaration":9943,"src":"4687:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":10347,"name":"defaultTokenLPPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9995,"src":"4707:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4687:44:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10349,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4686:46:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":10350,"name":"BASIS_POINTS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9989,"src":"4735:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4686:61:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4660:87:28"},{"assignments":[10355],"declarations":[{"constant":false,"id":10355,"mutability":"mutable","name":"agentToken","nameLocation":"4785:10:28","nodeType":"VariableDeclaration","scope":10408,"src":"4774:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AgentToken_$11516","typeString":"contract AgentToken"},"typeName":{"id":10354,"nodeType":"UserDefinedTypeName","pathNode":{"id":10353,"name":"AgentToken","nameLocations":["4774:10:28"],"nodeType":"IdentifierPath","referencedDeclaration":11516,"src":"4774:10:28"},"referencedDeclaration":11516,"src":"4774:10:28","typeDescriptions":{"typeIdentifier":"t_contract$_AgentToken_$11516","typeString":"contract AgentToken"}},"visibility":"internal"}],"id":10360,"initialValue":{"arguments":[{"expression":{"id":10357,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10246,"src":"4809:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4815:12:28","memberName":"tokenAddress","nodeType":"MemberAccess","referencedDeclaration":9951,"src":"4809:18:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10356,"name":"AgentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11516,"src":"4798:10:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AgentToken_$11516_$","typeString":"type(contract AgentToken)"}},"id":10359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4798:30:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AgentToken_$11516","typeString":"contract AgentToken"}},"nodeType":"VariableDeclarationStatement","src":"4774:54:28"},{"expression":{"arguments":[{"id":10364,"name":"liquidityManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9983,"src":"4861:16:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":10365,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10246,"src":"4879:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10366,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4885:11:28","memberName":"tokenSupply","nodeType":"MemberAccess","referencedDeclaration":9943,"src":"4879:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":10361,"name":"agentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10355,"src":"4842:10:28","typeDescriptions":{"typeIdentifier":"t_contract$_AgentToken_$11516","typeString":"contract AgentToken"}},"id":10363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4853:7:28","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1127,"src":"4842:18:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":10367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4842:55:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10368,"nodeType":"ExpressionStatement","src":"4842:55:28"},{"clauses":[{"block":{"id":10395,"nodeType":"Block","src":"5093:95:28","statements":[{"expression":{"id":10387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10385,"name":"lpPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10327,"src":"5111:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10386,"name":"_lpPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10383,"src":"5120:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5111:16:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10388,"nodeType":"ExpressionStatement","src":"5111:16:28"},{"expression":{"id":10393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10389,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10246,"src":"5145:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10391,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5151:13:28","memberName":"lpPairAddress","nodeType":"MemberAccess","referencedDeclaration":9953,"src":"5145:19:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10392,"name":"lpPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10327,"src":"5167:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5145:28:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10394,"nodeType":"ExpressionStatement","src":"5145:28:28"}]},"errorName":"","id":10396,"nodeType":"TryCatchClause","parameters":{"id":10384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10383,"mutability":"mutable","name":"_lpPair","nameLocation":"5084:7:28","nodeType":"VariableDeclaration","scope":10396,"src":"5076:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10382,"name":"address","nodeType":"ElementaryTypeName","src":"5076:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5075:17:28"},"src":"5067:121:28"},{"block":{"id":10405,"nodeType":"Block","src":"5195:88:28","statements":[{"expression":{"arguments":[{"id":10400,"name":"treasuryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9981,"src":"5233:15:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":10401,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10246,"src":"5250:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10402,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5256:11:28","memberName":"tokenSupply","nodeType":"MemberAccess","referencedDeclaration":9943,"src":"5250:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":10397,"name":"agentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10355,"src":"5213:10:28","typeDescriptions":{"typeIdentifier":"t_contract$_AgentToken_$11516","typeString":"contract AgentToken"}},"id":10399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5224:8:28","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1086,"src":"5213:19:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":10403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5213:55:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10404,"nodeType":"ExpressionStatement","src":"5213:55:28"}]},"errorName":"","id":10406,"nodeType":"TryCatchClause","src":"5189:94:28"}],"externalCall":{"arguments":[{"id":10375,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10241,"src":"4998:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10376,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10246,"src":"5007:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10377,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5013:12:28","memberName":"tokenAddress","nodeType":"MemberAccess","referencedDeclaration":9951,"src":"5007:18:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10378,"name":"liquidityTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10344,"src":"5027:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10379,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10246,"src":"5044:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10380,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5050:15:28","memberName":"agentConfigJSON","nodeType":"MemberAccess","referencedDeclaration":9955,"src":"5044:21:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"arguments":[{"id":10370,"name":"liquidityManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9983,"src":"4939:16:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10369,"name":"ISimpleAMM","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9929,"src":"4928:10:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISimpleAMM_$9929_$","typeString":"type(contract ISimpleAMM)"}},"id":10371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4928:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISimpleAMM_$9929","typeString":"contract ISimpleAMM"}},"id":10372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4957:19:28","memberName":"createLiquidityPool","nodeType":"MemberAccess","referencedDeclaration":9928,"src":"4928:48:28","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$_t_address_$","typeString":"function (uint256,address,uint256,string memory) payable external returns (address)"}},"id":10374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":10373,"name":"liquidityETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10262,"src":"4984:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4928:69:28","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$_t_address_$value","typeString":"function (uint256,address,uint256,string memory) payable external returns (address)"}},"id":10381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4928:138:28","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10407,"nodeType":"TryStatement","src":"4924:359:28"}]}},{"eventCall":{"arguments":[{"id":10422,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10241,"src":"5434:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10423,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10246,"src":"5443:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5449:12:28","memberName":"tokenAddress","nodeType":"MemberAccess","referencedDeclaration":9951,"src":"5443:18:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10425,"name":"lpPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10327,"src":"5463:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10421,"name":"AgentBonded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10019,"src":"5422:11:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256,address,address)"}},"id":10426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5422:48:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10427,"nodeType":"EmitStatement","src":"5417:53:28"}]},"id":10429,"implemented":true,"kind":"function","modifiers":[],"name":"_bondAgent","nameLocation":"3807:10:28","nodeType":"FunctionDefinition","parameters":{"id":10242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10241,"mutability":"mutable","name":"agentId","nameLocation":"3826:7:28","nodeType":"VariableDeclaration","scope":10429,"src":"3818:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10240,"name":"uint256","nodeType":"ElementaryTypeName","src":"3818:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3817:17:28"},"returnParameters":{"id":10243,"nodeType":"ParameterList","parameters":[],"src":"3844:0:28"},"scope":10927,"src":"3798:1679:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10471,"nodeType":"Block","src":"5544:305:28","statements":[{"body":{"id":10469,"nodeType":"Block","src":"5610:233:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":10445,"name":"inProgressAgentIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9975,"src":"5628:18:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":10447,"indexExpression":{"id":10446,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10435,"src":"5647:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5628:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":10448,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10431,"src":"5653:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5628:32:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10468,"nodeType":"IfStatement","src":"5624:209:28","trueBody":{"id":10467,"nodeType":"Block","src":"5662:171:28","statements":[{"expression":{"id":10459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10450,"name":"inProgressAgentIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9975,"src":"5680:18:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":10452,"indexExpression":{"id":10451,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10435,"src":"5699:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5680:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":10453,"name":"inProgressAgentIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9975,"src":"5704:18:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":10458,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10454,"name":"inProgressAgentIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9975,"src":"5723:18:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":10455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5742:6:28","memberName":"length","nodeType":"MemberAccess","src":"5723:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":10456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5751:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5723:29:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5704:49:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5680:73:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10460,"nodeType":"ExpressionStatement","src":"5680:73:28"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":10461,"name":"inProgressAgentIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9975,"src":"5771:18:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":10463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5790:3:28","memberName":"pop","nodeType":"MemberAccess","src":"5771:22:28","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer)"}},"id":10464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5771:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10465,"nodeType":"ExpressionStatement","src":"5771:24:28"},{"id":10466,"nodeType":"Break","src":"5813:5:28"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10438,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10435,"src":"5574:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":10439,"name":"inProgressAgentIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9975,"src":"5578:18:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":10440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5597:6:28","memberName":"length","nodeType":"MemberAccess","src":"5578:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5574:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10470,"initializationExpression":{"assignments":[10435],"declarations":[{"constant":false,"id":10435,"mutability":"mutable","name":"i","nameLocation":"5567:1:28","nodeType":"VariableDeclaration","scope":10470,"src":"5559:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10434,"name":"uint256","nodeType":"ElementaryTypeName","src":"5559:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10437,"initialValue":{"hexValue":"30","id":10436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5571:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5559:13:28"},"loopExpression":{"expression":{"id":10443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5605:3:28","subExpression":{"id":10442,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10435,"src":"5605:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10444,"nodeType":"ExpressionStatement","src":"5605:3:28"},"nodeType":"ForStatement","src":"5554:289:28"}]},"id":10472,"implemented":true,"kind":"function","modifiers":[],"name":"_removeFromInProgress","nameLocation":"5496:21:28","nodeType":"FunctionDefinition","parameters":{"id":10432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10431,"mutability":"mutable","name":"agentId","nameLocation":"5526:7:28","nodeType":"VariableDeclaration","scope":10472,"src":"5518:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10430,"name":"uint256","nodeType":"ElementaryTypeName","src":"5518:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5517:17:28"},"returnParameters":{"id":10433,"nodeType":"ParameterList","parameters":[],"src":"5544:0:28"},"scope":10927,"src":"5487:362:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10594,"nodeType":"Block","src":"6078:678:28","statements":[{"assignments":[10491],"declarations":[{"constant":false,"id":10491,"mutability":"mutable","name":"bondedCount","nameLocation":"6096:11:28","nodeType":"VariableDeclaration","scope":10594,"src":"6088:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10490,"name":"uint256","nodeType":"ElementaryTypeName","src":"6088:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10494,"initialValue":{"expression":{"id":10492,"name":"bondedAgentIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9972,"src":"6110:14:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":10493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6125:6:28","memberName":"length","nodeType":"MemberAccess","src":"6110:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6088:43:28"},{"expression":{"id":10501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10495,"name":"tokenAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10476,"src":"6141:14:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10499,"name":"bondedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10491,"src":"6172:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6158:13:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":10496,"name":"address","nodeType":"ElementaryTypeName","src":"6162:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10497,"nodeType":"ArrayTypeName","src":"6162:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":10500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6158:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"6141:43:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":10502,"nodeType":"ExpressionStatement","src":"6141:43:28"},{"expression":{"id":10509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10503,"name":"names","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10479,"src":"6194:5:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10507,"name":"bondedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10491,"src":"6215:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6202:12:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":10504,"name":"string","nodeType":"ElementaryTypeName","src":"6206:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":10505,"nodeType":"ArrayTypeName","src":"6206:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":10508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6202:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"src":"6194:33:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":10510,"nodeType":"ExpressionStatement","src":"6194:33:28"},{"expression":{"id":10517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10511,"name":"symbols","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10482,"src":"6237:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10515,"name":"bondedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10491,"src":"6260:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6247:12:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":10512,"name":"string","nodeType":"ElementaryTypeName","src":"6251:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":10513,"nodeType":"ArrayTypeName","src":"6251:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":10516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6247:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"src":"6237:35:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":10518,"nodeType":"ExpressionStatement","src":"6237:35:28"},{"expression":{"id":10525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10519,"name":"lpPairs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10485,"src":"6282:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10523,"name":"bondedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10491,"src":"6306:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6292:13:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":10520,"name":"address","nodeType":"ElementaryTypeName","src":"6296:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10521,"nodeType":"ArrayTypeName","src":"6296:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":10524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6292:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"6282:36:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":10526,"nodeType":"ExpressionStatement","src":"6282:36:28"},{"expression":{"id":10533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10527,"name":"agentIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10488,"src":"6328:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10531,"name":"bondedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10491,"src":"6353:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6339:13:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":10528,"name":"uint256","nodeType":"ElementaryTypeName","src":"6343:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10529,"nodeType":"ArrayTypeName","src":"6343:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":10532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6339:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"6328:37:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":10534,"nodeType":"ExpressionStatement","src":"6328:37:28"},{"body":{"id":10592,"nodeType":"Block","src":"6426:324:28","statements":[{"assignments":[10546],"declarations":[{"constant":false,"id":10546,"mutability":"mutable","name":"agentId","nameLocation":"6448:7:28","nodeType":"VariableDeclaration","scope":10592,"src":"6440:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10545,"name":"uint256","nodeType":"ElementaryTypeName","src":"6440:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10550,"initialValue":{"baseExpression":{"id":10547,"name":"bondedAgentIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9972,"src":"6458:14:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":10549,"indexExpression":{"id":10548,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10536,"src":"6473:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6458:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6440:35:28"},{"assignments":[10553],"declarations":[{"constant":false,"id":10553,"mutability":"mutable","name":"agent","nameLocation":"6509:5:28","nodeType":"VariableDeclaration","scope":10592,"src":"6489:25:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig"},"typeName":{"id":10552,"nodeType":"UserDefinedTypeName","pathNode":{"id":10551,"name":"AgentConfig","nameLocations":["6489:11:28"],"nodeType":"IdentifierPath","referencedDeclaration":9956,"src":"6489:11:28"},"referencedDeclaration":9956,"src":"6489:11:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig"}},"visibility":"internal"}],"id":10557,"initialValue":{"baseExpression":{"id":10554,"name":"agents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9963,"src":"6517:6:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AgentConfig_$9956_storage_$","typeString":"mapping(uint256 => struct AgentLaunchpadCoreV2Minimal.AgentConfig storage ref)"}},"id":10556,"indexExpression":{"id":10555,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10546,"src":"6524:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6517:15:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6489:43:28"},{"expression":{"id":10563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10558,"name":"tokenAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10476,"src":"6546:14:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":10560,"indexExpression":{"id":10559,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10536,"src":"6561:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6546:17:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":10561,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10553,"src":"6566:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10562,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6572:12:28","memberName":"tokenAddress","nodeType":"MemberAccess","referencedDeclaration":9951,"src":"6566:18:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6546:38:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10564,"nodeType":"ExpressionStatement","src":"6546:38:28"},{"expression":{"id":10570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10565,"name":"names","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10479,"src":"6598:5:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":10567,"indexExpression":{"id":10566,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10536,"src":"6604:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6598:8:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":10568,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10553,"src":"6609:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10569,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6615:4:28","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":9935,"src":"6609:10:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"6598:21:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":10571,"nodeType":"ExpressionStatement","src":"6598:21:28"},{"expression":{"id":10577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10572,"name":"symbols","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10482,"src":"6633:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":10574,"indexExpression":{"id":10573,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10536,"src":"6641:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6633:10:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":10575,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10553,"src":"6646:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10576,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6652:6:28","memberName":"symbol","nodeType":"MemberAccess","referencedDeclaration":9937,"src":"6646:12:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"6633:25:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":10578,"nodeType":"ExpressionStatement","src":"6633:25:28"},{"expression":{"id":10584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10579,"name":"lpPairs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10485,"src":"6672:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":10581,"indexExpression":{"id":10580,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10536,"src":"6680:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6672:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":10582,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10553,"src":"6685:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10583,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6691:13:28","memberName":"lpPairAddress","nodeType":"MemberAccess","referencedDeclaration":9953,"src":"6685:19:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6672:32:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10585,"nodeType":"ExpressionStatement","src":"6672:32:28"},{"expression":{"id":10590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10586,"name":"agentIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10488,"src":"6718:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":10588,"indexExpression":{"id":10587,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10536,"src":"6727:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6718:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10589,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10546,"src":"6732:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6718:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10591,"nodeType":"ExpressionStatement","src":"6718:21:28"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10539,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10536,"src":"6404:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":10540,"name":"bondedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10491,"src":"6408:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6404:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10593,"initializationExpression":{"assignments":[10536],"declarations":[{"constant":false,"id":10536,"mutability":"mutable","name":"i","nameLocation":"6397:1:28","nodeType":"VariableDeclaration","scope":10593,"src":"6389:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10535,"name":"uint256","nodeType":"ElementaryTypeName","src":"6389:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10538,"initialValue":{"hexValue":"30","id":10537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6401:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6389:13:28"},"loopExpression":{"expression":{"id":10543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6421:3:28","subExpression":{"id":10542,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10536,"src":"6421:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10544,"nodeType":"ExpressionStatement","src":"6421:3:28"},"nodeType":"ForStatement","src":"6384:366:28"}]},"functionSelector":"a759c883","id":10595,"implemented":true,"kind":"function","modifiers":[],"name":"getAllBondedTokens","nameLocation":"5900:18:28","nodeType":"FunctionDefinition","parameters":{"id":10473,"nodeType":"ParameterList","parameters":[],"src":"5918:2:28"},"returnParameters":{"id":10489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10476,"mutability":"mutable","name":"tokenAddresses","nameLocation":"5961:14:28","nodeType":"VariableDeclaration","scope":10595,"src":"5944:31:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":10474,"name":"address","nodeType":"ElementaryTypeName","src":"5944:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10475,"nodeType":"ArrayTypeName","src":"5944:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":10479,"mutability":"mutable","name":"names","nameLocation":"5993:5:28","nodeType":"VariableDeclaration","scope":10595,"src":"5977:21:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":10477,"name":"string","nodeType":"ElementaryTypeName","src":"5977:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":10478,"nodeType":"ArrayTypeName","src":"5977:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":10482,"mutability":"mutable","name":"symbols","nameLocation":"6016:7:28","nodeType":"VariableDeclaration","scope":10595,"src":"6000:23:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":10480,"name":"string","nodeType":"ElementaryTypeName","src":"6000:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":10481,"nodeType":"ArrayTypeName","src":"6000:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":10485,"mutability":"mutable","name":"lpPairs","nameLocation":"6042:7:28","nodeType":"VariableDeclaration","scope":10595,"src":"6025:24:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":10483,"name":"address","nodeType":"ElementaryTypeName","src":"6025:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10484,"nodeType":"ArrayTypeName","src":"6025:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":10488,"mutability":"mutable","name":"agentIds","nameLocation":"6068:8:28","nodeType":"VariableDeclaration","scope":10595,"src":"6051:25:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10486,"name":"uint256","nodeType":"ElementaryTypeName","src":"6051:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10487,"nodeType":"ArrayTypeName","src":"6051:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5943:134:28"},"scope":10927,"src":"5891:865:28","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":10717,"nodeType":"Block","src":"6971:757:28","statements":[{"assignments":[10614],"declarations":[{"constant":false,"id":10614,"mutability":"mutable","name":"inProgressCount","nameLocation":"6989:15:28","nodeType":"VariableDeclaration","scope":10717,"src":"6981:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10613,"name":"uint256","nodeType":"ElementaryTypeName","src":"6981:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10617,"initialValue":{"expression":{"id":10615,"name":"inProgressAgentIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9975,"src":"7007:18:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":10616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7026:6:28","memberName":"length","nodeType":"MemberAccess","src":"7007:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6981:51:28"},{"expression":{"id":10624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10618,"name":"agentIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10599,"src":"7042:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10622,"name":"inProgressCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10614,"src":"7067:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7053:13:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":10619,"name":"uint256","nodeType":"ElementaryTypeName","src":"7057:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10620,"nodeType":"ArrayTypeName","src":"7057:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":10623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7053:30:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"7042:41:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":10625,"nodeType":"ExpressionStatement","src":"7042:41:28"},{"expression":{"id":10632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10626,"name":"agentNames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10602,"src":"7093:10:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10630,"name":"inProgressCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10614,"src":"7119:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7106:12:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":10627,"name":"string","nodeType":"ElementaryTypeName","src":"7110:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":10628,"nodeType":"ArrayTypeName","src":"7110:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":10631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7106:29:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"src":"7093:42:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":10633,"nodeType":"ExpressionStatement","src":"7093:42:28"},{"expression":{"id":10640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10634,"name":"fundingTargets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10605,"src":"7145:14:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10638,"name":"inProgressCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10614,"src":"7176:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7162:13:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":10635,"name":"uint256","nodeType":"ElementaryTypeName","src":"7166:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10636,"nodeType":"ArrayTypeName","src":"7166:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":10639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7162:30:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"7145:47:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":10641,"nodeType":"ExpressionStatement","src":"7145:47:28"},{"expression":{"id":10648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10642,"name":"totalRaised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10608,"src":"7202:11:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10646,"name":"inProgressCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10614,"src":"7230:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7216:13:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":10643,"name":"uint256","nodeType":"ElementaryTypeName","src":"7220:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10644,"nodeType":"ArrayTypeName","src":"7220:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":10647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7216:30:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"7202:44:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":10649,"nodeType":"ExpressionStatement","src":"7202:44:28"},{"expression":{"id":10656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10650,"name":"tokenAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10611,"src":"7256:14:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10654,"name":"inProgressCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10614,"src":"7287:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7273:13:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":10651,"name":"address","nodeType":"ElementaryTypeName","src":"7277:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10652,"nodeType":"ArrayTypeName","src":"7277:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":10655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7273:30:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"7256:47:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":10657,"nodeType":"ExpressionStatement","src":"7256:47:28"},{"body":{"id":10715,"nodeType":"Block","src":"7368:354:28","statements":[{"assignments":[10669],"declarations":[{"constant":false,"id":10669,"mutability":"mutable","name":"agentId","nameLocation":"7390:7:28","nodeType":"VariableDeclaration","scope":10715,"src":"7382:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10668,"name":"uint256","nodeType":"ElementaryTypeName","src":"7382:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10673,"initialValue":{"baseExpression":{"id":10670,"name":"inProgressAgentIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9975,"src":"7400:18:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":10672,"indexExpression":{"id":10671,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10659,"src":"7419:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7400:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7382:39:28"},{"assignments":[10676],"declarations":[{"constant":false,"id":10676,"mutability":"mutable","name":"agent","nameLocation":"7455:5:28","nodeType":"VariableDeclaration","scope":10715,"src":"7435:25:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig"},"typeName":{"id":10675,"nodeType":"UserDefinedTypeName","pathNode":{"id":10674,"name":"AgentConfig","nameLocations":["7435:11:28"],"nodeType":"IdentifierPath","referencedDeclaration":9956,"src":"7435:11:28"},"referencedDeclaration":9956,"src":"7435:11:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig"}},"visibility":"internal"}],"id":10680,"initialValue":{"baseExpression":{"id":10677,"name":"agents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9963,"src":"7463:6:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AgentConfig_$9956_storage_$","typeString":"mapping(uint256 => struct AgentLaunchpadCoreV2Minimal.AgentConfig storage ref)"}},"id":10679,"indexExpression":{"id":10678,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10669,"src":"7470:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7463:15:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7435:43:28"},{"expression":{"id":10685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10681,"name":"agentIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10599,"src":"7492:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":10683,"indexExpression":{"id":10682,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10659,"src":"7501:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7492:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10684,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10669,"src":"7506:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7492:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10686,"nodeType":"ExpressionStatement","src":"7492:21:28"},{"expression":{"id":10692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10687,"name":"agentNames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10602,"src":"7527:10:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":10689,"indexExpression":{"id":10688,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10659,"src":"7538:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7527:13:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":10690,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10676,"src":"7543:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10691,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7549:9:28","memberName":"agentName","nodeType":"MemberAccess","referencedDeclaration":9939,"src":"7543:15:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"7527:31:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":10693,"nodeType":"ExpressionStatement","src":"7527:31:28"},{"expression":{"id":10699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10694,"name":"fundingTargets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10605,"src":"7572:14:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":10696,"indexExpression":{"id":10695,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10659,"src":"7587:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7572:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":10697,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10676,"src":"7592:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10698,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7598:13:28","memberName":"fundingTarget","nodeType":"MemberAccess","referencedDeclaration":9941,"src":"7592:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7572:39:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10700,"nodeType":"ExpressionStatement","src":"7572:39:28"},{"expression":{"id":10706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10701,"name":"totalRaised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10608,"src":"7625:11:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":10703,"indexExpression":{"id":10702,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10659,"src":"7637:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7625:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":10704,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10676,"src":"7642:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10705,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7648:11:28","memberName":"totalRaised","nodeType":"MemberAccess","referencedDeclaration":9949,"src":"7642:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7625:34:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10707,"nodeType":"ExpressionStatement","src":"7625:34:28"},{"expression":{"id":10713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10708,"name":"tokenAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10611,"src":"7673:14:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":10710,"indexExpression":{"id":10709,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10659,"src":"7688:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7673:17:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":10711,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10676,"src":"7693:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10712,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7699:12:28","memberName":"tokenAddress","nodeType":"MemberAccess","referencedDeclaration":9951,"src":"7693:18:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7673:38:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10714,"nodeType":"ExpressionStatement","src":"7673:38:28"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10662,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10659,"src":"7342:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":10663,"name":"inProgressCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10614,"src":"7346:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7342:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10716,"initializationExpression":{"assignments":[10659],"declarations":[{"constant":false,"id":10659,"mutability":"mutable","name":"i","nameLocation":"7335:1:28","nodeType":"VariableDeclaration","scope":10716,"src":"7327:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10658,"name":"uint256","nodeType":"ElementaryTypeName","src":"7327:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10661,"initialValue":{"hexValue":"30","id":10660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7339:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7327:13:28"},"loopExpression":{"expression":{"id":10666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7363:3:28","subExpression":{"id":10665,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10659,"src":"7363:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10667,"nodeType":"ExpressionStatement","src":"7363:3:28"},"nodeType":"ForStatement","src":"7322:400:28"}]},"functionSelector":"4dd03176","id":10718,"implemented":true,"kind":"function","modifiers":[],"name":"getInProgressAgents","nameLocation":"6775:19:28","nodeType":"FunctionDefinition","parameters":{"id":10596,"nodeType":"ParameterList","parameters":[],"src":"6794:2:28"},"returnParameters":{"id":10612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10599,"mutability":"mutable","name":"agentIds","nameLocation":"6837:8:28","nodeType":"VariableDeclaration","scope":10718,"src":"6820:25:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10597,"name":"uint256","nodeType":"ElementaryTypeName","src":"6820:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10598,"nodeType":"ArrayTypeName","src":"6820:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":10602,"mutability":"mutable","name":"agentNames","nameLocation":"6863:10:28","nodeType":"VariableDeclaration","scope":10718,"src":"6847:26:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":10600,"name":"string","nodeType":"ElementaryTypeName","src":"6847:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":10601,"nodeType":"ArrayTypeName","src":"6847:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":10605,"mutability":"mutable","name":"fundingTargets","nameLocation":"6892:14:28","nodeType":"VariableDeclaration","scope":10718,"src":"6875:31:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10603,"name":"uint256","nodeType":"ElementaryTypeName","src":"6875:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10604,"nodeType":"ArrayTypeName","src":"6875:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":10608,"mutability":"mutable","name":"totalRaised","nameLocation":"6925:11:28","nodeType":"VariableDeclaration","scope":10718,"src":"6908:28:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10606,"name":"uint256","nodeType":"ElementaryTypeName","src":"6908:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10607,"nodeType":"ArrayTypeName","src":"6908:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":10611,"mutability":"mutable","name":"tokenAddresses","nameLocation":"6955:14:28","nodeType":"VariableDeclaration","scope":10718,"src":"6938:31:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":10609,"name":"address","nodeType":"ElementaryTypeName","src":"6938:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10610,"nodeType":"ArrayTypeName","src":"6938:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"6819:151:28"},"scope":10927,"src":"6766:962:28","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":10729,"nodeType":"Block","src":"7824:52:28","statements":[{"expression":{"baseExpression":{"id":10725,"name":"tokenToAgentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9979,"src":"7841:14:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10727,"indexExpression":{"id":10726,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10720,"src":"7856:12:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7841:28:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10724,"id":10728,"nodeType":"Return","src":"7834:35:28"}]},"functionSelector":"dab7706a","id":10730,"implemented":true,"kind":"function","modifiers":[],"name":"getAgentByTokenAddress","nameLocation":"7747:22:28","nodeType":"FunctionDefinition","parameters":{"id":10721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10720,"mutability":"mutable","name":"tokenAddress","nameLocation":"7778:12:28","nodeType":"VariableDeclaration","scope":10730,"src":"7770:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10719,"name":"address","nodeType":"ElementaryTypeName","src":"7770:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7769:22:28"},"returnParameters":{"id":10724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10730,"src":"7815:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10722,"name":"uint256","nodeType":"ElementaryTypeName","src":"7815:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7814:9:28"},"scope":10927,"src":"7738:138:28","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":10753,"nodeType":"Block","src":"8004:146:28","statements":[{"expression":{"id":10741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10739,"name":"totalAgents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10733,"src":"8014:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10740,"name":"_agentIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9958,"src":"8028:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8014:29:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10742,"nodeType":"ExpressionStatement","src":"8014:29:28"},{"expression":{"id":10746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10743,"name":"bondedAgents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10735,"src":"8053:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":10744,"name":"bondedAgentIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9972,"src":"8068:14:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":10745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8083:6:28","memberName":"length","nodeType":"MemberAccess","src":"8068:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8053:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10747,"nodeType":"ExpressionStatement","src":"8053:36:28"},{"expression":{"id":10751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10748,"name":"inProgressAgents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10737,"src":"8099:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":10749,"name":"inProgressAgentIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9975,"src":"8118:18:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":10750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8137:6:28","memberName":"length","nodeType":"MemberAccess","src":"8118:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8099:44:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10752,"nodeType":"ExpressionStatement","src":"8099:44:28"}]},"functionSelector":"045af334","id":10754,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalCounts","nameLocation":"7895:14:28","nodeType":"FunctionDefinition","parameters":{"id":10731,"nodeType":"ParameterList","parameters":[],"src":"7909:2:28"},"returnParameters":{"id":10738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10733,"mutability":"mutable","name":"totalAgents","nameLocation":"7943:11:28","nodeType":"VariableDeclaration","scope":10754,"src":"7935:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10732,"name":"uint256","nodeType":"ElementaryTypeName","src":"7935:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10735,"mutability":"mutable","name":"bondedAgents","nameLocation":"7964:12:28","nodeType":"VariableDeclaration","scope":10754,"src":"7956:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10734,"name":"uint256","nodeType":"ElementaryTypeName","src":"7956:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10737,"mutability":"mutable","name":"inProgressAgents","nameLocation":"7986:16:28","nodeType":"VariableDeclaration","scope":10754,"src":"7978:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10736,"name":"uint256","nodeType":"ElementaryTypeName","src":"7978:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7934:69:28"},"scope":10927,"src":"7886:264:28","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":10815,"nodeType":"Block","src":"8419:306:28","statements":[{"assignments":[10779],"declarations":[{"constant":false,"id":10779,"mutability":"mutable","name":"agent","nameLocation":"8449:5:28","nodeType":"VariableDeclaration","scope":10815,"src":"8429:25:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig"},"typeName":{"id":10778,"nodeType":"UserDefinedTypeName","pathNode":{"id":10777,"name":"AgentConfig","nameLocations":["8429:11:28"],"nodeType":"IdentifierPath","referencedDeclaration":9956,"src":"8429:11:28"},"referencedDeclaration":9956,"src":"8429:11:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig"}},"visibility":"internal"}],"id":10783,"initialValue":{"baseExpression":{"id":10780,"name":"agents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9963,"src":"8457:6:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AgentConfig_$9956_storage_$","typeString":"mapping(uint256 => struct AgentLaunchpadCoreV2Minimal.AgentConfig storage ref)"}},"id":10782,"indexExpression":{"id":10781,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10756,"src":"8464:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8457:15:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8429:43:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10785,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10779,"src":"8490:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10786,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8496:7:28","memberName":"creator","nodeType":"MemberAccess","referencedDeclaration":9945,"src":"8490:13:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":10789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8515:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8507:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10787,"name":"address","nodeType":"ElementaryTypeName","src":"8507:7:28","typeDescriptions":{}}},"id":10790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8507:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8490:27:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4167656e74206e6f7420666f756e64","id":10792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8519:17:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_69ca3bc381824e6c40df5d13177f15b3a20ad9875699c832e2615b92300e1933","typeString":"literal_string \"Agent not found\""},"value":"Agent not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_69ca3bc381824e6c40df5d13177f15b3a20ad9875699c832e2615b92300e1933","typeString":"literal_string \"Agent not found\""}],"id":10784,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8482:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8482:55:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10794,"nodeType":"ExpressionStatement","src":"8482:55:28"},{"expression":{"components":[{"expression":{"id":10795,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10779,"src":"8555:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10796,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8561:4:28","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":9935,"src":"8555:10:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":10797,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10779,"src":"8567:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10798,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8573:9:28","memberName":"agentName","nodeType":"MemberAccess","referencedDeclaration":9939,"src":"8567:15:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":10799,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10779,"src":"8584:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10800,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8590:13:28","memberName":"fundingTarget","nodeType":"MemberAccess","referencedDeclaration":9941,"src":"8584:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10801,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10779,"src":"8605:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10802,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8611:11:28","memberName":"totalRaised","nodeType":"MemberAccess","referencedDeclaration":9949,"src":"8605:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10803,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10779,"src":"8624:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10804,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8630:8:28","memberName":"isBonded","nodeType":"MemberAccess","referencedDeclaration":9947,"src":"8624:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":10805,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10779,"src":"8640:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10806,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8646:7:28","memberName":"creator","nodeType":"MemberAccess","referencedDeclaration":9945,"src":"8640:13:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":10807,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10779,"src":"8655:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10808,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8661:12:28","memberName":"tokenAddress","nodeType":"MemberAccess","referencedDeclaration":9951,"src":"8655:18:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":10809,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10779,"src":"8675:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10810,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8681:13:28","memberName":"lpPairAddress","nodeType":"MemberAccess","referencedDeclaration":9953,"src":"8675:19:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":10811,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10779,"src":"8696:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage_ptr","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage pointer"}},"id":10812,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8702:15:28","memberName":"agentConfigJSON","nodeType":"MemberAccess","referencedDeclaration":9955,"src":"8696:21:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"id":10813,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8554:164:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_storage_$_t_string_storage_$_t_uint256_$_t_uint256_$_t_bool_$_t_address_$_t_address_$_t_address_$_t_string_storage_$","typeString":"tuple(string storage ref,string storage ref,uint256,uint256,bool,address,address,address,string storage ref)"}},"functionReturnParameters":10776,"id":10814,"nodeType":"Return","src":"8547:171:28"}]},"functionSelector":"19a6a6e9","id":10816,"implemented":true,"kind":"function","modifiers":[],"name":"getAgentInfo","nameLocation":"8169:12:28","nodeType":"FunctionDefinition","parameters":{"id":10757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10756,"mutability":"mutable","name":"agentId","nameLocation":"8190:7:28","nodeType":"VariableDeclaration","scope":10816,"src":"8182:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10755,"name":"uint256","nodeType":"ElementaryTypeName","src":"8182:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8181:17:28"},"returnParameters":{"id":10776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10759,"mutability":"mutable","name":"name","nameLocation":"8236:4:28","nodeType":"VariableDeclaration","scope":10816,"src":"8222:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10758,"name":"string","nodeType":"ElementaryTypeName","src":"8222:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10761,"mutability":"mutable","name":"agentName","nameLocation":"8256:9:28","nodeType":"VariableDeclaration","scope":10816,"src":"8242:23:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10760,"name":"string","nodeType":"ElementaryTypeName","src":"8242:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10763,"mutability":"mutable","name":"fundingTarget","nameLocation":"8275:13:28","nodeType":"VariableDeclaration","scope":10816,"src":"8267:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10762,"name":"uint256","nodeType":"ElementaryTypeName","src":"8267:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10765,"mutability":"mutable","name":"totalRaised","nameLocation":"8298:11:28","nodeType":"VariableDeclaration","scope":10816,"src":"8290:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10764,"name":"uint256","nodeType":"ElementaryTypeName","src":"8290:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10767,"mutability":"mutable","name":"isBonded","nameLocation":"8316:8:28","nodeType":"VariableDeclaration","scope":10816,"src":"8311:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10766,"name":"bool","nodeType":"ElementaryTypeName","src":"8311:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":10769,"mutability":"mutable","name":"creator","nameLocation":"8334:7:28","nodeType":"VariableDeclaration","scope":10816,"src":"8326:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10768,"name":"address","nodeType":"ElementaryTypeName","src":"8326:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10771,"mutability":"mutable","name":"tokenAddress","nameLocation":"8351:12:28","nodeType":"VariableDeclaration","scope":10816,"src":"8343:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10770,"name":"address","nodeType":"ElementaryTypeName","src":"8343:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10773,"mutability":"mutable","name":"lpPairAddress","nameLocation":"8373:13:28","nodeType":"VariableDeclaration","scope":10816,"src":"8365:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10772,"name":"address","nodeType":"ElementaryTypeName","src":"8365:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10775,"mutability":"mutable","name":"agentConfigJSON","nameLocation":"8402:15:28","nodeType":"VariableDeclaration","scope":10816,"src":"8388:29:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10774,"name":"string","nodeType":"ElementaryTypeName","src":"8388:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8221:197:28"},"scope":10927,"src":"8160:565:28","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":10823,"nodeType":"Block","src":"8796:39:28","statements":[{"expression":{"id":10821,"name":"_agentIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9958,"src":"8813:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10820,"id":10822,"nodeType":"Return","src":"8806:22:28"}]},"functionSelector":"008c5504","id":10824,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentAgentId","nameLocation":"8744:17:28","nodeType":"FunctionDefinition","parameters":{"id":10817,"nodeType":"ParameterList","parameters":[],"src":"8761:2:28"},"returnParameters":{"id":10820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10824,"src":"8787:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10818,"name":"uint256","nodeType":"ElementaryTypeName","src":"8787:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8786:9:28"},"scope":10927,"src":"8735:100:28","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":10836,"nodeType":"Block","src":"8914:48:28","statements":[{"expression":{"expression":{"baseExpression":{"id":10831,"name":"agents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9963,"src":"8931:6:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AgentConfig_$9956_storage_$","typeString":"mapping(uint256 => struct AgentLaunchpadCoreV2Minimal.AgentConfig storage ref)"}},"id":10833,"indexExpression":{"id":10832,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10826,"src":"8938:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8931:15:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage ref"}},"id":10834,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8947:8:28","memberName":"isBonded","nodeType":"MemberAccess","referencedDeclaration":9947,"src":"8931:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10830,"id":10835,"nodeType":"Return","src":"8924:31:28"}]},"functionSelector":"ba39a1c5","id":10837,"implemented":true,"kind":"function","modifiers":[],"name":"isAgentBonded","nameLocation":"8854:13:28","nodeType":"FunctionDefinition","parameters":{"id":10827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10826,"mutability":"mutable","name":"agentId","nameLocation":"8876:7:28","nodeType":"VariableDeclaration","scope":10837,"src":"8868:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10825,"name":"uint256","nodeType":"ElementaryTypeName","src":"8868:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8867:17:28"},"returnParameters":{"id":10830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10837,"src":"8908:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10828,"name":"bool","nodeType":"ElementaryTypeName","src":"8908:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8907:6:28"},"scope":10927,"src":"8845:117:28","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":10849,"nodeType":"Block","src":"9047:53:28","statements":[{"expression":{"expression":{"baseExpression":{"id":10844,"name":"agents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9963,"src":"9064:6:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AgentConfig_$9956_storage_$","typeString":"mapping(uint256 => struct AgentLaunchpadCoreV2Minimal.AgentConfig storage ref)"}},"id":10846,"indexExpression":{"id":10845,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10839,"src":"9071:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9064:15:28","typeDescriptions":{"typeIdentifier":"t_struct$_AgentConfig_$9956_storage","typeString":"struct AgentLaunchpadCoreV2Minimal.AgentConfig storage ref"}},"id":10847,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9080:13:28","memberName":"lpPairAddress","nodeType":"MemberAccess","referencedDeclaration":9953,"src":"9064:29:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":10843,"id":10848,"nodeType":"Return","src":"9057:36:28"}]},"functionSelector":"a74498aa","id":10850,"implemented":true,"kind":"function","modifiers":[],"name":"getLiquidityPool","nameLocation":"8981:16:28","nodeType":"FunctionDefinition","parameters":{"id":10840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10839,"mutability":"mutable","name":"agentId","nameLocation":"9006:7:28","nodeType":"VariableDeclaration","scope":10850,"src":"8998:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10838,"name":"uint256","nodeType":"ElementaryTypeName","src":"8998:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8997:17:28"},"returnParameters":{"id":10843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10850,"src":"9038:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10841,"name":"address","nodeType":"ElementaryTypeName","src":"9038:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9037:9:28"},"scope":10927,"src":"8972:128:28","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":10861,"nodeType":"Block","src":"9208:53:28","statements":[{"expression":{"id":10859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10857,"name":"liquidityManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9983,"src":"9218:16:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10858,"name":"_liquidityManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10852,"src":"9237:17:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9218:36:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10860,"nodeType":"ExpressionStatement","src":"9218:36:28"}]},"functionSelector":"3c1624d4","id":10862,"implemented":true,"kind":"function","modifiers":[{"id":10855,"kind":"modifierInvocation","modifierName":{"id":10854,"name":"onlyOwner","nameLocations":["9198:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"9198:9:28"},"nodeType":"ModifierInvocation","src":"9198:9:28"}],"name":"setLiquidityManager","nameLocation":"9142:19:28","nodeType":"FunctionDefinition","parameters":{"id":10853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10852,"mutability":"mutable","name":"_liquidityManager","nameLocation":"9170:17:28","nodeType":"VariableDeclaration","scope":10862,"src":"9162:25:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10851,"name":"address","nodeType":"ElementaryTypeName","src":"9162:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9161:27:28"},"returnParameters":{"id":10856,"nodeType":"ParameterList","parameters":[],"src":"9208:0:28"},"scope":10927,"src":"9133:128:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10883,"nodeType":"Block","src":"9344:119:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10870,"name":"_treasuryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10864,"src":"9362:16:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":10873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9390:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9382:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10871,"name":"address","nodeType":"ElementaryTypeName","src":"9382:7:28","typeDescriptions":{}}},"id":10874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9382:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9362:30:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646472657373","id":10876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9394:17:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""},"value":"Invalid address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""}],"id":10869,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9354:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9354:58:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10878,"nodeType":"ExpressionStatement","src":"9354:58:28"},{"expression":{"id":10881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10879,"name":"treasuryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9981,"src":"9422:15:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10880,"name":"_treasuryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10864,"src":"9440:16:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9422:34:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10882,"nodeType":"ExpressionStatement","src":"9422:34:28"}]},"functionSelector":"6605bfda","id":10884,"implemented":true,"kind":"function","modifiers":[{"id":10867,"kind":"modifierInvocation","modifierName":{"id":10866,"name":"onlyOwner","nameLocations":["9334:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"9334:9:28"},"nodeType":"ModifierInvocation","src":"9334:9:28"}],"name":"setTreasuryAddress","nameLocation":"9280:18:28","nodeType":"FunctionDefinition","parameters":{"id":10865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10864,"mutability":"mutable","name":"_treasuryAddress","nameLocation":"9307:16:28","nodeType":"VariableDeclaration","scope":10884,"src":"9299:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10863,"name":"address","nodeType":"ElementaryTypeName","src":"9299:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9298:26:28"},"returnParameters":{"id":10868,"nodeType":"ParameterList","parameters":[],"src":"9344:0:28"},"scope":10927,"src":"9271:192:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10902,"nodeType":"Block","src":"9550:112:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10892,"name":"_feePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10886,"src":"9568:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31303030","id":10893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9586:4:28","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"9568:22:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46656520746f6f2068696768","id":10895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9592:14:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1","typeString":"literal_string \"Fee too high\""},"value":"Fee too high"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1","typeString":"literal_string \"Fee too high\""}],"id":10891,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9560:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9560:47:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10897,"nodeType":"ExpressionStatement","src":"9560:47:28"},{"expression":{"id":10900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10898,"name":"protocolFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9986,"src":"9617:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10899,"name":"_feePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10886,"src":"9641:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9617:38:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10901,"nodeType":"ExpressionStatement","src":"9617:38:28"}]},"functionSelector":"d8a5e936","id":10903,"implemented":true,"kind":"function","modifiers":[{"id":10889,"kind":"modifierInvocation","modifierName":{"id":10888,"name":"onlyOwner","nameLocations":["9540:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"9540:9:28"},"nodeType":"ModifierInvocation","src":"9540:9:28"}],"name":"setProtocolFeePercentage","nameLocation":"9482:24:28","nodeType":"FunctionDefinition","parameters":{"id":10887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10886,"mutability":"mutable","name":"_feePercentage","nameLocation":"9515:14:28","nodeType":"VariableDeclaration","scope":10903,"src":"9507:22:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10885,"name":"uint256","nodeType":"ElementaryTypeName","src":"9507:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9506:24:28"},"returnParameters":{"id":10890,"nodeType":"ParameterList","parameters":[],"src":"9550:0:28"},"scope":10927,"src":"9473:189:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10921,"nodeType":"Block","src":"9720:65:28","statements":[{"expression":{"arguments":[{"expression":{"arguments":[{"id":10916,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9764:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_AgentLaunchpadCoreV2Minimal_$10927","typeString":"contract AgentLaunchpadCoreV2Minimal"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AgentLaunchpadCoreV2Minimal_$10927","typeString":"contract AgentLaunchpadCoreV2Minimal"}],"id":10915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9756:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10914,"name":"address","nodeType":"ElementaryTypeName","src":"9756:7:28","typeDescriptions":{}}},"id":10917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9756:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9770:7:28","memberName":"balance","nodeType":"MemberAccess","src":"9756:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":10910,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"9738:5:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":10911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9738:7:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9730:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":10908,"name":"address","nodeType":"ElementaryTypeName","src":"9730:8:28","stateMutability":"payable","typeDescriptions":{}}},"id":10912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9730:16:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":10913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9747:8:28","memberName":"transfer","nodeType":"MemberAccess","src":"9730:25:28","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":10919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9730:48:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10920,"nodeType":"ExpressionStatement","src":"9730:48:28"}]},"functionSelector":"db2e21bc","id":10922,"implemented":true,"kind":"function","modifiers":[{"id":10906,"kind":"modifierInvocation","modifierName":{"id":10905,"name":"onlyOwner","nameLocations":["9710:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"9710:9:28"},"nodeType":"ModifierInvocation","src":"9710:9:28"}],"name":"emergencyWithdraw","nameLocation":"9681:17:28","nodeType":"FunctionDefinition","parameters":{"id":10904,"nodeType":"ParameterList","parameters":[],"src":"9698:2:28"},"returnParameters":{"id":10907,"nodeType":"ParameterList","parameters":[],"src":"9720:0:28"},"scope":10927,"src":"9672:113:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10925,"nodeType":"Block","src":"9822:2:28","statements":[]},"id":10926,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":10923,"nodeType":"ParameterList","parameters":[],"src":"9802:2:28"},"returnParameters":{"id":10924,"nodeType":"ParameterList","parameters":[],"src":"9822:0:28"},"scope":10927,"src":"9795:29:28","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":10928,"src":"394:9432:28","usedErrors":[13,18,2066],"usedEvents":[24,10003,10011,10019]}],"src":"32:9795:28"},"id":28},"contracts/AgentToken.sol":{"ast":{"absolutePath":"contracts/AgentToken.sol","exportedSymbols":{"AgentToken":[11516],"Checkpoints":[9636],"Context":[1932],"ECDSA":[4212],"EIP712":[4439],"ERC20":[1476],"ERC20Permit":[1708],"ERC20Votes":[1840],"IERC20":[1554],"IERC20Errors":[866],"IERC20Metadata":[1866],"IERC20Permit":[1902],"Nonces":[2000],"Ownable":[147],"ReentrancyGuard":[2121],"Votes":[773]},"id":11517,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":10929,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:29"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":10930,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11517,"sourceUnit":1477,"src":"58:55:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","id":10931,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11517,"sourceUnit":1841,"src":"114:71:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":10932,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11517,"sourceUnit":1709,"src":"186:72:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":10933,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11517,"sourceUnit":148,"src":"259:52:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":10934,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11517,"sourceUnit":2122,"src":"312:59:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"@openzeppelin/contracts/utils/Nonces.sol","id":10935,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11517,"sourceUnit":2001,"src":"372:50:29","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":10937,"name":"ERC20","nameLocations":["604:5:29"],"nodeType":"IdentifierPath","referencedDeclaration":1476,"src":"604:5:29"},"id":10938,"nodeType":"InheritanceSpecifier","src":"604:5:29"},{"baseName":{"id":10939,"name":"ERC20Votes","nameLocations":["611:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":1840,"src":"611:10:29"},"id":10940,"nodeType":"InheritanceSpecifier","src":"611:10:29"},{"baseName":{"id":10941,"name":"ERC20Permit","nameLocations":["623:11:29"],"nodeType":"IdentifierPath","referencedDeclaration":1708,"src":"623:11:29"},"id":10942,"nodeType":"InheritanceSpecifier","src":"623:11:29"},{"baseName":{"id":10943,"name":"Ownable","nameLocations":["636:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"636:7:29"},"id":10944,"nodeType":"InheritanceSpecifier","src":"636:7:29"},{"baseName":{"id":10945,"name":"ReentrancyGuard","nameLocations":["645:15:29"],"nodeType":"IdentifierPath","referencedDeclaration":2121,"src":"645:15:29"},"id":10946,"nodeType":"InheritanceSpecifier","src":"645:15:29"}],"canonicalName":"AgentToken","contractDependencies":[],"contractKind":"contract","documentation":{"id":10936,"nodeType":"StructuredDocumentation","src":"424:156:29","text":" @title AgentToken\n @dev ERC20 token representing ownership in an AI creative agent\n Features revenue distribution and governance capabilities"},"fullyImplemented":true,"id":11516,"internalFunctionIDs":{"750":1,"764":2},"linearizedBaseContracts":[11516,2121,147,1708,1840,773,809,230,824,2000,4439,798,1902,1476,866,1866,1554,1932],"name":"AgentToken","nameLocation":"590:10:29","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":10948,"mutability":"mutable","name":"_agentName","nameLocation":"720:10:29","nodeType":"VariableDeclaration","scope":11516,"src":"705:25:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":10947,"name":"string","nodeType":"ElementaryTypeName","src":"705:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":10950,"mutability":"mutable","name":"_archetype","nameLocation":"751:10:29","nodeType":"VariableDeclaration","scope":11516,"src":"736:25:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":10949,"name":"string","nodeType":"ElementaryTypeName","src":"736:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":10952,"mutability":"mutable","name":"_metadataURI","nameLocation":"782:12:29","nodeType":"VariableDeclaration","scope":11516,"src":"767:27:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":10951,"name":"string","nodeType":"ElementaryTypeName","src":"767:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":10954,"mutability":"mutable","name":"_agentConfigJSON","nameLocation":"815:16:29","nodeType":"VariableDeclaration","scope":11516,"src":"800:31:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":10953,"name":"string","nodeType":"ElementaryTypeName","src":"800:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"functionSelector":"bf2d9e0b","id":10956,"mutability":"mutable","name":"totalRevenue","nameLocation":"923:12:29","nodeType":"VariableDeclaration","scope":11516,"src":"908:27:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10955,"name":"uint256","nodeType":"ElementaryTypeName","src":"908:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"b20a6f36","id":10958,"mutability":"mutable","name":"totalDistributedRevenue","nameLocation":"956:23:29","nodeType":"VariableDeclaration","scope":11516,"src":"941:38:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10957,"name":"uint256","nodeType":"ElementaryTypeName","src":"941:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"139ba769","id":10962,"mutability":"mutable","name":"claimedRevenue","nameLocation":"1020:14:29","nodeType":"VariableDeclaration","scope":11516,"src":"985:49:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":10961,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":10959,"name":"address","nodeType":"ElementaryTypeName","src":"993:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"985:27:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":10960,"name":"uint256","nodeType":"ElementaryTypeName","src":"1004:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"id":10966,"mutability":"mutable","name":"lastClaimSnapshot","nameLocation":"1076:17:29","nodeType":"VariableDeclaration","scope":11516,"src":"1040:53:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":10965,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":10963,"name":"address","nodeType":"ElementaryTypeName","src":"1048:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1040:27:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":10964,"name":"uint256","nodeType":"ElementaryTypeName","src":"1059:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":true,"id":10969,"mutability":"constant","name":"PRECISION","nameLocation":"1179:9:29","nodeType":"VariableDeclaration","scope":11516,"src":"1154:41:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10967,"name":"uint256","nodeType":"ElementaryTypeName","src":"1154:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653138","id":10968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1191:4:29","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"visibility":"private"},{"constant":false,"functionSelector":"084278ec","id":10971,"mutability":"mutable","name":"revenuePerToken","nameLocation":"1216:15:29","nodeType":"VariableDeclaration","scope":11516,"src":"1201:30:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10970,"name":"uint256","nodeType":"ElementaryTypeName","src":"1201:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"881e1cff","id":10975,"mutability":"mutable","name":"authorizedRevenueSources","nameLocation":"1310:24:29","nodeType":"VariableDeclaration","scope":11516,"src":"1278:56:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":10974,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":10972,"name":"address","nodeType":"ElementaryTypeName","src":"1286:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1278:24:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":10973,"name":"bool","nodeType":"ElementaryTypeName","src":"1297:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"f3a9b3760e99454de4c494f7ed29f5204ab92febacb0acf52ea04ad4a9d22466","id":10981,"name":"RevenueDeposited","nameLocation":"1365:16:29","nodeType":"EventDefinition","parameters":{"id":10980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10977,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1390:6:29","nodeType":"VariableDeclaration","scope":10981,"src":"1382:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10976,"name":"uint256","nodeType":"ElementaryTypeName","src":"1382:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10979,"indexed":true,"mutability":"mutable","name":"source","nameLocation":"1414:6:29","nodeType":"VariableDeclaration","scope":10981,"src":"1398:22:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10978,"name":"address","nodeType":"ElementaryTypeName","src":"1398:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1381:40:29"},"src":"1359:63:29"},{"anonymous":false,"eventSelector":"c15f451120b13b6b40c6ad6203614ab3088308bef9150c0d6f46ea79bf464224","id":10987,"name":"RevenueClaimed","nameLocation":"1433:14:29","nodeType":"EventDefinition","parameters":{"id":10986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10983,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1464:4:29","nodeType":"VariableDeclaration","scope":10987,"src":"1448:20:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10982,"name":"address","nodeType":"ElementaryTypeName","src":"1448:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10985,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1478:6:29","nodeType":"VariableDeclaration","scope":10987,"src":"1470:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10984,"name":"uint256","nodeType":"ElementaryTypeName","src":"1470:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1447:38:29"},"src":"1427:59:29"},{"anonymous":false,"eventSelector":"1c306e70c05992619e2128ad1ef88df75f36c9476282e59f51401b2abaa42e4e","id":10991,"name":"MetadataUpdated","nameLocation":"1497:15:29","nodeType":"EventDefinition","parameters":{"id":10990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10989,"indexed":false,"mutability":"mutable","name":"newMetadataURI","nameLocation":"1520:14:29","nodeType":"VariableDeclaration","scope":10991,"src":"1513:21:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10988,"name":"string","nodeType":"ElementaryTypeName","src":"1513:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1512:23:29"},"src":"1491:45:29"},{"anonymous":false,"eventSelector":"732d2e87dcc1907685c097f7373a47d8c7cd8ef98b659b5f2d4272b26aab48a7","id":10995,"name":"AgentConfigUpdated","nameLocation":"1547:18:29","nodeType":"EventDefinition","parameters":{"id":10994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10993,"indexed":false,"mutability":"mutable","name":"newAgentConfigJSON","nameLocation":"1573:18:29","nodeType":"VariableDeclaration","scope":10995,"src":"1566:25:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10992,"name":"string","nodeType":"ElementaryTypeName","src":"1566:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1565:27:29"},"src":"1541:52:29"},{"anonymous":false,"eventSelector":"7390412ce304891b69b7a6d7722b373a8172b465ce957518d396801bc35e0872","id":11001,"name":"RevenueSourceAuthorized","nameLocation":"1604:23:29","nodeType":"EventDefinition","parameters":{"id":11000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10997,"indexed":true,"mutability":"mutable","name":"source","nameLocation":"1644:6:29","nodeType":"VariableDeclaration","scope":11001,"src":"1628:22:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10996,"name":"address","nodeType":"ElementaryTypeName","src":"1628:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10999,"indexed":false,"mutability":"mutable","name":"authorized","nameLocation":"1657:10:29","nodeType":"VariableDeclaration","scope":11001,"src":"1652:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10998,"name":"bool","nodeType":"ElementaryTypeName","src":"1652:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1627:41:29"},"src":"1598:71:29"},{"errorSelector":"02a1c5ba","id":11003,"name":"NoClaimableRevenue","nameLocation":"1699:18:29","nodeType":"ErrorDefinition","parameters":{"id":11002,"nodeType":"ParameterList","parameters":[],"src":"1717:2:29"},"src":"1693:27:29"},{"errorSelector":"614d358c","id":11005,"name":"UnauthorizedRevenueSource","nameLocation":"1731:25:29","nodeType":"ErrorDefinition","parameters":{"id":11004,"nodeType":"ParameterList","parameters":[],"src":"1756:2:29"},"src":"1725:34:29"},{"errorSelector":"eec403f0","id":11007,"name":"InvalidMetadataURI","nameLocation":"1770:18:29","nodeType":"ErrorDefinition","parameters":{"id":11006,"nodeType":"ParameterList","parameters":[],"src":"1788:2:29"},"src":"1764:27:29"},{"errorSelector":"3d9e4cad","id":11009,"name":"InvalidAgentConfig","nameLocation":"1802:18:29","nodeType":"ErrorDefinition","parameters":{"id":11008,"nodeType":"ParameterList","parameters":[],"src":"1820:2:29"},"src":"1796:27:29"},{"errorSelector":"90b8ec18","id":11011,"name":"TransferFailed","nameLocation":"1834:14:29","nodeType":"ErrorDefinition","parameters":{"id":11010,"nodeType":"ParameterList","parameters":[],"src":"1848:2:29"},"src":"1828:23:29"},{"body":{"id":11066,"nodeType":"Block","src":"2224:337:29","statements":[{"expression":{"id":11042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11040,"name":"_agentName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10948,"src":"2234:10:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11041,"name":"agentName_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11017,"src":"2247:10:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2234:23:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":11043,"nodeType":"ExpressionStatement","src":"2234:23:29"},{"expression":{"id":11046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11044,"name":"_archetype","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10950,"src":"2267:10:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11045,"name":"archetype_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11019,"src":"2280:10:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2267:23:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":11047,"nodeType":"ExpressionStatement","src":"2267:23:29"},{"expression":{"id":11050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11048,"name":"_metadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10952,"src":"2300:12:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11049,"name":"metadataURI_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11021,"src":"2315:12:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2300:27:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":11051,"nodeType":"ExpressionStatement","src":"2300:27:29"},{"expression":{"id":11054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11052,"name":"_agentConfigJSON","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10954,"src":"2337:16:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11053,"name":"agentConfigJSON_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11027,"src":"2356:16:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2337:35:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":11055,"nodeType":"ExpressionStatement","src":"2337:35:29"},{"expression":{"arguments":[{"id":11057,"name":"owner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11025,"src":"2456:6:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11058,"name":"totalSupply_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11023,"src":"2464:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11056,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"2450:5:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":11059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2450:27:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11060,"nodeType":"ExpressionStatement","src":"2450:27:29"},{"expression":{"arguments":[{"id":11062,"name":"owner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11025,"src":"2539:6:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11063,"name":"owner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11025,"src":"2547:6:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":11061,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"2529:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":11064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2529:25:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11065,"nodeType":"ExpressionStatement","src":"2529:25:29"}]},"id":11067,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":11030,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11013,"src":"2152:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":11031,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11015,"src":"2159:7:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":11032,"kind":"baseConstructorSpecifier","modifierName":{"id":11029,"name":"ERC20","nameLocations":["2146:5:29"],"nodeType":"IdentifierPath","referencedDeclaration":1476,"src":"2146:5:29"},"nodeType":"ModifierInvocation","src":"2146:21:29"},{"arguments":[{"id":11034,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11013,"src":"2189:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":11035,"kind":"baseConstructorSpecifier","modifierName":{"id":11033,"name":"ERC20Permit","nameLocations":["2177:11:29"],"nodeType":"IdentifierPath","referencedDeclaration":1708,"src":"2177:11:29"},"nodeType":"ModifierInvocation","src":"2177:18:29"},{"arguments":[{"id":11037,"name":"owner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11025,"src":"2212:6:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":11038,"kind":"baseConstructorSpecifier","modifierName":{"id":11036,"name":"Ownable","nameLocations":["2204:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2204:7:29"},"nodeType":"ModifierInvocation","src":"2204:15:29"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":11028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11013,"mutability":"mutable","name":"name_","nameLocation":"1896:5:29","nodeType":"VariableDeclaration","scope":11067,"src":"1882:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11012,"name":"string","nodeType":"ElementaryTypeName","src":"1882:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11015,"mutability":"mutable","name":"symbol_","nameLocation":"1925:7:29","nodeType":"VariableDeclaration","scope":11067,"src":"1911:21:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11014,"name":"string","nodeType":"ElementaryTypeName","src":"1911:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11017,"mutability":"mutable","name":"agentName_","nameLocation":"1956:10:29","nodeType":"VariableDeclaration","scope":11067,"src":"1942:24:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11016,"name":"string","nodeType":"ElementaryTypeName","src":"1942:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11019,"mutability":"mutable","name":"archetype_","nameLocation":"1990:10:29","nodeType":"VariableDeclaration","scope":11067,"src":"1976:24:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11018,"name":"string","nodeType":"ElementaryTypeName","src":"1976:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11021,"mutability":"mutable","name":"metadataURI_","nameLocation":"2024:12:29","nodeType":"VariableDeclaration","scope":11067,"src":"2010:26:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11020,"name":"string","nodeType":"ElementaryTypeName","src":"2010:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11023,"mutability":"mutable","name":"totalSupply_","nameLocation":"2054:12:29","nodeType":"VariableDeclaration","scope":11067,"src":"2046:20:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11022,"name":"uint256","nodeType":"ElementaryTypeName","src":"2046:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11025,"mutability":"mutable","name":"owner_","nameLocation":"2084:6:29","nodeType":"VariableDeclaration","scope":11067,"src":"2076:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11024,"name":"address","nodeType":"ElementaryTypeName","src":"2076:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11027,"mutability":"mutable","name":"agentConfigJSON_","nameLocation":"2114:16:29","nodeType":"VariableDeclaration","scope":11067,"src":"2100:30:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11026,"name":"string","nodeType":"ElementaryTypeName","src":"2100:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1872:264:29"},"returnParameters":{"id":11039,"nodeType":"ParameterList","parameters":[],"src":"2224:0:29"},"scope":11516,"src":"1861:700:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":11075,"nodeType":"Block","src":"2729:34:29","statements":[{"expression":{"id":11073,"name":"_agentName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10948,"src":"2746:10:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":11072,"id":11074,"nodeType":"Return","src":"2739:17:29"}]},"documentation":{"id":11068,"nodeType":"StructuredDocumentation","src":"2608:57:29","text":" @dev Returns the agent's creative name"},"functionSelector":"3c19804e","id":11076,"implemented":true,"kind":"function","modifiers":[],"name":"agentName","nameLocation":"2679:9:29","nodeType":"FunctionDefinition","parameters":{"id":11069,"nodeType":"ParameterList","parameters":[],"src":"2688:2:29"},"returnParameters":{"id":11072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11076,"src":"2714:13:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11070,"name":"string","nodeType":"ElementaryTypeName","src":"2714:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2713:15:29"},"scope":11516,"src":"2670:93:29","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":11084,"nodeType":"Block","src":"2934:34:29","statements":[{"expression":{"id":11082,"name":"_archetype","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10950,"src":"2951:10:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":11081,"id":11083,"nodeType":"Return","src":"2944:17:29"}]},"documentation":{"id":11077,"nodeType":"StructuredDocumentation","src":"2773:97:29","text":" @dev Returns the agent's archetype (e.g., \"Digital Painter\", \"Music Producer\")"},"functionSelector":"0e4b2285","id":11085,"implemented":true,"kind":"function","modifiers":[],"name":"archetype","nameLocation":"2884:9:29","nodeType":"FunctionDefinition","parameters":{"id":11078,"nodeType":"ParameterList","parameters":[],"src":"2893:2:29"},"returnParameters":{"id":11081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11085,"src":"2919:13:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11079,"name":"string","nodeType":"ElementaryTypeName","src":"2919:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2918:15:29"},"scope":11516,"src":"2875:93:29","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":11093,"nodeType":"Block","src":"3128:36:29","statements":[{"expression":{"id":11091,"name":"_metadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10952,"src":"3145:12:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":11090,"id":11092,"nodeType":"Return","src":"3138:19:29"}]},"documentation":{"id":11086,"nodeType":"StructuredDocumentation","src":"2978:84:29","text":" @dev Returns the metadata URI (IPFS hash containing agent config)"},"functionSelector":"03ee438c","id":11094,"implemented":true,"kind":"function","modifiers":[],"name":"metadataURI","nameLocation":"3076:11:29","nodeType":"FunctionDefinition","parameters":{"id":11087,"nodeType":"ParameterList","parameters":[],"src":"3087:2:29"},"returnParameters":{"id":11090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11094,"src":"3113:13:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11088,"name":"string","nodeType":"ElementaryTypeName","src":"3113:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3112:15:29"},"scope":11516,"src":"3067:97:29","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":11102,"nodeType":"Block","src":"3313:40:29","statements":[{"expression":{"id":11100,"name":"_agentConfigJSON","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10954,"src":"3330:16:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":11099,"id":11101,"nodeType":"Return","src":"3323:23:29"}]},"documentation":{"id":11095,"nodeType":"StructuredDocumentation","src":"3174:69:29","text":" @dev Returns the complete agent configuration JSON"},"functionSelector":"81a2b38f","id":11103,"implemented":true,"kind":"function","modifiers":[],"name":"agentConfigJSON","nameLocation":"3257:15:29","nodeType":"FunctionDefinition","parameters":{"id":11096,"nodeType":"ParameterList","parameters":[],"src":"3272:2:29"},"returnParameters":{"id":11099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11103,"src":"3298:13:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11097,"name":"string","nodeType":"ElementaryTypeName","src":"3298:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3297:15:29"},"scope":11516,"src":"3248:105:29","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":11130,"nodeType":"Block","src":"3503:168:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":11113,"name":"newMetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11106,"src":"3523:14:29","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":11112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3517:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":11111,"name":"bytes","nodeType":"ElementaryTypeName","src":"3517:5:29","typeDescriptions":{}}},"id":11114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3517:21:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":11115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3539:6:29","memberName":"length","nodeType":"MemberAccess","src":"3517:28:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":11116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3549:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3517:33:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11121,"nodeType":"IfStatement","src":"3513:66:29","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":11118,"name":"InvalidMetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11007,"src":"3559:18:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3559:20:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11120,"nodeType":"RevertStatement","src":"3552:27:29"}},{"expression":{"id":11124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11122,"name":"_metadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10952,"src":"3589:12:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11123,"name":"newMetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11106,"src":"3604:14:29","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"3589:29:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":11125,"nodeType":"ExpressionStatement","src":"3589:29:29"},{"eventCall":{"arguments":[{"id":11127,"name":"newMetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11106,"src":"3649:14:29","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":11126,"name":"MetadataUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10991,"src":"3633:15:29","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":11128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3633:31:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11129,"nodeType":"EmitStatement","src":"3628:36:29"}]},"documentation":{"id":11104,"nodeType":"StructuredDocumentation","src":"3363:60:29","text":" @dev Updates the metadata URI (onlyOwner)"},"functionSelector":"750521f5","id":11131,"implemented":true,"kind":"function","modifiers":[{"id":11109,"kind":"modifierInvocation","modifierName":{"id":11108,"name":"onlyOwner","nameLocations":["3493:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3493:9:29"},"nodeType":"ModifierInvocation","src":"3493:9:29"}],"name":"setMetadataURI","nameLocation":"3437:14:29","nodeType":"FunctionDefinition","parameters":{"id":11107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11106,"mutability":"mutable","name":"newMetadataURI","nameLocation":"3468:14:29","nodeType":"VariableDeclaration","scope":11131,"src":"3452:30:29","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11105,"name":"string","nodeType":"ElementaryTypeName","src":"3452:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3451:32:29"},"returnParameters":{"id":11110,"nodeType":"ParameterList","parameters":[],"src":"3503:0:29"},"scope":11516,"src":"3428:243:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11158,"nodeType":"Block","src":"3841:187:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":11141,"name":"newAgentConfigJSON","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11134,"src":"3861:18:29","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":11140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3855:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":11139,"name":"bytes","nodeType":"ElementaryTypeName","src":"3855:5:29","typeDescriptions":{}}},"id":11142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3855:25:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":11143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3881:6:29","memberName":"length","nodeType":"MemberAccess","src":"3855:32:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":11144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3891:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3855:37:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11149,"nodeType":"IfStatement","src":"3851:70:29","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":11146,"name":"InvalidAgentConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11009,"src":"3901:18:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3901:20:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11148,"nodeType":"RevertStatement","src":"3894:27:29"}},{"expression":{"id":11152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11150,"name":"_agentConfigJSON","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10954,"src":"3931:16:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11151,"name":"newAgentConfigJSON","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11134,"src":"3950:18:29","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"3931:37:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":11153,"nodeType":"ExpressionStatement","src":"3931:37:29"},{"eventCall":{"arguments":[{"id":11155,"name":"newAgentConfigJSON","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11134,"src":"4002:18:29","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":11154,"name":"AgentConfigUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10995,"src":"3983:18:29","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":11156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3983:38:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11157,"nodeType":"EmitStatement","src":"3978:43:29"}]},"documentation":{"id":11132,"nodeType":"StructuredDocumentation","src":"3681:72:29","text":" @dev Updates the agent configuration JSON (onlyOwner)"},"functionSelector":"d5f6aeb4","id":11159,"implemented":true,"kind":"function","modifiers":[{"id":11137,"kind":"modifierInvocation","modifierName":{"id":11136,"name":"onlyOwner","nameLocations":["3831:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3831:9:29"},"nodeType":"ModifierInvocation","src":"3831:9:29"}],"name":"setAgentConfigJSON","nameLocation":"3767:18:29","nodeType":"FunctionDefinition","parameters":{"id":11135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11134,"mutability":"mutable","name":"newAgentConfigJSON","nameLocation":"3802:18:29","nodeType":"VariableDeclaration","scope":11159,"src":"3786:34:29","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11133,"name":"string","nodeType":"ElementaryTypeName","src":"3786:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3785:36:29"},"returnParameters":{"id":11138,"nodeType":"ParameterList","parameters":[],"src":"3841:0:29"},"scope":11516,"src":"3758:270:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11217,"nodeType":"Block","src":"4287:537:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":11173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:37:29","subExpression":{"baseExpression":{"id":11163,"name":"authorizedRevenueSources","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10975,"src":"4302:24:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":11166,"indexExpression":{"expression":{"id":11164,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4327:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4331:6:29","memberName":"sender","nodeType":"MemberAccess","src":"4327:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4302:36:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":11172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":11168,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4342:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4346:6:29","memberName":"sender","nodeType":"MemberAccess","src":"4342:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":11170,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"4356:5:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":11171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4356:7:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4342:21:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4301:62:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11178,"nodeType":"IfStatement","src":"4297:127:29","trueBody":{"id":11177,"nodeType":"Block","src":"4365:59:29","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":11174,"name":"UnauthorizedRevenueSource","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11005,"src":"4386:25:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4386:27:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11176,"nodeType":"RevertStatement","src":"4379:34:29"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":11179,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4446:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4450:5:29","memberName":"value","nodeType":"MemberAccess","src":"4446:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4458:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4446:13:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11216,"nodeType":"IfStatement","src":"4442:376:29","trueBody":{"id":11215,"nodeType":"Block","src":"4461:357:29","statements":[{"expression":{"id":11186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11183,"name":"totalRevenue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10956,"src":"4475:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":11184,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4491:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4495:5:29","memberName":"value","nodeType":"MemberAccess","src":"4491:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4475:25:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11187,"nodeType":"ExpressionStatement","src":"4475:25:29"},{"assignments":[11189],"declarations":[{"constant":false,"id":11189,"mutability":"mutable","name":"supply","nameLocation":"4601:6:29","nodeType":"VariableDeclaration","scope":11215,"src":"4593:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11188,"name":"uint256","nodeType":"ElementaryTypeName","src":"4593:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11192,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":11190,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"4610:11:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":11191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4610:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4593:30:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11193,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11189,"src":"4641:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4650:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4641:10:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11207,"nodeType":"IfStatement","src":"4637:100:29","trueBody":{"id":11206,"nodeType":"Block","src":"4653:84:29","statements":[{"expression":{"id":11204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11196,"name":"revenuePerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10971,"src":"4671:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":11197,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4691:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4695:5:29","memberName":"value","nodeType":"MemberAccess","src":"4691:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":11199,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10969,"src":"4703:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4691:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":11201,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4690:23:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":11202,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11189,"src":"4716:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4690:32:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4671:51:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11205,"nodeType":"ExpressionStatement","src":"4671:51:29"}]}},{"eventCall":{"arguments":[{"expression":{"id":11209,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4785:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4789:5:29","memberName":"value","nodeType":"MemberAccess","src":"4785:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":11211,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4796:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4800:6:29","memberName":"sender","nodeType":"MemberAccess","src":"4796:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":11208,"name":"RevenueDeposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10981,"src":"4768:16:29","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":11213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4768:39:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11214,"nodeType":"EmitStatement","src":"4763:44:29"}]}}]},"documentation":{"id":11160,"nodeType":"StructuredDocumentation","src":"4081:158:29","text":" @dev Deposits revenue to be distributed among token holders\n Can be called by authorized sources (e.g., royalty contracts, licensing)"},"functionSelector":"44e43cb8","id":11218,"implemented":true,"kind":"function","modifiers":[],"name":"depositRevenue","nameLocation":"4253:14:29","nodeType":"FunctionDefinition","parameters":{"id":11161,"nodeType":"ParameterList","parameters":[],"src":"4267:2:29"},"returnParameters":{"id":11162,"nodeType":"ParameterList","parameters":[],"src":"4287:0:29"},"scope":11516,"src":"4244:580:29","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":11281,"nodeType":"Block","src":"4950:478:29","statements":[{"assignments":[11225],"declarations":[{"constant":false,"id":11225,"mutability":"mutable","name":"claimable","nameLocation":"4968:9:29","nodeType":"VariableDeclaration","scope":11281,"src":"4960:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11224,"name":"uint256","nodeType":"ElementaryTypeName","src":"4960:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11230,"initialValue":{"arguments":[{"expression":{"id":11227,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5000:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5004:6:29","memberName":"sender","nodeType":"MemberAccess","src":"5000:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11226,"name":"getClaimableRevenue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11318,"src":"4980:19:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":11229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4980:31:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4960:51:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11231,"name":"claimable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11225,"src":"5025:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":11232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5038:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5025:14:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11237,"nodeType":"IfStatement","src":"5021:47:29","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":11234,"name":"NoClaimableRevenue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11003,"src":"5048:18:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5048:20:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11236,"nodeType":"RevertStatement","src":"5041:27:29"}},{"expression":{"id":11243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11238,"name":"claimedRevenue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10962,"src":"5087:14:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":11241,"indexExpression":{"expression":{"id":11239,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5102:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5106:6:29","memberName":"sender","nodeType":"MemberAccess","src":"5102:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5087:26:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":11242,"name":"claimable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11225,"src":"5117:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5087:39:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11244,"nodeType":"ExpressionStatement","src":"5087:39:29"},{"expression":{"id":11250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11245,"name":"lastClaimSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10966,"src":"5136:17:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":11248,"indexExpression":{"expression":{"id":11246,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5154:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5158:6:29","memberName":"sender","nodeType":"MemberAccess","src":"5154:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5136:29:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11249,"name":"revenuePerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10971,"src":"5168:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5136:47:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11251,"nodeType":"ExpressionStatement","src":"5136:47:29"},{"expression":{"id":11254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11252,"name":"totalDistributedRevenue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10958,"src":"5193:23:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":11253,"name":"claimable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11225,"src":"5220:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5193:36:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11255,"nodeType":"ExpressionStatement","src":"5193:36:29"},{"assignments":[11257,null],"declarations":[{"constant":false,"id":11257,"mutability":"mutable","name":"success","nameLocation":"5254:7:29","nodeType":"VariableDeclaration","scope":11281,"src":"5249:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11256,"name":"bool","nodeType":"ElementaryTypeName","src":"5249:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":11268,"initialValue":{"arguments":[{"hexValue":"","id":11266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5310:2:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":11260,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5275:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5279:6:29","memberName":"sender","nodeType":"MemberAccess","src":"5275:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5267:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":11258,"name":"address","nodeType":"ElementaryTypeName","src":"5267:8:29","stateMutability":"payable","typeDescriptions":{}}},"id":11262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5267:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":11263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5287:4:29","memberName":"call","nodeType":"MemberAccess","src":"5267:24:29","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":11265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":11264,"name":"claimable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11225,"src":"5299:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5267:42:29","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":11267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5267:46:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5248:65:29"},{"condition":{"id":11270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5327:8:29","subExpression":{"id":11269,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11257,"src":"5328:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11274,"nodeType":"IfStatement","src":"5323:37:29","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":11271,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11011,"src":"5344:14:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5344:16:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11273,"nodeType":"RevertStatement","src":"5337:23:29"}},{"eventCall":{"arguments":[{"expression":{"id":11276,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5399:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5403:6:29","memberName":"sender","nodeType":"MemberAccess","src":"5399:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11278,"name":"claimable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11225,"src":"5411:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11275,"name":"RevenueClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10987,"src":"5384:14:29","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":11279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5384:37:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11280,"nodeType":"EmitStatement","src":"5379:42:29"}]},"documentation":{"id":11219,"nodeType":"StructuredDocumentation","src":"4834:65:29","text":" @dev Claims accumulated revenue for the caller"},"functionSelector":"564f4f76","id":11282,"implemented":true,"kind":"function","modifiers":[{"id":11222,"kind":"modifierInvocation","modifierName":{"id":11221,"name":"nonReentrant","nameLocations":["4937:12:29"],"nodeType":"IdentifierPath","referencedDeclaration":2085,"src":"4937:12:29"},"nodeType":"ModifierInvocation","src":"4937:12:29"}],"name":"claimRevenue","nameLocation":"4913:12:29","nodeType":"FunctionDefinition","parameters":{"id":11220,"nodeType":"ParameterList","parameters":[],"src":"4925:2:29"},"returnParameters":{"id":11223,"nodeType":"ParameterList","parameters":[],"src":"4950:0:29"},"scope":11516,"src":"4904:524:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11317,"nodeType":"Block","src":"5591:242:29","statements":[{"assignments":[11291],"declarations":[{"constant":false,"id":11291,"mutability":"mutable","name":"balance","nameLocation":"5609:7:29","nodeType":"VariableDeclaration","scope":11317,"src":"5601:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11290,"name":"uint256","nodeType":"ElementaryTypeName","src":"5601:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11295,"initialValue":{"arguments":[{"id":11293,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11285,"src":"5629:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11292,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"5619:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":11294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5619:18:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5601:36:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11296,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11291,"src":"5651:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":11297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5662:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5651:12:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11301,"nodeType":"IfStatement","src":"5647:26:29","trueBody":{"expression":{"hexValue":"30","id":11299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5672:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":11289,"id":11300,"nodeType":"Return","src":"5665:8:29"}},{"assignments":[11303],"declarations":[{"constant":false,"id":11303,"mutability":"mutable","name":"revenuePerTokenDiff","nameLocation":"5700:19:29","nodeType":"VariableDeclaration","scope":11317,"src":"5692:27:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11302,"name":"uint256","nodeType":"ElementaryTypeName","src":"5692:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11309,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11304,"name":"revenuePerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10971,"src":"5722:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":11305,"name":"lastClaimSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10966,"src":"5740:17:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":11307,"indexExpression":{"id":11306,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11285,"src":"5758:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5740:26:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5722:44:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5692:74:29"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11310,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11291,"src":"5784:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":11311,"name":"revenuePerTokenDiff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11303,"src":"5794:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5784:29:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":11313,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5783:31:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":11314,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10969,"src":"5817:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5783:43:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":11289,"id":11316,"nodeType":"Return","src":"5776:50:29"}]},"documentation":{"id":11283,"nodeType":"StructuredDocumentation","src":"5438:72:29","text":" @dev Returns claimable revenue for a specific address"},"functionSelector":"4f4dac6f","id":11318,"implemented":true,"kind":"function","modifiers":[],"name":"getClaimableRevenue","nameLocation":"5524:19:29","nodeType":"FunctionDefinition","parameters":{"id":11286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11285,"mutability":"mutable","name":"account","nameLocation":"5552:7:29","nodeType":"VariableDeclaration","scope":11318,"src":"5544:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11284,"name":"address","nodeType":"ElementaryTypeName","src":"5544:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5543:17:29"},"returnParameters":{"id":11289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11318,"src":"5582:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11287,"name":"uint256","nodeType":"ElementaryTypeName","src":"5582:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5581:9:29"},"scope":11516,"src":"5515:318:29","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":11330,"nodeType":"Block","src":"5993:52:29","statements":[{"expression":{"arguments":[{"id":11327,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11321,"src":"6030:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11326,"name":"getClaimableRevenue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11318,"src":"6010:19:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":11328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6010:28:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":11325,"id":11329,"nodeType":"Return","src":"6003:35:29"}]},"documentation":{"id":11319,"nodeType":"StructuredDocumentation","src":"5843:70:29","text":" @dev Returns total unclaimed revenue for an address"},"functionSelector":"9a6f99f9","id":11331,"implemented":true,"kind":"function","modifiers":[],"name":"unclaimedRevenue","nameLocation":"5927:16:29","nodeType":"FunctionDefinition","parameters":{"id":11322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11321,"mutability":"mutable","name":"account","nameLocation":"5952:7:29","nodeType":"VariableDeclaration","scope":11331,"src":"5944:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11320,"name":"address","nodeType":"ElementaryTypeName","src":"5944:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5943:17:29"},"returnParameters":{"id":11325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11324,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11331,"src":"5984:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11323,"name":"uint256","nodeType":"ElementaryTypeName","src":"5984:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5983:9:29"},"scope":11516,"src":"5918:127:29","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":11352,"nodeType":"Block","src":"6205:120:29","statements":[{"expression":{"id":11345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11341,"name":"authorizedRevenueSources","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10975,"src":"6215:24:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":11343,"indexExpression":{"id":11342,"name":"source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11334,"src":"6240:6:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6215:32:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11344,"name":"authorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11336,"src":"6250:10:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6215:45:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11346,"nodeType":"ExpressionStatement","src":"6215:45:29"},{"eventCall":{"arguments":[{"id":11348,"name":"source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11334,"src":"6299:6:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11349,"name":"authorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11336,"src":"6307:10:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":11347,"name":"RevenueSourceAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11001,"src":"6275:23:29","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":11350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6275:43:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11351,"nodeType":"EmitStatement","src":"6270:48:29"}]},"documentation":{"id":11332,"nodeType":"StructuredDocumentation","src":"6055:67:29","text":" @dev Authorizes or deauthorizes a revenue source"},"functionSelector":"1f454923","id":11353,"implemented":true,"kind":"function","modifiers":[{"id":11339,"kind":"modifierInvocation","modifierName":{"id":11338,"name":"onlyOwner","nameLocations":["6195:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"6195:9:29"},"nodeType":"ModifierInvocation","src":"6195:9:29"}],"name":"setRevenueSource","nameLocation":"6136:16:29","nodeType":"FunctionDefinition","parameters":{"id":11337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11334,"mutability":"mutable","name":"source","nameLocation":"6161:6:29","nodeType":"VariableDeclaration","scope":11353,"src":"6153:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11333,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11336,"mutability":"mutable","name":"authorized","nameLocation":"6174:10:29","nodeType":"VariableDeclaration","scope":11353,"src":"6169:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11335,"name":"bool","nodeType":"ElementaryTypeName","src":"6169:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6152:33:29"},"returnParameters":{"id":11340,"nodeType":"ParameterList","parameters":[],"src":"6205:0:29"},"scope":11516,"src":"6127:198:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1283,1795],"body":{"id":11414,"nodeType":"Block","src":"6530:483:29","statements":[{"expression":{"arguments":[{"id":11368,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11355,"src":"6554:4:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11369,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11357,"src":"6560:2:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11370,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11359,"src":"6564:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":11365,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"6540:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AgentToken_$11516_$","typeString":"type(contract super AgentToken)"}},"id":11367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6546:7:29","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1795,"src":"6540:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":11371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6540:31:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11372,"nodeType":"ExpressionStatement","src":"6540:31:29"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":11385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":11378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11373,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11355,"src":"6644:4:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":11376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":11375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6652:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11374,"name":"address","nodeType":"ElementaryTypeName","src":"6652:7:29","typeDescriptions":{}}},"id":11377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6644:18:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":11384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11379,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11357,"src":"6666:2:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":11382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6680:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":11381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6672:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11380,"name":"address","nodeType":"ElementaryTypeName","src":"6672:7:29","typeDescriptions":{}}},"id":11383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6672:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6666:16:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6644:38:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":11404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11399,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11357,"src":"6872:2:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":11402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6886:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":11401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6878:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11400,"name":"address","nodeType":"ElementaryTypeName","src":"6878:7:29","typeDescriptions":{}}},"id":11403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6878:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6872:16:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11412,"nodeType":"IfStatement","src":"6868:139:29","trueBody":{"id":11411,"nodeType":"Block","src":"6890:117:29","statements":[{"expression":{"id":11409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11405,"name":"lastClaimSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10966,"src":"6957:17:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":11407,"indexExpression":{"id":11406,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11357,"src":"6975:2:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6957:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11408,"name":"revenuePerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10971,"src":"6981:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6957:39:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11410,"nodeType":"ExpressionStatement","src":"6957:39:29"}]}},"id":11413,"nodeType":"IfStatement","src":"6640:367:29","trueBody":{"id":11398,"nodeType":"Block","src":"6684:178:29","statements":[{"expression":{"id":11390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11386,"name":"lastClaimSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10966,"src":"6757:17:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":11388,"indexExpression":{"id":11387,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11355,"src":"6775:4:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6757:23:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11389,"name":"revenuePerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10971,"src":"6783:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6757:41:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11391,"nodeType":"ExpressionStatement","src":"6757:41:29"},{"expression":{"id":11396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11392,"name":"lastClaimSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10966,"src":"6812:17:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":11394,"indexExpression":{"id":11393,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11357,"src":"6830:2:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6812:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11395,"name":"revenuePerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10971,"src":"6836:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6812:39:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11397,"nodeType":"ExpressionStatement","src":"6812:39:29"}]}}]},"id":11415,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6413:7:29","nodeType":"FunctionDefinition","overrides":{"id":11363,"nodeType":"OverrideSpecifier","overrides":[{"id":11361,"name":"ERC20","nameLocations":["6511:5:29"],"nodeType":"IdentifierPath","referencedDeclaration":1476,"src":"6511:5:29"},{"id":11362,"name":"ERC20Votes","nameLocations":["6518:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":1840,"src":"6518:10:29"}],"src":"6502:27:29"},"parameters":{"id":11360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11355,"mutability":"mutable","name":"from","nameLocation":"6438:4:29","nodeType":"VariableDeclaration","scope":11415,"src":"6430:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11354,"name":"address","nodeType":"ElementaryTypeName","src":"6430:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11357,"mutability":"mutable","name":"to","nameLocation":"6460:2:29","nodeType":"VariableDeclaration","scope":11415,"src":"6452:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11356,"name":"address","nodeType":"ElementaryTypeName","src":"6452:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11359,"mutability":"mutable","name":"amount","nameLocation":"6480:6:29","nodeType":"VariableDeclaration","scope":11415,"src":"6472:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11358,"name":"uint256","nodeType":"ElementaryTypeName","src":"6472:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6420:72:29"},"returnParameters":{"id":11364,"nodeType":"ParameterList","parameters":[],"src":"6530:0:29"},"scope":11516,"src":"6404:609:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1697,1959],"body":{"id":11430,"nodeType":"Block","src":"7122:43:29","statements":[{"expression":{"arguments":[{"id":11427,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11417,"src":"7152:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":11425,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7139:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AgentToken_$11516_$","typeString":"type(contract super AgentToken)"}},"id":11426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7145:6:29","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1697,"src":"7139:12:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":11428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7139:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":11424,"id":11429,"nodeType":"Return","src":"7132:26:29"}]},"functionSelector":"7ecebe00","id":11431,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"7032:6:29","nodeType":"FunctionDefinition","overrides":{"id":11421,"nodeType":"OverrideSpecifier","overrides":[{"id":11419,"name":"ERC20Permit","nameLocations":["7083:11:29"],"nodeType":"IdentifierPath","referencedDeclaration":1708,"src":"7083:11:29"},{"id":11420,"name":"Nonces","nameLocations":["7096:6:29"],"nodeType":"IdentifierPath","referencedDeclaration":2000,"src":"7096:6:29"}],"src":"7074:29:29"},"parameters":{"id":11418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11417,"mutability":"mutable","name":"owner","nameLocation":"7047:5:29","nodeType":"VariableDeclaration","scope":11431,"src":"7039:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11416,"name":"address","nodeType":"ElementaryTypeName","src":"7039:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7038:15:29"},"returnParameters":{"id":11424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11431,"src":"7113:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11422,"name":"uint256","nodeType":"ElementaryTypeName","src":"7113:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7112:9:29"},"scope":11516,"src":"7023:142:29","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":11464,"nodeType":"Block","src":"7325:173:29","statements":[{"assignments":[11438],"declarations":[{"constant":false,"id":11438,"mutability":"mutable","name":"balance","nameLocation":"7343:7:29","nodeType":"VariableDeclaration","scope":11464,"src":"7335:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11437,"name":"uint256","nodeType":"ElementaryTypeName","src":"7335:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11444,"initialValue":{"expression":{"arguments":[{"id":11441,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7361:4:29","typeDescriptions":{"typeIdentifier":"t_contract$_AgentToken_$11516","typeString":"contract AgentToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AgentToken_$11516","typeString":"contract AgentToken"}],"id":11440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7353:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11439,"name":"address","nodeType":"ElementaryTypeName","src":"7353:7:29","typeDescriptions":{}}},"id":11442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7353:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7367:7:29","memberName":"balance","nodeType":"MemberAccess","src":"7353:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7335:39:29"},{"assignments":[11446,null],"declarations":[{"constant":false,"id":11446,"mutability":"mutable","name":"success","nameLocation":"7390:7:29","nodeType":"VariableDeclaration","scope":11464,"src":"7385:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11445,"name":"bool","nodeType":"ElementaryTypeName","src":"7385:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":11457,"initialValue":{"arguments":[{"hexValue":"","id":11455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7441:2:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":11449,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"7411:5:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":11450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7411:7:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7403:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":11447,"name":"address","nodeType":"ElementaryTypeName","src":"7403:8:29","stateMutability":"payable","typeDescriptions":{}}},"id":11451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7403:16:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":11452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7420:4:29","memberName":"call","nodeType":"MemberAccess","src":"7403:21:29","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":11454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":11453,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11438,"src":"7432:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"7403:37:29","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":11456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7403:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7384:60:29"},{"condition":{"id":11459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7458:8:29","subExpression":{"id":11458,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11446,"src":"7459:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11463,"nodeType":"IfStatement","src":"7454:37:29","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":11460,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11011,"src":"7475:14:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7475:16:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11462,"nodeType":"RevertStatement","src":"7468:23:29"}}]},"documentation":{"id":11432,"nodeType":"StructuredDocumentation","src":"7207:65:29","text":" @dev Emergency withdrawal function (onlyOwner)"},"functionSelector":"db2e21bc","id":11465,"implemented":true,"kind":"function","modifiers":[{"id":11435,"kind":"modifierInvocation","modifierName":{"id":11434,"name":"onlyOwner","nameLocations":["7315:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"7315:9:29"},"nodeType":"ModifierInvocation","src":"7315:9:29"}],"name":"emergencyWithdraw","nameLocation":"7286:17:29","nodeType":"FunctionDefinition","parameters":{"id":11433,"nodeType":"ParameterList","parameters":[],"src":"7303:2:29"},"returnParameters":{"id":11436,"nodeType":"ParameterList","parameters":[],"src":"7325:0:29"},"scope":11516,"src":"7277:221:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11477,"nodeType":"Block","src":"7626:45:29","statements":[{"expression":{"expression":{"arguments":[{"id":11473,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7651:4:29","typeDescriptions":{"typeIdentifier":"t_contract$_AgentToken_$11516","typeString":"contract AgentToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AgentToken_$11516","typeString":"contract AgentToken"}],"id":11472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7643:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11471,"name":"address","nodeType":"ElementaryTypeName","src":"7643:7:29","typeDescriptions":{}}},"id":11474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7643:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7657:7:29","memberName":"balance","nodeType":"MemberAccess","src":"7643:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":11470,"id":11476,"nodeType":"Return","src":"7636:28:29"}]},"documentation":{"id":11466,"nodeType":"StructuredDocumentation","src":"7508:54:29","text":" @dev Returns contract's ETH balance"},"functionSelector":"8b7afe2e","id":11478,"implemented":true,"kind":"function","modifiers":[],"name":"contractBalance","nameLocation":"7576:15:29","nodeType":"FunctionDefinition","parameters":{"id":11467,"nodeType":"ParameterList","parameters":[],"src":"7591:2:29"},"returnParameters":{"id":11470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11469,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11478,"src":"7617:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11468,"name":"uint256","nodeType":"ElementaryTypeName","src":"7617:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7616:9:29"},"scope":11516,"src":"7567:104:29","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":11514,"nodeType":"Block","src":"8129:270:29","statements":[{"expression":{"components":[{"arguments":[],"expression":{"argumentTypes":[],"id":11500,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"8160:4:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":11501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8160:6:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":11502,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"8180:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":11503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8180:8:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":11504,"name":"_agentName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10948,"src":"8202:10:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"id":11505,"name":"_archetype","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10950,"src":"8226:10:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"id":11506,"name":"_metadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10952,"src":"8250:12:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"arguments":[],"expression":{"argumentTypes":[],"id":11507,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"8276:11:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":11508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8276:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11509,"name":"totalRevenue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10956,"src":"8303:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11510,"name":"totalDistributedRevenue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10958,"src":"8329:23:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11511,"name":"_agentConfigJSON","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10954,"src":"8366:16:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"id":11512,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8146:246:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_storage_$_t_string_storage_$_t_string_storage_$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_storage_$","typeString":"tuple(string memory,string memory,string storage ref,string storage ref,string storage ref,uint256,uint256,uint256,string storage ref)"}},"functionReturnParameters":11499,"id":11513,"nodeType":"Return","src":"8139:253:29"}]},"documentation":{"id":11479,"nodeType":"StructuredDocumentation","src":"7708:56:29","text":" @dev Returns comprehensive agent info"},"functionSelector":"4eea6d79","id":11515,"implemented":true,"kind":"function","modifiers":[],"name":"getAgentInfo","nameLocation":"7778:12:29","nodeType":"FunctionDefinition","parameters":{"id":11480,"nodeType":"ParameterList","parameters":[],"src":"7790:2:29"},"returnParameters":{"id":11499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11482,"mutability":"mutable","name":"name_","nameLocation":"7839:5:29","nodeType":"VariableDeclaration","scope":11515,"src":"7825:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11481,"name":"string","nodeType":"ElementaryTypeName","src":"7825:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11484,"mutability":"mutable","name":"symbol_","nameLocation":"7868:7:29","nodeType":"VariableDeclaration","scope":11515,"src":"7854:21:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11483,"name":"string","nodeType":"ElementaryTypeName","src":"7854:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11486,"mutability":"mutable","name":"agentName_","nameLocation":"7899:10:29","nodeType":"VariableDeclaration","scope":11515,"src":"7885:24:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11485,"name":"string","nodeType":"ElementaryTypeName","src":"7885:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11488,"mutability":"mutable","name":"archetype_","nameLocation":"7933:10:29","nodeType":"VariableDeclaration","scope":11515,"src":"7919:24:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11487,"name":"string","nodeType":"ElementaryTypeName","src":"7919:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11490,"mutability":"mutable","name":"metadataURI_","nameLocation":"7967:12:29","nodeType":"VariableDeclaration","scope":11515,"src":"7953:26:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11489,"name":"string","nodeType":"ElementaryTypeName","src":"7953:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11492,"mutability":"mutable","name":"totalSupply_","nameLocation":"7997:12:29","nodeType":"VariableDeclaration","scope":11515,"src":"7989:20:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11491,"name":"uint256","nodeType":"ElementaryTypeName","src":"7989:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11494,"mutability":"mutable","name":"totalRevenue_","nameLocation":"8027:13:29","nodeType":"VariableDeclaration","scope":11515,"src":"8019:21:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11493,"name":"uint256","nodeType":"ElementaryTypeName","src":"8019:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11496,"mutability":"mutable","name":"totalDistributedRevenue_","nameLocation":"8058:24:29","nodeType":"VariableDeclaration","scope":11515,"src":"8050:32:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11495,"name":"uint256","nodeType":"ElementaryTypeName","src":"8050:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11498,"mutability":"mutable","name":"agentConfigJSON_","nameLocation":"8106:16:29","nodeType":"VariableDeclaration","scope":11515,"src":"8092:30:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11497,"name":"string","nodeType":"ElementaryTypeName","src":"8092:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7815:313:29"},"scope":11516,"src":"7769:630:29","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":11517,"src":"581:7820:29","usedErrors":[13,18,155,281,288,836,841,846,855,860,865,1585,1592,1728,1942,2066,2135,2137,3875,3880,3885,6156,8063,11003,11005,11007,11009,11011],"usedEvents":[24,164,173,778,1488,1497,10981,10987,10991,10995,11001]}],"src":"32:8370:29"},"id":29}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":8,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}}}},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"IVotes":{"abi":[{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\",\"errors\":{\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"}},\"kind\":\"dev\",\"methods\":{\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":\"IVotes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/governance/utils/Votes.sol":{"Votes":{"abi":[{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"uint48","name":"clock","type":"uint48"}],"name":"ERC5805FutureLookup","type":"error"},{"inputs":[],"name":"ERC6372InconsistentClock","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"clock\",\"type\":\"uint48\"}],\"name\":\"ERC5805FutureLookup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC6372InconsistentClock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is a base abstract contract that tracks voting units, which are a measure of voting power that can be transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of \\\"representative\\\" that will pool delegated voting units from different accounts and can then use it to vote in decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative. This contract is often combined with a token contract such that voting units correspond to token units. For an example, see {ERC721Votes}. The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the cost of this history tracking optional. When using this module the derived contract must implement {_getVotingUnits} (for example, make it return {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the previous example, it would be included in {ERC721-_update}).\",\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC5805FutureLookup(uint256,uint48)\":[{\"details\":\"Lookup to future votes is not available.\"}],\"ERC6372InconsistentClock()\":[{\"details\":\"The clock was incorrectly modified.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Machine-readable description of the clock as specified in ERC-6372.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/utils/Votes.sol\":\"Votes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0x3f91c79d6f55db9e4fc36e1cfe6a483a7b0f5be60fecbd979555071673746d47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b1e3c64cbeb2757a2a1a45c69f7f3984a93b0eadd1016341b64f9d94f89d7c4\",\"dweb:/ipfs/QmP1Mj14U4vMTFa2rv2nodMbWSCov2ac9Md8W2aUcgYdKX\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x0c60057e7351874f086db8dc9291b7ada9ad62cb7725befd2991430d04a74572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33cdfd1fc36410d45046f88ff9864350146b194736c32834baa38d99b843ffbe\",\"dweb:/ipfs/QmdVmqgFKjgEBURy4KUwWDA6J1LEg1BKcHcXsx4nkeHAD2\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0x93ce66a307d66cb14e95dbc8f20641cedf48b2d060bf3bda431d62a4493e6e8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10d4122ee13fd8dcd2f468a86031665345d2dfdda76993d1f51201bdeb746f9d\",\"dweb:/ipfs/QmWxbbYEgyDCjwT4ZtNwujJwB4vdnR2qEKwL2Zrz9JoSDU\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0x36776530f012618bc7526ceb28e77b85e582cb12d9b9466a71d4bd6bf952e4cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f867d046908497287d8a67643dd5d7e38c4027af4ab0a74ffbe1d6790c383c6\",\"dweb:/ipfs/QmQ7s9gMP1nkwThFmoDifnGgpUMsMe5q5ZrAxGDsNnRGza\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":4249,"contract":"@openzeppelin/contracts/governance/utils/Votes.sol:Votes","label":"_nameFallback","offset":0,"slot":"0","type":"t_string_storage"},{"astId":4251,"contract":"@openzeppelin/contracts/governance/utils/Votes.sol:Votes","label":"_versionFallback","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1946,"contract":"@openzeppelin/contracts/governance/utils/Votes.sol:Votes","label":"_nonces","offset":0,"slot":"2","type":"t_mapping(t_address,t_uint256)"},{"astId":270,"contract":"@openzeppelin/contracts/governance/utils/Votes.sol:Votes","label":"_delegatee","offset":0,"slot":"3","type":"t_mapping(t_address,t_address)"},{"astId":275,"contract":"@openzeppelin/contracts/governance/utils/Votes.sol:Votes","label":"_delegateCheckpoints","offset":0,"slot":"4","type":"t_mapping(t_address,t_struct(Trace208)8592_storage)"},{"astId":278,"contract":"@openzeppelin/contracts/governance/utils/Votes.sol:Votes","label":"_totalCheckpoints","offset":0,"slot":"5","type":"t_struct(Trace208)8592_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(Checkpoint208)8597_storage)dyn_storage":{"base":"t_struct(Checkpoint208)8597_storage","encoding":"dynamic_array","label":"struct Checkpoints.Checkpoint208[]","numberOfBytes":"32"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_struct(Trace208)8592_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct Checkpoints.Trace208)","numberOfBytes":"32","value":"t_struct(Trace208)8592_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Checkpoint208)8597_storage":{"encoding":"inplace","label":"struct Checkpoints.Checkpoint208","members":[{"astId":8594,"contract":"@openzeppelin/contracts/governance/utils/Votes.sol:Votes","label":"_key","offset":0,"slot":"0","type":"t_uint48"},{"astId":8596,"contract":"@openzeppelin/contracts/governance/utils/Votes.sol:Votes","label":"_value","offset":6,"slot":"0","type":"t_uint208"}],"numberOfBytes":"32"},"t_struct(Trace208)8592_storage":{"encoding":"inplace","label":"struct Checkpoints.Trace208","members":[{"astId":8591,"contract":"@openzeppelin/contracts/governance/utils/Votes.sol:Votes","label":"_checkpoints","offset":0,"slot":"0","type":"t_array(t_struct(Checkpoint208)8597_storage)dyn_storage"}],"numberOfBytes":"32"},"t_uint208":{"encoding":"inplace","label":"uint208","numberOfBytes":"26"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint48":{"encoding":"inplace","label":"uint48","numberOfBytes":"6"}}}}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"IERC5805":{"abi":[{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5805.sol\":\"IERC5805\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"IERC6372":{"abi":[{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC6372.sol\":\"IERC6372\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":984,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":990,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":992,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":994,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":996,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC-20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x0c60057e7351874f086db8dc9291b7ada9ad62cb7725befd2991430d04a74572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33cdfd1fc36410d45046f88ff9864350146b194736c32834baa38d99b843ffbe\",\"dweb:/ipfs/QmdVmqgFKjgEBURy4KUwWDA6J1LEg1BKcHcXsx4nkeHAD2\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":984,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":990,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":992,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":994,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":996,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":4249,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_nameFallback","offset":0,"slot":"5","type":"t_string_storage"},{"astId":4251,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_versionFallback","offset":0,"slot":"6","type":"t_string_storage"},{"astId":1946,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_nonces","offset":0,"slot":"7","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ERC20Votes":{"abi":[{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"uint256","name":"increasedSupply","type":"uint256"},{"internalType":"uint256","name":"cap","type":"uint256"}],"name":"ERC20ExceededSafeSupply","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"uint48","name":"clock","type":"uint48"}],"name":"ERC5805FutureLookup","type":"error"},{"inputs":[],"name":"ERC6372InconsistentClock","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint48","name":"_key","type":"uint48"},{"internalType":"uint208","name":"_value","type":"uint208"}],"internalType":"struct Checkpoints.Checkpoint208","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkpoints(address,uint32)":"f1127ed8","clock()":"91ddadf4","decimals()":"313ce567","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededSafeSupply\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"clock\",\"type\":\"uint48\"}],\"name\":\"ERC5805FutureLookup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC6372InconsistentClock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"_key\",\"type\":\"uint48\"},{\"internalType\":\"uint208\",\"name\":\"_value\",\"type\":\"uint208\"}],\"internalType\":\"struct Checkpoints.Checkpoint208\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC-20 to support Compound-like voting and delegation. This version is more generic than Compound's, and supports token supply up to 2^208^ - 1, while COMP is limited to 2^96^ - 1. NOTE: This contract does not provide interface compatibility with Compound's COMP token. This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either by calling the {Votes-delegate} function directly, or by providing a signature to be used with {Votes-delegateBySig}. Voting power can be queried through the public accessors {Votes-getVotes} and {Votes-getPastVotes}. By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\",\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20ExceededSafeSupply(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded, introducing a risk of votes overflowing.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC5805FutureLookup(uint256,uint48)\":[{\"details\":\"Lookup to future votes is not available.\"}],\"ERC6372InconsistentClock()\":[{\"details\":\"The clock was incorrectly modified.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Machine-readable description of the clock as specified in ERC-6372.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":\"ERC20Votes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0x3f91c79d6f55db9e4fc36e1cfe6a483a7b0f5be60fecbd979555071673746d47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b1e3c64cbeb2757a2a1a45c69f7f3984a93b0eadd1016341b64f9d94f89d7c4\",\"dweb:/ipfs/QmP1Mj14U4vMTFa2rv2nodMbWSCov2ac9Md8W2aUcgYdKX\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x62dc9346044aabf22d78541bd495aa6ca05a7f5100aed26196ba35d40b59fcb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5221df4501c74cd4493fee1a0f0788e02c4dc78c3c601e9f557f557c5a53ea92\",\"dweb:/ipfs/QmZpzyYY9dKLrgvYhXSHT93jwqb1UGvtGNMQk5dpECY5pa\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x0c60057e7351874f086db8dc9291b7ada9ad62cb7725befd2991430d04a74572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33cdfd1fc36410d45046f88ff9864350146b194736c32834baa38d99b843ffbe\",\"dweb:/ipfs/QmdVmqgFKjgEBURy4KUwWDA6J1LEg1BKcHcXsx4nkeHAD2\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0x93ce66a307d66cb14e95dbc8f20641cedf48b2d060bf3bda431d62a4493e6e8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10d4122ee13fd8dcd2f468a86031665345d2dfdda76993d1f51201bdeb746f9d\",\"dweb:/ipfs/QmWxbbYEgyDCjwT4ZtNwujJwB4vdnR2qEKwL2Zrz9JoSDU\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0x36776530f012618bc7526ceb28e77b85e582cb12d9b9466a71d4bd6bf952e4cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f867d046908497287d8a67643dd5d7e38c4027af4ab0a74ffbe1d6790c383c6\",\"dweb:/ipfs/QmQ7s9gMP1nkwThFmoDifnGgpUMsMe5q5ZrAxGDsNnRGza\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":984,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol:ERC20Votes","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":990,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol:ERC20Votes","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":992,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol:ERC20Votes","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":994,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol:ERC20Votes","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":996,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol:ERC20Votes","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":4249,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol:ERC20Votes","label":"_nameFallback","offset":0,"slot":"5","type":"t_string_storage"},{"astId":4251,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol:ERC20Votes","label":"_versionFallback","offset":0,"slot":"6","type":"t_string_storage"},{"astId":1946,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol:ERC20Votes","label":"_nonces","offset":0,"slot":"7","type":"t_mapping(t_address,t_uint256)"},{"astId":270,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol:ERC20Votes","label":"_delegatee","offset":0,"slot":"8","type":"t_mapping(t_address,t_address)"},{"astId":275,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol:ERC20Votes","label":"_delegateCheckpoints","offset":0,"slot":"9","type":"t_mapping(t_address,t_struct(Trace208)8592_storage)"},{"astId":278,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol:ERC20Votes","label":"_totalCheckpoints","offset":0,"slot":"10","type":"t_struct(Trace208)8592_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(Checkpoint208)8597_storage)dyn_storage":{"base":"t_struct(Checkpoint208)8597_storage","encoding":"dynamic_array","label":"struct Checkpoints.Checkpoint208[]","numberOfBytes":"32"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_struct(Trace208)8592_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct Checkpoints.Trace208)","numberOfBytes":"32","value":"t_struct(Trace208)8592_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Checkpoint208)8597_storage":{"encoding":"inplace","label":"struct Checkpoints.Checkpoint208","members":[{"astId":8594,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol:ERC20Votes","label":"_key","offset":0,"slot":"0","type":"t_uint48"},{"astId":8596,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol:ERC20Votes","label":"_value","offset":6,"slot":"0","type":"t_uint208"}],"numberOfBytes":"32"},"t_struct(Trace208)8592_storage":{"encoding":"inplace","label":"struct Checkpoints.Trace208","members":[{"astId":8591,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol:ERC20Votes","label":"_checkpoints","offset":0,"slot":"0","type":"t_array(t_struct(Checkpoint208)8597_storage)dyn_storage"}],"numberOfBytes":"32"},"t_uint208":{"encoding":"inplace","label":"uint208","numberOfBytes":"26"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint48":{"encoding":"inplace","label":"uint48","numberOfBytes":"6"}}}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1946,"contract":"@openzeppelin/contracts/utils/Nonces.sol:Nonces","label":"_nonces","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760119081601d823930815050f35b600080fdfe600080fdfea164736f6c6343000814000a","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x11 SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"657:1315:15:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea164736f6c6343000814000a","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"657:1315:15:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":2063,"contract":"@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760119081601d823930815050f35b600080fdfe600080fdfea164736f6c6343000814000a","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x11 SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"1255:3046:17:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea164736f6c6343000814000a","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"1255:3046:17:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760119081601d823930815050f35b600080fdfe600080fdfea164736f6c6343000814000a","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x11 SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"1407:2774:18:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea164736f6c6343000814000a","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"1407:2774:18:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760119081601d823930815050f35b600080fdfe600080fdfea164736f6c6343000814000a","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x11 SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"297:18980:19:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea164736f6c6343000814000a","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"297:18980:19:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760119081601d823930815050f35b600080fdfe600080fdfea164736f6c6343000814000a","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x11 SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"344:7470:20:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea164736f6c6343000814000a","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"344:7470:20:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x0c60057e7351874f086db8dc9291b7ada9ad62cb7725befd2991430d04a74572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33cdfd1fc36410d45046f88ff9864350146b194736c32834baa38d99b843ffbe\",\"dweb:/ipfs/QmdVmqgFKjgEBURy4KUwWDA6J1LEg1BKcHcXsx4nkeHAD2\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":4249,"contract":"@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712","label":"_nameFallback","offset":0,"slot":"0","type":"t_string_storage"},{"astId":4251,"contract":"@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712","label":"_versionFallback","offset":0,"slot":"1","type":"t_string_storage"}],"types":{"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760119081601d823930815050f35b600080fdfe600080fdfea164736f6c6343000814000a","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x11 SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"521:3729:22:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea164736f6c6343000814000a","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"521:3729:22:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760119081601d823930815050f35b600080fdfe600080fdfea164736f6c6343000814000a","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x11 SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"281:31863:23:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea164736f6c6343000814000a","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"281:31863:23:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760119081601d823930815050f35b600080fdfe600080fdfea164736f6c6343000814000a","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x11 SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"769:34173:24:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea164736f6c6343000814000a","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"769:34173:24:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760119081601d823930815050f35b600080fdfe600080fdfea164736f6c6343000814000a","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x11 SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"258:2354:25:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea164736f6c6343000814000a","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"258:2354:25:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/structs/Checkpoints.sol":{"Checkpoints":{"abi":[{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760119081601d823930815050f35b600080fdfe600080fdfea164736f6c6343000814000a","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x11 SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"668:20759:26:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea164736f6c6343000814000a","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"668:20759:26:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library defines the `Trace*` struct, for checkpointing values as they change at different points in time, and later looking up past values by block number. See {Votes} as an example. To create a history of checkpoints define a variable type `Checkpoints.Trace*` in your contract, and store a new checkpoint for the current transaction block using the {push} function.\",\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":\"Checkpoints\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0x93ce66a307d66cb14e95dbc8f20641cedf48b2d060bf3bda431d62a4493e6e8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10d4122ee13fd8dcd2f468a86031665345d2dfdda76993d1f51201bdeb746f9d\",\"dweb:/ipfs/QmWxbbYEgyDCjwT4ZtNwujJwB4vdnR2qEKwL2Zrz9JoSDU\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/types/Time.sol":{"Time":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760119081601d823930815050f35b600080fdfe600080fdfea164736f6c6343000814000a","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x11 SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"640:4515:27:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea164736f6c6343000814000a","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"640:4515:27:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library provides helpers for manipulating time-related objects. It uses the following types: - `uint48` for timepoints - `uint32` for durations While the library doesn't provide specific types for timepoints and duration, it does provide: - a `Delay` type to represent duration that can be programmed to change value automatically at a given point - additional helper functions\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/types/Time.sol\":\"Time\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0x36776530f012618bc7526ceb28e77b85e582cb12d9b9466a71d4bd6bf952e4cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f867d046908497287d8a67643dd5d7e38c4027af4ab0a74ffbe1d6790c383c6\",\"dweb:/ipfs/QmQ7s9gMP1nkwThFmoDifnGgpUMsMe5q5ZrAxGDsNnRGza\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/AgentLaunchpadCoreV2Minimal.sol":{"AgentLaunchpadCoreV2Minimal":{"abi":[{"inputs":[{"internalType":"address","name":"_treasuryAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"agentId","type":"uint256"},{"indexed":true,"internalType":"address","name":"tokenAddress","type":"address"},{"indexed":true,"internalType":"address","name":"lpPairAddress","type":"address"}],"name":"AgentBonded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"agentId","type":"uint256"},{"indexed":true,"internalType":"address","name":"creator","type":"address"},{"indexed":false,"internalType":"address","name":"tokenAddress","type":"address"}],"name":"AgentCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"agentId","type":"uint256"},{"indexed":true,"internalType":"address","name":"contributor","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Contributed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"BASIS_POINTS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"agents","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"string","name":"agentName","type":"string"},{"internalType":"uint256","name":"fundingTarget","type":"uint256"},{"internalType":"uint256","name":"tokenSupply","type":"uint256"},{"internalType":"address","name":"creator","type":"address"},{"internalType":"bool","name":"isBonded","type":"bool"},{"internalType":"uint256","name":"totalRaised","type":"uint256"},{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"address","name":"lpPairAddress","type":"address"},{"internalType":"string","name":"agentConfigJSON","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"bondedAgentIds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"agentId","type":"uint256"}],"name":"contribute","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"contributions","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"string","name":"agentName","type":"string"},{"internalType":"string","name":"archetype","type":"string"},{"internalType":"string","name":"metadataURI","type":"string"},{"internalType":"uint256","name":"fundingTarget","type":"uint256"},{"internalType":"uint256","name":"tokenSupply","type":"uint256"},{"internalType":"string","name":"agentConfigJSON","type":"string"}],"name":"createAgent","outputs":[{"internalType":"uint256","name":"agentId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"defaultLiquidityPercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"defaultTokenLPPercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"}],"name":"getAgentByTokenAddress","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"agentId","type":"uint256"}],"name":"getAgentInfo","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"agentName","type":"string"},{"internalType":"uint256","name":"fundingTarget","type":"uint256"},{"internalType":"uint256","name":"totalRaised","type":"uint256"},{"internalType":"bool","name":"isBonded","type":"bool"},{"internalType":"address","name":"creator","type":"address"},{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"address","name":"lpPairAddress","type":"address"},{"internalType":"string","name":"agentConfigJSON","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllBondedTokens","outputs":[{"internalType":"address[]","name":"tokenAddresses","type":"address[]"},{"internalType":"string[]","name":"names","type":"string[]"},{"internalType":"string[]","name":"symbols","type":"string[]"},{"internalType":"address[]","name":"lpPairs","type":"address[]"},{"internalType":"uint256[]","name":"agentIds","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentAgentId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getInProgressAgents","outputs":[{"internalType":"uint256[]","name":"agentIds","type":"uint256[]"},{"internalType":"string[]","name":"agentNames","type":"string[]"},{"internalType":"uint256[]","name":"fundingTargets","type":"uint256[]"},{"internalType":"uint256[]","name":"totalRaised","type":"uint256[]"},{"internalType":"address[]","name":"tokenAddresses","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"agentId","type":"uint256"}],"name":"getLiquidityPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalCounts","outputs":[{"internalType":"uint256","name":"totalAgents","type":"uint256"},{"internalType":"uint256","name":"bondedAgents","type":"uint256"},{"internalType":"uint256","name":"inProgressAgents","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"inProgressAgentIds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"agentId","type":"uint256"}],"name":"isAgentBonded","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidityManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"protocolFeePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_liquidityManager","type":"address"}],"name":"setLiquidityManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_feePercentage","type":"uint256"}],"name":"setProtocolFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_treasuryAddress","type":"address"}],"name":"setTreasuryAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"tokenToAgentId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"treasuryAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 CALLVALUE PUSH2 0x11D JUMPI PUSH1 0x1F PUSH3 0x6D4D CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x122 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x11D JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0x11D JUMPI CALLER ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP2 CALLER DUP4 DUP3 AND OR PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD SWAP2 CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH2 0x12C PUSH1 0xA SSTORE PUSH2 0x1F40 PUSH1 0xB SSTORE PUSH2 0x2328 PUSH1 0xC SSTORE DUP3 ISZERO PUSH2 0xCF JUMPI POP PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE PUSH1 0x40 MLOAD PUSH2 0x6C14 SWAP1 DUP2 PUSH3 0x139 DUP3 CODECOPY RETURN JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E76616C6964207472656173757279 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH3 0x1F JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH3 0x1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH3 0x8C5504 EQ PUSH3 0x1D9A JUMPI POP DUP1 PUSH4 0x45AF334 EQ PUSH3 0x1D69 JUMPI DUP1 PUSH4 0x19A6A6E9 EQ PUSH3 0x1C48 JUMPI DUP1 PUSH4 0x1C18CE2E EQ PUSH3 0x1C1A JUMPI DUP1 PUSH4 0x33827438 EQ PUSH3 0x1BF1 JUMPI DUP1 PUSH4 0x3C1624D4 EQ PUSH3 0x1B93 JUMPI DUP1 PUSH4 0x3D891F59 EQ PUSH3 0x1B44 JUMPI DUP1 PUSH4 0x4DD03176 EQ PUSH3 0x19E7 JUMPI DUP1 PUSH4 0x513856C8 EQ PUSH3 0x1893 JUMPI DUP1 PUSH4 0x6605BFDA EQ PUSH3 0x17EA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH3 0x1775 JUMPI DUP1 PUSH4 0x754C5E89 EQ PUSH3 0xE40 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0xE17 JUMPI DUP1 PUSH4 0x8E50E509 EQ PUSH3 0xDF7 JUMPI DUP1 PUSH4 0x9A52878A EQ PUSH3 0x2D5 JUMPI DUP1 PUSH4 0xA74498AA EQ PUSH3 0xDBD JUMPI DUP1 PUSH4 0xA759C883 EQ PUSH3 0xC1F JUMPI DUP1 PUSH4 0xBA39A1C5 EQ PUSH3 0xBE6 JUMPI DUP1 PUSH4 0xBFD1769E EQ PUSH3 0xBC6 JUMPI DUP1 PUSH4 0xC1CBBCA7 EQ PUSH3 0x3EB JUMPI DUP1 PUSH4 0xC2161409 EQ PUSH3 0x3AF JUMPI DUP1 PUSH4 0xC5F956AF EQ PUSH3 0x386 JUMPI DUP1 PUSH4 0xD8A5E936 EQ PUSH3 0x313 JUMPI DUP1 PUSH4 0xDAB7706A EQ PUSH3 0x2D5 JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH3 0x27E JUMPI DUP1 PUSH4 0xE1F1C4A7 EQ PUSH3 0x25F JUMPI DUP1 PUSH4 0xE379DCAF EQ PUSH3 0x23F JUMPI PUSH4 0xF2FDE38B EQ PUSH3 0x17C JUMPI CODESIZE PUSH3 0x10 JUMP JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH3 0x199 PUSH3 0x1E98 JUMP JUMPDEST PUSH3 0x1A3 PUSH3 0x20EC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH3 0x209 JUMPI PUSH1 0x0 SLOAD DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0xB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x2710 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH3 0x29B PUSH3 0x20EC JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND SELFBALANCE SWAP1 DUP3 DUP3 ISZERO PUSH3 0x2CB JUMPI JUMPDEST CALL ISZERO PUSH3 0x2BF JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH3 0x2B6 JUMP JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH3 0x2FA PUSH3 0x1E98 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x4 CALLDATALOAD PUSH3 0x333 PUSH3 0x20EC JUMP JUMPDEST PUSH2 0x3E8 DUP2 GT PUSH3 0x342 JUMPI PUSH1 0xA SSTORE STOP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46656520746F6F20686967680000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH3 0x23A JUMPI PUSH3 0x3DD PUSH1 0x20 SWAP2 PUSH3 0x1E60 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 SWAP1 PUSH1 0x2 DUP3 SLOAD EQ PUSH3 0xB9C JUMPI PUSH1 0x2 DUP3 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 DUP1 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x5 DUP6 ADD SLOAD SWAP1 PUSH1 0xFF PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH3 0x43C DUP5 DUP3 AND ISZERO ISZERO PUSH3 0x21AD JUMP JUMPDEST PUSH1 0xA0 SHR AND PUSH3 0xB58 JUMPI CALLVALUE ISZERO PUSH3 0xB14 JUMPI PUSH1 0x6 SWAP3 DUP4 DUP8 ADD DUP2 PUSH3 0x460 CALLVALUE DUP4 SLOAD PUSH3 0x21F9 JUMP JUMPDEST SWAP9 ADD SWAP8 DUP9 SLOAD LT PUSH3 0xAD0 JUMPI DUP7 SWAP8 DUP7 PUSH1 0x0 MSTORE PUSH1 0x4 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH3 0x492 CALLVALUE DUP3 SLOAD PUSH3 0x21F9 JUMP JUMPDEST SWAP1 SSTORE PUSH3 0x4A1 CALLVALUE DUP4 SLOAD PUSH3 0x21F9 JUMP JUMPDEST DUP1 SWAP3 SSTORE PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE DUP8 PUSH32 0xB2ED2E021651F85A4754A44651FC09AC5141BC0329CE4DFE8DD712A5D04A8B39 DUP7 CALLER SWAP4 LOG3 SLOAD GT ISZERO PUSH3 0x4DD JUMPI DUP6 DUP1 SSTORE STOP JUMPDEST DUP5 PUSH1 0x0 MSTORE DUP1 DUP3 MSTORE PUSH3 0x539 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP6 DUP4 ADD SLOAD SWAP6 PUSH2 0x2710 SWAP7 DUP8 PUSH3 0x506 PUSH1 0xA SLOAD DUP4 PUSH3 0x2207 JUMP JUMPDEST DIV SWAP4 DUP2 PUSH3 0x533 DUP11 PUSH3 0x529 PUSH3 0x51F DUP10 DUP1 SWAP8 PUSH3 0x221B JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 PUSH3 0x2207 JUMP JUMPDEST DIV SWAP7 DUP8 SWAP3 PUSH3 0x221B JUMP JUMPDEST PUSH3 0x221B JUMP JUMPDEST SWAP3 PUSH1 0x5 DUP7 ADD SWAP3 PUSH21 0x10000000000000000000000000000000000000000 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 SLOAD AND OR DUP5 SSTORE DUP12 PUSH1 0x0 SWAP1 JUMPDEST PUSH3 0x9C2 JUMPI JUMPDEST POP POP POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 POP PUSH1 0x5 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH3 0x993 JUMPI DUP10 PUSH3 0x5BF DUP3 DUP14 PUSH3 0x5D7 SWAP5 ADD PUSH1 0x5 SSTORE PUSH3 0x1DF9 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x0 NOT DUP4 SLOAD SWAP2 PUSH1 0x3 SHL SWAP3 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP1 ISZERO DUP1 ISZERO PUSH3 0x965 JUMPI JUMPDEST POP POP DUP6 DUP3 ISZERO SWAP2 DUP3 ISZERO PUSH3 0x936 JUMPI JUMPDEST POP POP POP POP PUSH1 0x0 SWAP5 DUP5 PUSH1 0x9 SLOAD AND ISZERO ISZERO DUP1 PUSH3 0x92C JUMPI JUMPDEST ISZERO PUSH3 0x881 JUMPI PUSH1 0x4 DUP4 ADD SWAP2 PUSH3 0x67F DUP4 SLOAD SWAP3 PUSH3 0x624 PUSH1 0xC SLOAD DUP6 PUSH3 0x2207 JUMP JUMPDEST DIV SWAP2 PUSH1 0x7 DUP7 ADD DUP8 DUP10 DUP3 SLOAD AND SWAP6 DUP11 PUSH1 0x9 SLOAD AND PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP3 DUP4 SWAP3 PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB DUP2 PUSH1 0x0 DUP10 GAS CALL SWAP3 DUP4 ISZERO PUSH3 0x2BF JUMPI DUP9 SWAP4 PUSH3 0x85F JUMPI JUMPDEST POP DUP11 DUP10 DUP1 PUSH1 0x9 SLOAD AND SWAP3 SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0xA8F0AD4500000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP4 ADD MSTORE DUP2 PUSH3 0x6F6 PUSH1 0x84 DUP3 ADD PUSH1 0x9 DUP13 ADD PUSH3 0x1FDA JUMP JUMPDEST SUB SWAP3 GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH3 0x820 JUMPI JUMPDEST POP PUSH3 0x7E1 JUMPI POP PUSH1 0x8 SLOAD SWAP2 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP3 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 DUP5 SWAP1 DUP2 PUSH1 0x0 DUP2 PUSH1 0x44 DUP2 ADD SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH3 0x2BF JUMPI DUP5 SWAP4 PUSH1 0x7 SWAP4 PUSH3 0x7AC JUMPI JUMPDEST POP POP JUMPDEST ADD SLOAD AND SWAP2 AND SWAP2 PUSH32 0x6FB060DE3018A5BAB77159E4FF4939DEB91858DDB2995FB7BC9CDAC6552FA328 PUSH1 0x0 DUP1 LOG4 DUP1 DUP3 DUP1 DUP1 DUP1 DUP1 DUP6 DUP1 SSTORE STOP JUMPDEST DUP2 PUSH3 0x7D0 SWAP3 SWAP1 RETURNDATASIZE LT PUSH3 0x7D9 JUMPI JUMPDEST PUSH3 0x7C7 DUP2 DUP4 PUSH3 0x2097 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH3 0x2229 JUMP JUMPDEST POP DUP8 DUP1 PUSH3 0x773 JUMP JUMPDEST POP RETURNDATASIZE PUSH3 0x7BB JUMP JUMPDEST SWAP6 POP POP POP DUP3 SWAP2 POP PUSH1 0x7 SWAP1 DUP5 DUP4 PUSH1 0x8 DUP4 ADD SWAP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH3 0x776 JUMP JUMPDEST SWAP1 SWAP2 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH3 0x857 JUMPI JUMPDEST PUSH3 0x83B DUP2 DUP4 PUSH3 0x2097 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x23A JUMPI MLOAD DUP7 DUP2 AND DUP2 SUB PUSH3 0x23A JUMPI SWAP1 DUP11 PUSH3 0x704 JUMP JUMPDEST POP RETURNDATASIZE PUSH3 0x82F JUMP JUMPDEST PUSH3 0x879 SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH3 0x7D9 JUMPI PUSH3 0x7C7 DUP2 DUP4 PUSH3 0x2097 JUMP JUMPDEST POP DUP13 PUSH3 0x696 JUMP JUMPDEST POP POP SWAP1 DUP2 DUP2 DUP5 PUSH1 0x7 PUSH3 0x8EA SWAP6 ADD SLOAD AND DUP6 PUSH1 0x8 SLOAD AND SWAP1 PUSH1 0x4 DUP5 ADD SLOAD SWAP2 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 SWAP9 DUP2 SWAP6 DUP3 SWAP5 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH3 0x2BF JUMPI DUP5 SWAP4 PUSH1 0x7 SWAP4 PUSH3 0x909 JUMPI JUMPDEST POP POP PUSH3 0x776 JUMP JUMPDEST DUP2 PUSH3 0x923 SWAP3 SWAP1 RETURNDATASIZE LT PUSH3 0x7D9 JUMPI PUSH3 0x7C7 DUP2 DUP4 PUSH3 0x2097 JUMP JUMPDEST POP DUP8 DUP1 PUSH3 0x901 JUMP JUMPDEST POP DUP2 ISZERO ISZERO PUSH3 0x604 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP5 SWAP4 DUP5 SWAP4 DUP5 SWAP4 SLOAD AND SWAP1 DUP4 SWAP1 PUSH3 0x95B JUMPI JUMPDEST CALL ISZERO PUSH3 0x2BF JUMPI DUP8 DUP1 DUP6 DUP2 PUSH3 0x5EF JUMP JUMPDEST POP PUSH2 0x8FC PUSH3 0x94A JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 DUP12 PUSH1 0x8 SLOAD AND SWAP1 DUP4 SWAP1 PUSH3 0x989 JUMPI JUMPDEST CALL ISZERO PUSH3 0x2BF JUMPI DUP10 DUP1 PUSH3 0x5E1 JUMP JUMPDEST POP PUSH2 0x8FC PUSH3 0x97A JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 SLOAD DUP1 DUP3 LT ISZERO PUSH3 0xAC9 JUMPI DUP13 PUSH3 0x9D9 DUP4 PUSH3 0x1E60 JUMP JUMPDEST SWAP1 SLOAD SWAP1 DUP7 SHL SHR EQ PUSH3 0x9F8 JUMPI POP PUSH3 0x9F1 SWAP1 PUSH3 0x2131 JUMP JUMPDEST DUP13 PUSH3 0x581 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 SWAP11 SWAP12 SWAP13 POP PUSH1 0x0 NOT SWAP2 DUP3 DUP3 ADD SWAP2 DUP3 GT PUSH3 0xA9A JUMPI PUSH3 0x5BF PUSH3 0xA28 PUSH3 0xA35 SWAP4 PUSH3 0x1E60 JUMP JUMPDEST SWAP1 SLOAD SWAP1 DUP8 SHL SHR SWAP2 PUSH3 0x1E60 JUMP JUMPDEST DUP2 SLOAD DUP1 ISZERO PUSH3 0xA6B JUMPI DUP2 ADD SWAP3 PUSH3 0xA4C DUP5 PUSH3 0x1E60 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP3 SHL SHL NOT AND SWAP1 SSTORE SSTORE SWAP1 DUP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 DUP12 DUP1 DUP1 PUSH3 0x587 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH3 0x587 JUMP JUMPDEST PUSH1 0x64 DUP4 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746172676574000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2076616C7565000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920626F6E646564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0xC SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x5 SLOAD PUSH3 0xC40 DUP2 PUSH3 0x225C JUMP JUMPDEST SWAP1 PUSH3 0xC4C DUP2 PUSH3 0x2293 JUMP JUMPDEST PUSH3 0xC57 DUP3 PUSH3 0x2293 JUMP JUMPDEST PUSH3 0xC62 DUP4 PUSH3 0x225C JUMP JUMPDEST SWAP2 PUSH3 0xC6E DUP5 PUSH3 0x225C JUMP JUMPDEST SWAP4 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0xCE8 JUMPI PUSH3 0xCA8 DUP8 PUSH3 0xCE4 DUP9 PUSH3 0xCD5 DUP10 PUSH3 0xCC6 DUP11 PUSH3 0xCB7 DUP12 PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP10 PUSH1 0xA0 DUP12 MSTORE PUSH1 0xA0 DUP12 ADD SWAP1 PUSH3 0x1F45 JUMP JUMPDEST SWAP1 DUP10 DUP3 SUB PUSH1 0x20 DUP12 ADD MSTORE PUSH3 0x1EE5 JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x40 DUP10 ADD MSTORE PUSH3 0x1EE5 JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x60 DUP8 ADD MSTORE PUSH3 0x1F45 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x80 DUP6 ADD MSTORE PUSH3 0x1EAF JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 PUSH3 0xCF8 PUSH3 0xDB7 SWAP3 PUSH3 0x1DF9 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 DUP3 SHL SHR SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP12 PUSH3 0xD2C DUP7 DUP6 PUSH1 0x7 DUP6 ADD SLOAD AND SWAP3 PUSH3 0x22E4 JUMP JUMPDEST MSTORE PUSH1 0x40 MLOAD PUSH3 0xD49 DUP2 PUSH3 0xD41 DUP2 DUP6 PUSH3 0x1FDA JUMP JUMPDEST SUB DUP3 PUSH3 0x2097 JUMP JUMPDEST PUSH3 0xD55 DUP7 DUP11 PUSH3 0x22E4 JUMP JUMPDEST MSTORE PUSH3 0xD62 DUP6 DUP10 PUSH3 0x22E4 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xD7A DUP2 PUSH3 0xD41 DUP2 PUSH1 0x1 DUP7 ADD PUSH3 0x1FDA JUMP JUMPDEST PUSH3 0xD86 DUP7 DUP12 PUSH3 0x22E4 JUMP JUMPDEST MSTORE PUSH3 0xD93 DUP6 DUP11 PUSH3 0x22E4 JUMP JUMPDEST POP ADD SLOAD AND PUSH3 0xDA3 DUP4 DUP10 PUSH3 0x22E4 JUMP JUMPDEST MSTORE PUSH3 0xDB0 DUP3 DUP10 PUSH3 0x22E4 JUMP JUMPDEST MSTORE PUSH3 0x2131 JUMP JUMPDEST PUSH3 0xC72 JUMP JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x0 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH2 0x100 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH3 0x23A JUMPI PUSH3 0xE77 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0x20BB JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH3 0x23A JUMPI PUSH3 0xE9B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0x20BB JUMP JUMPDEST PUSH1 0x44 SWAP4 SWAP2 SWAP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH3 0x23A JUMPI PUSH3 0xEC1 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0x20BB JUMP JUMPDEST PUSH1 0x64 SWAP4 SWAP2 SWAP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH3 0x23A JUMPI PUSH3 0xEE7 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0x20BB JUMP JUMPDEST SWAP3 SWAP1 SWAP5 PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH3 0x23A JUMPI PUSH3 0xF0D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0x20BB JUMP JUMPDEST SWAP4 SWAP1 PUSH1 0xE4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH3 0x23A JUMPI PUSH3 0xF32 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0x20BB JUMP JUMPDEST SWAP6 SWAP1 SWAP7 PUSH1 0xA4 CALLDATALOAD ISZERO ISZERO DUP1 PUSH3 0x1769 JUMPI JUMPDEST ISZERO PUSH3 0x1725 JUMPI PUSH1 0x2 SLOAD SWAP10 PUSH3 0xF56 DUP12 PUSH3 0x2131 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x490E DUP2 ADD LT PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x490E DUP8 ADD GT OR PUSH3 0x993 JUMPI DUP5 SWAP4 PUSH3 0x1000 DUP16 SWAP4 DUP16 SWAP6 PUSH3 0xFE9 DUP16 PUSH3 0x1017 SWAP8 PUSH3 0xFD1 SWAP2 DUP16 PUSH3 0x103E SWAP12 PUSH3 0xFB9 SWAP2 PUSH2 0x100 DUP16 PUSH2 0x490E PUSH3 0x22FA DUP3 CODECOPY PUSH2 0x490E ADD DUP2 DUP2 MSTORE ADD SWAP2 PUSH3 0x2141 JUMP JUMPDEST SWAP2 DUP13 PUSH1 0x20 PUSH2 0x490E DUP3 ADD DUP6 SUB SWAP2 PUSH2 0x490E ADD ADD MSTORE PUSH3 0x2141 JUMP JUMPDEST PUSH2 0x490E DUP11 ADD DUP2 SUB PUSH1 0x40 PUSH2 0x490E DUP13 ADD ADD MSTORE DUP12 DUP14 PUSH3 0x2141 JUMP JUMPDEST SWAP2 PUSH2 0x490E DUP10 ADD DUP4 SUB PUSH1 0x60 PUSH2 0x490E DUP12 ADD ADD MSTORE PUSH3 0x2141 JUMP JUMPDEST SWAP2 PUSH2 0x490E DUP7 ADD DUP4 SUB PUSH1 0x80 PUSH2 0x490E DUP9 ADD ADD MSTORE PUSH3 0x2141 JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD PUSH2 0x490E DUP5 ADD PUSH1 0xA0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0xC0 DUP3 ADD MSTORE DUP1 DUP3 SUB PUSH1 0xE0 SWAP1 SWAP2 ADD MSTORE DUP8 DUP10 PUSH3 0x2141 JUMP JUMPDEST SUB SWAP1 PUSH1 0x0 CREATE SWAP8 DUP9 ISZERO PUSH3 0x2BF JUMPI PUSH1 0x40 MLOAD SWAP10 DUP11 PUSH2 0x160 DUP2 ADD LT PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x160 DUP14 ADD GT OR PUSH3 0x993 JUMPI PUSH3 0x10EE SWAP8 PUSH3 0x108E PUSH3 0x1098 SWAP4 PUSH3 0x10A5 SWAP8 PUSH2 0x160 DUP16 ADD PUSH1 0x40 MSTORE CALLDATASIZE SWAP2 PUSH3 0x2162 JUMP JUMPDEST DUP13 MSTORE CALLDATASIZE SWAP2 PUSH3 0x2162 JUMP JUMPDEST PUSH1 0x20 DUP11 ADD MSTORE CALLDATASIZE SWAP2 PUSH3 0x2162 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0x80 DUP8 ADD MSTORE CALLER PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0x0 PUSH1 0xE0 DUP8 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x100 DUP8 ADD MSTORE PUSH1 0x0 PUSH2 0x120 DUP8 ADD MSTORE CALLDATASIZE SWAP2 PUSH3 0x2162 JUMP JUMPDEST PUSH2 0x140 DUP5 ADD MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH3 0x993 JUMPI DUP2 SWAP1 PUSH3 0x1125 DUP5 SLOAD PUSH3 0x1F84 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x16D0 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x165F JUMPI PUSH1 0x0 SWAP3 PUSH3 0x1653 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR DUP2 SSTORE JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH3 0x993 JUMPI DUP2 SWAP1 PUSH3 0x1185 PUSH1 0x1 DUP6 ADD SLOAD PUSH3 0x1F84 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x15FB JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x1584 JUMPI PUSH1 0x0 SWAP3 PUSH3 0x1578 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP3 ADD SSTORE JUMPDEST PUSH1 0x40 DUP5 ADD MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH3 0x993 JUMPI PUSH3 0x11E6 PUSH1 0x2 DUP5 ADD SLOAD PUSH3 0x1F84 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x152C JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x14B1 JUMPI SWAP2 DUP1 PUSH2 0x140 SWAP5 SWAP3 PUSH1 0x9 SWAP5 PUSH1 0x0 SWAP3 PUSH3 0x14A5 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 DUP3 ADD SSTORE JUMPDEST PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP7 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0x5 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA0 DUP9 ADD MLOAD AND DUP2 SLOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000 PUSH21 0xFF0000000000000000000000000000000000000000 PUSH1 0xC0 DUP12 ADD MLOAD ISZERO ISZERO PUSH1 0xA0 SHL AND SWAP3 AND OR OR SWAP1 SSTORE PUSH1 0xE0 DUP7 ADD MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0x7 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 DUP9 ADD MLOAD AND SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP2 DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x8 DUP3 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x120 DUP10 ADD MLOAD AND SWAP1 DUP3 SLOAD AND OR SWAP1 SSTORE ADD SWAP4 ADD MLOAD SWAP3 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH3 0x993 JUMPI PUSH3 0x1320 DUP3 SLOAD PUSH3 0x1F84 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x1458 JUMPI JUMPDEST POP PUSH1 0x20 SWAP5 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH3 0x13ED JUMPI SWAP5 DUP2 SWAP3 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH3 0x13E1 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x6 SLOAD SWAP2 PUSH9 0x10000000000000000 DUP4 LT ISZERO PUSH3 0x993 JUMPI PUSH3 0x138C DUP3 PUSH3 0x5BF DUP6 PUSH1 0x1 PUSH1 0x20 SWAP8 ADD PUSH1 0x6 SSTORE PUSH3 0x1E60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 MSTORE PUSH1 0x7 DUP4 MSTORE DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE DUP2 PUSH32 0xE5E423600CEF64B5F4620E0388D75415036DA0DE388DA33D376934BE9B0BD392 DUP5 CALLER SWAP4 LOG3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST ADD MLOAD SWAP1 POP DUP6 DUP1 PUSH3 0x1349 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP6 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP9 DUP2 LT PUSH3 0x143F JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 SWAP9 LT PUSH3 0x1425 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0x135D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP6 DUP1 DUP1 PUSH3 0x1417 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH3 0x1400 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH3 0x149A JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0x148D JUMPI POP PUSH3 0x132A JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x147E JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH3 0x1475 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH3 0x1213 JUMP JUMPDEST SWAP1 PUSH1 0x2 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH3 0x1513 JUMPI POP SWAP3 PUSH2 0x140 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH1 0x9 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x14F9 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP3 ADD SSTORE PUSH3 0x122A JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH3 0x14E8 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH3 0x14C2 JUMP JUMPDEST PUSH1 0x2 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0x1570 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0x1563 JUMPI POP POP PUSH3 0x11F0 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x154B JUMP JUMPDEST POP DUP1 PUSH3 0x154B JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH3 0x11A8 JUMP JUMPDEST SWAP3 POP PUSH1 0x1 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH3 0x15DF JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x15C5 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP3 ADD SSTORE PUSH3 0x11BF JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH3 0x15B4 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x1597 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x1 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0x164B JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0x163B JUMPI POP POP PUSH3 0x118F JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH3 0x1623 JUMP JUMPDEST POP DUP1 PUSH3 0x161D JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH3 0x1148 JUMP JUMPDEST SWAP3 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH3 0x16B4 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x169A JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP2 SSTORE PUSH3 0x115C JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH3 0x168C JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x166F JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0x171D JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0x170D JUMPI POP POP PUSH3 0x112F JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH3 0x16F5 JUMP JUMPDEST POP DUP1 PUSH3 0x16EF JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420706172616D73000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0xC4 CALLDATALOAD ISZERO ISZERO PUSH3 0xF41 JUMP JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH3 0x1792 PUSH3 0x20EC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH3 0x180F PUSH3 0x1E98 JUMP JUMPDEST PUSH3 0x1819 PUSH3 0x20EC JUMP JUMPDEST AND DUP1 ISZERO PUSH3 0x184F JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH3 0x18C6 DUP2 DUP5 PUSH3 0x1FDA JUMP JUMPDEST SUB PUSH3 0x18D3 SWAP1 DUP3 PUSH3 0x2097 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH3 0x18E7 DUP2 PUSH1 0x1 DUP5 ADD PUSH3 0x1FDA JUMP JUMPDEST SUB PUSH3 0x18F4 SWAP1 DUP5 PUSH3 0x2097 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH3 0x1907 DUP2 PUSH1 0x2 DUP6 ADD PUSH3 0x1FDA JUMP JUMPDEST SUB PUSH3 0x1914 SWAP1 DUP3 PUSH3 0x2097 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD SWAP1 PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH1 0x7 DUP9 ADD SLOAD AND SWAP4 DUP2 PUSH1 0x8 DUP10 ADD SLOAD AND SWAP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x9 DUP2 SWAP12 ADD SWAP1 PUSH3 0x1957 SWAP2 PUSH3 0x1FDA JUMP JUMPDEST SUB PUSH3 0x1964 SWAP1 DUP11 PUSH3 0x2097 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 PUSH2 0x160 DUP1 DUP14 MSTORE DUP13 ADD PUSH3 0x197D SWAP2 PUSH3 0x1DB7 JUMP JUMPDEST DUP12 DUP2 SUB PUSH1 0x20 DUP14 ADD MSTORE PUSH3 0x1990 SWAP2 PUSH3 0x1DB7 JUMP JUMPDEST DUP11 DUP2 SUB PUSH1 0x40 DUP13 ADD MSTORE PUSH3 0x19A3 SWAP2 PUSH3 0x1DB7 JUMP JUMPDEST SWAP7 PUSH1 0x60 DUP11 ADD MSTORE PUSH1 0x80 DUP10 ADD MSTORE DUP2 AND PUSH1 0xA0 DUP9 ADD MSTORE PUSH1 0xA0 SHR PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH2 0x140 DUP5 ADD MSTORE PUSH3 0xCE4 SWAP2 PUSH3 0x1DB7 JUMP JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x6 DUP1 SLOAD SWAP1 PUSH3 0x1A0A DUP3 PUSH3 0x225C JUMP JUMPDEST SWAP1 PUSH3 0x1A16 DUP4 PUSH3 0x2293 JUMP JUMPDEST PUSH3 0x1A21 DUP5 PUSH3 0x225C JUMP JUMPDEST SWAP1 PUSH3 0x1A2D DUP6 PUSH3 0x225C JUMP JUMPDEST SWAP5 PUSH3 0x1A39 DUP2 PUSH3 0x225C JUMP JUMPDEST SWAP4 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH3 0x1AA0 JUMPI PUSH3 0xCA8 DUP8 PUSH3 0xCE4 DUP9 PUSH3 0x1A91 DUP13 PUSH3 0x1A82 DUP12 PUSH3 0x1A73 DUP13 PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP10 PUSH1 0xA0 DUP12 MSTORE PUSH1 0xA0 DUP12 ADD SWAP1 PUSH3 0x1EAF JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x40 DUP10 ADD MSTORE PUSH3 0x1EAF JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x60 DUP8 ADD MSTORE PUSH3 0x1EAF JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x80 DUP6 ADD MSTORE PUSH3 0x1F45 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x7 DUP10 PUSH3 0x1ABB PUSH3 0x1B3E SWAP6 PUSH3 0x1E60 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 DUP3 SHL SHR DUP1 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH3 0x1ADC DUP7 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP5 PUSH3 0x22E4 JUMP JUMPDEST MSTORE PUSH1 0x40 MLOAD PUSH3 0x1AF4 DUP2 PUSH3 0xD41 DUP2 PUSH1 0x2 DUP8 ADD PUSH3 0x1FDA JUMP JUMPDEST PUSH3 0x1B00 DUP7 DUP12 PUSH3 0x22E4 JUMP JUMPDEST MSTORE PUSH3 0x1B0D DUP6 DUP11 PUSH3 0x22E4 JUMP JUMPDEST POP DUP2 ADD SLOAD PUSH3 0x1B1D DUP6 DUP12 PUSH3 0x22E4 JUMP JUMPDEST MSTORE DUP1 DUP7 ADD SLOAD PUSH3 0x1B2E DUP6 DUP15 PUSH3 0x22E4 JUMP JUMPDEST MSTORE ADD SLOAD AND PUSH3 0xDB0 DUP3 DUP10 PUSH3 0x22E4 JUMP JUMPDEST PUSH3 0x1A3D JUMP JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 SWAP2 SUB PUSH3 0x23A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH3 0x1BB8 PUSH3 0x1E98 JUMP JUMPDEST PUSH3 0x1BC2 PUSH3 0x20EC JUMP JUMPDEST AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x9 SLOAD AND OR PUSH1 0x9 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x9 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH3 0x23A JUMPI PUSH3 0x3DD PUSH1 0x20 SWAP2 PUSH3 0x1DF9 JUMP JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH3 0x1D26 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH3 0xCE4 PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP2 AND SWAP3 PUSH3 0x1C94 DUP5 ISZERO ISZERO PUSH3 0x21AD JUMP JUMPDEST PUSH1 0x3 DUP7 ADD SLOAD SWAP4 PUSH1 0xFF PUSH1 0x6 DUP9 ADD SLOAD SWAP4 DUP4 PUSH1 0x7 DUP11 ADD SLOAD AND SWAP4 PUSH1 0x8 DUP11 ADD SLOAD AND SWAP5 PUSH3 0x1D35 PUSH1 0x40 MLOAD SWAP11 PUSH3 0x1CD2 DUP13 PUSH3 0x1CCA DUP2 DUP5 PUSH3 0x1FDA JUMP JUMPDEST SUB DUP14 PUSH3 0x2097 JUMP JUMPDEST PUSH3 0x1D10 PUSH1 0x40 MLOAD SWAP2 PUSH3 0x1CF6 DUP4 PUSH3 0x1CEE DUP2 PUSH1 0x2 DUP6 ADD PUSH3 0x1FDA JUMP JUMPDEST SUB DUP5 PUSH3 0x2097 JUMP JUMPDEST PUSH3 0x1D08 PUSH1 0x40 MLOAD DUP1 SWAP13 DUP2 SWAP4 ADD PUSH3 0x1FDA JUMP JUMPDEST SUB DUP11 PUSH3 0x2097 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP13 DUP14 PUSH2 0x120 SWAP1 DUP2 DUP2 MSTORE ADD SWAP1 PUSH3 0x1DB7 JUMP JUMPDEST DUP13 DUP2 SUB PUSH1 0x20 DUP15 ADD MSTORE SWAP1 PUSH3 0x1DB7 JUMP JUMPDEST SWAP8 PUSH1 0x40 DUP12 ADD MSTORE PUSH1 0x60 DUP11 ADD MSTORE PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x80 DUP9 ADD MSTORE PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD MSTORE DUP4 DUP3 SUB PUSH2 0x100 DUP6 ADD MSTORE PUSH3 0x1DB7 JUMP JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x60 PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH3 0x1DE4 JUMPI POP POP PUSH1 0x1F NOT PUSH1 0x1F DUP5 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP7 SWAP8 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH3 0x1DC2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH3 0x1E31 JUMPI PUSH1 0x5 PUSH1 0x0 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH3 0x1E31 JUMPI PUSH1 0x6 PUSH1 0x0 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x23A JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH3 0x1ED0 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH3 0x1EC1 JUMP JUMPDEST SWAP1 DUP1 DUP3 MLOAD SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 DUP1 SWAP2 ADD SWAP3 DUP2 DUP1 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP6 ADD SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH3 0x1F14 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH3 0x1F34 DUP4 PUSH1 0x1F NOT DUP7 PUSH1 0x1 SWAP7 SUB ADD DUP8 MSTORE DUP11 MLOAD PUSH3 0x1DB7 JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH3 0x1F03 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH3 0x1F66 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH3 0x1F57 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x1FCF JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x1FA0 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x1F94 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 SWAP2 DUP1 SLOAD SWAP2 PUSH3 0x1FED DUP4 PUSH3 0x1F84 JUMP JUMPDEST SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 SWAP4 DUP5 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH3 0x2054 JUMPI POP PUSH1 0x1 EQ PUSH3 0x2011 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP3 DUP4 PUSH1 0x0 KECCAK256 SWAP3 DUP5 PUSH1 0x0 SWAP5 JUMPDEST DUP4 DUP7 LT PUSH3 0x203F JUMPI POP POP POP POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH3 0x200B JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD DUP4 ADD MSTORE SWAP5 ADD SWAP4 DUP6 SWAP1 DUP3 ADD PUSH3 0x2026 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP5 SWAP6 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 SWAP2 SWAP4 POP AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH3 0x200B JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH1 0x1F NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH3 0x993 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH3 0x23A JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH3 0x23A JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH3 0x23A JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x0 SLOAD AND CALLER SUB PUSH3 0x2101 JUMPI JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH3 0xA9A JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 PUSH1 0x20 SWAP5 SWAP4 PUSH1 0x1F NOT SWAP4 DUP2 DUP7 MSTORE DUP7 DUP7 ADD CALLDATACOPY PUSH1 0x0 DUP6 DUP3 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH3 0x993 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH3 0x218F PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP5 ADD AND ADD DUP5 PUSH3 0x2097 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH3 0x23A JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST ISZERO PUSH3 0x21B5 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4167656E74206E6F7420666F756E640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH3 0xA9A JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH3 0xA9A JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH3 0xA9A JUMPI JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH3 0x23A JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH3 0x23A JUMPI SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH3 0x993 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH3 0x2268 DUP3 PUSH3 0x2243 JUMP JUMPDEST PUSH3 0x2277 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH3 0x2097 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x1F NOT PUSH3 0x2289 DUP3 SWAP5 PUSH3 0x2243 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH3 0x229F DUP3 PUSH3 0x2243 JUMP JUMPDEST PUSH3 0x22AE PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH3 0x2097 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x1F NOT PUSH3 0x22C0 DUP3 SWAP5 PUSH3 0x2243 JUMP JUMPDEST ADD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH3 0x22D2 JUMPI POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x60 PUSH1 0x20 DUP1 SWAP4 DUP6 ADD ADD MSTORE ADD PUSH3 0x22C5 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH3 0x1E31 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP INVALID PUSH2 0x160 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x142 JUMPI PUSH3 0x490E SWAP1 DUP2 CODESIZE SUB DUP1 SWAP3 PUSH3 0x21 DUP3 PUSH3 0x15D JUMP JUMPDEST DUP3 CODECOPY DUP2 DUP2 ADD SWAP1 PUSH2 0x100 DUP1 SWAP4 SLT PUSH3 0x142 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 SWAP1 DUP4 DUP2 GT PUSH3 0x142 JUMPI DUP2 PUSH3 0x54 SWAP2 DUP5 ADD PUSH3 0x1DB JUMP JUMPDEST SWAP2 PUSH2 0x180 MLOAD DUP5 DUP2 GT PUSH3 0x142 JUMPI DUP3 PUSH3 0x6F SWAP2 DUP4 ADD PUSH3 0x1DB JUMP JUMPDEST PUSH2 0x1A0 MLOAD DUP6 DUP2 GT PUSH3 0x142 JUMPI DUP4 PUSH3 0x89 SWAP2 DUP5 ADD PUSH3 0x1DB JUMP JUMPDEST PUSH2 0x1C0 MLOAD DUP7 DUP2 GT PUSH3 0x142 JUMPI DUP5 PUSH3 0xA3 SWAP2 DUP6 ADD PUSH3 0x1DB JUMP JUMPDEST SWAP1 PUSH2 0x1E0 MLOAD DUP8 DUP2 GT PUSH3 0x142 JUMPI DUP6 PUSH3 0xBE SWAP2 DUP7 ADD PUSH3 0x1DB JUMP JUMPDEST SWAP3 PUSH2 0x200 MLOAD SWAP5 PUSH3 0xCE PUSH3 0x241 JUMP JUMPDEST SWAP7 PUSH2 0x240 MLOAD SWAP10 DUP11 GT PUSH3 0x142 JUMPI PUSH3 0xF3 SWAP10 PUSH3 0xEC SWAP3 ADD PUSH3 0x1DB JUMP JUMPDEST SWAP7 PUSH3 0xA1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31BF SWAP2 DUP3 PUSH3 0x170F DUP4 CODECOPY PUSH1 0x80 MLOAD DUP3 PUSH2 0x255C ADD MSTORE PUSH1 0xA0 MLOAD DUP3 PUSH2 0x2617 ADD MSTORE PUSH1 0xC0 MLOAD DUP3 PUSH2 0x252D ADD MSTORE PUSH1 0xE0 MLOAD DUP3 PUSH2 0x25AB ADD MSTORE MLOAD DUP2 PUSH2 0x25D1 ADD MSTORE PUSH2 0x120 MLOAD DUP2 PUSH2 0xF51 ADD MSTORE PUSH2 0x140 MLOAD DUP2 PUSH2 0xF7A ADD MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH2 0x160 SWAP1 DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH3 0x183 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH3 0x147 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x183 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH3 0x1B4 DUP3 PUSH3 0x189 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH3 0x1CA JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x1B9 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH3 0x142 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 DUP3 GT PUSH3 0x183 JUMPI PUSH1 0x40 MLOAD SWAP4 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP6 ADD SWAP1 DUP2 GT DUP6 DUP3 LT OR PUSH3 0x183 JUMPI PUSH1 0x40 MSTORE DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH3 0x142 JUMPI PUSH3 0x23E SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH3 0x1B6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x220 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x142 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x28B JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x275 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x269 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x2A3 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x3 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH3 0x2E4 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x2D8 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2CB JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH3 0x2C2 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x2FC JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x4 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH3 0x33D JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x331 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x324 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH3 0x31B JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x355 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xD DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH3 0x396 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x38A JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x37D JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH3 0x374 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x3AE JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xE DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH3 0x3EF JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x3E3 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x3D6 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH3 0x3CD JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x407 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xF DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH3 0x448 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x43C JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x42F JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH3 0x426 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x460 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x10 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH3 0x4A1 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x495 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x488 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH3 0x47F JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x4B9 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x5 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH3 0x4FA JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x4EE JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x4E1 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH3 0x4D8 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x512 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x6 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH3 0x553 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x547 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x53A JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH3 0x531 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x183 JUMPI PUSH3 0x58A DUP2 PUSH3 0x584 PUSH1 0x4 SLOAD PUSH3 0x259 JUMP JUMPDEST PUSH3 0x2EF JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x5C9 JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH3 0x5BD JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x5A6 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP4 AND SWAP5 SWAP1 SWAP2 SWAP1 PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH3 0x638 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH3 0x61E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x613 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH3 0x5FD JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x183 JUMPI PUSH3 0x67D DUP2 PUSH3 0x677 PUSH1 0xD SLOAD PUSH3 0x259 JUMP JUMPDEST PUSH3 0x348 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x6BC JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH3 0x6B0 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xD SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x699 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP4 AND SWAP5 SWAP1 SWAP2 SWAP1 PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH3 0x72B JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH3 0x711 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xD SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x706 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH3 0x6F0 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x183 JUMPI PUSH3 0x770 DUP2 PUSH3 0x76A PUSH1 0xE SLOAD PUSH3 0x259 JUMP JUMPDEST PUSH3 0x3A1 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x7AF JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH3 0x7A3 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xE SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x78C JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP4 AND SWAP5 SWAP1 SWAP2 SWAP1 PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH3 0x81E JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH3 0x804 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xE SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x7F9 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH3 0x7E3 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x183 JUMPI PUSH3 0x863 DUP2 PUSH3 0x85D PUSH1 0xF SLOAD PUSH3 0x259 JUMP JUMPDEST PUSH3 0x3FA JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x8A2 JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH3 0x896 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xF SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x87F JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP4 AND SWAP5 SWAP1 SWAP2 SWAP1 PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH3 0x911 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH3 0x8F7 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xF SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x8EC JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH3 0x8D6 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x183 JUMPI PUSH3 0x956 DUP2 PUSH3 0x950 PUSH1 0x10 SLOAD PUSH3 0x259 JUMP JUMPDEST PUSH3 0x453 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x995 JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH3 0x989 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x10 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x972 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP4 AND SWAP5 SWAP1 SWAP2 SWAP1 PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH3 0xA04 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH3 0x9EA JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x10 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x9DF JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH3 0x9C9 JUMP JUMPDEST SWAP7 SWAP2 SWAP3 SWAP7 SWAP5 SWAP4 SWAP5 PUSH1 0x40 MLOAD SWAP1 PUSH3 0xA33 DUP3 PUSH3 0x189 JUMP JUMPDEST PUSH1 0x1 DUP1 DUP4 MSTORE PUSH1 0x20 SWAP1 DUP2 DUP5 ADD SWAP5 PUSH1 0x31 PUSH1 0xF8 SHL DUP7 MSTORE DUP4 MLOAD PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x183 JUMPI PUSH3 0xA6E DUP2 PUSH3 0xA68 PUSH1 0x3 SLOAD PUSH3 0x259 JUMP JUMPDEST PUSH3 0x296 JUMP JUMPDEST DUP4 SWAP3 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH3 0xB72 JUMPI DUP2 DUP1 SWAP2 PUSH3 0xAA4 SWAP6 PUSH1 0x0 SWAP4 PUSH3 0xB66 JUMPI JUMPDEST POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE PUSH3 0x55E JUMP JUMPDEST PUSH3 0xAAF DUP3 PUSH3 0x1015 JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH3 0xABE DUP4 PUSH3 0x1125 JUMP JUMPDEST PUSH2 0x140 MSTORE DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH1 0xE0 MSTORE MLOAD SWAP1 KECCAK256 PUSH2 0x100 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH3 0xADF PUSH3 0x12A4 JUMP JUMPDEST PUSH1 0x80 MSTORE ADDRESS PUSH1 0xC0 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH3 0xB4D JUMPI PUSH3 0xB39 PUSH3 0xB46 SWAP5 PUSH3 0xB33 PUSH3 0x1B4 SWAP9 PUSH3 0xB2D PUSH3 0xB3F SWAP7 PUSH3 0xB1C DUP12 PUSH3 0xBFE JUMP JUMPDEST PUSH3 0xB27 PUSH1 0x1 PUSH1 0xC SSTORE JUMP JUMPDEST PUSH3 0x651 JUMP JUMPDEST PUSH3 0x744 JUMP JUMPDEST PUSH3 0x837 JUMP JUMPDEST PUSH3 0x92A JUMP JUMPDEST DUP3 PUSH3 0xF27 JUMP JUMPDEST DUP1 PUSH3 0xC47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP9 ADD MLOAD SWAP3 POP CODESIZE PUSH3 0xA8D JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE SWAP2 SWAP3 PUSH1 0x1F NOT DUP3 AND SWAP1 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 PUSH1 0x0 JUMPDEST DUP8 DUP3 DUP3 LT PUSH3 0xBE9 JUMPI POP POP SWAP1 DUP4 PUSH3 0xAA4 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH3 0xBCF JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH3 0x55E JUMP JUMPDEST DUP8 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH3 0xBC1 JUMP JUMPDEST DUP10 DUP5 ADD MLOAD DUP6 SSTORE SWAP4 DUP7 ADD SWAP4 SWAP3 DUP4 ADD SWAP3 ADD PUSH3 0xBA4 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD DUP7 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH3 0x1B4 SWAP7 SWAP6 AND SWAP5 SWAP4 SWAP2 SWAP3 SWAP2 DUP6 SWAP1 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F DUP5 DUP1 LOG4 DUP1 PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP2 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP4 SWAP3 SWAP2 SWAP1 DUP2 AND SWAP1 DUP2 DUP6 EQ ISZERO DUP1 PUSH3 0xE49 JUMPI JUMPDEST PUSH3 0xCDA JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH3 0xD56 JUMPI JUMPDEST POP POP DUP3 PUSH3 0xCF2 JUMPI JUMPDEST DUP1 DUP1 PUSH3 0xCD3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x48EE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH3 0xD32 SWAP2 PUSH3 0xD2B SWAP1 SWAP2 PUSH3 0x1310 JUMP JUMPDEST SWAP1 PUSH3 0xE53 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE LOG2 CODESIZE DUP1 DUP1 PUSH3 0xCEA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH3 0xD78 DUP5 PUSH3 0x1310 JUMP JUMPDEST SWAP1 PUSH6 0xFFFFFFFFFFFF SWAP1 DUP2 NUMBER GT PUSH3 0xE2A JUMPI DUP1 SLOAD PUSH1 0x0 DUP2 PUSH3 0xDE5 JUMPI POP POP SWAP1 PUSH3 0xDC2 SWAP2 PUSH3 0xDB8 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x48EE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP5 PUSH1 0x0 PUSH3 0x16DA JUMP JUMPDEST SWAP2 NUMBER AND SWAP1 PUSH3 0x151E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE LOG2 CODESIZE DUP1 PUSH3 0xCE1 JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 SWAP2 SWAP4 NOT SWAP5 DUP5 DUP7 DUP2 ADD GT PUSH3 0xE24 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x48EE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP6 PUSH3 0xDC2 SWAP6 PUSH1 0x20 DUP5 DUP7 PUSH3 0xDB8 SWAP7 MSTORE KECCAK256 ADD ADD SLOAD PUSH1 0x30 SHR PUSH3 0x16DA JUMP JUMPDEST PUSH3 0xF11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6DFCC65 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x30 PUSH1 0x4 DUP3 ADD MSTORE NUMBER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST POP DUP4 ISZERO ISZERO PUSH3 0xCCD JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF SWAP1 DUP2 NUMBER GT PUSH3 0xE2A JUMPI DUP1 SLOAD PUSH1 0x0 DUP2 PUSH3 0xE84 JUMPI POP POP PUSH3 0xDB8 PUSH3 0xE80 SWAP4 PUSH1 0x0 PUSH3 0x16F4 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST SWAP1 SWAP4 PUSH1 0x0 NOT DUP6 DUP2 DUP2 ADD GT PUSH3 0xE24 JUMPI PUSH3 0xE80 SWAP6 PUSH1 0x20 DUP5 DUP7 PUSH3 0xDB8 SWAP7 MSTORE KECCAK256 ADD ADD SLOAD PUSH1 0x30 SHR PUSH3 0x16F4 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF DUP1 NUMBER GT PUSH3 0xE2A JUMPI PUSH1 0xA SLOAD PUSH1 0x0 DUP2 PUSH3 0xEE5 JUMPI POP POP PUSH3 0xEDC PUSH3 0xE80 SWAP3 PUSH1 0x0 PUSH3 0x16DA JUMP JUMPDEST SWAP1 NUMBER AND PUSH3 0x1422 JUMP JUMPDEST SWAP1 SWAP3 PUSH1 0x0 NOT DUP5 DUP2 DUP2 ADD GT PUSH3 0xE24 JUMPI PUSH3 0xE80 SWAP5 PUSH1 0x20 DUP5 PUSH1 0xA PUSH3 0xEDC SWAP7 MSTORE KECCAK256 ADD ADD SLOAD PUSH1 0x30 SHR PUSH3 0x16DA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 ISZERO PUSH3 0xFFC JUMPI PUSH3 0xF50 PUSH3 0xF4B DUP4 PUSH1 0x2 SLOAD PUSH3 0x16CC JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 SWAP1 LOG3 PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP2 GT PUSH3 0xFD5 JUMPI POP PUSH3 0xFB6 SWAP1 DUP3 PUSH3 0x15EB JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE58AE93 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 DUP2 MLOAD PUSH1 0x20 DUP1 DUP3 LT PUSH1 0x0 EQ PUSH3 0x1033 JUMPI POP POP SWAP1 PUSH3 0x23E SWAP1 PUSH3 0x1235 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x183 JUMPI PUSH3 0x105A DUP3 PUSH3 0x1054 PUSH1 0x5 SLOAD PUSH3 0x259 JUMP JUMPDEST PUSH3 0x4AC JUMP JUMPDEST DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x109A JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH3 0x108E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x5 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x1074 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP4 AND SWAP5 SWAP1 SWAP2 SWAP1 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH3 0x110C JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH3 0x10F2 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x5 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x10E4 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH3 0x10CE JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH1 0x20 DUP1 DUP3 LT PUSH1 0x0 EQ PUSH3 0x1143 JUMPI POP POP SWAP1 PUSH3 0x23E SWAP1 PUSH3 0x1235 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x183 JUMPI PUSH3 0x116A DUP3 PUSH3 0x1164 PUSH1 0x6 SLOAD PUSH3 0x259 JUMP JUMPDEST PUSH3 0x505 JUMP JUMPDEST DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x11AA JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH3 0x119E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x6 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x1184 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP4 AND SWAP5 SWAP1 SWAP2 SWAP1 PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH3 0x121C JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH3 0x1202 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x6 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x11F4 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH3 0x11DE JUMP JUMPDEST PUSH1 0x1F DUP2 MLOAD GT PUSH3 0x1263 JUMPI PUSH1 0x20 DUP2 MLOAD SWAP2 ADD MLOAD PUSH1 0x20 DUP3 LT PUSH3 0x1253 JUMPI OR SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP3 PUSH1 0x20 SUB PUSH1 0x3 SHL SHL AND OR SWAP1 JUMP JUMPDEST PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP4 ADD MSTORE PUSH3 0x1296 DUP2 MLOAD DUP1 SWAP3 DUP2 PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH3 0x1B6 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP5 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x183 JUMPI PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP1 DUP2 DUP2 GT PUSH3 0x1325 JUMPI AND SWAP1 JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x6DFCC65 PUSH1 0xE4 SHL DUP3 MSTORE PUSH1 0xD0 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH3 0xE24 JUMPI JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH3 0x183 JUMPI PUSH1 0x1 DUP3 ADD DUP1 PUSH1 0xA SSTORE DUP3 LT ISZERO PUSH3 0x13B6 JUMPI PUSH1 0xA PUSH1 0x0 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x30 SHL PUSH6 0xFFFFFFFFFFFF NOT AND PUSH6 0xFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x48CE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH3 0x183 JUMPI PUSH1 0x1 DUP2 ADD DUP1 DUP5 SSTORE DUP2 LT ISZERO PUSH3 0x13B6 JUMPI PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 SWAP1 KECCAK256 DUP3 MLOAD SWAP3 SWAP1 SWAP4 ADD MLOAD PUSH1 0x30 SHL PUSH6 0xFFFFFFFFFFFF NOT AND PUSH6 0xFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD SWAP2 SWAP3 SWAP2 DUP1 ISZERO PUSH3 0x14EF JUMPI PUSH3 0x143E PUSH3 0x1457 SWAP2 PUSH3 0x1344 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x48CE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH6 0xFFFFFFFFFFFF SWAP1 DUP2 DUP5 AND SWAP2 DUP4 AND DUP1 DUP4 GT PUSH3 0x14DD JUMPI DUP7 SWAP3 SUB PUSH3 0x149F JUMPI PUSH3 0x1498 SWAP3 POP SWAP1 PUSH6 0xFFFFFFFFFFFF DUP3 SLOAD SWAP2 DUP2 NOT SWAP1 PUSH1 0x30 SHL AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x30 SHR SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH3 0x14D7 SWAP1 PUSH3 0x14C2 PUSH3 0x14B4 PUSH3 0x1A5 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0x1354 JUMP JUMPDEST PUSH3 0x1498 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2520601D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH3 0x1518 SWAP1 PUSH3 0x1503 PUSH3 0x14B4 PUSH3 0x1A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0x1354 JUMP JUMPDEST PUSH1 0x0 SWAP2 SWAP1 JUMP JUMPDEST DUP1 SLOAD SWAP3 SWAP4 SWAP3 DUP1 ISZERO PUSH3 0x15C1 JUMPI PUSH3 0x1539 PUSH3 0x1546 SWAP2 PUSH3 0x1344 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SLOAD SWAP3 PUSH6 0xFFFFFFFFFFFF SWAP2 DUP3 DUP6 AND SWAP3 DUP2 AND DUP1 DUP5 GT PUSH3 0x14DD JUMPI DUP8 SWAP4 SUB PUSH3 0x1588 JUMPI POP PUSH3 0x1498 SWAP3 POP SWAP1 PUSH6 0xFFFFFFFFFFFF DUP3 SLOAD SWAP2 DUP2 NOT SWAP1 PUSH1 0x30 SHL AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP2 POP POP PUSH3 0x14D7 SWAP2 PUSH3 0x15AC PUSH3 0x159E PUSH3 0x1A5 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP7 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x13CC JUMP JUMPDEST POP SWAP1 PUSH3 0x1518 SWAP2 PUSH3 0x15D6 PUSH3 0x159E PUSH3 0x1A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP6 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x13CC JUMP JUMPDEST SWAP1 PUSH3 0x15F7 DUP2 PUSH3 0x1310 JUMP JUMPDEST SWAP2 PUSH6 0xFFFFFFFFFFFF DUP1 NUMBER GT PUSH3 0xE2A JUMPI PUSH1 0xA SLOAD PUSH1 0x0 DUP2 PUSH3 0x1699 JUMPI POP POP PUSH3 0x162A SWAP1 PUSH3 0xEDC PUSH3 0x1B4 SWAP6 PUSH1 0x0 PUSH3 0x16F4 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH3 0x167C JUMPI JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH32 0x5EFF886EA0CE6CA488A3D6E336D6C0F75F46D19B42C06CE5EE98E42C96D256C7 SLOAD PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SLOAD DUP2 AND SWAP2 AND PUSH3 0xCB0 JUMP JUMPDEST PUSH3 0x1691 PUSH3 0x168B DUP5 PUSH3 0x1310 JUMP JUMPDEST PUSH3 0xEAF JUMP JUMPDEST POP POP PUSH3 0x1640 JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 SWAP3 NOT SWAP6 DUP4 DUP8 DUP2 ADD GT PUSH3 0xE24 JUMPI PUSH3 0x1B4 SWAP7 PUSH3 0x162A SWAP5 PUSH1 0x20 DUP5 PUSH1 0xA PUSH3 0xEDC SWAP7 MSTORE KECCAK256 ADD ADD SLOAD PUSH1 0x30 SHR PUSH3 0x16F4 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH3 0xE24 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP2 DUP3 AND SWAP1 DUP3 AND SUB SWAP1 DUP2 GT PUSH3 0xE24 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP2 DUP3 AND SWAP1 DUP3 AND ADD SWAP1 DUP2 GT PUSH3 0xE24 JUMPI SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3EE438C EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x84278EC EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xE4B2285 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x139BA769 EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x1F454923 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x3C19804E EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x44E43CB8 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x4BF5D7E9 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x4EEA6D79 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x4F4DAC6F EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x564F4F76 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x750521F5 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x81A2B38F EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x881E1CFF EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x8B7AFE2E EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x91DDADF4 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x9A6F99F9 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0xB20A6F36 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xBF2D9E0B EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xD5F6AEB4 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x210 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1826 JUMP JUMPDEST PUSH2 0x175B JUMP JUMPDEST PUSH2 0x16FE JUMP JUMPDEST PUSH2 0x16C0 JUMP JUMPDEST PUSH2 0x154F JUMP JUMPDEST PUSH2 0x13D0 JUMP JUMPDEST PUSH2 0x12EE JUMP JUMPDEST PUSH2 0x12B0 JUMP JUMPDEST PUSH2 0x1292 JUMP JUMPDEST PUSH2 0x126C JUMP JUMPDEST PUSH2 0x120F JUMP JUMPDEST PUSH2 0xA1E JUMP JUMPDEST PUSH2 0x11EB JUMP JUMPDEST PUSH2 0x11BF JUMP JUMPDEST PUSH2 0x10CC JUMP JUMPDEST PUSH2 0x10A5 JUMP JUMPDEST PUSH2 0x1089 JUMP JUMPDEST PUSH2 0x104A JUMP JUMPDEST PUSH2 0xF36 JUMP JUMPDEST PUSH2 0xF12 JUMP JUMPDEST PUSH2 0xED8 JUMP JUMPDEST PUSH2 0xD5C JUMP JUMPDEST PUSH2 0xC9E JUMP JUMPDEST PUSH2 0xC66 JUMP JUMPDEST PUSH2 0xBE5 JUMP JUMPDEST PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0xB86 JUMP JUMPDEST PUSH2 0xA41 JUMP JUMPDEST PUSH2 0x982 JUMP JUMPDEST PUSH2 0x854 JUMP JUMPDEST PUSH2 0x73C JUMP JUMPDEST PUSH2 0x718 JUMP JUMPDEST PUSH2 0x61E JUMP JUMPDEST PUSH2 0x5FB JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST PUSH2 0x50A JUMP JUMPDEST PUSH2 0x48A JUMP JUMPDEST PUSH2 0x46C JUMP JUMPDEST PUSH2 0x432 JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST PUSH2 0x36F JUMP JUMPDEST PUSH2 0x327 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x313 JUMPI POP POP PUSH1 0x1F NOT PUSH1 0x1F DUP5 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP7 SWAP8 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x2F2 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x366 PUSH1 0x40 MLOAD PUSH2 0x352 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1CE5 JUMP JUMPDEST SUB DUP3 PUSH2 0x19A7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2E7 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x366 PUSH1 0x40 MLOAD PUSH2 0x352 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1D8A JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x15 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x36A JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x36A JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x403 PUSH2 0x3F9 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x21DB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x366 PUSH1 0x40 MLOAD PUSH2 0x352 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1E11 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x453 PUSH2 0x3B1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x4A3 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x7390412CE304891B69B7A6D7722B373A8172B465CE957518D396801BC35E0872 SWAP3 PUSH2 0x4E5 PUSH2 0x18DD JUMP JUMPDEST AND SWAP3 DUP4 PUSH1 0x0 MSTORE PUSH1 0x16 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x60 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x523 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x52B PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x562 CALLER PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP3 PUSH1 0x0 NOT DUP5 LT PUSH2 0x584 JUMPI JUMPDEST PUSH2 0x578 SWAP4 POP PUSH2 0x202D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 DUP5 LT PUSH2 0x5A0 JUMPI PUSH2 0x59B DUP4 PUSH2 0x578 SWAP6 SUB CALLER DUP4 PUSH2 0x22C1 JUMP JUMPDEST PUSH2 0x56E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH2 0x616 PUSH2 0x2523 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x63F PUSH2 0x3B1 JUMP JUMPDEST AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x65A PUSH1 0x24 CALLDATALOAD PUSH2 0x19D9 JUMP JUMPDEST SWAP2 DUP1 SLOAD DUP3 SWAP4 DUP2 PUSH1 0x5 DUP2 GT PUSH2 0x6BE JUMPI JUMPDEST POP SWAP1 PUSH1 0x20 SWAP5 PUSH2 0x678 SWAP3 DUP5 PUSH2 0x2E9A JUMP JUMPDEST DUP1 PUSH2 0x6A4 JUMPI POP POP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST SWAP2 PUSH2 0x6B0 DUP5 SWAP3 SWAP4 PUSH2 0x28F3 JUMP JUMPDEST SWAP3 DUP2 MSTORE KECCAK256 ADD SLOAD PUSH1 0x30 SHR PUSH2 0x680 JUMP JUMPDEST SWAP5 PUSH2 0x6C8 DUP7 PUSH2 0x293D JUMP JUMPDEST DUP7 SUB SWAP6 DUP7 GT PUSH2 0x713 JUMPI PUSH1 0x20 SWAP6 PUSH2 0x678 SWAP4 DUP6 DUP8 MSTORE PUSH6 0xFFFFFFFFFFFF DUP1 DUP4 DUP11 DUP11 KECCAK256 ADD SLOAD AND SWAP1 DUP6 AND LT PUSH1 0x0 EQ PUSH2 0x701 JUMPI POP SWAP2 JUMPDEST SWAP2 SWAP3 POP SWAP5 PUSH2 0x669 JUMP JUMPDEST SWAP3 SWAP2 POP PUSH2 0x70D SWAP1 PUSH2 0x2902 JUMP JUMPDEST SWAP1 PUSH2 0x6F8 JUMP JUMPDEST PUSH2 0x1C95 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x366 PUSH1 0x40 MLOAD PUSH2 0x352 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1E98 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x776 PUSH2 0x772 PUSH2 0x76B CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x82A JUMPI JUMPDEST PUSH2 0x800 JUMPI CALLVALUE PUSH2 0x787 JUMPI STOP JUMPDEST PUSH2 0x79B PUSH2 0x796 CALLVALUE PUSH1 0x11 SLOAD PUSH2 0x2910 JUMP JUMPDEST PUSH1 0x11 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 PUSH2 0x7D5 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0xF3A9B3760E99454DE4C494F7ED29F5204AB92FEBACB0ACF52EA04AD4A9D22466 SWAP1 PUSH1 0x20 SWAP1 LOG2 STOP JUMPDEST PUSH2 0x7F5 PUSH2 0x7ED PUSH2 0x7FA SWAP3 PUSH2 0x7E8 CALLVALUE PUSH2 0x300B JUMP JUMPDEST PUSH2 0x291D JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH2 0x2910 JUMP JUMPDEST PUSH1 0x15 SSTORE JUMP JUMPDEST CODESIZE PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x614D358C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP PUSH2 0x84C PUSH2 0x840 PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLER EQ ISZERO PUSH2 0x77C JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x86E NUMBER PUSH2 0x28A8 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF DUP1 PUSH2 0x87F NUMBER PUSH2 0x28A8 JUMP JUMPDEST AND SWAP2 AND SUB PUSH2 0x8D4 JUMPI PUSH2 0x366 PUSH1 0x40 MLOAD PUSH2 0x896 DUP2 PUSH2 0x1937 JUMP JUMPDEST PUSH1 0x1D DUP2 MSTORE PUSH32 0x6D6F64653D626C6F636B6E756D6265722666726F6D3D64656661756C74000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x6FF0714000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP6 SWAP8 SWAP5 SWAP2 SWAP4 PUSH2 0x945 PUSH2 0x961 SWAP5 PUSH2 0x937 PUSH2 0x97F SWAP13 SWAP11 SWAP8 PUSH2 0x929 PUSH2 0x953 SWAP7 DUP13 PUSH2 0x120 DUP1 SWAP2 MSTORE DUP14 ADD SWAP1 PUSH2 0x2E7 JUMP JUMPDEST SWAP1 DUP12 DUP3 SUB PUSH1 0x20 DUP14 ADD MSTORE PUSH2 0x2E7 JUMP JUMPDEST SWAP1 DUP10 DUP3 SUB PUSH1 0x40 DUP12 ADD MSTORE PUSH2 0x2E7 JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x60 DUP10 ADD MSTORE PUSH2 0x2E7 JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x2E7 JUMP JUMPDEST SWAP5 PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x2E7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH2 0x9A4 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1D8A JUMP JUMPDEST PUSH2 0x366 DUP3 MLOAD SWAP3 PUSH2 0x9BE DUP5 PUSH2 0x9B7 DUP2 PUSH2 0x1F1F JUMP JUMPDEST SUB DUP6 PUSH2 0x19A7 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x11 SLOAD PUSH1 0x12 SLOAD SWAP2 DUP4 MLOAD PUSH2 0x9D7 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1E98 JUMP JUMPDEST DUP5 MLOAD PUSH2 0x9E6 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1E11 JUMP JUMPDEST DUP6 MLOAD SWAP2 PUSH2 0x9FD DUP4 PUSH2 0x9F6 DUP2 PUSH2 0x1CE5 JUMP JUMPDEST SUB DUP5 PUSH2 0x19A7 JUMP JUMPDEST DUP7 MLOAD SWAP7 PUSH2 0xA14 DUP9 PUSH2 0xA0D DUP2 PUSH2 0x1FA6 JUMP JUMPDEST SUB DUP10 PUSH2 0x19A7 JUMP JUMPDEST MLOAD SWAP10 DUP11 SWAP10 DUP11 PUSH2 0x8FE JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH2 0x616 PUSH2 0xA3C PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x3068 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB83 JUMPI PUSH1 0x2 PUSH1 0xC SLOAD EQ PUSH2 0xB59 JUMPI PUSH1 0x2 PUSH1 0xC SSTORE PUSH2 0xA6B CALLER PUSH2 0x3068 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB2F JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xA8B DUP3 DUP3 SLOAD PUSH2 0x2910 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x15 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0xAB4 PUSH2 0xAAF DUP3 PUSH1 0x12 SLOAD PUSH2 0x2910 JUMP JUMPDEST PUSH1 0x12 SSTORE JUMP JUMPDEST DUP2 DUP1 DUP1 DUP1 DUP5 CALLER GAS CALL PUSH2 0xAC4 PUSH2 0x3028 JUMP JUMPDEST POP ISZERO PUSH2 0xB05 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0xC15F451120B13B6B40C6AD6203614AB3088308BEF9150C0D6F46EA79BF464224 SWAP1 PUSH1 0x20 SWAP1 LOG2 PUSH2 0xB02 PUSH1 0x1 PUSH1 0xC SSTORE JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x2A1C5BA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0xBAA PUSH2 0x3B1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x8 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0xBE3 PUSH2 0xBDD PUSH2 0x3B1 JUMP JUMPDEST CALLER PUSH2 0x1A33 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xC06 PUSH2 0x3B1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH4 0xFFFFFFFF SWAP1 DUP2 DUP2 GT PUSH2 0xC2E JUMPI PUSH1 0x20 SWAP2 PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH2 0x616 PUSH2 0xC84 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB83 JUMPI PUSH2 0xCB8 PUSH2 0x18DD JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xB SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND PUSH1 0xB SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x36A JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP3 GT PUSH2 0x36A JUMPI DUP1 PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x36A JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP4 DUP5 GT PUSH2 0x36A JUMPI PUSH1 0x24 DUP5 DUP4 ADD ADD GT PUSH2 0x36A JUMPI PUSH1 0x24 ADD SWAP2 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH2 0xD6A CALLDATASIZE PUSH2 0xD12 JUMP JUMPDEST PUSH2 0xD72 PUSH2 0x18DD JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEAE JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xEA9 JUMPI PUSH2 0xD9B DUP2 PUSH2 0xD96 PUSH1 0xF SLOAD PUSH2 0x1CAB JUMP JUMPDEST PUSH2 0x2F01 JUMP JUMPDEST PUSH1 0x0 SWAP2 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0xE08 JUMPI DUP2 PUSH32 0x1C306E70C05992619E2128AD1EF88DF75F36C9476282E59F51401B2ABAA42E4E SWAP4 PUSH1 0x0 SWAP2 PUSH2 0xDFD JUMPI JUMPDEST POP DUP3 PUSH1 0x1 SHL SWAP1 PUSH1 0x0 NOT DUP5 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xF SSTORE JUMPDEST PUSH2 0xDF8 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x2FE3 JUMP JUMPDEST SUB SWAP1 LOG1 STOP JUMPDEST SWAP1 POP DUP2 ADD CALLDATALOAD CODESIZE PUSH2 0xDD4 JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 PUSH1 0x1F NOT DUP4 AND DUP5 JUMPDEST DUP2 DUP2 LT PUSH2 0xE91 JUMPI POP SWAP4 DUP4 PUSH32 0x1C306E70C05992619E2128AD1EF88DF75F36C9476282E59F51401B2ABAA42E4E SWAP6 LT PUSH2 0xE77 JUMPI JUMPDEST POP POP PUSH1 0x1 DUP3 DUP2 SHL ADD PUSH1 0xF SSTORE PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0xF8 DUP6 PUSH1 0x3 SHL AND SHR NOT SWAP1 DUP4 ADD CALLDATALOAD AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0xE67 JUMP JUMPDEST DUP4 DUP7 ADD CALLDATALOAD DUP4 SSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0xE35 JUMP JUMPDEST PUSH2 0x1921 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xEEC403F000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xEF9 PUSH2 0x3B1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x366 PUSH1 0x40 MLOAD PUSH2 0x352 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1FA6 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB83 JUMPI PUSH2 0xFFC SWAP1 PUSH2 0xF75 PUSH32 0x0 PUSH2 0x267E JUMP JUMPDEST PUSH2 0xF9E PUSH32 0x0 PUSH2 0x278F JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0xFAC DUP4 PUSH2 0x1953 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 DUP7 MSTORE PUSH2 0xFEE PUSH1 0x20 SWAP4 PUSH1 0xE0 DUP6 DUP10 ADD MSTORE PUSH1 0xE0 DUP9 ADD SWAP1 PUSH2 0x2E7 JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH2 0x2E7 JUMP JUMPDEST SWAP1 CHAINID PUSH1 0x60 DUP7 ADD MSTORE ADDRESS PUSH1 0x80 DUP7 ADD MSTORE DUP3 PUSH1 0xA0 DUP7 ADD MSTORE DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP1 DUP1 DUP6 MLOAD SWAP4 DUP5 DUP2 MSTORE ADD SWAP5 ADD SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x1033 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1024 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x106B PUSH2 0x3B1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 SELFBALANCE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xB SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x10E8 PUSH1 0x4 CALLDATALOAD PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 PUSH1 0x0 DUP3 SWAP2 PUSH1 0x5 DUP5 GT PUSH2 0x1152 JUMPI JUMPDEST PUSH2 0x1103 SWAP4 POP PUSH2 0x2E1F JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1118 JUMPI POP POP PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0xA PUSH2 0x1125 PUSH1 0x20 SWAP4 PUSH2 0x28F3 JUMP JUMPDEST SWAP2 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD SLOAD PUSH1 0x30 SHR PUSH2 0x680 JUMP JUMPDEST SWAP2 SWAP3 PUSH2 0x115D DUP2 PUSH2 0x293D JUMP JUMPDEST DUP2 SUB SWAP1 DUP2 GT PUSH2 0x713 JUMPI PUSH2 0x1103 SWAP4 PUSH1 0xA DUP4 MSTORE PUSH6 0xFFFFFFFFFFFF DUP1 DUP4 PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD SLOAD AND SWAP1 DUP6 AND LT PUSH1 0x0 EQ PUSH2 0x11AD JUMPI POP SWAP2 PUSH2 0x10F9 JUMP JUMPDEST SWAP3 SWAP2 POP PUSH2 0x11B9 SWAP1 PUSH2 0x2902 JUMP JUMPDEST SWAP1 PUSH2 0x10F9 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH2 0x11DB NUMBER PUSH2 0x28A8 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x366 PUSH1 0x40 MLOAD PUSH2 0x352 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1F1F JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1230 PUSH2 0x3B1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1263 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x2AC9 JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x403 PUSH2 0x1288 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x202D JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x36A JUMPI JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x36A JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0xC0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x1307 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD PUSH2 0x1316 PUSH2 0x12CE JUMP JUMPDEST DUP4 TIMESTAMP GT PUSH2 0x139F JUMPI PUSH2 0x1393 PUSH2 0xBE3 SWAP5 PUSH2 0x139A SWAP3 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x40 DUP5 ADD MSTORE DUP7 PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x80 DUP3 MSTORE PUSH2 0x137B DUP3 PUSH2 0x196F JUMP JUMPDEST PUSH2 0x138E PUSH1 0xA4 CALLDATALOAD SWAP4 PUSH1 0x84 CALLDATALOAD SWAP4 MLOAD SWAP1 KECCAK256 PUSH2 0x263D JUMP JUMPDEST PUSH2 0x2384 JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x2312 JUMP JUMPDEST PUSH2 0x1A33 JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x4683AF0E00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0xE0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x13E9 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x13F1 PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD PUSH2 0x1400 PUSH2 0x12DE JUMP JUMPDEST DUP2 TIMESTAMP GT PUSH2 0x151E JUMPI SWAP1 PUSH2 0x149D PUSH2 0x14BE SWAP3 PUSH2 0x14AB PUSH2 0x1438 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 SSTORE SWAP1 JUMP JUMPDEST SWAP4 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP2 PUSH1 0x20 DUP4 ADD SWAP7 DUP11 DUP11 DUP14 DUP11 SWAP2 SWAP6 SWAP5 SWAP4 SWAP1 SWAP3 PUSH1 0xA0 SWAP4 PUSH1 0xC0 DUP5 ADD SWAP8 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND PUSH1 0x20 DUP7 ADD MSTORE AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0x19A7 JUMP JUMPDEST PUSH2 0x138E PUSH1 0xC4 CALLDATALOAD SWAP4 PUSH1 0xA4 CALLDATALOAD SWAP4 MLOAD SWAP1 KECCAK256 PUSH2 0x263D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP1 DUP3 AND SUB PUSH2 0x14DB JUMPI POP PUSH2 0xBE3 SWAP3 PUSH2 0x21DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP3 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH2 0x155D CALLDATASIZE PUSH2 0xD12 JUMP JUMPDEST PUSH2 0x1565 PUSH2 0x18DD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1696 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xEA9 JUMPI PUSH2 0x158E DUP2 PUSH2 0x1589 PUSH1 0x10 SLOAD PUSH2 0x1CAB JUMP JUMPDEST PUSH2 0x2F72 JUMP JUMPDEST PUSH1 0x0 SWAP2 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x15F5 JUMPI DUP2 PUSH32 0x732D2E87DCC1907685C097F7373A47D8C7CD8EF98B659B5F2D4272B26AAB48A7 SWAP4 PUSH1 0x0 SWAP2 PUSH2 0x15EA JUMPI JUMPDEST POP DUP3 PUSH1 0x1 SHL SWAP1 PUSH1 0x0 NOT DUP5 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x10 SSTORE PUSH2 0xDF8 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x2FE3 JUMP JUMPDEST SWAP1 POP DUP2 ADD CALLDATALOAD CODESIZE PUSH2 0x15C7 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 PUSH1 0x1F NOT DUP4 AND DUP5 JUMPDEST DUP2 DUP2 LT PUSH2 0x167E JUMPI POP SWAP4 DUP4 PUSH32 0x732D2E87DCC1907685C097F7373A47D8C7CD8EF98B659B5F2D4272B26AAB48A7 SWAP6 LT PUSH2 0x1664 JUMPI JUMPDEST POP POP PUSH1 0x1 DUP3 DUP2 SHL ADD PUSH1 0x10 SSTORE PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0xF8 DUP6 PUSH1 0x3 SHL AND SHR NOT SWAP1 DUP4 ADD CALLDATALOAD AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x1654 JUMP JUMPDEST DUP4 DUP7 ADD CALLDATALOAD DUP4 SSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x3D9E4CAD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB83 JUMPI PUSH2 0x16DA PUSH2 0x18DD JUMP JUMPDEST DUP1 DUP1 DUP1 DUP1 SELFBALANCE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xB SLOAD AND GAS CALL PUSH2 0x16F5 PUSH2 0x3028 JUMP JUMPDEST POP ISZERO PUSH2 0xB05 JUMPI DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH2 0x1752 PUSH2 0x171C PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x172C PUSH2 0x3C7 JUMP JUMPDEST SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x1 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x1774 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x36A JUMPI PUSH2 0x366 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x17C3 SWAP3 PUSH2 0x179D PUSH2 0x22F9 JUMP JUMPDEST POP PUSH2 0x17A6 PUSH2 0x22F9 JUMP JUMPDEST POP AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x17BD PUSH2 0x22F9 JUMP JUMPDEST POP PUSH2 0x2AF7 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 PUSH2 0x17D1 DUP3 PUSH2 0x1937 JUMP JUMPDEST SLOAD PUSH6 0xFFFFFFFFFFFF DUP2 AND DUP3 MSTORE PUSH1 0x30 SHR PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 SWAP2 PUSH1 0x20 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 PUSH1 0x40 DUP5 ADD SWAP6 PUSH6 0xFFFFFFFFFFFF DUP2 MLOAD AND DUP6 MSTORE ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x183F PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x1847 PUSH2 0x18DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH2 0x18AC JUMPI PUSH1 0xB SLOAD DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR PUSH1 0xB SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xB SLOAD AND CALLER SUB PUSH2 0x18F1 JUMPI JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEA9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEA9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEA9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEA9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH1 0x1F NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEA9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x19D7 DUP3 PUSH2 0x1937 JUMP JUMPDEST JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF PUSH2 0x19E9 NUMBER PUSH2 0x28A8 JUMP JUMPDEST AND DUP1 DUP3 LT ISZERO PUSH2 0x19FC JUMPI POP PUSH2 0x97F SWAP1 PUSH2 0x28A8 JUMP JUMPDEST PUSH1 0x44 SWAP3 POP PUSH1 0x40 MLOAD SWAP2 PUSH32 0xECD3F81E00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x19D7 SWAP2 PUSH2 0x1AC8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP5 DUP3 AND SWAP5 DUP6 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP6 DUP7 SLOAD SWAP7 DUP3 DUP9 AND SWAP8 DUP9 SWAP4 DUP9 AND SWAP5 DUP6 SWAP2 AND OR SWAP1 SSTORE PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST SWAP2 JUMPDEST SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 DUP3 AND SWAP4 DUP2 AND SWAP1 DUP5 DUP3 EQ ISZERO DUP1 PUSH2 0x1C43 JUMPI JUMPDEST PUSH2 0x1AF2 JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x1B8E JUMPI JUMPDEST POP POP DUP3 PUSH2 0x1B07 JUMPI JUMPDEST DUP1 DUP1 PUSH2 0x1AEB JUMP JUMPDEST PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP2 PUSH2 0x1B52 PUSH2 0x1B4C PUSH2 0x1B58 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x2849 JUMP JUMPDEST SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE LOG2 CODESIZE DUP1 DUP1 PUSH2 0x1B00 JUMP JUMPDEST PUSH2 0x1BAB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1BB4 DUP5 PUSH2 0x2849 JUMP JUMPDEST PUSH2 0x1BBD NUMBER PUSH2 0x28A8 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP1 PUSH2 0x1BE4 DUP7 PUSH2 0x2AC9 JUMP JUMPDEST AND SWAP2 AND SWAP1 SUB SWAP3 DUP3 DUP5 GT PUSH2 0x713 JUMPI PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP4 PUSH2 0x1C39 SWAP3 PUSH2 0x1C20 SWAP3 PUSH2 0x2D38 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP6 AND DUP4 MSTORE SWAP4 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP2 DUP3 SWAP2 SWAP1 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG2 CODESIZE DUP1 PUSH2 0x1AF8 JUMP JUMPDEST POP DUP4 ISZERO ISZERO PUSH2 0x1AE6 JUMP JUMPDEST SWAP1 PUSH2 0x1C56 NUMBER PUSH2 0x28A8 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP1 PUSH2 0x1C7D DUP7 PUSH2 0x2AC9 JUMP JUMPDEST AND SWAP2 AND ADD SWAP2 DUP3 GT PUSH2 0x1C95 JUMPI PUSH2 0x1C91 SWAP3 PUSH2 0x2D38 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1CDB JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1CC5 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1CBA JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1CF5 DUP3 PUSH2 0x1CAB JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1D6C JUMPI POP PUSH1 0x1 EQ PUSH2 0x1D13 JUMPI POP POP POP JUMP JUMPDEST SWAP2 SWAP3 SWAP4 POP PUSH1 0xF PUSH1 0x0 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x1D54 JUMPI POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP6 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1D42 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP5 SWAP6 POP PUSH1 0xFF NOT SWAP2 POP SWAP3 SWAP2 SWAP3 AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1D9A DUP3 PUSH2 0x1CAB JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1D6C JUMPI POP PUSH1 0x1 EQ PUSH2 0x1DB8 JUMPI POP POP POP JUMP JUMPDEST SWAP2 SWAP3 SWAP4 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x1DF9 JUMPI POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP6 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1DE7 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1E21 DUP3 PUSH2 0x1CAB JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1D6C JUMPI POP PUSH1 0x1 EQ PUSH2 0x1E3F JUMPI POP POP POP JUMP JUMPDEST SWAP2 SWAP3 SWAP4 POP PUSH1 0xE PUSH1 0x0 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x1E80 JUMPI POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP6 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1E6E JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1EA8 DUP3 PUSH2 0x1CAB JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1D6C JUMPI POP PUSH1 0x1 EQ PUSH2 0x1EC6 JUMPI POP POP POP JUMP JUMPDEST SWAP2 SWAP3 SWAP4 POP PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x1F07 JUMPI POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP6 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1F2F DUP3 PUSH2 0x1CAB JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1D6C JUMPI POP PUSH1 0x1 EQ PUSH2 0x1F4D JUMPI POP POP POP JUMP JUMPDEST SWAP2 SWAP3 SWAP4 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x1F8E JUMPI POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP6 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1F7C JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1FB6 DUP3 PUSH2 0x1CAB JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1D6C JUMPI POP PUSH1 0x1 EQ PUSH2 0x1FD4 JUMPI POP POP POP JUMP JUMPDEST SWAP2 SWAP3 SWAP4 POP PUSH1 0x10 PUSH1 0x0 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x2015 JUMPI POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP6 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x2003 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x21AA JUMPI DUP5 AND SWAP1 DUP2 ISZERO PUSH2 0x2179 JUMPI PUSH2 0x2067 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD DUP4 DUP2 LT PUSH2 0x2130 JUMPI SWAP3 PUSH2 0x212D SWAP5 SWAP3 PUSH2 0x20F4 SWAP3 DUP3 PUSH2 0x2113 SWAP9 SWAP7 SUB PUSH2 0x209D DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH2 0x20BB DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 ADD SWAP1 SSTORE PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 SWAP1 LOG3 DUP4 DUP4 PUSH2 0x30BB JUMP JUMPDEST PUSH1 0x15 SLOAD SWAP4 DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP2 AND SWAP3 DUP4 ISZERO PUSH2 0x2290 JUMPI DUP3 AND SWAP4 DUP5 ISZERO PUSH2 0x225F JUMPI DUP1 PUSH2 0x2255 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP5 PUSH2 0x223D PUSH1 0x20 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND ISZERO PUSH2 0x2290 JUMPI DUP2 AND ISZERO PUSH2 0x225F JUMPI PUSH2 0x223D PUSH2 0x212D SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2306 DUP3 PUSH2 0x1937 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 DUP3 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x2339 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 SSTORE SWAP1 JUMP JUMPDEST DUP1 SWAP2 SUB PUSH2 0x2344 JUMPI POP POP JUMP JUMPDEST PUSH1 0x44 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP3 PUSH32 0x752D88C000000000000000000000000000000000000000000000000000000000 DUP5 MSTORE AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 PUSH2 0x97F SWAP4 SWAP2 PUSH2 0x2393 SWAP4 PUSH2 0x239C JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x244C JUMP JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x2420 JUMPI SWAP3 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0xFF PUSH1 0x80 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x2414 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x240B JUMPI SWAP2 DUP2 SWAP1 JUMP JUMPDEST POP DUP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x2436 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2455 DUP2 PUSH2 0x242C JUMP JUMPDEST DUP1 PUSH2 0x245E JUMPI POP POP JUMP JUMPDEST PUSH2 0x2467 DUP2 PUSH2 0x242C JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x2499 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0x24A2 DUP2 PUSH2 0x242C JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x24DC JUMPI PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x24E8 PUSH1 0x3 SWAP3 PUSH2 0x242C JUMP JUMPDEST EQ PUSH2 0x24F0 JUMPI POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS EQ DUP1 PUSH2 0x2614 JUMPI JUMPDEST ISZERO PUSH2 0x257E JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP3 MSTORE PUSH32 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH2 0x260E DUP2 PUSH2 0x198B JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST POP PUSH32 0x0 CHAINID EQ PUSH2 0x2555 JUMP JUMPDEST PUSH1 0x42 SWAP1 PUSH2 0x2648 PUSH2 0x2523 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x26D4 JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x26AA JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x26A0 DUP4 PUSH2 0x1937 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x5 SLOAD DUP2 PUSH1 0x0 PUSH2 0x26E7 DUP4 PUSH2 0x1CAB JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x276D JUMPI POP PUSH1 0x1 EQ PUSH2 0x270E JUMPI JUMPDEST POP PUSH2 0x97F SWAP3 POP SUB DUP3 PUSH2 0x19A7 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 JUMPDEST DUP5 DUP4 LT PUSH2 0x2752 JUMPI POP PUSH2 0x97F SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x2701 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x2739 JUMP JUMPDEST PUSH1 0x20 SWAP4 POP PUSH2 0x97F SWAP6 SWAP3 POP PUSH1 0xFF NOT SWAP2 POP AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x2701 JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x27B1 JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x26AA JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x26A0 DUP4 PUSH2 0x1937 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x6 SLOAD DUP2 PUSH1 0x0 PUSH2 0x27C4 DUP4 PUSH2 0x1CAB JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x276D JUMPI POP PUSH1 0x1 EQ PUSH2 0x27EA JUMPI POP PUSH2 0x97F SWAP3 POP SUB DUP3 PUSH2 0x19A7 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F JUMPDEST DUP5 DUP4 LT PUSH2 0x282E JUMPI POP PUSH2 0x97F SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x2701 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x2815 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP2 GT PUSH2 0x2870 JUMPI AND SWAP1 JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0xD0 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH6 0xFFFFFFFFFFFF SWAP1 DUP2 DUP2 GT PUSH2 0x28BB JUMPI AND SWAP1 JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x30 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x713 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x713 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x713 JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2927 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x97F JUMPI PUSH1 0x1 DUP2 PUSH17 0x100000000000000000000000000000000 DUP2 LT ISZERO PUSH2 0x2A68 JUMPI JUMPDEST PUSH2 0x2A10 PUSH2 0x2A06 PUSH2 0x29FC PUSH2 0x29F2 PUSH2 0x29E8 PUSH2 0x29DE PUSH2 0x2A1C SWAP8 PUSH1 0x4 DUP9 PUSH9 0x10000000000000000 PUSH2 0x2A17 SWAP11 LT ISZERO PUSH2 0x2A5B JUMPI JUMPDEST PUSH5 0x100000000 DUP2 LT ISZERO PUSH2 0x2A4E JUMPI JUMPDEST PUSH3 0x10000 DUP2 LT ISZERO PUSH2 0x2A41 JUMPI JUMPDEST PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x2A35 JUMPI JUMPDEST PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x2A29 JUMPI JUMPDEST LT ISZERO PUSH2 0x2A21 JUMPI JUMPDEST PUSH1 0x3 MUL PUSH1 0x1 SHR PUSH2 0x29D7 DUP2 DUP12 PUSH2 0x291D JUMP JUMPDEST ADD PUSH1 0x1 SHR SWAP1 JUMP JUMPDEST PUSH2 0x29D7 DUP2 DUP11 PUSH2 0x291D JUMP JUMPDEST PUSH2 0x29D7 DUP2 DUP10 PUSH2 0x291D JUMP JUMPDEST PUSH2 0x29D7 DUP2 DUP9 PUSH2 0x291D JUMP JUMPDEST PUSH2 0x29D7 DUP2 DUP8 PUSH2 0x291D JUMP JUMPDEST PUSH2 0x29D7 DUP2 DUP7 PUSH2 0x291D JUMP JUMPDEST DUP1 SWAP4 PUSH2 0x291D JUMP JUMPDEST DUP3 GT SWAP1 JUMP JUMPDEST SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 SHL PUSH2 0x29C7 JUMP JUMPDEST DUP2 SHR SWAP2 PUSH1 0x2 SHL SWAP2 PUSH2 0x29C0 JUMP JUMPDEST PUSH1 0x8 SHR SWAP2 DUP2 SHL SWAP2 PUSH2 0x29B6 JUMP JUMPDEST PUSH1 0x10 SHR SWAP2 PUSH1 0x8 SHL SWAP2 PUSH2 0x29AB JUMP JUMPDEST PUSH1 0x20 SHR SWAP2 PUSH1 0x10 SHL SWAP2 PUSH2 0x299F JUMP JUMPDEST PUSH1 0x40 SHR SWAP2 PUSH1 0x20 SHL SWAP2 PUSH2 0x2991 JUMP JUMPDEST POP PUSH9 0x10000000000000000 SWAP1 POP PUSH1 0x80 DUP3 SWAP1 SHR PUSH2 0x2963 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 DUP1 PUSH2 0x2A91 JUMPI POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DUP2 ADD GT PUSH2 0x713 JUMPI PUSH1 0xA PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A7 SWAP3 MSTORE ADD SLOAD PUSH1 0x30 SHR SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP2 DUP2 PUSH2 0x2ADB JUMPI POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT SWAP3 DUP3 DUP5 DUP2 ADD GT PUSH2 0x713 JUMPI PUSH1 0x20 SWAP2 DUP2 MSTORE KECCAK256 ADD ADD SLOAD PUSH1 0x30 SHR SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2B0F JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xA SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0xEA9 JUMPI PUSH1 0x1 DUP3 ADD DUP1 PUSH1 0xA SSTORE DUP3 LT ISZERO PUSH2 0x2B0F JUMPI PUSH1 0xA PUSH1 0x0 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x30 SHL PUSH6 0xFFFFFFFFFFFF NOT AND PUSH6 0xFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND OR PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0xEA9 JUMPI PUSH2 0x2BB8 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x2AF7 JUMP JUMPDEST PUSH2 0x2BE4 JUMPI DUP2 MLOAD PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD MLOAD PUSH1 0x30 SHL PUSH6 0xFFFFFFFFFFFF NOT AND PUSH6 0xFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xA SLOAD SWAP2 SWAP3 SWAP2 DUP1 ISZERO PUSH2 0x2CFB JUMPI PUSH2 0x2C12 PUSH2 0x2C3C SWAP2 PUSH2 0x28F3 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH6 0xFFFFFFFFFFFF SWAP1 DUP2 DUP5 AND SWAP2 DUP4 AND DUP1 DUP4 GT PUSH2 0x2CD1 JUMPI DUP7 SWAP3 SUB PUSH2 0x2C86 JUMPI PUSH2 0x2C7F SWAP3 POP SWAP1 PUSH6 0xFFFFFFFFFFFF PUSH6 0xFFFFFFFFFFFF NOT DUP4 SLOAD SWAP3 PUSH1 0x30 SHL AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x30 SHR SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH2 0x2CCC SWAP1 PUSH2 0x2CA5 PUSH2 0x2C97 PUSH2 0x19CA JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2B25 JUMP JUMPDEST PUSH2 0x2C7F JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x2520601D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP PUSH2 0x2D32 SWAP1 PUSH2 0x2D0B PUSH2 0x2C97 PUSH2 0x19CA JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2B25 JUMP JUMPDEST PUSH1 0x0 SWAP2 SWAP1 JUMP JUMPDEST DUP1 SLOAD SWAP3 SWAP4 SWAP3 DUP1 ISZERO PUSH2 0x2DE7 JUMPI PUSH2 0x2D4F PUSH2 0x2D5C SWAP2 PUSH2 0x28F3 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SLOAD SWAP3 PUSH6 0xFFFFFFFFFFFF SWAP2 DUP3 DUP6 AND SWAP3 DUP2 AND DUP1 DUP5 GT PUSH2 0x2CD1 JUMPI DUP8 SWAP4 SUB PUSH2 0x2DA0 JUMPI POP PUSH2 0x2C7F SWAP3 POP SWAP1 PUSH6 0xFFFFFFFFFFFF PUSH6 0xFFFFFFFFFFFF NOT DUP4 SLOAD SWAP3 PUSH1 0x30 SHL AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2CCC SWAP2 PUSH2 0x2DC0 PUSH2 0x2DB2 PUSH2 0x19CA JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2B96 JUMP JUMPDEST POP SWAP1 PUSH2 0x2D32 SWAP2 PUSH2 0x2DF8 PUSH2 0x2DB2 PUSH2 0x19CA JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2B96 JUMP JUMPDEST SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x2E2D JUMPI POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 DUP1 DUP3 AND SWAP1 DUP1 DUP4 XOR PUSH1 0x1 SHR DUP3 ADD DUP1 SWAP3 GT PUSH2 0x713 JUMPI PUSH1 0xA PUSH1 0x0 MSTORE PUSH6 0xFFFFFFFFFFFF DUP1 DUP4 PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD SLOAD AND SWAP1 DUP6 AND LT PUSH1 0x0 EQ PUSH2 0x2E88 JUMPI POP SWAP2 JUMPDEST SWAP1 PUSH2 0x2E21 JUMP JUMPDEST SWAP3 SWAP2 POP PUSH2 0x2E94 SWAP1 PUSH2 0x2902 JUMP JUMPDEST SWAP1 PUSH2 0x2E82 JUMP JUMPDEST SWAP1 SWAP2 JUMPDEST DUP4 DUP2 LT PUSH2 0x2EAA JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 DUP1 DUP3 AND SWAP1 DUP1 DUP4 XOR PUSH1 0x1 SHR DUP3 ADD DUP1 SWAP3 GT PUSH2 0x713 JUMPI DUP2 PUSH1 0x20 PUSH1 0x0 DUP7 DUP2 MSTORE DUP3 PUSH6 0xFFFFFFFFFFFF SWAP3 DUP4 SWAP3 KECCAK256 ADD SLOAD AND SWAP1 DUP8 AND LT PUSH1 0x0 EQ PUSH2 0x2EED JUMPI POP POP SWAP3 JUMPDEST SWAP2 SWAP1 PUSH2 0x2E9D JUMP JUMPDEST SWAP1 SWAP5 SWAP3 POP PUSH2 0x2EFB SWAP2 POP PUSH2 0x2902 JUMP JUMPDEST SWAP1 PUSH2 0x2EE6 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2F0D JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xF DUP3 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x2F68 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x2F5D JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2F51 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x2F48 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2F7E JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x10 DUP3 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x2FD9 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x2FCE JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2FC2 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x2FB9 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP4 PUSH1 0x40 SWAP5 PUSH1 0x1F NOT SWAP4 PUSH1 0x20 DUP7 MSTORE DUP2 PUSH1 0x20 DUP8 ADD MSTORE DUP7 DUP7 ADD CALLDATACOPY PUSH1 0x0 DUP6 DUP3 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x713 JUMPI JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x3063 JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xEA9 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x3057 PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP5 ADD AND ADD DUP5 PUSH2 0x19A7 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x30B5 JUMPI PUSH1 0x15 SLOAD PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP2 SUB SWAP1 DUP2 GT PUSH2 0x713 JUMPI DUP1 DUP3 MUL SWAP2 DUP3 DIV SUB PUSH2 0x713 JUMPI PUSH8 0xDE0B6B3A7640000 SWAP1 DIV SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP2 DUP2 SWAP1 DUP5 ISZERO PUSH2 0x315A JUMPI JUMPDEST AND SWAP1 DUP2 ISZERO PUSH2 0x30FF JUMPI JUMPDEST PUSH2 0x19D7 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH2 0x3108 DUP4 PUSH2 0x2849 JUMP JUMPDEST SWAP4 PUSH2 0x3112 NUMBER PUSH2 0x28A8 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 DUP7 DUP1 PUSH2 0x3138 PUSH2 0x2A7F JUMP JUMPDEST AND SWAP2 AND SWAP1 SUB SWAP6 DUP7 GT PUSH2 0x713 JUMPI PUSH2 0x19D7 SWAP6 PUSH2 0x3151 SWAP2 PUSH2 0x2BFA JUMP JUMPDEST POP POP SWAP4 POP PUSH2 0x30DA JUMP JUMPDEST SWAP1 POP PUSH2 0x3165 DUP4 PUSH2 0x2849 JUMP JUMPDEST SWAP1 PUSH2 0x316F NUMBER PUSH2 0x28A8 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP1 PUSH2 0x3195 PUSH2 0x2A7F JUMP JUMPDEST AND SWAP2 AND ADD SWAP3 DUP4 GT PUSH2 0x713 JUMPI DUP4 SWAP3 PUSH2 0x31AB SWAP2 PUSH2 0x2BFA JUMP JUMPDEST POP POP PUSH2 0x30D1 JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP 0xC6 GAS PUSH28 0xB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2 0xA8 0xDE 0xC2 0xBA 0xCD 0xD2 CREATE JUMPDEST MSIZE 0xDE CALLVALUE 0xDA SWAP12 MSTORE RETURNDATASIZE SELFDESTRUCT DUP12 0xE4 0x2E 0x5E CODESIZE 0xE8 XOR 0xC8 0x2F 0xDB SIGNEXTEND 0xAE PUSH24 0x4387A724A164736F6C6343000814000A0000000000000000 ","sourceMap":"394:9432:28:-:0;;;;;;;;;;;;;-1:-1:-1;;394:9432:28;;;;-1:-1:-1;;;;;394:9432:28;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;394:9432:28;;;;;;;;;1737:10;1273:26:0;1269:95;;-1:-1:-1;394:9432:28;;;;;;;;1737:10;;394:9432;;;;-1:-1:-1;394:9432:28;;;1737:10;;394:9432;;3052:40:0;-1:-1:-1;3052:40:0;;394:9432:28;;;1218:3;;394:9432;1321:4;;394:9432;1373:4;;394:9432;1767:30;;394:9432;;;1828:34;394:9432;;;1828:34;394:9432;;;;;;;;;;;-1:-1:-1;;;394:9432:28;;;;;;;;;;;;-1:-1:-1;;;394:9432:28;;;;;;;1269:95:0;394:9432:28;;-1:-1:-1;;;1322:31:0;;-1:-1:-1;1322:31:0;;;394:9432:28;;;1322:31:0;394:9432:28;-1:-1:-1;394:9432:28;;;;;;-1:-1:-1;394:9432:28;;;;;-1:-1:-1;394:9432:28"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":7832,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_available_length_string":{"entryPoint":8546,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":8745,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string_calldata":{"entryPoint":8379,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":8005,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_string_dyn":{"entryPoint":7909,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":7855,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":7607,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_calldata":{"entryPoint":8513,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":8154,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_array_address_dyn":{"entryPoint":8796,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_array_array_string_dyn":{"entryPoint":8851,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":8771,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":8697,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":8711,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":8731,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":8068,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":8343,"id":null,"parameterSlots":2,"returnSlots":0},"fun_checkOwner":{"entryPoint":8428,"id":84,"parameterSlots":0,"returnSlots":0},"increment_uint256":{"entryPoint":8497,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_address_dyn":{"entryPoint":8932,"id":null,"parameterSlots":2,"returnSlots":1},"require_helper_stringliteral_69ca":{"entryPoint":8621,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_uint256_dyn":{"entryPoint":7776,"id":null,"parameterSlots":1,"returnSlots":2},"storage_array_index_access_uint256_dyn_22807":{"entryPoint":7673,"id":null,"parameterSlots":1,"returnSlots":2},"update_storage_value_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH3 0x1F JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH3 0x1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH3 0x8C5504 EQ PUSH3 0x1D9A JUMPI POP DUP1 PUSH4 0x45AF334 EQ PUSH3 0x1D69 JUMPI DUP1 PUSH4 0x19A6A6E9 EQ PUSH3 0x1C48 JUMPI DUP1 PUSH4 0x1C18CE2E EQ PUSH3 0x1C1A JUMPI DUP1 PUSH4 0x33827438 EQ PUSH3 0x1BF1 JUMPI DUP1 PUSH4 0x3C1624D4 EQ PUSH3 0x1B93 JUMPI DUP1 PUSH4 0x3D891F59 EQ PUSH3 0x1B44 JUMPI DUP1 PUSH4 0x4DD03176 EQ PUSH3 0x19E7 JUMPI DUP1 PUSH4 0x513856C8 EQ PUSH3 0x1893 JUMPI DUP1 PUSH4 0x6605BFDA EQ PUSH3 0x17EA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH3 0x1775 JUMPI DUP1 PUSH4 0x754C5E89 EQ PUSH3 0xE40 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0xE17 JUMPI DUP1 PUSH4 0x8E50E509 EQ PUSH3 0xDF7 JUMPI DUP1 PUSH4 0x9A52878A EQ PUSH3 0x2D5 JUMPI DUP1 PUSH4 0xA74498AA EQ PUSH3 0xDBD JUMPI DUP1 PUSH4 0xA759C883 EQ PUSH3 0xC1F JUMPI DUP1 PUSH4 0xBA39A1C5 EQ PUSH3 0xBE6 JUMPI DUP1 PUSH4 0xBFD1769E EQ PUSH3 0xBC6 JUMPI DUP1 PUSH4 0xC1CBBCA7 EQ PUSH3 0x3EB JUMPI DUP1 PUSH4 0xC2161409 EQ PUSH3 0x3AF JUMPI DUP1 PUSH4 0xC5F956AF EQ PUSH3 0x386 JUMPI DUP1 PUSH4 0xD8A5E936 EQ PUSH3 0x313 JUMPI DUP1 PUSH4 0xDAB7706A EQ PUSH3 0x2D5 JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH3 0x27E JUMPI DUP1 PUSH4 0xE1F1C4A7 EQ PUSH3 0x25F JUMPI DUP1 PUSH4 0xE379DCAF EQ PUSH3 0x23F JUMPI PUSH4 0xF2FDE38B EQ PUSH3 0x17C JUMPI CODESIZE PUSH3 0x10 JUMP JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH3 0x199 PUSH3 0x1E98 JUMP JUMPDEST PUSH3 0x1A3 PUSH3 0x20EC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH3 0x209 JUMPI PUSH1 0x0 SLOAD DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0xB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x2710 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH3 0x29B PUSH3 0x20EC JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND SELFBALANCE SWAP1 DUP3 DUP3 ISZERO PUSH3 0x2CB JUMPI JUMPDEST CALL ISZERO PUSH3 0x2BF JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH3 0x2B6 JUMP JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH3 0x2FA PUSH3 0x1E98 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x4 CALLDATALOAD PUSH3 0x333 PUSH3 0x20EC JUMP JUMPDEST PUSH2 0x3E8 DUP2 GT PUSH3 0x342 JUMPI PUSH1 0xA SSTORE STOP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46656520746F6F20686967680000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH3 0x23A JUMPI PUSH3 0x3DD PUSH1 0x20 SWAP2 PUSH3 0x1E60 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 SWAP1 PUSH1 0x2 DUP3 SLOAD EQ PUSH3 0xB9C JUMPI PUSH1 0x2 DUP3 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 DUP1 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x5 DUP6 ADD SLOAD SWAP1 PUSH1 0xFF PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH3 0x43C DUP5 DUP3 AND ISZERO ISZERO PUSH3 0x21AD JUMP JUMPDEST PUSH1 0xA0 SHR AND PUSH3 0xB58 JUMPI CALLVALUE ISZERO PUSH3 0xB14 JUMPI PUSH1 0x6 SWAP3 DUP4 DUP8 ADD DUP2 PUSH3 0x460 CALLVALUE DUP4 SLOAD PUSH3 0x21F9 JUMP JUMPDEST SWAP9 ADD SWAP8 DUP9 SLOAD LT PUSH3 0xAD0 JUMPI DUP7 SWAP8 DUP7 PUSH1 0x0 MSTORE PUSH1 0x4 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH3 0x492 CALLVALUE DUP3 SLOAD PUSH3 0x21F9 JUMP JUMPDEST SWAP1 SSTORE PUSH3 0x4A1 CALLVALUE DUP4 SLOAD PUSH3 0x21F9 JUMP JUMPDEST DUP1 SWAP3 SSTORE PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE DUP8 PUSH32 0xB2ED2E021651F85A4754A44651FC09AC5141BC0329CE4DFE8DD712A5D04A8B39 DUP7 CALLER SWAP4 LOG3 SLOAD GT ISZERO PUSH3 0x4DD JUMPI DUP6 DUP1 SSTORE STOP JUMPDEST DUP5 PUSH1 0x0 MSTORE DUP1 DUP3 MSTORE PUSH3 0x539 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP6 DUP4 ADD SLOAD SWAP6 PUSH2 0x2710 SWAP7 DUP8 PUSH3 0x506 PUSH1 0xA SLOAD DUP4 PUSH3 0x2207 JUMP JUMPDEST DIV SWAP4 DUP2 PUSH3 0x533 DUP11 PUSH3 0x529 PUSH3 0x51F DUP10 DUP1 SWAP8 PUSH3 0x221B JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 PUSH3 0x2207 JUMP JUMPDEST DIV SWAP7 DUP8 SWAP3 PUSH3 0x221B JUMP JUMPDEST PUSH3 0x221B JUMP JUMPDEST SWAP3 PUSH1 0x5 DUP7 ADD SWAP3 PUSH21 0x10000000000000000000000000000000000000000 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 SLOAD AND OR DUP5 SSTORE DUP12 PUSH1 0x0 SWAP1 JUMPDEST PUSH3 0x9C2 JUMPI JUMPDEST POP POP POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 POP PUSH1 0x5 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH3 0x993 JUMPI DUP10 PUSH3 0x5BF DUP3 DUP14 PUSH3 0x5D7 SWAP5 ADD PUSH1 0x5 SSTORE PUSH3 0x1DF9 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x0 NOT DUP4 SLOAD SWAP2 PUSH1 0x3 SHL SWAP3 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP1 ISZERO DUP1 ISZERO PUSH3 0x965 JUMPI JUMPDEST POP POP DUP6 DUP3 ISZERO SWAP2 DUP3 ISZERO PUSH3 0x936 JUMPI JUMPDEST POP POP POP POP PUSH1 0x0 SWAP5 DUP5 PUSH1 0x9 SLOAD AND ISZERO ISZERO DUP1 PUSH3 0x92C JUMPI JUMPDEST ISZERO PUSH3 0x881 JUMPI PUSH1 0x4 DUP4 ADD SWAP2 PUSH3 0x67F DUP4 SLOAD SWAP3 PUSH3 0x624 PUSH1 0xC SLOAD DUP6 PUSH3 0x2207 JUMP JUMPDEST DIV SWAP2 PUSH1 0x7 DUP7 ADD DUP8 DUP10 DUP3 SLOAD AND SWAP6 DUP11 PUSH1 0x9 SLOAD AND PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP3 DUP4 SWAP3 PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB DUP2 PUSH1 0x0 DUP10 GAS CALL SWAP3 DUP4 ISZERO PUSH3 0x2BF JUMPI DUP9 SWAP4 PUSH3 0x85F JUMPI JUMPDEST POP DUP11 DUP10 DUP1 PUSH1 0x9 SLOAD AND SWAP3 SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0xA8F0AD4500000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP4 ADD MSTORE DUP2 PUSH3 0x6F6 PUSH1 0x84 DUP3 ADD PUSH1 0x9 DUP13 ADD PUSH3 0x1FDA JUMP JUMPDEST SUB SWAP3 GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH3 0x820 JUMPI JUMPDEST POP PUSH3 0x7E1 JUMPI POP PUSH1 0x8 SLOAD SWAP2 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP3 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 DUP5 SWAP1 DUP2 PUSH1 0x0 DUP2 PUSH1 0x44 DUP2 ADD SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH3 0x2BF JUMPI DUP5 SWAP4 PUSH1 0x7 SWAP4 PUSH3 0x7AC JUMPI JUMPDEST POP POP JUMPDEST ADD SLOAD AND SWAP2 AND SWAP2 PUSH32 0x6FB060DE3018A5BAB77159E4FF4939DEB91858DDB2995FB7BC9CDAC6552FA328 PUSH1 0x0 DUP1 LOG4 DUP1 DUP3 DUP1 DUP1 DUP1 DUP1 DUP6 DUP1 SSTORE STOP JUMPDEST DUP2 PUSH3 0x7D0 SWAP3 SWAP1 RETURNDATASIZE LT PUSH3 0x7D9 JUMPI JUMPDEST PUSH3 0x7C7 DUP2 DUP4 PUSH3 0x2097 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH3 0x2229 JUMP JUMPDEST POP DUP8 DUP1 PUSH3 0x773 JUMP JUMPDEST POP RETURNDATASIZE PUSH3 0x7BB JUMP JUMPDEST SWAP6 POP POP POP DUP3 SWAP2 POP PUSH1 0x7 SWAP1 DUP5 DUP4 PUSH1 0x8 DUP4 ADD SWAP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH3 0x776 JUMP JUMPDEST SWAP1 SWAP2 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH3 0x857 JUMPI JUMPDEST PUSH3 0x83B DUP2 DUP4 PUSH3 0x2097 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x23A JUMPI MLOAD DUP7 DUP2 AND DUP2 SUB PUSH3 0x23A JUMPI SWAP1 DUP11 PUSH3 0x704 JUMP JUMPDEST POP RETURNDATASIZE PUSH3 0x82F JUMP JUMPDEST PUSH3 0x879 SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH3 0x7D9 JUMPI PUSH3 0x7C7 DUP2 DUP4 PUSH3 0x2097 JUMP JUMPDEST POP DUP13 PUSH3 0x696 JUMP JUMPDEST POP POP SWAP1 DUP2 DUP2 DUP5 PUSH1 0x7 PUSH3 0x8EA SWAP6 ADD SLOAD AND DUP6 PUSH1 0x8 SLOAD AND SWAP1 PUSH1 0x4 DUP5 ADD SLOAD SWAP2 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 SWAP9 DUP2 SWAP6 DUP3 SWAP5 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH3 0x2BF JUMPI DUP5 SWAP4 PUSH1 0x7 SWAP4 PUSH3 0x909 JUMPI JUMPDEST POP POP PUSH3 0x776 JUMP JUMPDEST DUP2 PUSH3 0x923 SWAP3 SWAP1 RETURNDATASIZE LT PUSH3 0x7D9 JUMPI PUSH3 0x7C7 DUP2 DUP4 PUSH3 0x2097 JUMP JUMPDEST POP DUP8 DUP1 PUSH3 0x901 JUMP JUMPDEST POP DUP2 ISZERO ISZERO PUSH3 0x604 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP5 SWAP4 DUP5 SWAP4 DUP5 SWAP4 SLOAD AND SWAP1 DUP4 SWAP1 PUSH3 0x95B JUMPI JUMPDEST CALL ISZERO PUSH3 0x2BF JUMPI DUP8 DUP1 DUP6 DUP2 PUSH3 0x5EF JUMP JUMPDEST POP PUSH2 0x8FC PUSH3 0x94A JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 DUP12 PUSH1 0x8 SLOAD AND SWAP1 DUP4 SWAP1 PUSH3 0x989 JUMPI JUMPDEST CALL ISZERO PUSH3 0x2BF JUMPI DUP10 DUP1 PUSH3 0x5E1 JUMP JUMPDEST POP PUSH2 0x8FC PUSH3 0x97A JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 SLOAD DUP1 DUP3 LT ISZERO PUSH3 0xAC9 JUMPI DUP13 PUSH3 0x9D9 DUP4 PUSH3 0x1E60 JUMP JUMPDEST SWAP1 SLOAD SWAP1 DUP7 SHL SHR EQ PUSH3 0x9F8 JUMPI POP PUSH3 0x9F1 SWAP1 PUSH3 0x2131 JUMP JUMPDEST DUP13 PUSH3 0x581 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 SWAP11 SWAP12 SWAP13 POP PUSH1 0x0 NOT SWAP2 DUP3 DUP3 ADD SWAP2 DUP3 GT PUSH3 0xA9A JUMPI PUSH3 0x5BF PUSH3 0xA28 PUSH3 0xA35 SWAP4 PUSH3 0x1E60 JUMP JUMPDEST SWAP1 SLOAD SWAP1 DUP8 SHL SHR SWAP2 PUSH3 0x1E60 JUMP JUMPDEST DUP2 SLOAD DUP1 ISZERO PUSH3 0xA6B JUMPI DUP2 ADD SWAP3 PUSH3 0xA4C DUP5 PUSH3 0x1E60 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP3 SHL SHL NOT AND SWAP1 SSTORE SSTORE SWAP1 DUP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 DUP12 DUP1 DUP1 PUSH3 0x587 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH3 0x587 JUMP JUMPDEST PUSH1 0x64 DUP4 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746172676574000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2076616C7565000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920626F6E646564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0xC SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x5 SLOAD PUSH3 0xC40 DUP2 PUSH3 0x225C JUMP JUMPDEST SWAP1 PUSH3 0xC4C DUP2 PUSH3 0x2293 JUMP JUMPDEST PUSH3 0xC57 DUP3 PUSH3 0x2293 JUMP JUMPDEST PUSH3 0xC62 DUP4 PUSH3 0x225C JUMP JUMPDEST SWAP2 PUSH3 0xC6E DUP5 PUSH3 0x225C JUMP JUMPDEST SWAP4 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0xCE8 JUMPI PUSH3 0xCA8 DUP8 PUSH3 0xCE4 DUP9 PUSH3 0xCD5 DUP10 PUSH3 0xCC6 DUP11 PUSH3 0xCB7 DUP12 PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP10 PUSH1 0xA0 DUP12 MSTORE PUSH1 0xA0 DUP12 ADD SWAP1 PUSH3 0x1F45 JUMP JUMPDEST SWAP1 DUP10 DUP3 SUB PUSH1 0x20 DUP12 ADD MSTORE PUSH3 0x1EE5 JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x40 DUP10 ADD MSTORE PUSH3 0x1EE5 JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x60 DUP8 ADD MSTORE PUSH3 0x1F45 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x80 DUP6 ADD MSTORE PUSH3 0x1EAF JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 PUSH3 0xCF8 PUSH3 0xDB7 SWAP3 PUSH3 0x1DF9 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 DUP3 SHL SHR SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP12 PUSH3 0xD2C DUP7 DUP6 PUSH1 0x7 DUP6 ADD SLOAD AND SWAP3 PUSH3 0x22E4 JUMP JUMPDEST MSTORE PUSH1 0x40 MLOAD PUSH3 0xD49 DUP2 PUSH3 0xD41 DUP2 DUP6 PUSH3 0x1FDA JUMP JUMPDEST SUB DUP3 PUSH3 0x2097 JUMP JUMPDEST PUSH3 0xD55 DUP7 DUP11 PUSH3 0x22E4 JUMP JUMPDEST MSTORE PUSH3 0xD62 DUP6 DUP10 PUSH3 0x22E4 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xD7A DUP2 PUSH3 0xD41 DUP2 PUSH1 0x1 DUP7 ADD PUSH3 0x1FDA JUMP JUMPDEST PUSH3 0xD86 DUP7 DUP12 PUSH3 0x22E4 JUMP JUMPDEST MSTORE PUSH3 0xD93 DUP6 DUP11 PUSH3 0x22E4 JUMP JUMPDEST POP ADD SLOAD AND PUSH3 0xDA3 DUP4 DUP10 PUSH3 0x22E4 JUMP JUMPDEST MSTORE PUSH3 0xDB0 DUP3 DUP10 PUSH3 0x22E4 JUMP JUMPDEST MSTORE PUSH3 0x2131 JUMP JUMPDEST PUSH3 0xC72 JUMP JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x0 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH2 0x100 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH3 0x23A JUMPI PUSH3 0xE77 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0x20BB JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH3 0x23A JUMPI PUSH3 0xE9B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0x20BB JUMP JUMPDEST PUSH1 0x44 SWAP4 SWAP2 SWAP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH3 0x23A JUMPI PUSH3 0xEC1 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0x20BB JUMP JUMPDEST PUSH1 0x64 SWAP4 SWAP2 SWAP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH3 0x23A JUMPI PUSH3 0xEE7 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0x20BB JUMP JUMPDEST SWAP3 SWAP1 SWAP5 PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH3 0x23A JUMPI PUSH3 0xF0D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0x20BB JUMP JUMPDEST SWAP4 SWAP1 PUSH1 0xE4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH3 0x23A JUMPI PUSH3 0xF32 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0x20BB JUMP JUMPDEST SWAP6 SWAP1 SWAP7 PUSH1 0xA4 CALLDATALOAD ISZERO ISZERO DUP1 PUSH3 0x1769 JUMPI JUMPDEST ISZERO PUSH3 0x1725 JUMPI PUSH1 0x2 SLOAD SWAP10 PUSH3 0xF56 DUP12 PUSH3 0x2131 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x490E DUP2 ADD LT PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x490E DUP8 ADD GT OR PUSH3 0x993 JUMPI DUP5 SWAP4 PUSH3 0x1000 DUP16 SWAP4 DUP16 SWAP6 PUSH3 0xFE9 DUP16 PUSH3 0x1017 SWAP8 PUSH3 0xFD1 SWAP2 DUP16 PUSH3 0x103E SWAP12 PUSH3 0xFB9 SWAP2 PUSH2 0x100 DUP16 PUSH2 0x490E PUSH3 0x22FA DUP3 CODECOPY PUSH2 0x490E ADD DUP2 DUP2 MSTORE ADD SWAP2 PUSH3 0x2141 JUMP JUMPDEST SWAP2 DUP13 PUSH1 0x20 PUSH2 0x490E DUP3 ADD DUP6 SUB SWAP2 PUSH2 0x490E ADD ADD MSTORE PUSH3 0x2141 JUMP JUMPDEST PUSH2 0x490E DUP11 ADD DUP2 SUB PUSH1 0x40 PUSH2 0x490E DUP13 ADD ADD MSTORE DUP12 DUP14 PUSH3 0x2141 JUMP JUMPDEST SWAP2 PUSH2 0x490E DUP10 ADD DUP4 SUB PUSH1 0x60 PUSH2 0x490E DUP12 ADD ADD MSTORE PUSH3 0x2141 JUMP JUMPDEST SWAP2 PUSH2 0x490E DUP7 ADD DUP4 SUB PUSH1 0x80 PUSH2 0x490E DUP9 ADD ADD MSTORE PUSH3 0x2141 JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD PUSH2 0x490E DUP5 ADD PUSH1 0xA0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0xC0 DUP3 ADD MSTORE DUP1 DUP3 SUB PUSH1 0xE0 SWAP1 SWAP2 ADD MSTORE DUP8 DUP10 PUSH3 0x2141 JUMP JUMPDEST SUB SWAP1 PUSH1 0x0 CREATE SWAP8 DUP9 ISZERO PUSH3 0x2BF JUMPI PUSH1 0x40 MLOAD SWAP10 DUP11 PUSH2 0x160 DUP2 ADD LT PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x160 DUP14 ADD GT OR PUSH3 0x993 JUMPI PUSH3 0x10EE SWAP8 PUSH3 0x108E PUSH3 0x1098 SWAP4 PUSH3 0x10A5 SWAP8 PUSH2 0x160 DUP16 ADD PUSH1 0x40 MSTORE CALLDATASIZE SWAP2 PUSH3 0x2162 JUMP JUMPDEST DUP13 MSTORE CALLDATASIZE SWAP2 PUSH3 0x2162 JUMP JUMPDEST PUSH1 0x20 DUP11 ADD MSTORE CALLDATASIZE SWAP2 PUSH3 0x2162 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0x80 DUP8 ADD MSTORE CALLER PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0x0 PUSH1 0xE0 DUP8 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x100 DUP8 ADD MSTORE PUSH1 0x0 PUSH2 0x120 DUP8 ADD MSTORE CALLDATASIZE SWAP2 PUSH3 0x2162 JUMP JUMPDEST PUSH2 0x140 DUP5 ADD MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH3 0x993 JUMPI DUP2 SWAP1 PUSH3 0x1125 DUP5 SLOAD PUSH3 0x1F84 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x16D0 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x165F JUMPI PUSH1 0x0 SWAP3 PUSH3 0x1653 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR DUP2 SSTORE JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH3 0x993 JUMPI DUP2 SWAP1 PUSH3 0x1185 PUSH1 0x1 DUP6 ADD SLOAD PUSH3 0x1F84 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x15FB JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x1584 JUMPI PUSH1 0x0 SWAP3 PUSH3 0x1578 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP3 ADD SSTORE JUMPDEST PUSH1 0x40 DUP5 ADD MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH3 0x993 JUMPI PUSH3 0x11E6 PUSH1 0x2 DUP5 ADD SLOAD PUSH3 0x1F84 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x152C JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x14B1 JUMPI SWAP2 DUP1 PUSH2 0x140 SWAP5 SWAP3 PUSH1 0x9 SWAP5 PUSH1 0x0 SWAP3 PUSH3 0x14A5 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 DUP3 ADD SSTORE JUMPDEST PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP7 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0x5 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA0 DUP9 ADD MLOAD AND DUP2 SLOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000 PUSH21 0xFF0000000000000000000000000000000000000000 PUSH1 0xC0 DUP12 ADD MLOAD ISZERO ISZERO PUSH1 0xA0 SHL AND SWAP3 AND OR OR SWAP1 SSTORE PUSH1 0xE0 DUP7 ADD MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0x7 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 DUP9 ADD MLOAD AND SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP2 DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x8 DUP3 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x120 DUP10 ADD MLOAD AND SWAP1 DUP3 SLOAD AND OR SWAP1 SSTORE ADD SWAP4 ADD MLOAD SWAP3 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH3 0x993 JUMPI PUSH3 0x1320 DUP3 SLOAD PUSH3 0x1F84 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x1458 JUMPI JUMPDEST POP PUSH1 0x20 SWAP5 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH3 0x13ED JUMPI SWAP5 DUP2 SWAP3 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH3 0x13E1 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x6 SLOAD SWAP2 PUSH9 0x10000000000000000 DUP4 LT ISZERO PUSH3 0x993 JUMPI PUSH3 0x138C DUP3 PUSH3 0x5BF DUP6 PUSH1 0x1 PUSH1 0x20 SWAP8 ADD PUSH1 0x6 SSTORE PUSH3 0x1E60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 MSTORE PUSH1 0x7 DUP4 MSTORE DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE DUP2 PUSH32 0xE5E423600CEF64B5F4620E0388D75415036DA0DE388DA33D376934BE9B0BD392 DUP5 CALLER SWAP4 LOG3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST ADD MLOAD SWAP1 POP DUP6 DUP1 PUSH3 0x1349 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP6 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP9 DUP2 LT PUSH3 0x143F JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 SWAP9 LT PUSH3 0x1425 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0x135D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP6 DUP1 DUP1 PUSH3 0x1417 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH3 0x1400 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH3 0x149A JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0x148D JUMPI POP PUSH3 0x132A JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x147E JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH3 0x1475 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH3 0x1213 JUMP JUMPDEST SWAP1 PUSH1 0x2 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH3 0x1513 JUMPI POP SWAP3 PUSH2 0x140 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH1 0x9 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x14F9 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP3 ADD SSTORE PUSH3 0x122A JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH3 0x14E8 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH3 0x14C2 JUMP JUMPDEST PUSH1 0x2 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0x1570 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0x1563 JUMPI POP POP PUSH3 0x11F0 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x154B JUMP JUMPDEST POP DUP1 PUSH3 0x154B JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH3 0x11A8 JUMP JUMPDEST SWAP3 POP PUSH1 0x1 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH3 0x15DF JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x15C5 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP3 ADD SSTORE PUSH3 0x11BF JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH3 0x15B4 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x1597 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x1 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0x164B JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0x163B JUMPI POP POP PUSH3 0x118F JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH3 0x1623 JUMP JUMPDEST POP DUP1 PUSH3 0x161D JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH3 0x1148 JUMP JUMPDEST SWAP3 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH3 0x16B4 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x169A JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP2 SSTORE PUSH3 0x115C JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH3 0x168C JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x166F JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0x171D JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0x170D JUMPI POP POP PUSH3 0x112F JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH3 0x16F5 JUMP JUMPDEST POP DUP1 PUSH3 0x16EF JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420706172616D73000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0xC4 CALLDATALOAD ISZERO ISZERO PUSH3 0xF41 JUMP JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH3 0x1792 PUSH3 0x20EC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH3 0x180F PUSH3 0x1E98 JUMP JUMPDEST PUSH3 0x1819 PUSH3 0x20EC JUMP JUMPDEST AND DUP1 ISZERO PUSH3 0x184F JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH3 0x18C6 DUP2 DUP5 PUSH3 0x1FDA JUMP JUMPDEST SUB PUSH3 0x18D3 SWAP1 DUP3 PUSH3 0x2097 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH3 0x18E7 DUP2 PUSH1 0x1 DUP5 ADD PUSH3 0x1FDA JUMP JUMPDEST SUB PUSH3 0x18F4 SWAP1 DUP5 PUSH3 0x2097 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH3 0x1907 DUP2 PUSH1 0x2 DUP6 ADD PUSH3 0x1FDA JUMP JUMPDEST SUB PUSH3 0x1914 SWAP1 DUP3 PUSH3 0x2097 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD SWAP1 PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH1 0x7 DUP9 ADD SLOAD AND SWAP4 DUP2 PUSH1 0x8 DUP10 ADD SLOAD AND SWAP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x9 DUP2 SWAP12 ADD SWAP1 PUSH3 0x1957 SWAP2 PUSH3 0x1FDA JUMP JUMPDEST SUB PUSH3 0x1964 SWAP1 DUP11 PUSH3 0x2097 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 PUSH2 0x160 DUP1 DUP14 MSTORE DUP13 ADD PUSH3 0x197D SWAP2 PUSH3 0x1DB7 JUMP JUMPDEST DUP12 DUP2 SUB PUSH1 0x20 DUP14 ADD MSTORE PUSH3 0x1990 SWAP2 PUSH3 0x1DB7 JUMP JUMPDEST DUP11 DUP2 SUB PUSH1 0x40 DUP13 ADD MSTORE PUSH3 0x19A3 SWAP2 PUSH3 0x1DB7 JUMP JUMPDEST SWAP7 PUSH1 0x60 DUP11 ADD MSTORE PUSH1 0x80 DUP10 ADD MSTORE DUP2 AND PUSH1 0xA0 DUP9 ADD MSTORE PUSH1 0xA0 SHR PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH2 0x140 DUP5 ADD MSTORE PUSH3 0xCE4 SWAP2 PUSH3 0x1DB7 JUMP JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x6 DUP1 SLOAD SWAP1 PUSH3 0x1A0A DUP3 PUSH3 0x225C JUMP JUMPDEST SWAP1 PUSH3 0x1A16 DUP4 PUSH3 0x2293 JUMP JUMPDEST PUSH3 0x1A21 DUP5 PUSH3 0x225C JUMP JUMPDEST SWAP1 PUSH3 0x1A2D DUP6 PUSH3 0x225C JUMP JUMPDEST SWAP5 PUSH3 0x1A39 DUP2 PUSH3 0x225C JUMP JUMPDEST SWAP4 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH3 0x1AA0 JUMPI PUSH3 0xCA8 DUP8 PUSH3 0xCE4 DUP9 PUSH3 0x1A91 DUP13 PUSH3 0x1A82 DUP12 PUSH3 0x1A73 DUP13 PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP10 PUSH1 0xA0 DUP12 MSTORE PUSH1 0xA0 DUP12 ADD SWAP1 PUSH3 0x1EAF JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x40 DUP10 ADD MSTORE PUSH3 0x1EAF JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x60 DUP8 ADD MSTORE PUSH3 0x1EAF JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x80 DUP6 ADD MSTORE PUSH3 0x1F45 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x7 DUP10 PUSH3 0x1ABB PUSH3 0x1B3E SWAP6 PUSH3 0x1E60 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 DUP3 SHL SHR DUP1 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH3 0x1ADC DUP7 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP5 PUSH3 0x22E4 JUMP JUMPDEST MSTORE PUSH1 0x40 MLOAD PUSH3 0x1AF4 DUP2 PUSH3 0xD41 DUP2 PUSH1 0x2 DUP8 ADD PUSH3 0x1FDA JUMP JUMPDEST PUSH3 0x1B00 DUP7 DUP12 PUSH3 0x22E4 JUMP JUMPDEST MSTORE PUSH3 0x1B0D DUP6 DUP11 PUSH3 0x22E4 JUMP JUMPDEST POP DUP2 ADD SLOAD PUSH3 0x1B1D DUP6 DUP12 PUSH3 0x22E4 JUMP JUMPDEST MSTORE DUP1 DUP7 ADD SLOAD PUSH3 0x1B2E DUP6 DUP15 PUSH3 0x22E4 JUMP JUMPDEST MSTORE ADD SLOAD AND PUSH3 0xDB0 DUP3 DUP10 PUSH3 0x22E4 JUMP JUMPDEST PUSH3 0x1A3D JUMP JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 SWAP2 SUB PUSH3 0x23A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH3 0x1BB8 PUSH3 0x1E98 JUMP JUMPDEST PUSH3 0x1BC2 PUSH3 0x20EC JUMP JUMPDEST AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x9 SLOAD AND OR PUSH1 0x9 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x9 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH3 0x23A JUMPI PUSH3 0x3DD PUSH1 0x20 SWAP2 PUSH3 0x1DF9 JUMP JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH3 0x1D26 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH3 0xCE4 PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP2 AND SWAP3 PUSH3 0x1C94 DUP5 ISZERO ISZERO PUSH3 0x21AD JUMP JUMPDEST PUSH1 0x3 DUP7 ADD SLOAD SWAP4 PUSH1 0xFF PUSH1 0x6 DUP9 ADD SLOAD SWAP4 DUP4 PUSH1 0x7 DUP11 ADD SLOAD AND SWAP4 PUSH1 0x8 DUP11 ADD SLOAD AND SWAP5 PUSH3 0x1D35 PUSH1 0x40 MLOAD SWAP11 PUSH3 0x1CD2 DUP13 PUSH3 0x1CCA DUP2 DUP5 PUSH3 0x1FDA JUMP JUMPDEST SUB DUP14 PUSH3 0x2097 JUMP JUMPDEST PUSH3 0x1D10 PUSH1 0x40 MLOAD SWAP2 PUSH3 0x1CF6 DUP4 PUSH3 0x1CEE DUP2 PUSH1 0x2 DUP6 ADD PUSH3 0x1FDA JUMP JUMPDEST SUB DUP5 PUSH3 0x2097 JUMP JUMPDEST PUSH3 0x1D08 PUSH1 0x40 MLOAD DUP1 SWAP13 DUP2 SWAP4 ADD PUSH3 0x1FDA JUMP JUMPDEST SUB DUP11 PUSH3 0x2097 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP13 DUP14 PUSH2 0x120 SWAP1 DUP2 DUP2 MSTORE ADD SWAP1 PUSH3 0x1DB7 JUMP JUMPDEST DUP13 DUP2 SUB PUSH1 0x20 DUP15 ADD MSTORE SWAP1 PUSH3 0x1DB7 JUMP JUMPDEST SWAP8 PUSH1 0x40 DUP12 ADD MSTORE PUSH1 0x60 DUP11 ADD MSTORE PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x80 DUP9 ADD MSTORE PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD MSTORE DUP4 DUP3 SUB PUSH2 0x100 DUP6 ADD MSTORE PUSH3 0x1DB7 JUMP JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x60 PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH3 0x23A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x23A JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH3 0x1DE4 JUMPI POP POP PUSH1 0x1F NOT PUSH1 0x1F DUP5 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP7 SWAP8 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH3 0x1DC2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH3 0x1E31 JUMPI PUSH1 0x5 PUSH1 0x0 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH3 0x1E31 JUMPI PUSH1 0x6 PUSH1 0x0 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x23A JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH3 0x1ED0 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH3 0x1EC1 JUMP JUMPDEST SWAP1 DUP1 DUP3 MLOAD SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 DUP1 SWAP2 ADD SWAP3 DUP2 DUP1 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP6 ADD SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH3 0x1F14 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH3 0x1F34 DUP4 PUSH1 0x1F NOT DUP7 PUSH1 0x1 SWAP7 SUB ADD DUP8 MSTORE DUP11 MLOAD PUSH3 0x1DB7 JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH3 0x1F03 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH3 0x1F66 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH3 0x1F57 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x1FCF JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x1FA0 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x1F94 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 SWAP2 DUP1 SLOAD SWAP2 PUSH3 0x1FED DUP4 PUSH3 0x1F84 JUMP JUMPDEST SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 SWAP4 DUP5 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH3 0x2054 JUMPI POP PUSH1 0x1 EQ PUSH3 0x2011 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP3 DUP4 PUSH1 0x0 KECCAK256 SWAP3 DUP5 PUSH1 0x0 SWAP5 JUMPDEST DUP4 DUP7 LT PUSH3 0x203F JUMPI POP POP POP POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH3 0x200B JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD DUP4 ADD MSTORE SWAP5 ADD SWAP4 DUP6 SWAP1 DUP3 ADD PUSH3 0x2026 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP5 SWAP6 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 SWAP2 SWAP4 POP AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH3 0x200B JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH1 0x1F NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH3 0x993 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH3 0x23A JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH3 0x23A JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH3 0x23A JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x0 SLOAD AND CALLER SUB PUSH3 0x2101 JUMPI JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH3 0xA9A JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 PUSH1 0x20 SWAP5 SWAP4 PUSH1 0x1F NOT SWAP4 DUP2 DUP7 MSTORE DUP7 DUP7 ADD CALLDATACOPY PUSH1 0x0 DUP6 DUP3 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH3 0x993 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH3 0x218F PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP5 ADD AND ADD DUP5 PUSH3 0x2097 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH3 0x23A JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST ISZERO PUSH3 0x21B5 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4167656E74206E6F7420666F756E640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH3 0xA9A JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH3 0xA9A JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH3 0xA9A JUMPI JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH3 0x23A JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH3 0x23A JUMPI SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH3 0x993 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH3 0x2268 DUP3 PUSH3 0x2243 JUMP JUMPDEST PUSH3 0x2277 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH3 0x2097 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x1F NOT PUSH3 0x2289 DUP3 SWAP5 PUSH3 0x2243 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH3 0x229F DUP3 PUSH3 0x2243 JUMP JUMPDEST PUSH3 0x22AE PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH3 0x2097 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x1F NOT PUSH3 0x22C0 DUP3 SWAP5 PUSH3 0x2243 JUMP JUMPDEST ADD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH3 0x22D2 JUMPI POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x60 PUSH1 0x20 DUP1 SWAP4 DUP6 ADD ADD MSTORE ADD PUSH3 0x22C5 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH3 0x1E31 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP INVALID PUSH2 0x160 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x142 JUMPI PUSH3 0x490E SWAP1 DUP2 CODESIZE SUB DUP1 SWAP3 PUSH3 0x21 DUP3 PUSH3 0x15D JUMP JUMPDEST DUP3 CODECOPY DUP2 DUP2 ADD SWAP1 PUSH2 0x100 DUP1 SWAP4 SLT PUSH3 0x142 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 SWAP1 DUP4 DUP2 GT PUSH3 0x142 JUMPI DUP2 PUSH3 0x54 SWAP2 DUP5 ADD PUSH3 0x1DB JUMP JUMPDEST SWAP2 PUSH2 0x180 MLOAD DUP5 DUP2 GT PUSH3 0x142 JUMPI DUP3 PUSH3 0x6F SWAP2 DUP4 ADD PUSH3 0x1DB JUMP JUMPDEST PUSH2 0x1A0 MLOAD DUP6 DUP2 GT PUSH3 0x142 JUMPI DUP4 PUSH3 0x89 SWAP2 DUP5 ADD PUSH3 0x1DB JUMP JUMPDEST PUSH2 0x1C0 MLOAD DUP7 DUP2 GT PUSH3 0x142 JUMPI DUP5 PUSH3 0xA3 SWAP2 DUP6 ADD PUSH3 0x1DB JUMP JUMPDEST SWAP1 PUSH2 0x1E0 MLOAD DUP8 DUP2 GT PUSH3 0x142 JUMPI DUP6 PUSH3 0xBE SWAP2 DUP7 ADD PUSH3 0x1DB JUMP JUMPDEST SWAP3 PUSH2 0x200 MLOAD SWAP5 PUSH3 0xCE PUSH3 0x241 JUMP JUMPDEST SWAP7 PUSH2 0x240 MLOAD SWAP10 DUP11 GT PUSH3 0x142 JUMPI PUSH3 0xF3 SWAP10 PUSH3 0xEC SWAP3 ADD PUSH3 0x1DB JUMP JUMPDEST SWAP7 PUSH3 0xA1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31BF SWAP2 DUP3 PUSH3 0x170F DUP4 CODECOPY PUSH1 0x80 MLOAD DUP3 PUSH2 0x255C ADD MSTORE PUSH1 0xA0 MLOAD DUP3 PUSH2 0x2617 ADD MSTORE PUSH1 0xC0 MLOAD DUP3 PUSH2 0x252D ADD MSTORE PUSH1 0xE0 MLOAD DUP3 PUSH2 0x25AB ADD MSTORE MLOAD DUP2 PUSH2 0x25D1 ADD MSTORE PUSH2 0x120 MLOAD DUP2 PUSH2 0xF51 ADD MSTORE PUSH2 0x140 MLOAD DUP2 PUSH2 0xF7A ADD MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH2 0x160 SWAP1 DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH3 0x183 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH3 0x147 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x183 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH3 0x1B4 DUP3 PUSH3 0x189 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH3 0x1CA JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x1B9 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH3 0x142 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 DUP3 GT PUSH3 0x183 JUMPI PUSH1 0x40 MLOAD SWAP4 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP6 ADD SWAP1 DUP2 GT DUP6 DUP3 LT OR PUSH3 0x183 JUMPI PUSH1 0x40 MSTORE DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH3 0x142 JUMPI PUSH3 0x23E SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH3 0x1B6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x220 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x142 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x28B JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x275 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x269 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x2A3 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x3 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH3 0x2E4 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x2D8 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2CB JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH3 0x2C2 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x2FC JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x4 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH3 0x33D JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x331 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x324 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH3 0x31B JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x355 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xD DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH3 0x396 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x38A JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x37D JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH3 0x374 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x3AE JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xE DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH3 0x3EF JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x3E3 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x3D6 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH3 0x3CD JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x407 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xF DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH3 0x448 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x43C JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x42F JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH3 0x426 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x460 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x10 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH3 0x4A1 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x495 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x488 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH3 0x47F JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x4B9 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x5 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH3 0x4FA JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x4EE JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x4E1 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH3 0x4D8 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x512 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x6 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH3 0x553 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x547 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x53A JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH3 0x531 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x183 JUMPI PUSH3 0x58A DUP2 PUSH3 0x584 PUSH1 0x4 SLOAD PUSH3 0x259 JUMP JUMPDEST PUSH3 0x2EF JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x5C9 JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH3 0x5BD JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x5A6 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP4 AND SWAP5 SWAP1 SWAP2 SWAP1 PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH3 0x638 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH3 0x61E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x613 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH3 0x5FD JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x183 JUMPI PUSH3 0x67D DUP2 PUSH3 0x677 PUSH1 0xD SLOAD PUSH3 0x259 JUMP JUMPDEST PUSH3 0x348 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x6BC JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH3 0x6B0 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xD SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x699 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP4 AND SWAP5 SWAP1 SWAP2 SWAP1 PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH3 0x72B JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH3 0x711 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xD SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x706 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH3 0x6F0 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x183 JUMPI PUSH3 0x770 DUP2 PUSH3 0x76A PUSH1 0xE SLOAD PUSH3 0x259 JUMP JUMPDEST PUSH3 0x3A1 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x7AF JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH3 0x7A3 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xE SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x78C JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP4 AND SWAP5 SWAP1 SWAP2 SWAP1 PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH3 0x81E JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH3 0x804 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xE SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x7F9 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH3 0x7E3 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x183 JUMPI PUSH3 0x863 DUP2 PUSH3 0x85D PUSH1 0xF SLOAD PUSH3 0x259 JUMP JUMPDEST PUSH3 0x3FA JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x8A2 JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH3 0x896 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xF SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x87F JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP4 AND SWAP5 SWAP1 SWAP2 SWAP1 PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH3 0x911 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH3 0x8F7 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xF SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x8EC JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH3 0x8D6 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x183 JUMPI PUSH3 0x956 DUP2 PUSH3 0x950 PUSH1 0x10 SLOAD PUSH3 0x259 JUMP JUMPDEST PUSH3 0x453 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x995 JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH3 0x989 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x10 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x972 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP4 AND SWAP5 SWAP1 SWAP2 SWAP1 PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH3 0xA04 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH3 0x9EA JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x10 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x9DF JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH3 0x9C9 JUMP JUMPDEST SWAP7 SWAP2 SWAP3 SWAP7 SWAP5 SWAP4 SWAP5 PUSH1 0x40 MLOAD SWAP1 PUSH3 0xA33 DUP3 PUSH3 0x189 JUMP JUMPDEST PUSH1 0x1 DUP1 DUP4 MSTORE PUSH1 0x20 SWAP1 DUP2 DUP5 ADD SWAP5 PUSH1 0x31 PUSH1 0xF8 SHL DUP7 MSTORE DUP4 MLOAD PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x183 JUMPI PUSH3 0xA6E DUP2 PUSH3 0xA68 PUSH1 0x3 SLOAD PUSH3 0x259 JUMP JUMPDEST PUSH3 0x296 JUMP JUMPDEST DUP4 SWAP3 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH3 0xB72 JUMPI DUP2 DUP1 SWAP2 PUSH3 0xAA4 SWAP6 PUSH1 0x0 SWAP4 PUSH3 0xB66 JUMPI JUMPDEST POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE PUSH3 0x55E JUMP JUMPDEST PUSH3 0xAAF DUP3 PUSH3 0x1015 JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH3 0xABE DUP4 PUSH3 0x1125 JUMP JUMPDEST PUSH2 0x140 MSTORE DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH1 0xE0 MSTORE MLOAD SWAP1 KECCAK256 PUSH2 0x100 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH3 0xADF PUSH3 0x12A4 JUMP JUMPDEST PUSH1 0x80 MSTORE ADDRESS PUSH1 0xC0 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH3 0xB4D JUMPI PUSH3 0xB39 PUSH3 0xB46 SWAP5 PUSH3 0xB33 PUSH3 0x1B4 SWAP9 PUSH3 0xB2D PUSH3 0xB3F SWAP7 PUSH3 0xB1C DUP12 PUSH3 0xBFE JUMP JUMPDEST PUSH3 0xB27 PUSH1 0x1 PUSH1 0xC SSTORE JUMP JUMPDEST PUSH3 0x651 JUMP JUMPDEST PUSH3 0x744 JUMP JUMPDEST PUSH3 0x837 JUMP JUMPDEST PUSH3 0x92A JUMP JUMPDEST DUP3 PUSH3 0xF27 JUMP JUMPDEST DUP1 PUSH3 0xC47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP9 ADD MLOAD SWAP3 POP CODESIZE PUSH3 0xA8D JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE SWAP2 SWAP3 PUSH1 0x1F NOT DUP3 AND SWAP1 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 PUSH1 0x0 JUMPDEST DUP8 DUP3 DUP3 LT PUSH3 0xBE9 JUMPI POP POP SWAP1 DUP4 PUSH3 0xAA4 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH3 0xBCF JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH3 0x55E JUMP JUMPDEST DUP8 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH3 0xBC1 JUMP JUMPDEST DUP10 DUP5 ADD MLOAD DUP6 SSTORE SWAP4 DUP7 ADD SWAP4 SWAP3 DUP4 ADD SWAP3 ADD PUSH3 0xBA4 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD DUP7 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH3 0x1B4 SWAP7 SWAP6 AND SWAP5 SWAP4 SWAP2 SWAP3 SWAP2 DUP6 SWAP1 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F DUP5 DUP1 LOG4 DUP1 PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP2 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP4 SWAP3 SWAP2 SWAP1 DUP2 AND SWAP1 DUP2 DUP6 EQ ISZERO DUP1 PUSH3 0xE49 JUMPI JUMPDEST PUSH3 0xCDA JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH3 0xD56 JUMPI JUMPDEST POP POP DUP3 PUSH3 0xCF2 JUMPI JUMPDEST DUP1 DUP1 PUSH3 0xCD3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x48EE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH3 0xD32 SWAP2 PUSH3 0xD2B SWAP1 SWAP2 PUSH3 0x1310 JUMP JUMPDEST SWAP1 PUSH3 0xE53 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE LOG2 CODESIZE DUP1 DUP1 PUSH3 0xCEA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH3 0xD78 DUP5 PUSH3 0x1310 JUMP JUMPDEST SWAP1 PUSH6 0xFFFFFFFFFFFF SWAP1 DUP2 NUMBER GT PUSH3 0xE2A JUMPI DUP1 SLOAD PUSH1 0x0 DUP2 PUSH3 0xDE5 JUMPI POP POP SWAP1 PUSH3 0xDC2 SWAP2 PUSH3 0xDB8 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x48EE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP5 PUSH1 0x0 PUSH3 0x16DA JUMP JUMPDEST SWAP2 NUMBER AND SWAP1 PUSH3 0x151E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE LOG2 CODESIZE DUP1 PUSH3 0xCE1 JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 SWAP2 SWAP4 NOT SWAP5 DUP5 DUP7 DUP2 ADD GT PUSH3 0xE24 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x48EE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP6 PUSH3 0xDC2 SWAP6 PUSH1 0x20 DUP5 DUP7 PUSH3 0xDB8 SWAP7 MSTORE KECCAK256 ADD ADD SLOAD PUSH1 0x30 SHR PUSH3 0x16DA JUMP JUMPDEST PUSH3 0xF11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6DFCC65 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x30 PUSH1 0x4 DUP3 ADD MSTORE NUMBER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST POP DUP4 ISZERO ISZERO PUSH3 0xCCD JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF SWAP1 DUP2 NUMBER GT PUSH3 0xE2A JUMPI DUP1 SLOAD PUSH1 0x0 DUP2 PUSH3 0xE84 JUMPI POP POP PUSH3 0xDB8 PUSH3 0xE80 SWAP4 PUSH1 0x0 PUSH3 0x16F4 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST SWAP1 SWAP4 PUSH1 0x0 NOT DUP6 DUP2 DUP2 ADD GT PUSH3 0xE24 JUMPI PUSH3 0xE80 SWAP6 PUSH1 0x20 DUP5 DUP7 PUSH3 0xDB8 SWAP7 MSTORE KECCAK256 ADD ADD SLOAD PUSH1 0x30 SHR PUSH3 0x16F4 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF DUP1 NUMBER GT PUSH3 0xE2A JUMPI PUSH1 0xA SLOAD PUSH1 0x0 DUP2 PUSH3 0xEE5 JUMPI POP POP PUSH3 0xEDC PUSH3 0xE80 SWAP3 PUSH1 0x0 PUSH3 0x16DA JUMP JUMPDEST SWAP1 NUMBER AND PUSH3 0x1422 JUMP JUMPDEST SWAP1 SWAP3 PUSH1 0x0 NOT DUP5 DUP2 DUP2 ADD GT PUSH3 0xE24 JUMPI PUSH3 0xE80 SWAP5 PUSH1 0x20 DUP5 PUSH1 0xA PUSH3 0xEDC SWAP7 MSTORE KECCAK256 ADD ADD SLOAD PUSH1 0x30 SHR PUSH3 0x16DA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 ISZERO PUSH3 0xFFC JUMPI PUSH3 0xF50 PUSH3 0xF4B DUP4 PUSH1 0x2 SLOAD PUSH3 0x16CC JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 SWAP1 LOG3 PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP2 GT PUSH3 0xFD5 JUMPI POP PUSH3 0xFB6 SWAP1 DUP3 PUSH3 0x15EB JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE58AE93 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 DUP2 MLOAD PUSH1 0x20 DUP1 DUP3 LT PUSH1 0x0 EQ PUSH3 0x1033 JUMPI POP POP SWAP1 PUSH3 0x23E SWAP1 PUSH3 0x1235 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x183 JUMPI PUSH3 0x105A DUP3 PUSH3 0x1054 PUSH1 0x5 SLOAD PUSH3 0x259 JUMP JUMPDEST PUSH3 0x4AC JUMP JUMPDEST DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x109A JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH3 0x108E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x5 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x1074 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP4 AND SWAP5 SWAP1 SWAP2 SWAP1 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH3 0x110C JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH3 0x10F2 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x5 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x10E4 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH3 0x10CE JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH1 0x20 DUP1 DUP3 LT PUSH1 0x0 EQ PUSH3 0x1143 JUMPI POP POP SWAP1 PUSH3 0x23E SWAP1 PUSH3 0x1235 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x183 JUMPI PUSH3 0x116A DUP3 PUSH3 0x1164 PUSH1 0x6 SLOAD PUSH3 0x259 JUMP JUMPDEST PUSH3 0x505 JUMP JUMPDEST DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x11AA JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH3 0x119E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x6 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x1184 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP4 AND SWAP5 SWAP1 SWAP2 SWAP1 PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH3 0x121C JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH3 0x1202 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x6 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x11F4 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH3 0x11DE JUMP JUMPDEST PUSH1 0x1F DUP2 MLOAD GT PUSH3 0x1263 JUMPI PUSH1 0x20 DUP2 MLOAD SWAP2 ADD MLOAD PUSH1 0x20 DUP3 LT PUSH3 0x1253 JUMPI OR SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP3 PUSH1 0x20 SUB PUSH1 0x3 SHL SHL AND OR SWAP1 JUMP JUMPDEST PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP4 ADD MSTORE PUSH3 0x1296 DUP2 MLOAD DUP1 SWAP3 DUP2 PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH3 0x1B6 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP5 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x183 JUMPI PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP1 DUP2 DUP2 GT PUSH3 0x1325 JUMPI AND SWAP1 JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x6DFCC65 PUSH1 0xE4 SHL DUP3 MSTORE PUSH1 0xD0 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH3 0xE24 JUMPI JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH3 0x183 JUMPI PUSH1 0x1 DUP3 ADD DUP1 PUSH1 0xA SSTORE DUP3 LT ISZERO PUSH3 0x13B6 JUMPI PUSH1 0xA PUSH1 0x0 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x30 SHL PUSH6 0xFFFFFFFFFFFF NOT AND PUSH6 0xFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x48CE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH3 0x183 JUMPI PUSH1 0x1 DUP2 ADD DUP1 DUP5 SSTORE DUP2 LT ISZERO PUSH3 0x13B6 JUMPI PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 SWAP1 KECCAK256 DUP3 MLOAD SWAP3 SWAP1 SWAP4 ADD MLOAD PUSH1 0x30 SHL PUSH6 0xFFFFFFFFFFFF NOT AND PUSH6 0xFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD SWAP2 SWAP3 SWAP2 DUP1 ISZERO PUSH3 0x14EF JUMPI PUSH3 0x143E PUSH3 0x1457 SWAP2 PUSH3 0x1344 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x48CE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH6 0xFFFFFFFFFFFF SWAP1 DUP2 DUP5 AND SWAP2 DUP4 AND DUP1 DUP4 GT PUSH3 0x14DD JUMPI DUP7 SWAP3 SUB PUSH3 0x149F JUMPI PUSH3 0x1498 SWAP3 POP SWAP1 PUSH6 0xFFFFFFFFFFFF DUP3 SLOAD SWAP2 DUP2 NOT SWAP1 PUSH1 0x30 SHL AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x30 SHR SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH3 0x14D7 SWAP1 PUSH3 0x14C2 PUSH3 0x14B4 PUSH3 0x1A5 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0x1354 JUMP JUMPDEST PUSH3 0x1498 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2520601D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH3 0x1518 SWAP1 PUSH3 0x1503 PUSH3 0x14B4 PUSH3 0x1A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0x1354 JUMP JUMPDEST PUSH1 0x0 SWAP2 SWAP1 JUMP JUMPDEST DUP1 SLOAD SWAP3 SWAP4 SWAP3 DUP1 ISZERO PUSH3 0x15C1 JUMPI PUSH3 0x1539 PUSH3 0x1546 SWAP2 PUSH3 0x1344 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SLOAD SWAP3 PUSH6 0xFFFFFFFFFFFF SWAP2 DUP3 DUP6 AND SWAP3 DUP2 AND DUP1 DUP5 GT PUSH3 0x14DD JUMPI DUP8 SWAP4 SUB PUSH3 0x1588 JUMPI POP PUSH3 0x1498 SWAP3 POP SWAP1 PUSH6 0xFFFFFFFFFFFF DUP3 SLOAD SWAP2 DUP2 NOT SWAP1 PUSH1 0x30 SHL AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP2 POP POP PUSH3 0x14D7 SWAP2 PUSH3 0x15AC PUSH3 0x159E PUSH3 0x1A5 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP7 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x13CC JUMP JUMPDEST POP SWAP1 PUSH3 0x1518 SWAP2 PUSH3 0x15D6 PUSH3 0x159E PUSH3 0x1A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP6 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x13CC JUMP JUMPDEST SWAP1 PUSH3 0x15F7 DUP2 PUSH3 0x1310 JUMP JUMPDEST SWAP2 PUSH6 0xFFFFFFFFFFFF DUP1 NUMBER GT PUSH3 0xE2A JUMPI PUSH1 0xA SLOAD PUSH1 0x0 DUP2 PUSH3 0x1699 JUMPI POP POP PUSH3 0x162A SWAP1 PUSH3 0xEDC PUSH3 0x1B4 SWAP6 PUSH1 0x0 PUSH3 0x16F4 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH3 0x167C JUMPI JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH32 0x5EFF886EA0CE6CA488A3D6E336D6C0F75F46D19B42C06CE5EE98E42C96D256C7 SLOAD PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SLOAD DUP2 AND SWAP2 AND PUSH3 0xCB0 JUMP JUMPDEST PUSH3 0x1691 PUSH3 0x168B DUP5 PUSH3 0x1310 JUMP JUMPDEST PUSH3 0xEAF JUMP JUMPDEST POP POP PUSH3 0x1640 JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 SWAP3 NOT SWAP6 DUP4 DUP8 DUP2 ADD GT PUSH3 0xE24 JUMPI PUSH3 0x1B4 SWAP7 PUSH3 0x162A SWAP5 PUSH1 0x20 DUP5 PUSH1 0xA PUSH3 0xEDC SWAP7 MSTORE KECCAK256 ADD ADD SLOAD PUSH1 0x30 SHR PUSH3 0x16F4 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH3 0xE24 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP2 DUP3 AND SWAP1 DUP3 AND SUB SWAP1 DUP2 GT PUSH3 0xE24 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP2 DUP3 AND SWAP1 DUP3 AND ADD SWAP1 DUP2 GT PUSH3 0xE24 JUMPI SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3EE438C EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x84278EC EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xE4B2285 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x139BA769 EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x1F454923 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x3C19804E EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x44E43CB8 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x4BF5D7E9 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x4EEA6D79 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x4F4DAC6F EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x564F4F76 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x750521F5 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x81A2B38F EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x881E1CFF EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x8B7AFE2E EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x91DDADF4 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x9A6F99F9 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0xB20A6F36 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xBF2D9E0B EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xD5F6AEB4 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x210 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1826 JUMP JUMPDEST PUSH2 0x175B JUMP JUMPDEST PUSH2 0x16FE JUMP JUMPDEST PUSH2 0x16C0 JUMP JUMPDEST PUSH2 0x154F JUMP JUMPDEST PUSH2 0x13D0 JUMP JUMPDEST PUSH2 0x12EE JUMP JUMPDEST PUSH2 0x12B0 JUMP JUMPDEST PUSH2 0x1292 JUMP JUMPDEST PUSH2 0x126C JUMP JUMPDEST PUSH2 0x120F JUMP JUMPDEST PUSH2 0xA1E JUMP JUMPDEST PUSH2 0x11EB JUMP JUMPDEST PUSH2 0x11BF JUMP JUMPDEST PUSH2 0x10CC JUMP JUMPDEST PUSH2 0x10A5 JUMP JUMPDEST PUSH2 0x1089 JUMP JUMPDEST PUSH2 0x104A JUMP JUMPDEST PUSH2 0xF36 JUMP JUMPDEST PUSH2 0xF12 JUMP JUMPDEST PUSH2 0xED8 JUMP JUMPDEST PUSH2 0xD5C JUMP JUMPDEST PUSH2 0xC9E JUMP JUMPDEST PUSH2 0xC66 JUMP JUMPDEST PUSH2 0xBE5 JUMP JUMPDEST PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0xB86 JUMP JUMPDEST PUSH2 0xA41 JUMP JUMPDEST PUSH2 0x982 JUMP JUMPDEST PUSH2 0x854 JUMP JUMPDEST PUSH2 0x73C JUMP JUMPDEST PUSH2 0x718 JUMP JUMPDEST PUSH2 0x61E JUMP JUMPDEST PUSH2 0x5FB JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST PUSH2 0x50A JUMP JUMPDEST PUSH2 0x48A JUMP JUMPDEST PUSH2 0x46C JUMP JUMPDEST PUSH2 0x432 JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST PUSH2 0x36F JUMP JUMPDEST PUSH2 0x327 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x313 JUMPI POP POP PUSH1 0x1F NOT PUSH1 0x1F DUP5 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP7 SWAP8 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x2F2 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x366 PUSH1 0x40 MLOAD PUSH2 0x352 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1CE5 JUMP JUMPDEST SUB DUP3 PUSH2 0x19A7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2E7 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x366 PUSH1 0x40 MLOAD PUSH2 0x352 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1D8A JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x15 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x36A JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x36A JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x403 PUSH2 0x3F9 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x21DB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x366 PUSH1 0x40 MLOAD PUSH2 0x352 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1E11 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x453 PUSH2 0x3B1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x4A3 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x7390412CE304891B69B7A6D7722B373A8172B465CE957518D396801BC35E0872 SWAP3 PUSH2 0x4E5 PUSH2 0x18DD JUMP JUMPDEST AND SWAP3 DUP4 PUSH1 0x0 MSTORE PUSH1 0x16 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x60 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x523 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x52B PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x562 CALLER PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP3 PUSH1 0x0 NOT DUP5 LT PUSH2 0x584 JUMPI JUMPDEST PUSH2 0x578 SWAP4 POP PUSH2 0x202D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 DUP5 LT PUSH2 0x5A0 JUMPI PUSH2 0x59B DUP4 PUSH2 0x578 SWAP6 SUB CALLER DUP4 PUSH2 0x22C1 JUMP JUMPDEST PUSH2 0x56E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH2 0x616 PUSH2 0x2523 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x63F PUSH2 0x3B1 JUMP JUMPDEST AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x65A PUSH1 0x24 CALLDATALOAD PUSH2 0x19D9 JUMP JUMPDEST SWAP2 DUP1 SLOAD DUP3 SWAP4 DUP2 PUSH1 0x5 DUP2 GT PUSH2 0x6BE JUMPI JUMPDEST POP SWAP1 PUSH1 0x20 SWAP5 PUSH2 0x678 SWAP3 DUP5 PUSH2 0x2E9A JUMP JUMPDEST DUP1 PUSH2 0x6A4 JUMPI POP POP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST SWAP2 PUSH2 0x6B0 DUP5 SWAP3 SWAP4 PUSH2 0x28F3 JUMP JUMPDEST SWAP3 DUP2 MSTORE KECCAK256 ADD SLOAD PUSH1 0x30 SHR PUSH2 0x680 JUMP JUMPDEST SWAP5 PUSH2 0x6C8 DUP7 PUSH2 0x293D JUMP JUMPDEST DUP7 SUB SWAP6 DUP7 GT PUSH2 0x713 JUMPI PUSH1 0x20 SWAP6 PUSH2 0x678 SWAP4 DUP6 DUP8 MSTORE PUSH6 0xFFFFFFFFFFFF DUP1 DUP4 DUP11 DUP11 KECCAK256 ADD SLOAD AND SWAP1 DUP6 AND LT PUSH1 0x0 EQ PUSH2 0x701 JUMPI POP SWAP2 JUMPDEST SWAP2 SWAP3 POP SWAP5 PUSH2 0x669 JUMP JUMPDEST SWAP3 SWAP2 POP PUSH2 0x70D SWAP1 PUSH2 0x2902 JUMP JUMPDEST SWAP1 PUSH2 0x6F8 JUMP JUMPDEST PUSH2 0x1C95 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x366 PUSH1 0x40 MLOAD PUSH2 0x352 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1E98 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x776 PUSH2 0x772 PUSH2 0x76B CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x82A JUMPI JUMPDEST PUSH2 0x800 JUMPI CALLVALUE PUSH2 0x787 JUMPI STOP JUMPDEST PUSH2 0x79B PUSH2 0x796 CALLVALUE PUSH1 0x11 SLOAD PUSH2 0x2910 JUMP JUMPDEST PUSH1 0x11 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 PUSH2 0x7D5 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0xF3A9B3760E99454DE4C494F7ED29F5204AB92FEBACB0ACF52EA04AD4A9D22466 SWAP1 PUSH1 0x20 SWAP1 LOG2 STOP JUMPDEST PUSH2 0x7F5 PUSH2 0x7ED PUSH2 0x7FA SWAP3 PUSH2 0x7E8 CALLVALUE PUSH2 0x300B JUMP JUMPDEST PUSH2 0x291D JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH2 0x2910 JUMP JUMPDEST PUSH1 0x15 SSTORE JUMP JUMPDEST CODESIZE PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x614D358C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP PUSH2 0x84C PUSH2 0x840 PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLER EQ ISZERO PUSH2 0x77C JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x86E NUMBER PUSH2 0x28A8 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF DUP1 PUSH2 0x87F NUMBER PUSH2 0x28A8 JUMP JUMPDEST AND SWAP2 AND SUB PUSH2 0x8D4 JUMPI PUSH2 0x366 PUSH1 0x40 MLOAD PUSH2 0x896 DUP2 PUSH2 0x1937 JUMP JUMPDEST PUSH1 0x1D DUP2 MSTORE PUSH32 0x6D6F64653D626C6F636B6E756D6265722666726F6D3D64656661756C74000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x6FF0714000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP6 SWAP8 SWAP5 SWAP2 SWAP4 PUSH2 0x945 PUSH2 0x961 SWAP5 PUSH2 0x937 PUSH2 0x97F SWAP13 SWAP11 SWAP8 PUSH2 0x929 PUSH2 0x953 SWAP7 DUP13 PUSH2 0x120 DUP1 SWAP2 MSTORE DUP14 ADD SWAP1 PUSH2 0x2E7 JUMP JUMPDEST SWAP1 DUP12 DUP3 SUB PUSH1 0x20 DUP14 ADD MSTORE PUSH2 0x2E7 JUMP JUMPDEST SWAP1 DUP10 DUP3 SUB PUSH1 0x40 DUP12 ADD MSTORE PUSH2 0x2E7 JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x60 DUP10 ADD MSTORE PUSH2 0x2E7 JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x2E7 JUMP JUMPDEST SWAP5 PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x2E7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH2 0x9A4 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1D8A JUMP JUMPDEST PUSH2 0x366 DUP3 MLOAD SWAP3 PUSH2 0x9BE DUP5 PUSH2 0x9B7 DUP2 PUSH2 0x1F1F JUMP JUMPDEST SUB DUP6 PUSH2 0x19A7 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x11 SLOAD PUSH1 0x12 SLOAD SWAP2 DUP4 MLOAD PUSH2 0x9D7 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1E98 JUMP JUMPDEST DUP5 MLOAD PUSH2 0x9E6 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1E11 JUMP JUMPDEST DUP6 MLOAD SWAP2 PUSH2 0x9FD DUP4 PUSH2 0x9F6 DUP2 PUSH2 0x1CE5 JUMP JUMPDEST SUB DUP5 PUSH2 0x19A7 JUMP JUMPDEST DUP7 MLOAD SWAP7 PUSH2 0xA14 DUP9 PUSH2 0xA0D DUP2 PUSH2 0x1FA6 JUMP JUMPDEST SUB DUP10 PUSH2 0x19A7 JUMP JUMPDEST MLOAD SWAP10 DUP11 SWAP10 DUP11 PUSH2 0x8FE JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH2 0x616 PUSH2 0xA3C PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x3068 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB83 JUMPI PUSH1 0x2 PUSH1 0xC SLOAD EQ PUSH2 0xB59 JUMPI PUSH1 0x2 PUSH1 0xC SSTORE PUSH2 0xA6B CALLER PUSH2 0x3068 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB2F JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xA8B DUP3 DUP3 SLOAD PUSH2 0x2910 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x15 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0xAB4 PUSH2 0xAAF DUP3 PUSH1 0x12 SLOAD PUSH2 0x2910 JUMP JUMPDEST PUSH1 0x12 SSTORE JUMP JUMPDEST DUP2 DUP1 DUP1 DUP1 DUP5 CALLER GAS CALL PUSH2 0xAC4 PUSH2 0x3028 JUMP JUMPDEST POP ISZERO PUSH2 0xB05 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0xC15F451120B13B6B40C6AD6203614AB3088308BEF9150C0D6F46EA79BF464224 SWAP1 PUSH1 0x20 SWAP1 LOG2 PUSH2 0xB02 PUSH1 0x1 PUSH1 0xC SSTORE JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x2A1C5BA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0xBAA PUSH2 0x3B1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x8 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0xBE3 PUSH2 0xBDD PUSH2 0x3B1 JUMP JUMPDEST CALLER PUSH2 0x1A33 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xC06 PUSH2 0x3B1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH4 0xFFFFFFFF SWAP1 DUP2 DUP2 GT PUSH2 0xC2E JUMPI PUSH1 0x20 SWAP2 PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH2 0x616 PUSH2 0xC84 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB83 JUMPI PUSH2 0xCB8 PUSH2 0x18DD JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xB SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND PUSH1 0xB SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x36A JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP3 GT PUSH2 0x36A JUMPI DUP1 PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x36A JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP4 DUP5 GT PUSH2 0x36A JUMPI PUSH1 0x24 DUP5 DUP4 ADD ADD GT PUSH2 0x36A JUMPI PUSH1 0x24 ADD SWAP2 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH2 0xD6A CALLDATASIZE PUSH2 0xD12 JUMP JUMPDEST PUSH2 0xD72 PUSH2 0x18DD JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEAE JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xEA9 JUMPI PUSH2 0xD9B DUP2 PUSH2 0xD96 PUSH1 0xF SLOAD PUSH2 0x1CAB JUMP JUMPDEST PUSH2 0x2F01 JUMP JUMPDEST PUSH1 0x0 SWAP2 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0xE08 JUMPI DUP2 PUSH32 0x1C306E70C05992619E2128AD1EF88DF75F36C9476282E59F51401B2ABAA42E4E SWAP4 PUSH1 0x0 SWAP2 PUSH2 0xDFD JUMPI JUMPDEST POP DUP3 PUSH1 0x1 SHL SWAP1 PUSH1 0x0 NOT DUP5 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xF SSTORE JUMPDEST PUSH2 0xDF8 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x2FE3 JUMP JUMPDEST SUB SWAP1 LOG1 STOP JUMPDEST SWAP1 POP DUP2 ADD CALLDATALOAD CODESIZE PUSH2 0xDD4 JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 PUSH1 0x1F NOT DUP4 AND DUP5 JUMPDEST DUP2 DUP2 LT PUSH2 0xE91 JUMPI POP SWAP4 DUP4 PUSH32 0x1C306E70C05992619E2128AD1EF88DF75F36C9476282E59F51401B2ABAA42E4E SWAP6 LT PUSH2 0xE77 JUMPI JUMPDEST POP POP PUSH1 0x1 DUP3 DUP2 SHL ADD PUSH1 0xF SSTORE PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0xF8 DUP6 PUSH1 0x3 SHL AND SHR NOT SWAP1 DUP4 ADD CALLDATALOAD AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0xE67 JUMP JUMPDEST DUP4 DUP7 ADD CALLDATALOAD DUP4 SSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0xE35 JUMP JUMPDEST PUSH2 0x1921 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xEEC403F000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xEF9 PUSH2 0x3B1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x366 PUSH1 0x40 MLOAD PUSH2 0x352 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1FA6 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB83 JUMPI PUSH2 0xFFC SWAP1 PUSH2 0xF75 PUSH32 0x0 PUSH2 0x267E JUMP JUMPDEST PUSH2 0xF9E PUSH32 0x0 PUSH2 0x278F JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0xFAC DUP4 PUSH2 0x1953 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 DUP7 MSTORE PUSH2 0xFEE PUSH1 0x20 SWAP4 PUSH1 0xE0 DUP6 DUP10 ADD MSTORE PUSH1 0xE0 DUP9 ADD SWAP1 PUSH2 0x2E7 JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH2 0x2E7 JUMP JUMPDEST SWAP1 CHAINID PUSH1 0x60 DUP7 ADD MSTORE ADDRESS PUSH1 0x80 DUP7 ADD MSTORE DUP3 PUSH1 0xA0 DUP7 ADD MSTORE DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP1 DUP1 DUP6 MLOAD SWAP4 DUP5 DUP2 MSTORE ADD SWAP5 ADD SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x1033 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1024 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x106B PUSH2 0x3B1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 SELFBALANCE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xB SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x10E8 PUSH1 0x4 CALLDATALOAD PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 PUSH1 0x0 DUP3 SWAP2 PUSH1 0x5 DUP5 GT PUSH2 0x1152 JUMPI JUMPDEST PUSH2 0x1103 SWAP4 POP PUSH2 0x2E1F JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1118 JUMPI POP POP PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0xA PUSH2 0x1125 PUSH1 0x20 SWAP4 PUSH2 0x28F3 JUMP JUMPDEST SWAP2 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD SLOAD PUSH1 0x30 SHR PUSH2 0x680 JUMP JUMPDEST SWAP2 SWAP3 PUSH2 0x115D DUP2 PUSH2 0x293D JUMP JUMPDEST DUP2 SUB SWAP1 DUP2 GT PUSH2 0x713 JUMPI PUSH2 0x1103 SWAP4 PUSH1 0xA DUP4 MSTORE PUSH6 0xFFFFFFFFFFFF DUP1 DUP4 PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD SLOAD AND SWAP1 DUP6 AND LT PUSH1 0x0 EQ PUSH2 0x11AD JUMPI POP SWAP2 PUSH2 0x10F9 JUMP JUMPDEST SWAP3 SWAP2 POP PUSH2 0x11B9 SWAP1 PUSH2 0x2902 JUMP JUMPDEST SWAP1 PUSH2 0x10F9 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH2 0x11DB NUMBER PUSH2 0x28A8 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x366 PUSH1 0x40 MLOAD PUSH2 0x352 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1F1F JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1230 PUSH2 0x3B1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1263 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x2AC9 JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x403 PUSH2 0x1288 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x202D JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x36A JUMPI JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x36A JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0xC0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x1307 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD PUSH2 0x1316 PUSH2 0x12CE JUMP JUMPDEST DUP4 TIMESTAMP GT PUSH2 0x139F JUMPI PUSH2 0x1393 PUSH2 0xBE3 SWAP5 PUSH2 0x139A SWAP3 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x40 DUP5 ADD MSTORE DUP7 PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x80 DUP3 MSTORE PUSH2 0x137B DUP3 PUSH2 0x196F JUMP JUMPDEST PUSH2 0x138E PUSH1 0xA4 CALLDATALOAD SWAP4 PUSH1 0x84 CALLDATALOAD SWAP4 MLOAD SWAP1 KECCAK256 PUSH2 0x263D JUMP JUMPDEST PUSH2 0x2384 JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x2312 JUMP JUMPDEST PUSH2 0x1A33 JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x4683AF0E00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0xE0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x13E9 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x13F1 PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD PUSH2 0x1400 PUSH2 0x12DE JUMP JUMPDEST DUP2 TIMESTAMP GT PUSH2 0x151E JUMPI SWAP1 PUSH2 0x149D PUSH2 0x14BE SWAP3 PUSH2 0x14AB PUSH2 0x1438 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 SSTORE SWAP1 JUMP JUMPDEST SWAP4 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP2 PUSH1 0x20 DUP4 ADD SWAP7 DUP11 DUP11 DUP14 DUP11 SWAP2 SWAP6 SWAP5 SWAP4 SWAP1 SWAP3 PUSH1 0xA0 SWAP4 PUSH1 0xC0 DUP5 ADD SWAP8 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND PUSH1 0x20 DUP7 ADD MSTORE AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0x19A7 JUMP JUMPDEST PUSH2 0x138E PUSH1 0xC4 CALLDATALOAD SWAP4 PUSH1 0xA4 CALLDATALOAD SWAP4 MLOAD SWAP1 KECCAK256 PUSH2 0x263D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP1 DUP3 AND SUB PUSH2 0x14DB JUMPI POP PUSH2 0xBE3 SWAP3 PUSH2 0x21DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP3 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH2 0x155D CALLDATASIZE PUSH2 0xD12 JUMP JUMPDEST PUSH2 0x1565 PUSH2 0x18DD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1696 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xEA9 JUMPI PUSH2 0x158E DUP2 PUSH2 0x1589 PUSH1 0x10 SLOAD PUSH2 0x1CAB JUMP JUMPDEST PUSH2 0x2F72 JUMP JUMPDEST PUSH1 0x0 SWAP2 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x15F5 JUMPI DUP2 PUSH32 0x732D2E87DCC1907685C097F7373A47D8C7CD8EF98B659B5F2D4272B26AAB48A7 SWAP4 PUSH1 0x0 SWAP2 PUSH2 0x15EA JUMPI JUMPDEST POP DUP3 PUSH1 0x1 SHL SWAP1 PUSH1 0x0 NOT DUP5 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x10 SSTORE PUSH2 0xDF8 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x2FE3 JUMP JUMPDEST SWAP1 POP DUP2 ADD CALLDATALOAD CODESIZE PUSH2 0x15C7 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 PUSH1 0x1F NOT DUP4 AND DUP5 JUMPDEST DUP2 DUP2 LT PUSH2 0x167E JUMPI POP SWAP4 DUP4 PUSH32 0x732D2E87DCC1907685C097F7373A47D8C7CD8EF98B659B5F2D4272B26AAB48A7 SWAP6 LT PUSH2 0x1664 JUMPI JUMPDEST POP POP PUSH1 0x1 DUP3 DUP2 SHL ADD PUSH1 0x10 SSTORE PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0xF8 DUP6 PUSH1 0x3 SHL AND SHR NOT SWAP1 DUP4 ADD CALLDATALOAD AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x1654 JUMP JUMPDEST DUP4 DUP7 ADD CALLDATALOAD DUP4 SSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x3D9E4CAD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB83 JUMPI PUSH2 0x16DA PUSH2 0x18DD JUMP JUMPDEST DUP1 DUP1 DUP1 DUP1 SELFBALANCE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xB SLOAD AND GAS CALL PUSH2 0x16F5 PUSH2 0x3028 JUMP JUMPDEST POP ISZERO PUSH2 0xB05 JUMPI DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH2 0x1752 PUSH2 0x171C PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x172C PUSH2 0x3C7 JUMP JUMPDEST SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x1 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x1774 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x36A JUMPI PUSH2 0x366 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x17C3 SWAP3 PUSH2 0x179D PUSH2 0x22F9 JUMP JUMPDEST POP PUSH2 0x17A6 PUSH2 0x22F9 JUMP JUMPDEST POP AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x17BD PUSH2 0x22F9 JUMP JUMPDEST POP PUSH2 0x2AF7 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 PUSH2 0x17D1 DUP3 PUSH2 0x1937 JUMP JUMPDEST SLOAD PUSH6 0xFFFFFFFFFFFF DUP2 AND DUP3 MSTORE PUSH1 0x30 SHR PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 SWAP2 PUSH1 0x20 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 PUSH1 0x40 DUP5 ADD SWAP6 PUSH6 0xFFFFFFFFFFFF DUP2 MLOAD AND DUP6 MSTORE ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x183F PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x1847 PUSH2 0x18DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH2 0x18AC JUMPI PUSH1 0xB SLOAD DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR PUSH1 0xB SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xB SLOAD AND CALLER SUB PUSH2 0x18F1 JUMPI JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEA9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEA9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEA9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEA9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH1 0x1F NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEA9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x19D7 DUP3 PUSH2 0x1937 JUMP JUMPDEST JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF PUSH2 0x19E9 NUMBER PUSH2 0x28A8 JUMP JUMPDEST AND DUP1 DUP3 LT ISZERO PUSH2 0x19FC JUMPI POP PUSH2 0x97F SWAP1 PUSH2 0x28A8 JUMP JUMPDEST PUSH1 0x44 SWAP3 POP PUSH1 0x40 MLOAD SWAP2 PUSH32 0xECD3F81E00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x19D7 SWAP2 PUSH2 0x1AC8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP5 DUP3 AND SWAP5 DUP6 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP6 DUP7 SLOAD SWAP7 DUP3 DUP9 AND SWAP8 DUP9 SWAP4 DUP9 AND SWAP5 DUP6 SWAP2 AND OR SWAP1 SSTORE PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST SWAP2 JUMPDEST SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 DUP3 AND SWAP4 DUP2 AND SWAP1 DUP5 DUP3 EQ ISZERO DUP1 PUSH2 0x1C43 JUMPI JUMPDEST PUSH2 0x1AF2 JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x1B8E JUMPI JUMPDEST POP POP DUP3 PUSH2 0x1B07 JUMPI JUMPDEST DUP1 DUP1 PUSH2 0x1AEB JUMP JUMPDEST PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP2 PUSH2 0x1B52 PUSH2 0x1B4C PUSH2 0x1B58 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x2849 JUMP JUMPDEST SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE LOG2 CODESIZE DUP1 DUP1 PUSH2 0x1B00 JUMP JUMPDEST PUSH2 0x1BAB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1BB4 DUP5 PUSH2 0x2849 JUMP JUMPDEST PUSH2 0x1BBD NUMBER PUSH2 0x28A8 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP1 PUSH2 0x1BE4 DUP7 PUSH2 0x2AC9 JUMP JUMPDEST AND SWAP2 AND SWAP1 SUB SWAP3 DUP3 DUP5 GT PUSH2 0x713 JUMPI PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP4 PUSH2 0x1C39 SWAP3 PUSH2 0x1C20 SWAP3 PUSH2 0x2D38 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP6 AND DUP4 MSTORE SWAP4 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP2 DUP3 SWAP2 SWAP1 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG2 CODESIZE DUP1 PUSH2 0x1AF8 JUMP JUMPDEST POP DUP4 ISZERO ISZERO PUSH2 0x1AE6 JUMP JUMPDEST SWAP1 PUSH2 0x1C56 NUMBER PUSH2 0x28A8 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP1 PUSH2 0x1C7D DUP7 PUSH2 0x2AC9 JUMP JUMPDEST AND SWAP2 AND ADD SWAP2 DUP3 GT PUSH2 0x1C95 JUMPI PUSH2 0x1C91 SWAP3 PUSH2 0x2D38 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1CDB JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1CC5 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1CBA JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1CF5 DUP3 PUSH2 0x1CAB JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1D6C JUMPI POP PUSH1 0x1 EQ PUSH2 0x1D13 JUMPI POP POP POP JUMP JUMPDEST SWAP2 SWAP3 SWAP4 POP PUSH1 0xF PUSH1 0x0 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x1D54 JUMPI POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP6 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1D42 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP5 SWAP6 POP PUSH1 0xFF NOT SWAP2 POP SWAP3 SWAP2 SWAP3 AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1D9A DUP3 PUSH2 0x1CAB JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1D6C JUMPI POP PUSH1 0x1 EQ PUSH2 0x1DB8 JUMPI POP POP POP JUMP JUMPDEST SWAP2 SWAP3 SWAP4 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x1DF9 JUMPI POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP6 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1DE7 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1E21 DUP3 PUSH2 0x1CAB JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1D6C JUMPI POP PUSH1 0x1 EQ PUSH2 0x1E3F JUMPI POP POP POP JUMP JUMPDEST SWAP2 SWAP3 SWAP4 POP PUSH1 0xE PUSH1 0x0 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x1E80 JUMPI POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP6 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1E6E JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1EA8 DUP3 PUSH2 0x1CAB JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1D6C JUMPI POP PUSH1 0x1 EQ PUSH2 0x1EC6 JUMPI POP POP POP JUMP JUMPDEST SWAP2 SWAP3 SWAP4 POP PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x1F07 JUMPI POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP6 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1F2F DUP3 PUSH2 0x1CAB JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1D6C JUMPI POP PUSH1 0x1 EQ PUSH2 0x1F4D JUMPI POP POP POP JUMP JUMPDEST SWAP2 SWAP3 SWAP4 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x1F8E JUMPI POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP6 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1F7C JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1FB6 DUP3 PUSH2 0x1CAB JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1D6C JUMPI POP PUSH1 0x1 EQ PUSH2 0x1FD4 JUMPI POP POP POP JUMP JUMPDEST SWAP2 SWAP3 SWAP4 POP PUSH1 0x10 PUSH1 0x0 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x2015 JUMPI POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP6 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x2003 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x21AA JUMPI DUP5 AND SWAP1 DUP2 ISZERO PUSH2 0x2179 JUMPI PUSH2 0x2067 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD DUP4 DUP2 LT PUSH2 0x2130 JUMPI SWAP3 PUSH2 0x212D SWAP5 SWAP3 PUSH2 0x20F4 SWAP3 DUP3 PUSH2 0x2113 SWAP9 SWAP7 SUB PUSH2 0x209D DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH2 0x20BB DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 ADD SWAP1 SSTORE PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 SWAP1 LOG3 DUP4 DUP4 PUSH2 0x30BB JUMP JUMPDEST PUSH1 0x15 SLOAD SWAP4 DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP2 AND SWAP3 DUP4 ISZERO PUSH2 0x2290 JUMPI DUP3 AND SWAP4 DUP5 ISZERO PUSH2 0x225F JUMPI DUP1 PUSH2 0x2255 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP5 PUSH2 0x223D PUSH1 0x20 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND ISZERO PUSH2 0x2290 JUMPI DUP2 AND ISZERO PUSH2 0x225F JUMPI PUSH2 0x223D PUSH2 0x212D SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2306 DUP3 PUSH2 0x1937 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 DUP3 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x2339 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 SSTORE SWAP1 JUMP JUMPDEST DUP1 SWAP2 SUB PUSH2 0x2344 JUMPI POP POP JUMP JUMPDEST PUSH1 0x44 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP3 PUSH32 0x752D88C000000000000000000000000000000000000000000000000000000000 DUP5 MSTORE AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 PUSH2 0x97F SWAP4 SWAP2 PUSH2 0x2393 SWAP4 PUSH2 0x239C JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x244C JUMP JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x2420 JUMPI SWAP3 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0xFF PUSH1 0x80 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x2414 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x240B JUMPI SWAP2 DUP2 SWAP1 JUMP JUMPDEST POP DUP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x2436 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2455 DUP2 PUSH2 0x242C JUMP JUMPDEST DUP1 PUSH2 0x245E JUMPI POP POP JUMP JUMPDEST PUSH2 0x2467 DUP2 PUSH2 0x242C JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x2499 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0x24A2 DUP2 PUSH2 0x242C JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x24DC JUMPI PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x24E8 PUSH1 0x3 SWAP3 PUSH2 0x242C JUMP JUMPDEST EQ PUSH2 0x24F0 JUMPI POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS EQ DUP1 PUSH2 0x2614 JUMPI JUMPDEST ISZERO PUSH2 0x257E JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP3 MSTORE PUSH32 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH2 0x260E DUP2 PUSH2 0x198B JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST POP PUSH32 0x0 CHAINID EQ PUSH2 0x2555 JUMP JUMPDEST PUSH1 0x42 SWAP1 PUSH2 0x2648 PUSH2 0x2523 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x26D4 JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x26AA JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x26A0 DUP4 PUSH2 0x1937 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x5 SLOAD DUP2 PUSH1 0x0 PUSH2 0x26E7 DUP4 PUSH2 0x1CAB JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x276D JUMPI POP PUSH1 0x1 EQ PUSH2 0x270E JUMPI JUMPDEST POP PUSH2 0x97F SWAP3 POP SUB DUP3 PUSH2 0x19A7 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 JUMPDEST DUP5 DUP4 LT PUSH2 0x2752 JUMPI POP PUSH2 0x97F SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x2701 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x2739 JUMP JUMPDEST PUSH1 0x20 SWAP4 POP PUSH2 0x97F SWAP6 SWAP3 POP PUSH1 0xFF NOT SWAP2 POP AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x2701 JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x27B1 JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x26AA JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x26A0 DUP4 PUSH2 0x1937 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x6 SLOAD DUP2 PUSH1 0x0 PUSH2 0x27C4 DUP4 PUSH2 0x1CAB JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x276D JUMPI POP PUSH1 0x1 EQ PUSH2 0x27EA JUMPI POP PUSH2 0x97F SWAP3 POP SUB DUP3 PUSH2 0x19A7 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F JUMPDEST DUP5 DUP4 LT PUSH2 0x282E JUMPI POP PUSH2 0x97F SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x2701 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x2815 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP2 GT PUSH2 0x2870 JUMPI AND SWAP1 JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0xD0 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH6 0xFFFFFFFFFFFF SWAP1 DUP2 DUP2 GT PUSH2 0x28BB JUMPI AND SWAP1 JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x30 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x713 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x713 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x713 JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2927 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x97F JUMPI PUSH1 0x1 DUP2 PUSH17 0x100000000000000000000000000000000 DUP2 LT ISZERO PUSH2 0x2A68 JUMPI JUMPDEST PUSH2 0x2A10 PUSH2 0x2A06 PUSH2 0x29FC PUSH2 0x29F2 PUSH2 0x29E8 PUSH2 0x29DE PUSH2 0x2A1C SWAP8 PUSH1 0x4 DUP9 PUSH9 0x10000000000000000 PUSH2 0x2A17 SWAP11 LT ISZERO PUSH2 0x2A5B JUMPI JUMPDEST PUSH5 0x100000000 DUP2 LT ISZERO PUSH2 0x2A4E JUMPI JUMPDEST PUSH3 0x10000 DUP2 LT ISZERO PUSH2 0x2A41 JUMPI JUMPDEST PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x2A35 JUMPI JUMPDEST PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x2A29 JUMPI JUMPDEST LT ISZERO PUSH2 0x2A21 JUMPI JUMPDEST PUSH1 0x3 MUL PUSH1 0x1 SHR PUSH2 0x29D7 DUP2 DUP12 PUSH2 0x291D JUMP JUMPDEST ADD PUSH1 0x1 SHR SWAP1 JUMP JUMPDEST PUSH2 0x29D7 DUP2 DUP11 PUSH2 0x291D JUMP JUMPDEST PUSH2 0x29D7 DUP2 DUP10 PUSH2 0x291D JUMP JUMPDEST PUSH2 0x29D7 DUP2 DUP9 PUSH2 0x291D JUMP JUMPDEST PUSH2 0x29D7 DUP2 DUP8 PUSH2 0x291D JUMP JUMPDEST PUSH2 0x29D7 DUP2 DUP7 PUSH2 0x291D JUMP JUMPDEST DUP1 SWAP4 PUSH2 0x291D JUMP JUMPDEST DUP3 GT SWAP1 JUMP JUMPDEST SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 SHL PUSH2 0x29C7 JUMP JUMPDEST DUP2 SHR SWAP2 PUSH1 0x2 SHL SWAP2 PUSH2 0x29C0 JUMP JUMPDEST PUSH1 0x8 SHR SWAP2 DUP2 SHL SWAP2 PUSH2 0x29B6 JUMP JUMPDEST PUSH1 0x10 SHR SWAP2 PUSH1 0x8 SHL SWAP2 PUSH2 0x29AB JUMP JUMPDEST PUSH1 0x20 SHR SWAP2 PUSH1 0x10 SHL SWAP2 PUSH2 0x299F JUMP JUMPDEST PUSH1 0x40 SHR SWAP2 PUSH1 0x20 SHL SWAP2 PUSH2 0x2991 JUMP JUMPDEST POP PUSH9 0x10000000000000000 SWAP1 POP PUSH1 0x80 DUP3 SWAP1 SHR PUSH2 0x2963 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 DUP1 PUSH2 0x2A91 JUMPI POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DUP2 ADD GT PUSH2 0x713 JUMPI PUSH1 0xA PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A7 SWAP3 MSTORE ADD SLOAD PUSH1 0x30 SHR SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP2 DUP2 PUSH2 0x2ADB JUMPI POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT SWAP3 DUP3 DUP5 DUP2 ADD GT PUSH2 0x713 JUMPI PUSH1 0x20 SWAP2 DUP2 MSTORE KECCAK256 ADD ADD SLOAD PUSH1 0x30 SHR SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2B0F JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xA SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0xEA9 JUMPI PUSH1 0x1 DUP3 ADD DUP1 PUSH1 0xA SSTORE DUP3 LT ISZERO PUSH2 0x2B0F JUMPI PUSH1 0xA PUSH1 0x0 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x30 SHL PUSH6 0xFFFFFFFFFFFF NOT AND PUSH6 0xFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND OR PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0xEA9 JUMPI PUSH2 0x2BB8 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x2AF7 JUMP JUMPDEST PUSH2 0x2BE4 JUMPI DUP2 MLOAD PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD MLOAD PUSH1 0x30 SHL PUSH6 0xFFFFFFFFFFFF NOT AND PUSH6 0xFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xA SLOAD SWAP2 SWAP3 SWAP2 DUP1 ISZERO PUSH2 0x2CFB JUMPI PUSH2 0x2C12 PUSH2 0x2C3C SWAP2 PUSH2 0x28F3 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH6 0xFFFFFFFFFFFF SWAP1 DUP2 DUP5 AND SWAP2 DUP4 AND DUP1 DUP4 GT PUSH2 0x2CD1 JUMPI DUP7 SWAP3 SUB PUSH2 0x2C86 JUMPI PUSH2 0x2C7F SWAP3 POP SWAP1 PUSH6 0xFFFFFFFFFFFF PUSH6 0xFFFFFFFFFFFF NOT DUP4 SLOAD SWAP3 PUSH1 0x30 SHL AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x30 SHR SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH2 0x2CCC SWAP1 PUSH2 0x2CA5 PUSH2 0x2C97 PUSH2 0x19CA JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2B25 JUMP JUMPDEST PUSH2 0x2C7F JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x2520601D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP PUSH2 0x2D32 SWAP1 PUSH2 0x2D0B PUSH2 0x2C97 PUSH2 0x19CA JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2B25 JUMP JUMPDEST PUSH1 0x0 SWAP2 SWAP1 JUMP JUMPDEST DUP1 SLOAD SWAP3 SWAP4 SWAP3 DUP1 ISZERO PUSH2 0x2DE7 JUMPI PUSH2 0x2D4F PUSH2 0x2D5C SWAP2 PUSH2 0x28F3 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SLOAD SWAP3 PUSH6 0xFFFFFFFFFFFF SWAP2 DUP3 DUP6 AND SWAP3 DUP2 AND DUP1 DUP5 GT PUSH2 0x2CD1 JUMPI DUP8 SWAP4 SUB PUSH2 0x2DA0 JUMPI POP PUSH2 0x2C7F SWAP3 POP SWAP1 PUSH6 0xFFFFFFFFFFFF PUSH6 0xFFFFFFFFFFFF NOT DUP4 SLOAD SWAP3 PUSH1 0x30 SHL AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2CCC SWAP2 PUSH2 0x2DC0 PUSH2 0x2DB2 PUSH2 0x19CA JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2B96 JUMP JUMPDEST POP SWAP1 PUSH2 0x2D32 SWAP2 PUSH2 0x2DF8 PUSH2 0x2DB2 PUSH2 0x19CA JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2B96 JUMP JUMPDEST SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x2E2D JUMPI POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 DUP1 DUP3 AND SWAP1 DUP1 DUP4 XOR PUSH1 0x1 SHR DUP3 ADD DUP1 SWAP3 GT PUSH2 0x713 JUMPI PUSH1 0xA PUSH1 0x0 MSTORE PUSH6 0xFFFFFFFFFFFF DUP1 DUP4 PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD SLOAD AND SWAP1 DUP6 AND LT PUSH1 0x0 EQ PUSH2 0x2E88 JUMPI POP SWAP2 JUMPDEST SWAP1 PUSH2 0x2E21 JUMP JUMPDEST SWAP3 SWAP2 POP PUSH2 0x2E94 SWAP1 PUSH2 0x2902 JUMP JUMPDEST SWAP1 PUSH2 0x2E82 JUMP JUMPDEST SWAP1 SWAP2 JUMPDEST DUP4 DUP2 LT PUSH2 0x2EAA JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 DUP1 DUP3 AND SWAP1 DUP1 DUP4 XOR PUSH1 0x1 SHR DUP3 ADD DUP1 SWAP3 GT PUSH2 0x713 JUMPI DUP2 PUSH1 0x20 PUSH1 0x0 DUP7 DUP2 MSTORE DUP3 PUSH6 0xFFFFFFFFFFFF SWAP3 DUP4 SWAP3 KECCAK256 ADD SLOAD AND SWAP1 DUP8 AND LT PUSH1 0x0 EQ PUSH2 0x2EED JUMPI POP POP SWAP3 JUMPDEST SWAP2 SWAP1 PUSH2 0x2E9D JUMP JUMPDEST SWAP1 SWAP5 SWAP3 POP PUSH2 0x2EFB SWAP2 POP PUSH2 0x2902 JUMP JUMPDEST SWAP1 PUSH2 0x2EE6 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2F0D JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xF DUP3 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x2F68 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x2F5D JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2F51 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x2F48 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2F7E JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x10 DUP3 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x2FD9 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x2FCE JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2FC2 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x2FB9 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP4 PUSH1 0x40 SWAP5 PUSH1 0x1F NOT SWAP4 PUSH1 0x20 DUP7 MSTORE DUP2 PUSH1 0x20 DUP8 ADD MSTORE DUP7 DUP7 ADD CALLDATACOPY PUSH1 0x0 DUP6 DUP3 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x713 JUMPI JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x3063 JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xEA9 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x3057 PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP5 ADD AND ADD DUP5 PUSH2 0x19A7 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x30B5 JUMPI PUSH1 0x15 SLOAD PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP2 SUB SWAP1 DUP2 GT PUSH2 0x713 JUMPI DUP1 DUP3 MUL SWAP2 DUP3 DIV SUB PUSH2 0x713 JUMPI PUSH8 0xDE0B6B3A7640000 SWAP1 DIV SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP2 DUP2 SWAP1 DUP5 ISZERO PUSH2 0x315A JUMPI JUMPDEST AND SWAP1 DUP2 ISZERO PUSH2 0x30FF JUMPI JUMPDEST PUSH2 0x19D7 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH2 0x3108 DUP4 PUSH2 0x2849 JUMP JUMPDEST SWAP4 PUSH2 0x3112 NUMBER PUSH2 0x28A8 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 DUP7 DUP1 PUSH2 0x3138 PUSH2 0x2A7F JUMP JUMPDEST AND SWAP2 AND SWAP1 SUB SWAP6 DUP7 GT PUSH2 0x713 JUMPI PUSH2 0x19D7 SWAP6 PUSH2 0x3151 SWAP2 PUSH2 0x2BFA JUMP JUMPDEST POP POP SWAP4 POP PUSH2 0x30DA JUMP JUMPDEST SWAP1 POP PUSH2 0x3165 DUP4 PUSH2 0x2849 JUMP JUMPDEST SWAP1 PUSH2 0x316F NUMBER PUSH2 0x28A8 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP1 PUSH2 0x3195 PUSH2 0x2A7F JUMP JUMPDEST AND SWAP2 AND ADD SWAP3 DUP4 GT PUSH2 0x713 JUMPI DUP4 SWAP3 PUSH2 0x31AB SWAP2 PUSH2 0x2BFA JUMP JUMPDEST POP POP PUSH2 0x30D1 JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP 0xC6 GAS PUSH28 0xB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2 0xA8 0xDE 0xC2 0xBA 0xCD 0xD2 CREATE JUMPDEST MSIZE 0xDE CALLVALUE 0xDA SWAP12 MSTORE RETURNDATASIZE SELFDESTRUCT DUP12 0xE4 0x2E 0x5E CODESIZE 0xE8 XOR 0xC8 0x2F 0xDB SIGNEXTEND 0xAE PUSH24 0x4387A724A164736F6C6343000814000A0000000000000000 ","sourceMap":"394:9432:28:-:0;;;;;;;;;;-1:-1:-1;394:9432:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;394:9432:28;;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;394:9432:28;;;2627:22:0;;;2623:91;;394:9432:28;;;;;;;;;;3052:40:0;394:9432:28;3052:40:0;;394:9432:28;2623:91:0;394:9432:28;;;2672:31:0;;;394:9432:28;;2672:31:0;;394:9432:28;2672:31:0;394:9432:28;;;;;;;;;-1:-1:-1;;394:9432:28;;;;;;1277:48;394:9432;;;;;;;;;;;;-1:-1:-1;;394:9432:28;;;;;;;;1266:5;394:9432;;;;;;;;-1:-1:-1;;394:9432:28;;;;;1500:62:0;;:::i;:::-;394:9432:28;;;;-1:-1:-1;;;;;394:9432:28;;;9756:21;9730:48;;;;;;394:9432;9730:48;;;;394:9432;9730:48;394:9432;;;;;;;;;9730:48;;;;;394:9432;;;;;-1:-1:-1;;394:9432:28;;;;;-1:-1:-1;;;;;394:9432:28;;:::i;:::-;;;;7841:14;394:9432;;;;;;;;;;;;;;;;;;-1:-1:-1;;394:9432:28;;;;;;;1500:62:0;;:::i;:::-;9586:4:28;9568:22;;394:9432;;9617:38;394:9432;;;;;;-1:-1:-1;;;394:9432:28;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;394:9432:28;;;;;;-1:-1:-1;;;;;1106:30:28;394:9432;;;;;;;;;;;;;-1:-1:-1;;394:9432:28;;;;;;;1005:35;394:9432;1005:35;;;;;;394:9432;1005:35;;:::i;:::-;394:9432;;;;;;;;;;;;;;-1:-1:-1;;394:9432:28;;;;;;;;;1899:1:16;394:9432:28;;2702:18:16;2698:86;;1899:1;394:9432:28;;;;;3235:6;394:9432;;;;;;3268:13;;;;394:9432;;;-1:-1:-1;;;;;394:9432:28;3260:55;394:9432;;;3268:27;;3260:55;:::i;:::-;394:9432;;;;;3385:9;:13;394:9432;;3429:17;;;;;3385:9;3429:29;3385:9;394:9432;;3429:29;:::i;:::-;3462:19;;394:9432;;;-1:-1:-1;394:9432:28;;;;;;;;;;;;;3542:10;394:9432;;;;;;;3519:47;3385:9;394:9432;;3519:47;:::i;:::-;394:9432;;3576:30;3385:9;394:9432;;3576:30;:::i;:::-;394:9432;;;;;3385:9;394:9432;;3542:10;3630:43;3542:10;;3630:43;;394:9432;-1:-1:-1;3696:40:28;3692:90;;394:9432;;;;3692:90;394:9432;;;;;;4141:46;394:9432;;;3939:17;;;;394:9432;1266:5;;394:9432;;3939:41;3959:21;394:9432;3939:41;;:::i;:::-;394:9432;4031:31;;4141;4031;4030:62;4031:31;;;;;:::i;:::-;4066:26;394:9432;4030:62;;:::i;:::-;394:9432;4141:31;;;;:::i;:::-;:46;:::i;:::-;4206:14;3268:13;4206:14;;394:9432;;;;;;;;;5559:13;394:9432;5554:289;394:9432;;;5554:289;394:9432;;;;;;;;;;;;;3268:13;394:9432;;;;;;;;;;;;;;3268:13;394:9432;;:::i;:::-;;;;-1:-1:-1;;394:9432:28;;;;;;;;;;;;;;;;;4337:15;;;;4333:92;;5554:289;4447:16;;;;;;;;4443:92;;5554:289;4553:27;;;;394:9432;;;4594:16;394:9432;;4594:30;;:50;;;5554:289;4590:809;;;394:9432;4687:17;;394:9432;4842:55;394:9432;;;4687:44;4707:24;394:9432;4687:44;;:::i;:::-;394:9432;4809:18;;;;394:9432;;;;;;;4594:16;394:9432;;;;4842:55;;;;;394:9432;4842:55;;394:9432;4842:55;;394:9432;;;;;;-1:-1:-1;;;;;394:9432:28;;;;;;;;;;4842:55;;;394:9432;4842:55;;;;;;;;;;;;4590:809;394:9432;;;;4594:16;394:9432;;;;;;;;4928:138;;;;;394:9432;4928:138;;394:9432;4928:138;;394:9432;;;;;;;;;;;;;;;;;;;4594:16;5044:21;;394:9432;:::i;:::-;4928:138;;;;394:9432;;4928:138;;;4590:809;-1:-1:-1;4924:359:28;;-1:-1:-1;5233:15:28;394:9432;;;;;;5213:55;;394:9432;;;-1:-1:-1;;;;;394:9432:28;;5213:55;;394:9432;;;;;;;;;;;;;;-1:-1:-1;394:9432:28;;;;5213:55;;;;;;;;;;;5443:18;5213:55;;;4924:359;;;;5443:18;394:9432;;;;5422:48;;394:9432;5422:48;;3692:90;;;;;;394:9432;;;;5213:55;;;;;;-1:-1:-1;5213:55:28;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;4924:359;5111:16;;;;;;;5443:18;5111:16;;5145:19;;;;394:9432;;;;;;;;;4924:359;;4928:138;;;;;;;;;;;;;;;;;:::i;:::-;;;394:9432;;;;;;;;;;;;4928:138;;;;;;;;;4842:55;;;;;;;;;;;;;:::i;:::-;;;;;4590:809;5324:18;;;;;;;5313:75;5324:18;;394:9432;;;5353:15;394:9432;;5370:17;394:9432;5370:17;;394:9432;;;;;5313:75;;;;;;394:9432;5313:75;;394:9432;5313:75;;394:9432;;;;;;-1:-1:-1;;;;;394:9432:28;;;;;;;;;;5313:75;;;;;;;;;;;;5443:18;5313:75;;;4590:809;;;;;5313:75;;;;;;-1:-1:-1;5313:75:28;;;;;;:::i;:::-;;;;;;4594:50;4628:16;;;;4594:50;;4443:92;394:9432;;;;;;;;;;4479:45;;;;;4443:92;4479:45;;;;4443:92;;;;;;4479:45;;;;;4333:92;394:9432;;;;;;;4376:15;394:9432;;4368:46;;;;;4333:92;4368:46;;;;4333:92;;;;4368:46;;;;;394:9432;;;;;;;;;;5605:3;394:9432;;5574:29;;;;;;5628:21;;;;:::i;:::-;394:9432;;;;;;5628:32;5624:209;;5605:3;;;;:::i;:::-;5559:13;;;5624:209;394:9432;;;;;;;;;;;;;;-1:-1:-1;;394:9432:28;;;;;;;;;5680:21;5704:49;5680:73;5704:49;;:::i;:::-;394:9432;;;;;;5680:21;;:::i;:73::-;394:9432;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5813:5;;;;;;;;;;;;;;;394:9432;;;;;;;;;;;;;;;;;;;;5574:29;;;;394:9432;;;;;;-1:-1:-1;;;394:9432:28;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;394:9432:28;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;394:9432:28;;;;;;;;;;;;;;;;;2698:86:16;394:9432:28;;;2743:30:16;;;;394:9432:28;;;;;-1:-1:-1;;394:9432:28;;;;;;1331:46;394:9432;;;;;;;;;;;;-1:-1:-1;;394:9432:28;;;;;;;;;8931:6;394:9432;;;;8931:24;394:9432;;;8931:24;394:9432;;;;;;;;;;;;;;;;;-1:-1:-1;;394:9432:28;;;;;6110:14;394:9432;6158:26;;;:::i;:::-;6202:25;;;;:::i;:::-;6247;;;:::i;:::-;6292:26;;;:::i;:::-;6339;;;;:::i;:::-;6389:13;394:9432;6404:15;;;;;;394:9432;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;6421:3;6458:17;;6421:3;6458:17;;:::i;:::-;394:9432;;;;;;;;;;;;;;;;6685:19;-1:-1:-1;;;;;6566:18:28;;6546:38;6566:18;;;;;394:9432;;6546:38;;:::i;:::-;394:9432;;;;;;;;;:::i;:::-;;;;:::i;:::-;6598:21;;;;:::i;:::-;;;;;;:::i;:::-;;394:9432;;;6646:12;394:9432;6646:12;;;;394:9432;:::i;:::-;6633:25;;;;:::i;:::-;;;;;;:::i;:::-;;6685:19;394:9432;;6672:32;;;;:::i;:::-;394:9432;6718:21;;;;:::i;:::-;394:9432;6421:3;:::i;:::-;6389:13;;394:9432;;;;;-1:-1:-1;;394:9432:28;;;;;;;;;9064:6;394:9432;;;-1:-1:-1;;;;;9064:29:28;394:9432;;;9064:29;394:9432;;;;;;;;;;;;;-1:-1:-1;;394:9432:28;;;;;;1179:42;394:9432;;;;;;;;;;;;-1:-1:-1;;394:9432:28;;;;;;-1:-1:-1;;;;;394:9432:28;;;;;;;;;;;;;;-1:-1:-1;;394:9432:28;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;2229:17;;:36;;;394:9432;;;;2313:17;394:9432;2313:17;;;;:::i;:::-;;394:9432;;;2373:108;;;;;;394:9432;2373:108;;;;;;;;;394:9432;2373:108;;;;394:9432;2373:108;394:9432;2373:108;394:9432;2373:108;;394:9432;2373:108;394:9432;2373:108;394:9432;2373:108;;;;;;;394:9432;;;;;;:::i;:::-;2373:108;;394:9432;2373:108;;;394:9432;;2373:108;;;394:9432;;;:::i;:::-;2373:108;;;394:9432;;;2373:108;;;394:9432;;;;;:::i;:::-;2373:108;;;;394:9432;;;2373:108;;;394:9432;;;:::i;:::-;2373:108;;;;394:9432;;;2373:108;;;394:9432;;;:::i;:::-;;;2373:108;;;394:9432;;;;;;;2458:4;394:9432;;;;;;;;;;;;;;;:::i;:::-;2373:108;;394:9432;2373:108;;;;;;394:9432;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;2518:411;;394:9432;;;;:::i;:::-;;2518:411;;394:9432;;;;2518:411;;394:9432;;;;2518:411;;394:9432;2719:10;394:9432;2518:411;;394:9432;;;2518:411;;394:9432;;;2518:411;;394:9432;-1:-1:-1;;;;;394:9432:28;;;2518:411;;394:9432;;2518:411;;;394:9432;;;;:::i;:::-;2518:411;;;394:9432;;;;2500:6;394:9432;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;394:9432:28;;;;2500:6;394:9432;;;;;;;;;2518:411;;394:9432;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;394:9432:28;;;;2500:6;394:9432;;;;;;;;;;;2518:411;;394:9432;;;;;;;;;;2313:17;394:9432;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2518:411;394:9432;;;;;;;;;;;-1:-1:-1;;394:9432:28;;;;2500:6;394:9432;;;;;2313:17;394:9432;;;;;2518:411;;394:9432;2500:6;394:9432;;;;2518:411;;394:9432;;;;;;;;-1:-1:-1;;;;;394:9432:28;2518:411;;394:9432;;;;2518:411;394:9432;;;2518:411;;394:9432;;;;;;;;;;;;;2518:411;;394:9432;;;;;;;;-1:-1:-1;;;;;394:9432:28;2518:411;;394:9432;;;;;;;;;;;;;;;2518:411;-1:-1:-1;;;;;2518:411:28;;;394:9432;;;;;;;;;;2518:411;;394:9432;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;394:9432:28;;;;2500:6;394:9432;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;394:9432:28;;;;;;;;;;;;-1:-1:-1;;;;;394:9432:28;;;;;;2719:10;3059:54;2719:10;;3059:54;;394:9432;;;;;;;;;;-1:-1:-1;394:9432:28;;;;;-1:-1:-1;;394:9432:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;394:9432:28;;2500:6;394:9432;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;394:9432:28;;;;;;;;-1:-1:-1;394:9432:28;;;;;;2313:17;394:9432;;;;;;;;;;-1:-1:-1;;394:9432:28;;;;;;;;2518:411;394:9432;;;;;;;-1:-1:-1;;394:9432:28;;;;;;;;;;;;2313:17;394:9432;;;;;;;;-1:-1:-1;;394:9432:28;;2500:6;394:9432;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2313:17;394:9432;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;394:9432:28;;;;;;;-1:-1:-1;394:9432:28;;;;;;;;;;;;;;;;;;;-1:-1:-1;;394:9432:28;;;;;;;;;;-1:-1:-1;;394:9432:28;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;394:9432:28;;2500:6;394:9432;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;394:9432:28;;;;;-1:-1:-1;394:9432:28;;;;;;;-1:-1:-1;394:9432:28;;;;;;;;;;;;;;;;;-1:-1:-1;;394:9432:28;;;;;;;;;;-1:-1:-1;;394:9432:28;;;;;;;;;;;;;;;;;;;-1:-1:-1;;394:9432:28;;2500:6;394:9432;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;394:9432:28;;;;;-1:-1:-1;394:9432:28;;;;;;;-1:-1:-1;;;394:9432:28;;;;;;;;;;;;;;;;;;2229:36;394:9432;;;2250:15;;2229:36;;394:9432;;;;;-1:-1:-1;;394:9432:28;;;;;1500:62:0;;:::i;:::-;394:9432:28;-1:-1:-1;;;;;394:9432:28;;;;;;;;3052:40:0;;;;394:9432:28;;;;;;-1:-1:-1;;394:9432:28;;;;;-1:-1:-1;;;;;394:9432:28;;:::i;:::-;1500:62:0;;:::i;:::-;394:9432:28;9362:30;;394:9432;;;9422:34;394:9432;;;9422:34;394:9432;;;;;;;;-1:-1:-1;;;394:9432:28;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;394:9432:28;;;;;;;;;843:45;394:9432;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;843:45;;394:9432;:::i;:::-;;;;;;:::i;:::-;;;;;;843:45;;;394:9432;:::i;:::-;;;;;;:::i;:::-;843:45;;;394:9432;843:45;394:9432;843:45;;394:9432;843:45;;;394:9432;843:45;;;394:9432;;-1:-1:-1;;;;;843:45:28;;;;394:9432;;843:45;;;;;394:9432;;;;;843:45;;;;;394:9432;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;394:9432:28;;;;;7007:18;394:9432;;7053:30;;;;:::i;:::-;7106:29;;;;:::i;:::-;7162:30;;;:::i;:::-;7216;;;;:::i;:::-;7273;;;;:::i;:::-;7327:13;394:9432;7342:19;;;;;;394:9432;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;7363:3::-;7400:21;-1:-1:-1;;;;;7693:18:28;7400:21;;7363:3;7400:21;;:::i;:::-;394:9432;;;;;;;;;;;;;7492:21;394:9432;;;;7492:21;;:::i;:::-;394:9432;;;;7543:15;394:9432;7543:15;;;;394:9432;:::i;:::-;7527:31;;;;:::i;:::-;;;;;;:::i;:::-;;7592:19;;394:9432;7572:39;;;;:::i;:::-;394:9432;7642:17;;;394:9432;7625:34;7642:17;;7625:34;:::i;:::-;394:9432;7693:18;394:9432;;7673:38;;;;:::i;7363:3::-;7327:13;;394:9432;;;;;-1:-1:-1;;394:9432:28;;;;;;;-1:-1:-1;;;;;394:9432:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;394:9432:28;;;;;-1:-1:-1;;;;;394:9432:28;;:::i;:::-;1500:62:0;;:::i;:::-;394:9432:28;;9218:36;394:9432;;;9218:36;394:9432;;;;;;;;;-1:-1:-1;;394:9432:28;;;;;;-1:-1:-1;;;;;1142:31:28;394:9432;;;;;;;;;;;;;-1:-1:-1;;394:9432:28;;;;;;;968:31;394:9432;968:31;;;;;;394:9432;968:31;;:::i;394:9432::-;;;;;-1:-1:-1;;394:9432:28;;;;;;;;;8457:6;394:9432;;;;;;;8490:13;;;394:9432;8696:21;-1:-1:-1;;;;;394:9432:28;;;;8490:27;8482:55;8490:27;;;8482:55;:::i;:::-;8457:6;8584:19;;394:9432;8605:17;394:9432;8605:17;;;394:9432;8655:18;;;;;394:9432;;8675:19;;;;394:9432;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;8567:15;394:9432;8567:15;394:9432;8567:15;;;;394:9432;:::i;:::-;;;;:::i;:::-;;;;8696:21;;;;;394:9432;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;394:9432:28;;;;;;8028:15;394:9432;8068:14;394:9432;8118:18;394:9432;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;394:9432:28;;;;;;;8813:15;394:9432;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;394:9432:28;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;968:31;394:9432;;;;;;968:31;-1:-1:-1;394:9432:28;;;;-1:-1:-1;394:9432:28;:::o;:::-;;;;;;;;;;;7007:18;394:9432;;;;;;7007:18;-1:-1:-1;394:9432:28;;;;-1:-1:-1;394:9432:28;:::o;:::-;;;;-1:-1:-1;;;;;394:9432:28;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;394:9432:28;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;394:9432:28;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;394:9432:28;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;394:9432:28;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;394:9432:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;394:9432:28;;;;-1:-1:-1;394:9432:28;;;-1:-1:-1;394:9432:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;394:9432:28;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1796:162:0:-;-1:-1:-1;;;;;1710:6:0;394:9432:28;;735:10:13;1855:23:0;1851:101;;1796:162::o;1851:101::-;394:9432:28;;;1901:40:0;;;735:10:13;1901:40:0;;;394:9432:28;1901:40:0;394:9432:28;-1:-1:-1;;394:9432:28;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;394:9432:28;;;;;;;;-1:-1:-1;394:9432:28;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;394:9432:28;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;394:9432:28;;;;;;:::o;:::-;;;;:::o;:::-;;;;-1:-1:-1;;;394:9432:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;394:9432:28;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;394:9432:28;;;;:::i;:::-;;;-1:-1:-1;394:9432:28;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"},"methodIdentifiers":{"BASIS_POINTS()":"e1f1c4a7","agents(uint256)":"513856c8","bondedAgentIds(uint256)":"1c18ce2e","contribute(uint256)":"c1cbbca7","contributions(uint256,address)":"3d891f59","createAgent(string,string,string,string,string,uint256,uint256,string)":"754c5e89","defaultLiquidityPercentage()":"e379dcaf","defaultTokenLPPercentage()":"bfd1769e","emergencyWithdraw()":"db2e21bc","getAgentByTokenAddress(address)":"dab7706a","getAgentInfo(uint256)":"19a6a6e9","getAllBondedTokens()":"a759c883","getCurrentAgentId()":"008c5504","getInProgressAgents()":"4dd03176","getLiquidityPool(uint256)":"a74498aa","getTotalCounts()":"045af334","inProgressAgentIds(uint256)":"c2161409","isAgentBonded(uint256)":"ba39a1c5","liquidityManager()":"33827438","owner()":"8da5cb5b","protocolFeePercentage()":"8e50e509","renounceOwnership()":"715018a6","setLiquidityManager(address)":"3c1624d4","setProtocolFeePercentage(uint256)":"d8a5e936","setTreasuryAddress(address)":"6605bfda","tokenToAgentId(address)":"9a52878a","transferOwnership(address)":"f2fde38b","treasuryAddress()":"c5f956af"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasuryAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"agentId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lpPairAddress\",\"type\":\"address\"}],\"name\":\"AgentBonded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"agentId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"AgentCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"agentId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Contributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASIS_POINTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"agents\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"agentName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fundingTarget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isBonded\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalRaised\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lpPairAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"agentConfigJSON\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bondedAgentIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"agentId\",\"type\":\"uint256\"}],\"name\":\"contribute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contributions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"agentName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"archetype\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fundingTarget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenSupply\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"agentConfigJSON\",\"type\":\"string\"}],\"name\":\"createAgent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"agentId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultLiquidityPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultTokenLPPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getAgentByTokenAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"agentId\",\"type\":\"uint256\"}],\"name\":\"getAgentInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"agentName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fundingTarget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRaised\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isBonded\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lpPairAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"agentConfigJSON\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllBondedTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"names\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"symbols\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"lpPairs\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"agentIds\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentAgentId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInProgressAgents\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"agentIds\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"agentNames\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"fundingTargets\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"totalRaised\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"agentId\",\"type\":\"uint256\"}],\"name\":\"getLiquidityPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalAgents\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bondedAgents\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"inProgressAgents\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"inProgressAgentIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"agentId\",\"type\":\"uint256\"}],\"name\":\"isAgentBonded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_liquidityManager\",\"type\":\"address\"}],\"name\":\"setLiquidityManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feePercentage\",\"type\":\"uint256\"}],\"name\":\"setProtocolFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasuryAddress\",\"type\":\"address\"}],\"name\":\"setTreasuryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenToAgentId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AgentLaunchpadCoreV2Minimal.sol\":\"AgentLaunchpadCoreV2Minimal\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0x3f91c79d6f55db9e4fc36e1cfe6a483a7b0f5be60fecbd979555071673746d47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b1e3c64cbeb2757a2a1a45c69f7f3984a93b0eadd1016341b64f9d94f89d7c4\",\"dweb:/ipfs/QmP1Mj14U4vMTFa2rv2nodMbWSCov2ac9Md8W2aUcgYdKX\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x62dc9346044aabf22d78541bd495aa6ca05a7f5100aed26196ba35d40b59fcb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5221df4501c74cd4493fee1a0f0788e02c4dc78c3c601e9f557f557c5a53ea92\",\"dweb:/ipfs/QmZpzyYY9dKLrgvYhXSHT93jwqb1UGvtGNMQk5dpECY5pa\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x0c60057e7351874f086db8dc9291b7ada9ad62cb7725befd2991430d04a74572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33cdfd1fc36410d45046f88ff9864350146b194736c32834baa38d99b843ffbe\",\"dweb:/ipfs/QmdVmqgFKjgEBURy4KUwWDA6J1LEg1BKcHcXsx4nkeHAD2\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0x93ce66a307d66cb14e95dbc8f20641cedf48b2d060bf3bda431d62a4493e6e8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10d4122ee13fd8dcd2f468a86031665345d2dfdda76993d1f51201bdeb746f9d\",\"dweb:/ipfs/QmWxbbYEgyDCjwT4ZtNwujJwB4vdnR2qEKwL2Zrz9JoSDU\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0x36776530f012618bc7526ceb28e77b85e582cb12d9b9466a71d4bd6bf952e4cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f867d046908497287d8a67643dd5d7e38c4027af4ab0a74ffbe1d6790c383c6\",\"dweb:/ipfs/QmQ7s9gMP1nkwThFmoDifnGgpUMsMe5q5ZrAxGDsNnRGza\"]},\"contracts/AgentLaunchpadCoreV2Minimal.sol\":{\"keccak256\":\"0xbbdb39cfb1ba9a46a847e69fcfef2fa7d4b365c17431cdee420c665d3e9d40c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11b42358f721f18cbed493c89ab3887720ca7bda104cf4fe3809aa417d1f758b\",\"dweb:/ipfs/QmVaD7VLQ2H9a7K2JDqW61hEyoF86wZNxUnu1DpVWBofMt\"]},\"contracts/AgentToken.sol\":{\"keccak256\":\"0xa628c8bbd1c5b5d758dd8bfae54b94f2a68c74907e42611ce831d37bc136d608\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a82c89aad534e69bdb40a061ecaf63b85ba051242b64e7b668c0e55a8cc26eb\",\"dweb:/ipfs/Qmf3jkp4LNjKkm6QF37eZ571Nfu3ctKrwTDXWekNmFxTWZ\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":8,"contract":"contracts/AgentLaunchpadCoreV2Minimal.sol:AgentLaunchpadCoreV2Minimal","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":2063,"contract":"contracts/AgentLaunchpadCoreV2Minimal.sol:AgentLaunchpadCoreV2Minimal","label":"_status","offset":0,"slot":"1","type":"t_uint256"},{"astId":9958,"contract":"contracts/AgentLaunchpadCoreV2Minimal.sol:AgentLaunchpadCoreV2Minimal","label":"_agentIdCounter","offset":0,"slot":"2","type":"t_uint256"},{"astId":9963,"contract":"contracts/AgentLaunchpadCoreV2Minimal.sol:AgentLaunchpadCoreV2Minimal","label":"agents","offset":0,"slot":"3","type":"t_mapping(t_uint256,t_struct(AgentConfig)9956_storage)"},{"astId":9969,"contract":"contracts/AgentLaunchpadCoreV2Minimal.sol:AgentLaunchpadCoreV2Minimal","label":"contributions","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_mapping(t_address,t_uint256))"},{"astId":9972,"contract":"contracts/AgentLaunchpadCoreV2Minimal.sol:AgentLaunchpadCoreV2Minimal","label":"bondedAgentIds","offset":0,"slot":"5","type":"t_array(t_uint256)dyn_storage"},{"astId":9975,"contract":"contracts/AgentLaunchpadCoreV2Minimal.sol:AgentLaunchpadCoreV2Minimal","label":"inProgressAgentIds","offset":0,"slot":"6","type":"t_array(t_uint256)dyn_storage"},{"astId":9979,"contract":"contracts/AgentLaunchpadCoreV2Minimal.sol:AgentLaunchpadCoreV2Minimal","label":"tokenToAgentId","offset":0,"slot":"7","type":"t_mapping(t_address,t_uint256)"},{"astId":9981,"contract":"contracts/AgentLaunchpadCoreV2Minimal.sol:AgentLaunchpadCoreV2Minimal","label":"treasuryAddress","offset":0,"slot":"8","type":"t_address"},{"astId":9983,"contract":"contracts/AgentLaunchpadCoreV2Minimal.sol:AgentLaunchpadCoreV2Minimal","label":"liquidityManager","offset":0,"slot":"9","type":"t_address"},{"astId":9986,"contract":"contracts/AgentLaunchpadCoreV2Minimal.sol:AgentLaunchpadCoreV2Minimal","label":"protocolFeePercentage","offset":0,"slot":"10","type":"t_uint256"},{"astId":9992,"contract":"contracts/AgentLaunchpadCoreV2Minimal.sol:AgentLaunchpadCoreV2Minimal","label":"defaultLiquidityPercentage","offset":0,"slot":"11","type":"t_uint256"},{"astId":9995,"contract":"contracts/AgentLaunchpadCoreV2Minimal.sol:AgentLaunchpadCoreV2Minimal","label":"defaultTokenLPPercentage","offset":0,"slot":"12","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_uint256,t_struct(AgentConfig)9956_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct AgentLaunchpadCoreV2Minimal.AgentConfig)","numberOfBytes":"32","value":"t_struct(AgentConfig)9956_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(AgentConfig)9956_storage":{"encoding":"inplace","label":"struct AgentLaunchpadCoreV2Minimal.AgentConfig","members":[{"astId":9935,"contract":"contracts/AgentLaunchpadCoreV2Minimal.sol:AgentLaunchpadCoreV2Minimal","label":"name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":9937,"contract":"contracts/AgentLaunchpadCoreV2Minimal.sol:AgentLaunchpadCoreV2Minimal","label":"symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":9939,"contract":"contracts/AgentLaunchpadCoreV2Minimal.sol:AgentLaunchpadCoreV2Minimal","label":"agentName","offset":0,"slot":"2","type":"t_string_storage"},{"astId":9941,"contract":"contracts/AgentLaunchpadCoreV2Minimal.sol:AgentLaunchpadCoreV2Minimal","label":"fundingTarget","offset":0,"slot":"3","type":"t_uint256"},{"astId":9943,"contract":"contracts/AgentLaunchpadCoreV2Minimal.sol:AgentLaunchpadCoreV2Minimal","label":"tokenSupply","offset":0,"slot":"4","type":"t_uint256"},{"astId":9945,"contract":"contracts/AgentLaunchpadCoreV2Minimal.sol:AgentLaunchpadCoreV2Minimal","label":"creator","offset":0,"slot":"5","type":"t_address"},{"astId":9947,"contract":"contracts/AgentLaunchpadCoreV2Minimal.sol:AgentLaunchpadCoreV2Minimal","label":"isBonded","offset":20,"slot":"5","type":"t_bool"},{"astId":9949,"contract":"contracts/AgentLaunchpadCoreV2Minimal.sol:AgentLaunchpadCoreV2Minimal","label":"totalRaised","offset":0,"slot":"6","type":"t_uint256"},{"astId":9951,"contract":"contracts/AgentLaunchpadCoreV2Minimal.sol:AgentLaunchpadCoreV2Minimal","label":"tokenAddress","offset":0,"slot":"7","type":"t_address"},{"astId":9953,"contract":"contracts/AgentLaunchpadCoreV2Minimal.sol:AgentLaunchpadCoreV2Minimal","label":"lpPairAddress","offset":0,"slot":"8","type":"t_address"},{"astId":9955,"contract":"contracts/AgentLaunchpadCoreV2Minimal.sol:AgentLaunchpadCoreV2Minimal","label":"agentConfigJSON","offset":0,"slot":"9","type":"t_string_storage"}],"numberOfBytes":"320"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}},"ISimpleAMM":{"abi":[{"inputs":[{"internalType":"uint256","name":"agentId","type":"uint256"},{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"uint256","name":"tokenAmount","type":"uint256"},{"internalType":"string","name":"agentConfigJSON","type":"string"}],"name":"createLiquidityPool","outputs":[{"internalType":"address","name":"lpPair","type":"address"}],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"createLiquidityPool(uint256,address,uint256,string)":"a8f0ad45"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"agentId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"agentConfigJSON\",\"type\":\"string\"}],\"name\":\"createLiquidityPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lpPair\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AgentLaunchpadCoreV2Minimal.sol\":\"ISimpleAMM\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0x3f91c79d6f55db9e4fc36e1cfe6a483a7b0f5be60fecbd979555071673746d47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b1e3c64cbeb2757a2a1a45c69f7f3984a93b0eadd1016341b64f9d94f89d7c4\",\"dweb:/ipfs/QmP1Mj14U4vMTFa2rv2nodMbWSCov2ac9Md8W2aUcgYdKX\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x62dc9346044aabf22d78541bd495aa6ca05a7f5100aed26196ba35d40b59fcb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5221df4501c74cd4493fee1a0f0788e02c4dc78c3c601e9f557f557c5a53ea92\",\"dweb:/ipfs/QmZpzyYY9dKLrgvYhXSHT93jwqb1UGvtGNMQk5dpECY5pa\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x0c60057e7351874f086db8dc9291b7ada9ad62cb7725befd2991430d04a74572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33cdfd1fc36410d45046f88ff9864350146b194736c32834baa38d99b843ffbe\",\"dweb:/ipfs/QmdVmqgFKjgEBURy4KUwWDA6J1LEg1BKcHcXsx4nkeHAD2\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0x93ce66a307d66cb14e95dbc8f20641cedf48b2d060bf3bda431d62a4493e6e8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10d4122ee13fd8dcd2f468a86031665345d2dfdda76993d1f51201bdeb746f9d\",\"dweb:/ipfs/QmWxbbYEgyDCjwT4ZtNwujJwB4vdnR2qEKwL2Zrz9JoSDU\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0x36776530f012618bc7526ceb28e77b85e582cb12d9b9466a71d4bd6bf952e4cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f867d046908497287d8a67643dd5d7e38c4027af4ab0a74ffbe1d6790c383c6\",\"dweb:/ipfs/QmQ7s9gMP1nkwThFmoDifnGgpUMsMe5q5ZrAxGDsNnRGza\"]},\"contracts/AgentLaunchpadCoreV2Minimal.sol\":{\"keccak256\":\"0xbbdb39cfb1ba9a46a847e69fcfef2fa7d4b365c17431cdee420c665d3e9d40c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11b42358f721f18cbed493c89ab3887720ca7bda104cf4fe3809aa417d1f758b\",\"dweb:/ipfs/QmVaD7VLQ2H9a7K2JDqW61hEyoF86wZNxUnu1DpVWBofMt\"]},\"contracts/AgentToken.sol\":{\"keccak256\":\"0xa628c8bbd1c5b5d758dd8bfae54b94f2a68c74907e42611ce831d37bc136d608\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a82c89aad534e69bdb40a061ecaf63b85ba051242b64e7b668c0e55a8cc26eb\",\"dweb:/ipfs/Qmf3jkp4LNjKkm6QF37eZ571Nfu3ctKrwTDXWekNmFxTWZ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/AgentToken.sol":{"AgentToken":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"},{"internalType":"string","name":"agentName_","type":"string"},{"internalType":"string","name":"archetype_","type":"string"},{"internalType":"string","name":"metadataURI_","type":"string"},{"internalType":"uint256","name":"totalSupply_","type":"uint256"},{"internalType":"address","name":"owner_","type":"address"},{"internalType":"string","name":"agentConfigJSON_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"uint256","name":"increasedSupply","type":"uint256"},{"internalType":"uint256","name":"cap","type":"uint256"}],"name":"ERC20ExceededSafeSupply","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"uint48","name":"clock","type":"uint48"}],"name":"ERC5805FutureLookup","type":"error"},{"inputs":[],"name":"ERC6372InconsistentClock","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidAgentConfig","type":"error"},{"inputs":[],"name":"InvalidMetadataURI","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[],"name":"NoClaimableRevenue","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"inputs":[],"name":"TransferFailed","type":"error"},{"inputs":[],"name":"UnauthorizedRevenueSource","type":"error"},{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"newAgentConfigJSON","type":"string"}],"name":"AgentConfigUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"newMetadataURI","type":"string"}],"name":"MetadataUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RevenueClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"address","name":"source","type":"address"}],"name":"RevenueDeposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"source","type":"address"},{"indexed":false,"internalType":"bool","name":"authorized","type":"bool"}],"name":"RevenueSourceAuthorized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"agentConfigJSON","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"agentName","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"archetype","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"authorizedRevenueSources","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint48","name":"_key","type":"uint48"},{"internalType":"uint208","name":"_value","type":"uint208"}],"internalType":"struct Checkpoints.Checkpoint208","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"claimRevenue","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"claimedRevenue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"contractBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"depositRevenue","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAgentInfo","outputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"},{"internalType":"string","name":"agentName_","type":"string"},{"internalType":"string","name":"archetype_","type":"string"},{"internalType":"string","name":"metadataURI_","type":"string"},{"internalType":"uint256","name":"totalSupply_","type":"uint256"},{"internalType":"uint256","name":"totalRevenue_","type":"uint256"},{"internalType":"uint256","name":"totalDistributedRevenue_","type":"uint256"},{"internalType":"string","name":"agentConfigJSON_","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getClaimableRevenue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"metadataURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"revenuePerToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"newAgentConfigJSON","type":"string"}],"name":"setAgentConfigJSON","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newMetadataURI","type":"string"}],"name":"setMetadataURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"source","type":"address"},{"internalType":"bool","name":"authorized","type":"bool"}],"name":"setRevenueSource","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalDistributedRevenue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalRevenue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"unclaimedRevenue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":577,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":475,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint256_uint256_16826":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":421,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_string_storage_16809":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_string_storage_16811":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_string_storage_16813":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_string_storage_16815":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_string_storage_16817":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_string_storage_16828":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_string_storage_6391":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_push_from_struct_Checkpoint208_to_array_struct_Checkpoint208_storage_dyn_ptr":{"entryPoint":5068,"id":null,"parameterSlots":2,"returnSlots":0},"array_push_from_struct_Checkpoint208_to_array_struct_Checkpoint208_storage_dyn_ptr_20356":{"entryPoint":4948,"id":null,"parameterSlots":1,"returnSlots":0},"checked_add_uint256":{"entryPoint":5836,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":4932,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":751,"id":null,"parameterSlots":2,"returnSlots":0},"clean_up_bytearray_end_slots_string_storage_16810":{"entryPoint":840,"id":null,"parameterSlots":2,"returnSlots":0},"clean_up_bytearray_end_slots_string_storage_16812":{"entryPoint":929,"id":null,"parameterSlots":2,"returnSlots":0},"clean_up_bytearray_end_slots_string_storage_16814":{"entryPoint":1018,"id":null,"parameterSlots":2,"returnSlots":0},"clean_up_bytearray_end_slots_string_storage_16816":{"entryPoint":1107,"id":null,"parameterSlots":2,"returnSlots":0},"clean_up_bytearray_end_slots_string_storage_16827":{"entryPoint":1196,"id":null,"parameterSlots":2,"returnSlots":0},"clean_up_bytearray_end_slots_string_storage_16829":{"entryPoint":1285,"id":null,"parameterSlots":2,"returnSlots":0},"clean_up_bytearray_end_slots_string_storage_6390":{"entryPoint":662,"id":null,"parameterSlots":2,"returnSlots":0},"constructor_AgentToken":{"entryPoint":2589,"id":11067,"parameterSlots":8,"returnSlots":0},"copy_byte_array_to_storage_from_string_to_string":{"entryPoint":1617,"id":null,"parameterSlots":1,"returnSlots":0},"copy_byte_array_to_storage_from_string_to_string_6392":{"entryPoint":1374,"id":null,"parameterSlots":1,"returnSlots":0},"copy_byte_array_to_storage_from_string_to_string_6398":{"entryPoint":1860,"id":null,"parameterSlots":1,"returnSlots":0},"copy_byte_array_to_storage_from_string_to_string_6399":{"entryPoint":2103,"id":null,"parameterSlots":1,"returnSlots":0},"copy_byte_array_to_storage_from_string_to_string_6400":{"entryPoint":2346,"id":null,"parameterSlots":1,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":438,"id":null,"parameterSlots":3,"returnSlots":0},"dispatch_internal_in_out":{"entryPoint":5876,"id":null,"parameterSlots":2,"returnSlots":1},"dispatch_internal_in_out_16819":{"entryPoint":5850,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":601,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":349,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_16806":{"entryPoint":393,"id":null,"parameterSlots":1,"returnSlots":0},"fun__push":{"entryPoint":3667,"id":736,"parameterSlots":2,"returnSlots":2},"fun_buildDomainSeparator":{"entryPoint":4772,"id":4356,"parameterSlots":0,"returnSlots":1},"fun_delegate":{"entryPoint":3143,"id":531,"parameterSlots":2,"returnSlots":0},"fun_insert":{"entryPoint":5406,"id":8992,"parameterSlots":3,"returnSlots":2},"fun_insert_16825":{"entryPoint":5154,"id":8992,"parameterSlots":2,"returnSlots":2},"fun_mint":{"entryPoint":3879,"id":1316,"parameterSlots":2,"returnSlots":0},"fun_moveDelegateVotes":{"entryPoint":3248,"id":664,"parameterSlots":3,"returnSlots":0},"fun_push":{"entryPoint":3759,"id":736,"parameterSlots":1,"returnSlots":2},"fun_toShortString":{"entryPoint":4661,"id":2181,"parameterSlots":1,"returnSlots":1},"fun_toShortStringWithFallback":{"entryPoint":4389,"id":2279,"parameterSlots":1,"returnSlots":1},"fun_toShortStringWithFallback_6393":{"entryPoint":4117,"id":2279,"parameterSlots":1,"returnSlots":1},"fun_toUint208":{"entryPoint":4880,"id":6341,"parameterSlots":1,"returnSlots":1},"fun_transferOwnership":{"entryPoint":3070,"id":146,"parameterSlots":1,"returnSlots":0},"fun_transferVotingUnits":{"entryPoint":5611,"id":586,"parameterSlots":2,"returnSlots":0},"fun_unsafeAccess":{"entryPoint":null,"id":9111,"parameterSlots":2,"returnSlots":1},"fun_unsafeAccess_20357":{"entryPoint":null,"id":9111,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_address_of_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_address_of_address_6475":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_address_of_address_6479":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3857,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":327,"id":null,"parameterSlots":0,"returnSlots":0},"update_storage_value_offsett_uint208_to_uint208":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256_6396":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"write_to_memory_uint208":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_uint48":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH2 0x160 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x142 JUMPI PUSH3 0x490E SWAP1 DUP2 CODESIZE SUB DUP1 SWAP3 PUSH3 0x21 DUP3 PUSH3 0x15D JUMP JUMPDEST DUP3 CODECOPY DUP2 DUP2 ADD SWAP1 PUSH2 0x100 DUP1 SWAP4 SLT PUSH3 0x142 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 SWAP1 DUP4 DUP2 GT PUSH3 0x142 JUMPI DUP2 PUSH3 0x54 SWAP2 DUP5 ADD PUSH3 0x1DB JUMP JUMPDEST SWAP2 PUSH2 0x180 MLOAD DUP5 DUP2 GT PUSH3 0x142 JUMPI DUP3 PUSH3 0x6F SWAP2 DUP4 ADD PUSH3 0x1DB JUMP JUMPDEST PUSH2 0x1A0 MLOAD DUP6 DUP2 GT PUSH3 0x142 JUMPI DUP4 PUSH3 0x89 SWAP2 DUP5 ADD PUSH3 0x1DB JUMP JUMPDEST PUSH2 0x1C0 MLOAD DUP7 DUP2 GT PUSH3 0x142 JUMPI DUP5 PUSH3 0xA3 SWAP2 DUP6 ADD PUSH3 0x1DB JUMP JUMPDEST SWAP1 PUSH2 0x1E0 MLOAD DUP8 DUP2 GT PUSH3 0x142 JUMPI DUP6 PUSH3 0xBE SWAP2 DUP7 ADD PUSH3 0x1DB JUMP JUMPDEST SWAP3 PUSH2 0x200 MLOAD SWAP5 PUSH3 0xCE PUSH3 0x241 JUMP JUMPDEST SWAP7 PUSH2 0x240 MLOAD SWAP10 DUP11 GT PUSH3 0x142 JUMPI PUSH3 0xF3 SWAP10 PUSH3 0xEC SWAP3 ADD PUSH3 0x1DB JUMP JUMPDEST SWAP7 PUSH3 0xA1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31BF SWAP2 DUP3 PUSH3 0x170F DUP4 CODECOPY PUSH1 0x80 MLOAD DUP3 PUSH2 0x255C ADD MSTORE PUSH1 0xA0 MLOAD DUP3 PUSH2 0x2617 ADD MSTORE PUSH1 0xC0 MLOAD DUP3 PUSH2 0x252D ADD MSTORE PUSH1 0xE0 MLOAD DUP3 PUSH2 0x25AB ADD MSTORE MLOAD DUP2 PUSH2 0x25D1 ADD MSTORE PUSH2 0x120 MLOAD DUP2 PUSH2 0xF51 ADD MSTORE PUSH2 0x140 MLOAD DUP2 PUSH2 0xF7A ADD MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH2 0x160 SWAP1 DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH3 0x183 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH3 0x147 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x183 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH3 0x1B4 DUP3 PUSH3 0x189 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH3 0x1CA JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x1B9 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH3 0x142 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 DUP3 GT PUSH3 0x183 JUMPI PUSH1 0x40 MLOAD SWAP4 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP6 ADD SWAP1 DUP2 GT DUP6 DUP3 LT OR PUSH3 0x183 JUMPI PUSH1 0x40 MSTORE DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH3 0x142 JUMPI PUSH3 0x23E SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH3 0x1B6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x220 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x142 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x28B JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x275 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x269 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x2A3 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x3 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH3 0x2E4 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x2D8 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2CB JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH3 0x2C2 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x2FC JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x4 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH3 0x33D JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x331 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x324 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH3 0x31B JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x355 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xD DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH3 0x396 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x38A JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x37D JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH3 0x374 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x3AE JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xE DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH3 0x3EF JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x3E3 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x3D6 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH3 0x3CD JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x407 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xF DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH3 0x448 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x43C JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x42F JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH3 0x426 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x460 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x10 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH3 0x4A1 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x495 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x488 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH3 0x47F JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x4B9 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x5 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH3 0x4FA JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x4EE JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x4E1 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH3 0x4D8 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x512 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x6 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH3 0x553 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x547 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x53A JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH3 0x531 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x183 JUMPI PUSH3 0x58A DUP2 PUSH3 0x584 PUSH1 0x4 SLOAD PUSH3 0x259 JUMP JUMPDEST PUSH3 0x2EF JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x5C9 JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH3 0x5BD JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x5A6 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP4 AND SWAP5 SWAP1 SWAP2 SWAP1 PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH3 0x638 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH3 0x61E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x613 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH3 0x5FD JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x183 JUMPI PUSH3 0x67D DUP2 PUSH3 0x677 PUSH1 0xD SLOAD PUSH3 0x259 JUMP JUMPDEST PUSH3 0x348 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x6BC JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH3 0x6B0 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xD SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x699 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP4 AND SWAP5 SWAP1 SWAP2 SWAP1 PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH3 0x72B JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH3 0x711 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xD SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x706 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH3 0x6F0 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x183 JUMPI PUSH3 0x770 DUP2 PUSH3 0x76A PUSH1 0xE SLOAD PUSH3 0x259 JUMP JUMPDEST PUSH3 0x3A1 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x7AF JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH3 0x7A3 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xE SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x78C JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP4 AND SWAP5 SWAP1 SWAP2 SWAP1 PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH3 0x81E JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH3 0x804 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xE SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x7F9 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH3 0x7E3 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x183 JUMPI PUSH3 0x863 DUP2 PUSH3 0x85D PUSH1 0xF SLOAD PUSH3 0x259 JUMP JUMPDEST PUSH3 0x3FA JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x8A2 JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH3 0x896 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xF SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x87F JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP4 AND SWAP5 SWAP1 SWAP2 SWAP1 PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH3 0x911 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH3 0x8F7 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xF SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x8EC JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH3 0x8D6 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x183 JUMPI PUSH3 0x956 DUP2 PUSH3 0x950 PUSH1 0x10 SLOAD PUSH3 0x259 JUMP JUMPDEST PUSH3 0x453 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x995 JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH3 0x989 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x10 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x972 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP4 AND SWAP5 SWAP1 SWAP2 SWAP1 PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH3 0xA04 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH3 0x9EA JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x10 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x9DF JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH3 0x9C9 JUMP JUMPDEST SWAP7 SWAP2 SWAP3 SWAP7 SWAP5 SWAP4 SWAP5 PUSH1 0x40 MLOAD SWAP1 PUSH3 0xA33 DUP3 PUSH3 0x189 JUMP JUMPDEST PUSH1 0x1 DUP1 DUP4 MSTORE PUSH1 0x20 SWAP1 DUP2 DUP5 ADD SWAP5 PUSH1 0x31 PUSH1 0xF8 SHL DUP7 MSTORE DUP4 MLOAD PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x183 JUMPI PUSH3 0xA6E DUP2 PUSH3 0xA68 PUSH1 0x3 SLOAD PUSH3 0x259 JUMP JUMPDEST PUSH3 0x296 JUMP JUMPDEST DUP4 SWAP3 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH3 0xB72 JUMPI DUP2 DUP1 SWAP2 PUSH3 0xAA4 SWAP6 PUSH1 0x0 SWAP4 PUSH3 0xB66 JUMPI JUMPDEST POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE PUSH3 0x55E JUMP JUMPDEST PUSH3 0xAAF DUP3 PUSH3 0x1015 JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH3 0xABE DUP4 PUSH3 0x1125 JUMP JUMPDEST PUSH2 0x140 MSTORE DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH1 0xE0 MSTORE MLOAD SWAP1 KECCAK256 PUSH2 0x100 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH3 0xADF PUSH3 0x12A4 JUMP JUMPDEST PUSH1 0x80 MSTORE ADDRESS PUSH1 0xC0 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH3 0xB4D JUMPI PUSH3 0xB39 PUSH3 0xB46 SWAP5 PUSH3 0xB33 PUSH3 0x1B4 SWAP9 PUSH3 0xB2D PUSH3 0xB3F SWAP7 PUSH3 0xB1C DUP12 PUSH3 0xBFE JUMP JUMPDEST PUSH3 0xB27 PUSH1 0x1 PUSH1 0xC SSTORE JUMP JUMPDEST PUSH3 0x651 JUMP JUMPDEST PUSH3 0x744 JUMP JUMPDEST PUSH3 0x837 JUMP JUMPDEST PUSH3 0x92A JUMP JUMPDEST DUP3 PUSH3 0xF27 JUMP JUMPDEST DUP1 PUSH3 0xC47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP9 ADD MLOAD SWAP3 POP CODESIZE PUSH3 0xA8D JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE SWAP2 SWAP3 PUSH1 0x1F NOT DUP3 AND SWAP1 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 PUSH1 0x0 JUMPDEST DUP8 DUP3 DUP3 LT PUSH3 0xBE9 JUMPI POP POP SWAP1 DUP4 PUSH3 0xAA4 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH3 0xBCF JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH3 0x55E JUMP JUMPDEST DUP8 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH3 0xBC1 JUMP JUMPDEST DUP10 DUP5 ADD MLOAD DUP6 SSTORE SWAP4 DUP7 ADD SWAP4 SWAP3 DUP4 ADD SWAP3 ADD PUSH3 0xBA4 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD DUP7 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH3 0x1B4 SWAP7 SWAP6 AND SWAP5 SWAP4 SWAP2 SWAP3 SWAP2 DUP6 SWAP1 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F DUP5 DUP1 LOG4 DUP1 PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP2 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP4 SWAP3 SWAP2 SWAP1 DUP2 AND SWAP1 DUP2 DUP6 EQ ISZERO DUP1 PUSH3 0xE49 JUMPI JUMPDEST PUSH3 0xCDA JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH3 0xD56 JUMPI JUMPDEST POP POP DUP3 PUSH3 0xCF2 JUMPI JUMPDEST DUP1 DUP1 PUSH3 0xCD3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x48EE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH3 0xD32 SWAP2 PUSH3 0xD2B SWAP1 SWAP2 PUSH3 0x1310 JUMP JUMPDEST SWAP1 PUSH3 0xE53 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE LOG2 CODESIZE DUP1 DUP1 PUSH3 0xCEA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH3 0xD78 DUP5 PUSH3 0x1310 JUMP JUMPDEST SWAP1 PUSH6 0xFFFFFFFFFFFF SWAP1 DUP2 NUMBER GT PUSH3 0xE2A JUMPI DUP1 SLOAD PUSH1 0x0 DUP2 PUSH3 0xDE5 JUMPI POP POP SWAP1 PUSH3 0xDC2 SWAP2 PUSH3 0xDB8 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x48EE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP5 PUSH1 0x0 PUSH3 0x16DA JUMP JUMPDEST SWAP2 NUMBER AND SWAP1 PUSH3 0x151E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE LOG2 CODESIZE DUP1 PUSH3 0xCE1 JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 SWAP2 SWAP4 NOT SWAP5 DUP5 DUP7 DUP2 ADD GT PUSH3 0xE24 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x48EE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP6 PUSH3 0xDC2 SWAP6 PUSH1 0x20 DUP5 DUP7 PUSH3 0xDB8 SWAP7 MSTORE KECCAK256 ADD ADD SLOAD PUSH1 0x30 SHR PUSH3 0x16DA JUMP JUMPDEST PUSH3 0xF11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6DFCC65 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x30 PUSH1 0x4 DUP3 ADD MSTORE NUMBER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST POP DUP4 ISZERO ISZERO PUSH3 0xCCD JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF SWAP1 DUP2 NUMBER GT PUSH3 0xE2A JUMPI DUP1 SLOAD PUSH1 0x0 DUP2 PUSH3 0xE84 JUMPI POP POP PUSH3 0xDB8 PUSH3 0xE80 SWAP4 PUSH1 0x0 PUSH3 0x16F4 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST SWAP1 SWAP4 PUSH1 0x0 NOT DUP6 DUP2 DUP2 ADD GT PUSH3 0xE24 JUMPI PUSH3 0xE80 SWAP6 PUSH1 0x20 DUP5 DUP7 PUSH3 0xDB8 SWAP7 MSTORE KECCAK256 ADD ADD SLOAD PUSH1 0x30 SHR PUSH3 0x16F4 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF DUP1 NUMBER GT PUSH3 0xE2A JUMPI PUSH1 0xA SLOAD PUSH1 0x0 DUP2 PUSH3 0xEE5 JUMPI POP POP PUSH3 0xEDC PUSH3 0xE80 SWAP3 PUSH1 0x0 PUSH3 0x16DA JUMP JUMPDEST SWAP1 NUMBER AND PUSH3 0x1422 JUMP JUMPDEST SWAP1 SWAP3 PUSH1 0x0 NOT DUP5 DUP2 DUP2 ADD GT PUSH3 0xE24 JUMPI PUSH3 0xE80 SWAP5 PUSH1 0x20 DUP5 PUSH1 0xA PUSH3 0xEDC SWAP7 MSTORE KECCAK256 ADD ADD SLOAD PUSH1 0x30 SHR PUSH3 0x16DA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 ISZERO PUSH3 0xFFC JUMPI PUSH3 0xF50 PUSH3 0xF4B DUP4 PUSH1 0x2 SLOAD PUSH3 0x16CC JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 SWAP1 LOG3 PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP2 GT PUSH3 0xFD5 JUMPI POP PUSH3 0xFB6 SWAP1 DUP3 PUSH3 0x15EB JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE58AE93 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 DUP2 MLOAD PUSH1 0x20 DUP1 DUP3 LT PUSH1 0x0 EQ PUSH3 0x1033 JUMPI POP POP SWAP1 PUSH3 0x23E SWAP1 PUSH3 0x1235 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x183 JUMPI PUSH3 0x105A DUP3 PUSH3 0x1054 PUSH1 0x5 SLOAD PUSH3 0x259 JUMP JUMPDEST PUSH3 0x4AC JUMP JUMPDEST DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x109A JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH3 0x108E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x5 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x1074 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP4 AND SWAP5 SWAP1 SWAP2 SWAP1 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH3 0x110C JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH3 0x10F2 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x5 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x10E4 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH3 0x10CE JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH1 0x20 DUP1 DUP3 LT PUSH1 0x0 EQ PUSH3 0x1143 JUMPI POP POP SWAP1 PUSH3 0x23E SWAP1 PUSH3 0x1235 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x183 JUMPI PUSH3 0x116A DUP3 PUSH3 0x1164 PUSH1 0x6 SLOAD PUSH3 0x259 JUMP JUMPDEST PUSH3 0x505 JUMP JUMPDEST DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x11AA JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH3 0x119E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x6 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x1184 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP4 AND SWAP5 SWAP1 SWAP2 SWAP1 PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH3 0x121C JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH3 0x1202 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x6 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x11F4 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH3 0x11DE JUMP JUMPDEST PUSH1 0x1F DUP2 MLOAD GT PUSH3 0x1263 JUMPI PUSH1 0x20 DUP2 MLOAD SWAP2 ADD MLOAD PUSH1 0x20 DUP3 LT PUSH3 0x1253 JUMPI OR SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP3 PUSH1 0x20 SUB PUSH1 0x3 SHL SHL AND OR SWAP1 JUMP JUMPDEST PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP4 ADD MSTORE PUSH3 0x1296 DUP2 MLOAD DUP1 SWAP3 DUP2 PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH3 0x1B6 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP5 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x183 JUMPI PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP1 DUP2 DUP2 GT PUSH3 0x1325 JUMPI AND SWAP1 JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x6DFCC65 PUSH1 0xE4 SHL DUP3 MSTORE PUSH1 0xD0 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH3 0xE24 JUMPI JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH3 0x183 JUMPI PUSH1 0x1 DUP3 ADD DUP1 PUSH1 0xA SSTORE DUP3 LT ISZERO PUSH3 0x13B6 JUMPI PUSH1 0xA PUSH1 0x0 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x30 SHL PUSH6 0xFFFFFFFFFFFF NOT AND PUSH6 0xFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x48CE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH3 0x183 JUMPI PUSH1 0x1 DUP2 ADD DUP1 DUP5 SSTORE DUP2 LT ISZERO PUSH3 0x13B6 JUMPI PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 SWAP1 KECCAK256 DUP3 MLOAD SWAP3 SWAP1 SWAP4 ADD MLOAD PUSH1 0x30 SHL PUSH6 0xFFFFFFFFFFFF NOT AND PUSH6 0xFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD SWAP2 SWAP3 SWAP2 DUP1 ISZERO PUSH3 0x14EF JUMPI PUSH3 0x143E PUSH3 0x1457 SWAP2 PUSH3 0x1344 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x48CE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH6 0xFFFFFFFFFFFF SWAP1 DUP2 DUP5 AND SWAP2 DUP4 AND DUP1 DUP4 GT PUSH3 0x14DD JUMPI DUP7 SWAP3 SUB PUSH3 0x149F JUMPI PUSH3 0x1498 SWAP3 POP SWAP1 PUSH6 0xFFFFFFFFFFFF DUP3 SLOAD SWAP2 DUP2 NOT SWAP1 PUSH1 0x30 SHL AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x30 SHR SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH3 0x14D7 SWAP1 PUSH3 0x14C2 PUSH3 0x14B4 PUSH3 0x1A5 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0x1354 JUMP JUMPDEST PUSH3 0x1498 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2520601D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH3 0x1518 SWAP1 PUSH3 0x1503 PUSH3 0x14B4 PUSH3 0x1A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0x1354 JUMP JUMPDEST PUSH1 0x0 SWAP2 SWAP1 JUMP JUMPDEST DUP1 SLOAD SWAP3 SWAP4 SWAP3 DUP1 ISZERO PUSH3 0x15C1 JUMPI PUSH3 0x1539 PUSH3 0x1546 SWAP2 PUSH3 0x1344 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SLOAD SWAP3 PUSH6 0xFFFFFFFFFFFF SWAP2 DUP3 DUP6 AND SWAP3 DUP2 AND DUP1 DUP5 GT PUSH3 0x14DD JUMPI DUP8 SWAP4 SUB PUSH3 0x1588 JUMPI POP PUSH3 0x1498 SWAP3 POP SWAP1 PUSH6 0xFFFFFFFFFFFF DUP3 SLOAD SWAP2 DUP2 NOT SWAP1 PUSH1 0x30 SHL AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP2 POP POP PUSH3 0x14D7 SWAP2 PUSH3 0x15AC PUSH3 0x159E PUSH3 0x1A5 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP7 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x13CC JUMP JUMPDEST POP SWAP1 PUSH3 0x1518 SWAP2 PUSH3 0x15D6 PUSH3 0x159E PUSH3 0x1A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP6 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x13CC JUMP JUMPDEST SWAP1 PUSH3 0x15F7 DUP2 PUSH3 0x1310 JUMP JUMPDEST SWAP2 PUSH6 0xFFFFFFFFFFFF DUP1 NUMBER GT PUSH3 0xE2A JUMPI PUSH1 0xA SLOAD PUSH1 0x0 DUP2 PUSH3 0x1699 JUMPI POP POP PUSH3 0x162A SWAP1 PUSH3 0xEDC PUSH3 0x1B4 SWAP6 PUSH1 0x0 PUSH3 0x16F4 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH3 0x167C JUMPI JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH32 0x5EFF886EA0CE6CA488A3D6E336D6C0F75F46D19B42C06CE5EE98E42C96D256C7 SLOAD PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SLOAD DUP2 AND SWAP2 AND PUSH3 0xCB0 JUMP JUMPDEST PUSH3 0x1691 PUSH3 0x168B DUP5 PUSH3 0x1310 JUMP JUMPDEST PUSH3 0xEAF JUMP JUMPDEST POP POP PUSH3 0x1640 JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 SWAP3 NOT SWAP6 DUP4 DUP8 DUP2 ADD GT PUSH3 0xE24 JUMPI PUSH3 0x1B4 SWAP7 PUSH3 0x162A SWAP5 PUSH1 0x20 DUP5 PUSH1 0xA PUSH3 0xEDC SWAP7 MSTORE KECCAK256 ADD ADD SLOAD PUSH1 0x30 SHR PUSH3 0x16F4 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH3 0xE24 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP2 DUP3 AND SWAP1 DUP3 AND SUB SWAP1 DUP2 GT PUSH3 0xE24 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP2 DUP3 AND SWAP1 DUP3 AND ADD SWAP1 DUP2 GT PUSH3 0xE24 JUMPI SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3EE438C EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x84278EC EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xE4B2285 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x139BA769 EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x1F454923 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x3C19804E EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x44E43CB8 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x4BF5D7E9 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x4EEA6D79 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x4F4DAC6F EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x564F4F76 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x750521F5 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x81A2B38F EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x881E1CFF EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x8B7AFE2E EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x91DDADF4 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x9A6F99F9 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0xB20A6F36 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xBF2D9E0B EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xD5F6AEB4 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x210 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1826 JUMP JUMPDEST PUSH2 0x175B JUMP JUMPDEST PUSH2 0x16FE JUMP JUMPDEST PUSH2 0x16C0 JUMP JUMPDEST PUSH2 0x154F JUMP JUMPDEST PUSH2 0x13D0 JUMP JUMPDEST PUSH2 0x12EE JUMP JUMPDEST PUSH2 0x12B0 JUMP JUMPDEST PUSH2 0x1292 JUMP JUMPDEST PUSH2 0x126C JUMP JUMPDEST PUSH2 0x120F JUMP JUMPDEST PUSH2 0xA1E JUMP JUMPDEST PUSH2 0x11EB JUMP JUMPDEST PUSH2 0x11BF JUMP JUMPDEST PUSH2 0x10CC JUMP JUMPDEST PUSH2 0x10A5 JUMP JUMPDEST PUSH2 0x1089 JUMP JUMPDEST PUSH2 0x104A JUMP JUMPDEST PUSH2 0xF36 JUMP JUMPDEST PUSH2 0xF12 JUMP JUMPDEST PUSH2 0xED8 JUMP JUMPDEST PUSH2 0xD5C JUMP JUMPDEST PUSH2 0xC9E JUMP JUMPDEST PUSH2 0xC66 JUMP JUMPDEST PUSH2 0xBE5 JUMP JUMPDEST PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0xB86 JUMP JUMPDEST PUSH2 0xA41 JUMP JUMPDEST PUSH2 0x982 JUMP JUMPDEST PUSH2 0x854 JUMP JUMPDEST PUSH2 0x73C JUMP JUMPDEST PUSH2 0x718 JUMP JUMPDEST PUSH2 0x61E JUMP JUMPDEST PUSH2 0x5FB JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST PUSH2 0x50A JUMP JUMPDEST PUSH2 0x48A JUMP JUMPDEST PUSH2 0x46C JUMP JUMPDEST PUSH2 0x432 JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST PUSH2 0x36F JUMP JUMPDEST PUSH2 0x327 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x313 JUMPI POP POP PUSH1 0x1F NOT PUSH1 0x1F DUP5 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP7 SWAP8 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x2F2 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x366 PUSH1 0x40 MLOAD PUSH2 0x352 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1CE5 JUMP JUMPDEST SUB DUP3 PUSH2 0x19A7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2E7 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x366 PUSH1 0x40 MLOAD PUSH2 0x352 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1D8A JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x15 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x36A JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x36A JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x403 PUSH2 0x3F9 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x21DB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x366 PUSH1 0x40 MLOAD PUSH2 0x352 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1E11 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x453 PUSH2 0x3B1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x4A3 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x7390412CE304891B69B7A6D7722B373A8172B465CE957518D396801BC35E0872 SWAP3 PUSH2 0x4E5 PUSH2 0x18DD JUMP JUMPDEST AND SWAP3 DUP4 PUSH1 0x0 MSTORE PUSH1 0x16 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x60 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x523 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x52B PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x562 CALLER PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP3 PUSH1 0x0 NOT DUP5 LT PUSH2 0x584 JUMPI JUMPDEST PUSH2 0x578 SWAP4 POP PUSH2 0x202D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 DUP5 LT PUSH2 0x5A0 JUMPI PUSH2 0x59B DUP4 PUSH2 0x578 SWAP6 SUB CALLER DUP4 PUSH2 0x22C1 JUMP JUMPDEST PUSH2 0x56E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH2 0x616 PUSH2 0x2523 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x63F PUSH2 0x3B1 JUMP JUMPDEST AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x65A PUSH1 0x24 CALLDATALOAD PUSH2 0x19D9 JUMP JUMPDEST SWAP2 DUP1 SLOAD DUP3 SWAP4 DUP2 PUSH1 0x5 DUP2 GT PUSH2 0x6BE JUMPI JUMPDEST POP SWAP1 PUSH1 0x20 SWAP5 PUSH2 0x678 SWAP3 DUP5 PUSH2 0x2E9A JUMP JUMPDEST DUP1 PUSH2 0x6A4 JUMPI POP POP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST SWAP2 PUSH2 0x6B0 DUP5 SWAP3 SWAP4 PUSH2 0x28F3 JUMP JUMPDEST SWAP3 DUP2 MSTORE KECCAK256 ADD SLOAD PUSH1 0x30 SHR PUSH2 0x680 JUMP JUMPDEST SWAP5 PUSH2 0x6C8 DUP7 PUSH2 0x293D JUMP JUMPDEST DUP7 SUB SWAP6 DUP7 GT PUSH2 0x713 JUMPI PUSH1 0x20 SWAP6 PUSH2 0x678 SWAP4 DUP6 DUP8 MSTORE PUSH6 0xFFFFFFFFFFFF DUP1 DUP4 DUP11 DUP11 KECCAK256 ADD SLOAD AND SWAP1 DUP6 AND LT PUSH1 0x0 EQ PUSH2 0x701 JUMPI POP SWAP2 JUMPDEST SWAP2 SWAP3 POP SWAP5 PUSH2 0x669 JUMP JUMPDEST SWAP3 SWAP2 POP PUSH2 0x70D SWAP1 PUSH2 0x2902 JUMP JUMPDEST SWAP1 PUSH2 0x6F8 JUMP JUMPDEST PUSH2 0x1C95 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x366 PUSH1 0x40 MLOAD PUSH2 0x352 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1E98 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x776 PUSH2 0x772 PUSH2 0x76B CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x82A JUMPI JUMPDEST PUSH2 0x800 JUMPI CALLVALUE PUSH2 0x787 JUMPI STOP JUMPDEST PUSH2 0x79B PUSH2 0x796 CALLVALUE PUSH1 0x11 SLOAD PUSH2 0x2910 JUMP JUMPDEST PUSH1 0x11 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 PUSH2 0x7D5 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0xF3A9B3760E99454DE4C494F7ED29F5204AB92FEBACB0ACF52EA04AD4A9D22466 SWAP1 PUSH1 0x20 SWAP1 LOG2 STOP JUMPDEST PUSH2 0x7F5 PUSH2 0x7ED PUSH2 0x7FA SWAP3 PUSH2 0x7E8 CALLVALUE PUSH2 0x300B JUMP JUMPDEST PUSH2 0x291D JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH2 0x2910 JUMP JUMPDEST PUSH1 0x15 SSTORE JUMP JUMPDEST CODESIZE PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x614D358C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP PUSH2 0x84C PUSH2 0x840 PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLER EQ ISZERO PUSH2 0x77C JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x86E NUMBER PUSH2 0x28A8 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF DUP1 PUSH2 0x87F NUMBER PUSH2 0x28A8 JUMP JUMPDEST AND SWAP2 AND SUB PUSH2 0x8D4 JUMPI PUSH2 0x366 PUSH1 0x40 MLOAD PUSH2 0x896 DUP2 PUSH2 0x1937 JUMP JUMPDEST PUSH1 0x1D DUP2 MSTORE PUSH32 0x6D6F64653D626C6F636B6E756D6265722666726F6D3D64656661756C74000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x6FF0714000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP6 SWAP8 SWAP5 SWAP2 SWAP4 PUSH2 0x945 PUSH2 0x961 SWAP5 PUSH2 0x937 PUSH2 0x97F SWAP13 SWAP11 SWAP8 PUSH2 0x929 PUSH2 0x953 SWAP7 DUP13 PUSH2 0x120 DUP1 SWAP2 MSTORE DUP14 ADD SWAP1 PUSH2 0x2E7 JUMP JUMPDEST SWAP1 DUP12 DUP3 SUB PUSH1 0x20 DUP14 ADD MSTORE PUSH2 0x2E7 JUMP JUMPDEST SWAP1 DUP10 DUP3 SUB PUSH1 0x40 DUP12 ADD MSTORE PUSH2 0x2E7 JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x60 DUP10 ADD MSTORE PUSH2 0x2E7 JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x2E7 JUMP JUMPDEST SWAP5 PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x2E7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH2 0x9A4 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1D8A JUMP JUMPDEST PUSH2 0x366 DUP3 MLOAD SWAP3 PUSH2 0x9BE DUP5 PUSH2 0x9B7 DUP2 PUSH2 0x1F1F JUMP JUMPDEST SUB DUP6 PUSH2 0x19A7 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x11 SLOAD PUSH1 0x12 SLOAD SWAP2 DUP4 MLOAD PUSH2 0x9D7 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1E98 JUMP JUMPDEST DUP5 MLOAD PUSH2 0x9E6 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1E11 JUMP JUMPDEST DUP6 MLOAD SWAP2 PUSH2 0x9FD DUP4 PUSH2 0x9F6 DUP2 PUSH2 0x1CE5 JUMP JUMPDEST SUB DUP5 PUSH2 0x19A7 JUMP JUMPDEST DUP7 MLOAD SWAP7 PUSH2 0xA14 DUP9 PUSH2 0xA0D DUP2 PUSH2 0x1FA6 JUMP JUMPDEST SUB DUP10 PUSH2 0x19A7 JUMP JUMPDEST MLOAD SWAP10 DUP11 SWAP10 DUP11 PUSH2 0x8FE JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH2 0x616 PUSH2 0xA3C PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x3068 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB83 JUMPI PUSH1 0x2 PUSH1 0xC SLOAD EQ PUSH2 0xB59 JUMPI PUSH1 0x2 PUSH1 0xC SSTORE PUSH2 0xA6B CALLER PUSH2 0x3068 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB2F JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xA8B DUP3 DUP3 SLOAD PUSH2 0x2910 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x15 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0xAB4 PUSH2 0xAAF DUP3 PUSH1 0x12 SLOAD PUSH2 0x2910 JUMP JUMPDEST PUSH1 0x12 SSTORE JUMP JUMPDEST DUP2 DUP1 DUP1 DUP1 DUP5 CALLER GAS CALL PUSH2 0xAC4 PUSH2 0x3028 JUMP JUMPDEST POP ISZERO PUSH2 0xB05 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0xC15F451120B13B6B40C6AD6203614AB3088308BEF9150C0D6F46EA79BF464224 SWAP1 PUSH1 0x20 SWAP1 LOG2 PUSH2 0xB02 PUSH1 0x1 PUSH1 0xC SSTORE JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x2A1C5BA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0xBAA PUSH2 0x3B1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x8 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0xBE3 PUSH2 0xBDD PUSH2 0x3B1 JUMP JUMPDEST CALLER PUSH2 0x1A33 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xC06 PUSH2 0x3B1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH4 0xFFFFFFFF SWAP1 DUP2 DUP2 GT PUSH2 0xC2E JUMPI PUSH1 0x20 SWAP2 PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH2 0x616 PUSH2 0xC84 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB83 JUMPI PUSH2 0xCB8 PUSH2 0x18DD JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xB SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND PUSH1 0xB SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x36A JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP3 GT PUSH2 0x36A JUMPI DUP1 PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x36A JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP4 DUP5 GT PUSH2 0x36A JUMPI PUSH1 0x24 DUP5 DUP4 ADD ADD GT PUSH2 0x36A JUMPI PUSH1 0x24 ADD SWAP2 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH2 0xD6A CALLDATASIZE PUSH2 0xD12 JUMP JUMPDEST PUSH2 0xD72 PUSH2 0x18DD JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEAE JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xEA9 JUMPI PUSH2 0xD9B DUP2 PUSH2 0xD96 PUSH1 0xF SLOAD PUSH2 0x1CAB JUMP JUMPDEST PUSH2 0x2F01 JUMP JUMPDEST PUSH1 0x0 SWAP2 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0xE08 JUMPI DUP2 PUSH32 0x1C306E70C05992619E2128AD1EF88DF75F36C9476282E59F51401B2ABAA42E4E SWAP4 PUSH1 0x0 SWAP2 PUSH2 0xDFD JUMPI JUMPDEST POP DUP3 PUSH1 0x1 SHL SWAP1 PUSH1 0x0 NOT DUP5 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xF SSTORE JUMPDEST PUSH2 0xDF8 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x2FE3 JUMP JUMPDEST SUB SWAP1 LOG1 STOP JUMPDEST SWAP1 POP DUP2 ADD CALLDATALOAD CODESIZE PUSH2 0xDD4 JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 PUSH1 0x1F NOT DUP4 AND DUP5 JUMPDEST DUP2 DUP2 LT PUSH2 0xE91 JUMPI POP SWAP4 DUP4 PUSH32 0x1C306E70C05992619E2128AD1EF88DF75F36C9476282E59F51401B2ABAA42E4E SWAP6 LT PUSH2 0xE77 JUMPI JUMPDEST POP POP PUSH1 0x1 DUP3 DUP2 SHL ADD PUSH1 0xF SSTORE PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0xF8 DUP6 PUSH1 0x3 SHL AND SHR NOT SWAP1 DUP4 ADD CALLDATALOAD AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0xE67 JUMP JUMPDEST DUP4 DUP7 ADD CALLDATALOAD DUP4 SSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0xE35 JUMP JUMPDEST PUSH2 0x1921 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xEEC403F000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xEF9 PUSH2 0x3B1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x366 PUSH1 0x40 MLOAD PUSH2 0x352 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1FA6 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB83 JUMPI PUSH2 0xFFC SWAP1 PUSH2 0xF75 PUSH32 0x0 PUSH2 0x267E JUMP JUMPDEST PUSH2 0xF9E PUSH32 0x0 PUSH2 0x278F JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0xFAC DUP4 PUSH2 0x1953 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 DUP7 MSTORE PUSH2 0xFEE PUSH1 0x20 SWAP4 PUSH1 0xE0 DUP6 DUP10 ADD MSTORE PUSH1 0xE0 DUP9 ADD SWAP1 PUSH2 0x2E7 JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH2 0x2E7 JUMP JUMPDEST SWAP1 CHAINID PUSH1 0x60 DUP7 ADD MSTORE ADDRESS PUSH1 0x80 DUP7 ADD MSTORE DUP3 PUSH1 0xA0 DUP7 ADD MSTORE DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP1 DUP1 DUP6 MLOAD SWAP4 DUP5 DUP2 MSTORE ADD SWAP5 ADD SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x1033 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1024 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x106B PUSH2 0x3B1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 SELFBALANCE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xB SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x10E8 PUSH1 0x4 CALLDATALOAD PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 PUSH1 0x0 DUP3 SWAP2 PUSH1 0x5 DUP5 GT PUSH2 0x1152 JUMPI JUMPDEST PUSH2 0x1103 SWAP4 POP PUSH2 0x2E1F JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1118 JUMPI POP POP PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0xA PUSH2 0x1125 PUSH1 0x20 SWAP4 PUSH2 0x28F3 JUMP JUMPDEST SWAP2 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD SLOAD PUSH1 0x30 SHR PUSH2 0x680 JUMP JUMPDEST SWAP2 SWAP3 PUSH2 0x115D DUP2 PUSH2 0x293D JUMP JUMPDEST DUP2 SUB SWAP1 DUP2 GT PUSH2 0x713 JUMPI PUSH2 0x1103 SWAP4 PUSH1 0xA DUP4 MSTORE PUSH6 0xFFFFFFFFFFFF DUP1 DUP4 PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD SLOAD AND SWAP1 DUP6 AND LT PUSH1 0x0 EQ PUSH2 0x11AD JUMPI POP SWAP2 PUSH2 0x10F9 JUMP JUMPDEST SWAP3 SWAP2 POP PUSH2 0x11B9 SWAP1 PUSH2 0x2902 JUMP JUMPDEST SWAP1 PUSH2 0x10F9 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH2 0x11DB NUMBER PUSH2 0x28A8 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x366 PUSH1 0x40 MLOAD PUSH2 0x352 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1F1F JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1230 PUSH2 0x3B1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1263 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x2AC9 JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x403 PUSH2 0x1288 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x202D JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x36A JUMPI JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x36A JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0xC0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x1307 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD PUSH2 0x1316 PUSH2 0x12CE JUMP JUMPDEST DUP4 TIMESTAMP GT PUSH2 0x139F JUMPI PUSH2 0x1393 PUSH2 0xBE3 SWAP5 PUSH2 0x139A SWAP3 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x40 DUP5 ADD MSTORE DUP7 PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x80 DUP3 MSTORE PUSH2 0x137B DUP3 PUSH2 0x196F JUMP JUMPDEST PUSH2 0x138E PUSH1 0xA4 CALLDATALOAD SWAP4 PUSH1 0x84 CALLDATALOAD SWAP4 MLOAD SWAP1 KECCAK256 PUSH2 0x263D JUMP JUMPDEST PUSH2 0x2384 JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x2312 JUMP JUMPDEST PUSH2 0x1A33 JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x4683AF0E00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0xE0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x13E9 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x13F1 PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD PUSH2 0x1400 PUSH2 0x12DE JUMP JUMPDEST DUP2 TIMESTAMP GT PUSH2 0x151E JUMPI SWAP1 PUSH2 0x149D PUSH2 0x14BE SWAP3 PUSH2 0x14AB PUSH2 0x1438 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 SSTORE SWAP1 JUMP JUMPDEST SWAP4 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP2 PUSH1 0x20 DUP4 ADD SWAP7 DUP11 DUP11 DUP14 DUP11 SWAP2 SWAP6 SWAP5 SWAP4 SWAP1 SWAP3 PUSH1 0xA0 SWAP4 PUSH1 0xC0 DUP5 ADD SWAP8 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND PUSH1 0x20 DUP7 ADD MSTORE AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0x19A7 JUMP JUMPDEST PUSH2 0x138E PUSH1 0xC4 CALLDATALOAD SWAP4 PUSH1 0xA4 CALLDATALOAD SWAP4 MLOAD SWAP1 KECCAK256 PUSH2 0x263D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP1 DUP3 AND SUB PUSH2 0x14DB JUMPI POP PUSH2 0xBE3 SWAP3 PUSH2 0x21DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP3 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH2 0x155D CALLDATASIZE PUSH2 0xD12 JUMP JUMPDEST PUSH2 0x1565 PUSH2 0x18DD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1696 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xEA9 JUMPI PUSH2 0x158E DUP2 PUSH2 0x1589 PUSH1 0x10 SLOAD PUSH2 0x1CAB JUMP JUMPDEST PUSH2 0x2F72 JUMP JUMPDEST PUSH1 0x0 SWAP2 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x15F5 JUMPI DUP2 PUSH32 0x732D2E87DCC1907685C097F7373A47D8C7CD8EF98B659B5F2D4272B26AAB48A7 SWAP4 PUSH1 0x0 SWAP2 PUSH2 0x15EA JUMPI JUMPDEST POP DUP3 PUSH1 0x1 SHL SWAP1 PUSH1 0x0 NOT DUP5 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x10 SSTORE PUSH2 0xDF8 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x2FE3 JUMP JUMPDEST SWAP1 POP DUP2 ADD CALLDATALOAD CODESIZE PUSH2 0x15C7 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 PUSH1 0x1F NOT DUP4 AND DUP5 JUMPDEST DUP2 DUP2 LT PUSH2 0x167E JUMPI POP SWAP4 DUP4 PUSH32 0x732D2E87DCC1907685C097F7373A47D8C7CD8EF98B659B5F2D4272B26AAB48A7 SWAP6 LT PUSH2 0x1664 JUMPI JUMPDEST POP POP PUSH1 0x1 DUP3 DUP2 SHL ADD PUSH1 0x10 SSTORE PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0xF8 DUP6 PUSH1 0x3 SHL AND SHR NOT SWAP1 DUP4 ADD CALLDATALOAD AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x1654 JUMP JUMPDEST DUP4 DUP7 ADD CALLDATALOAD DUP4 SSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x3D9E4CAD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB83 JUMPI PUSH2 0x16DA PUSH2 0x18DD JUMP JUMPDEST DUP1 DUP1 DUP1 DUP1 SELFBALANCE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xB SLOAD AND GAS CALL PUSH2 0x16F5 PUSH2 0x3028 JUMP JUMPDEST POP ISZERO PUSH2 0xB05 JUMPI DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH2 0x1752 PUSH2 0x171C PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x172C PUSH2 0x3C7 JUMP JUMPDEST SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x1 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x1774 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x36A JUMPI PUSH2 0x366 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x17C3 SWAP3 PUSH2 0x179D PUSH2 0x22F9 JUMP JUMPDEST POP PUSH2 0x17A6 PUSH2 0x22F9 JUMP JUMPDEST POP AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x17BD PUSH2 0x22F9 JUMP JUMPDEST POP PUSH2 0x2AF7 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 PUSH2 0x17D1 DUP3 PUSH2 0x1937 JUMP JUMPDEST SLOAD PUSH6 0xFFFFFFFFFFFF DUP2 AND DUP3 MSTORE PUSH1 0x30 SHR PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 SWAP2 PUSH1 0x20 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 PUSH1 0x40 DUP5 ADD SWAP6 PUSH6 0xFFFFFFFFFFFF DUP2 MLOAD AND DUP6 MSTORE ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x183F PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x1847 PUSH2 0x18DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH2 0x18AC JUMPI PUSH1 0xB SLOAD DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR PUSH1 0xB SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xB SLOAD AND CALLER SUB PUSH2 0x18F1 JUMPI JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEA9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEA9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEA9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEA9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH1 0x1F NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEA9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x19D7 DUP3 PUSH2 0x1937 JUMP JUMPDEST JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF PUSH2 0x19E9 NUMBER PUSH2 0x28A8 JUMP JUMPDEST AND DUP1 DUP3 LT ISZERO PUSH2 0x19FC JUMPI POP PUSH2 0x97F SWAP1 PUSH2 0x28A8 JUMP JUMPDEST PUSH1 0x44 SWAP3 POP PUSH1 0x40 MLOAD SWAP2 PUSH32 0xECD3F81E00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x19D7 SWAP2 PUSH2 0x1AC8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP5 DUP3 AND SWAP5 DUP6 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP6 DUP7 SLOAD SWAP7 DUP3 DUP9 AND SWAP8 DUP9 SWAP4 DUP9 AND SWAP5 DUP6 SWAP2 AND OR SWAP1 SSTORE PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST SWAP2 JUMPDEST SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 DUP3 AND SWAP4 DUP2 AND SWAP1 DUP5 DUP3 EQ ISZERO DUP1 PUSH2 0x1C43 JUMPI JUMPDEST PUSH2 0x1AF2 JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x1B8E JUMPI JUMPDEST POP POP DUP3 PUSH2 0x1B07 JUMPI JUMPDEST DUP1 DUP1 PUSH2 0x1AEB JUMP JUMPDEST PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP2 PUSH2 0x1B52 PUSH2 0x1B4C PUSH2 0x1B58 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x2849 JUMP JUMPDEST SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE LOG2 CODESIZE DUP1 DUP1 PUSH2 0x1B00 JUMP JUMPDEST PUSH2 0x1BAB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1BB4 DUP5 PUSH2 0x2849 JUMP JUMPDEST PUSH2 0x1BBD NUMBER PUSH2 0x28A8 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP1 PUSH2 0x1BE4 DUP7 PUSH2 0x2AC9 JUMP JUMPDEST AND SWAP2 AND SWAP1 SUB SWAP3 DUP3 DUP5 GT PUSH2 0x713 JUMPI PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP4 PUSH2 0x1C39 SWAP3 PUSH2 0x1C20 SWAP3 PUSH2 0x2D38 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP6 AND DUP4 MSTORE SWAP4 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP2 DUP3 SWAP2 SWAP1 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG2 CODESIZE DUP1 PUSH2 0x1AF8 JUMP JUMPDEST POP DUP4 ISZERO ISZERO PUSH2 0x1AE6 JUMP JUMPDEST SWAP1 PUSH2 0x1C56 NUMBER PUSH2 0x28A8 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP1 PUSH2 0x1C7D DUP7 PUSH2 0x2AC9 JUMP JUMPDEST AND SWAP2 AND ADD SWAP2 DUP3 GT PUSH2 0x1C95 JUMPI PUSH2 0x1C91 SWAP3 PUSH2 0x2D38 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1CDB JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1CC5 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1CBA JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1CF5 DUP3 PUSH2 0x1CAB JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1D6C JUMPI POP PUSH1 0x1 EQ PUSH2 0x1D13 JUMPI POP POP POP JUMP JUMPDEST SWAP2 SWAP3 SWAP4 POP PUSH1 0xF PUSH1 0x0 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x1D54 JUMPI POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP6 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1D42 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP5 SWAP6 POP PUSH1 0xFF NOT SWAP2 POP SWAP3 SWAP2 SWAP3 AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1D9A DUP3 PUSH2 0x1CAB JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1D6C JUMPI POP PUSH1 0x1 EQ PUSH2 0x1DB8 JUMPI POP POP POP JUMP JUMPDEST SWAP2 SWAP3 SWAP4 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x1DF9 JUMPI POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP6 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1DE7 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1E21 DUP3 PUSH2 0x1CAB JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1D6C JUMPI POP PUSH1 0x1 EQ PUSH2 0x1E3F JUMPI POP POP POP JUMP JUMPDEST SWAP2 SWAP3 SWAP4 POP PUSH1 0xE PUSH1 0x0 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x1E80 JUMPI POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP6 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1E6E JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1EA8 DUP3 PUSH2 0x1CAB JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1D6C JUMPI POP PUSH1 0x1 EQ PUSH2 0x1EC6 JUMPI POP POP POP JUMP JUMPDEST SWAP2 SWAP3 SWAP4 POP PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x1F07 JUMPI POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP6 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1F2F DUP3 PUSH2 0x1CAB JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1D6C JUMPI POP PUSH1 0x1 EQ PUSH2 0x1F4D JUMPI POP POP POP JUMP JUMPDEST SWAP2 SWAP3 SWAP4 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x1F8E JUMPI POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP6 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1F7C JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1FB6 DUP3 PUSH2 0x1CAB JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1D6C JUMPI POP PUSH1 0x1 EQ PUSH2 0x1FD4 JUMPI POP POP POP JUMP JUMPDEST SWAP2 SWAP3 SWAP4 POP PUSH1 0x10 PUSH1 0x0 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x2015 JUMPI POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP6 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x2003 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x21AA JUMPI DUP5 AND SWAP1 DUP2 ISZERO PUSH2 0x2179 JUMPI PUSH2 0x2067 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD DUP4 DUP2 LT PUSH2 0x2130 JUMPI SWAP3 PUSH2 0x212D SWAP5 SWAP3 PUSH2 0x20F4 SWAP3 DUP3 PUSH2 0x2113 SWAP9 SWAP7 SUB PUSH2 0x209D DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH2 0x20BB DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 ADD SWAP1 SSTORE PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 SWAP1 LOG3 DUP4 DUP4 PUSH2 0x30BB JUMP JUMPDEST PUSH1 0x15 SLOAD SWAP4 DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP2 AND SWAP3 DUP4 ISZERO PUSH2 0x2290 JUMPI DUP3 AND SWAP4 DUP5 ISZERO PUSH2 0x225F JUMPI DUP1 PUSH2 0x2255 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP5 PUSH2 0x223D PUSH1 0x20 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND ISZERO PUSH2 0x2290 JUMPI DUP2 AND ISZERO PUSH2 0x225F JUMPI PUSH2 0x223D PUSH2 0x212D SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2306 DUP3 PUSH2 0x1937 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 DUP3 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x2339 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 SSTORE SWAP1 JUMP JUMPDEST DUP1 SWAP2 SUB PUSH2 0x2344 JUMPI POP POP JUMP JUMPDEST PUSH1 0x44 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP3 PUSH32 0x752D88C000000000000000000000000000000000000000000000000000000000 DUP5 MSTORE AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 PUSH2 0x97F SWAP4 SWAP2 PUSH2 0x2393 SWAP4 PUSH2 0x239C JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x244C JUMP JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x2420 JUMPI SWAP3 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0xFF PUSH1 0x80 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x2414 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x240B JUMPI SWAP2 DUP2 SWAP1 JUMP JUMPDEST POP DUP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x2436 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2455 DUP2 PUSH2 0x242C JUMP JUMPDEST DUP1 PUSH2 0x245E JUMPI POP POP JUMP JUMPDEST PUSH2 0x2467 DUP2 PUSH2 0x242C JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x2499 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0x24A2 DUP2 PUSH2 0x242C JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x24DC JUMPI PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x24E8 PUSH1 0x3 SWAP3 PUSH2 0x242C JUMP JUMPDEST EQ PUSH2 0x24F0 JUMPI POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS EQ DUP1 PUSH2 0x2614 JUMPI JUMPDEST ISZERO PUSH2 0x257E JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP3 MSTORE PUSH32 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH2 0x260E DUP2 PUSH2 0x198B JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST POP PUSH32 0x0 CHAINID EQ PUSH2 0x2555 JUMP JUMPDEST PUSH1 0x42 SWAP1 PUSH2 0x2648 PUSH2 0x2523 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x26D4 JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x26AA JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x26A0 DUP4 PUSH2 0x1937 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x5 SLOAD DUP2 PUSH1 0x0 PUSH2 0x26E7 DUP4 PUSH2 0x1CAB JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x276D JUMPI POP PUSH1 0x1 EQ PUSH2 0x270E JUMPI JUMPDEST POP PUSH2 0x97F SWAP3 POP SUB DUP3 PUSH2 0x19A7 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 JUMPDEST DUP5 DUP4 LT PUSH2 0x2752 JUMPI POP PUSH2 0x97F SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x2701 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x2739 JUMP JUMPDEST PUSH1 0x20 SWAP4 POP PUSH2 0x97F SWAP6 SWAP3 POP PUSH1 0xFF NOT SWAP2 POP AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x2701 JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x27B1 JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x26AA JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x26A0 DUP4 PUSH2 0x1937 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x6 SLOAD DUP2 PUSH1 0x0 PUSH2 0x27C4 DUP4 PUSH2 0x1CAB JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x276D JUMPI POP PUSH1 0x1 EQ PUSH2 0x27EA JUMPI POP PUSH2 0x97F SWAP3 POP SUB DUP3 PUSH2 0x19A7 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F JUMPDEST DUP5 DUP4 LT PUSH2 0x282E JUMPI POP PUSH2 0x97F SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x2701 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x2815 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP2 GT PUSH2 0x2870 JUMPI AND SWAP1 JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0xD0 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH6 0xFFFFFFFFFFFF SWAP1 DUP2 DUP2 GT PUSH2 0x28BB JUMPI AND SWAP1 JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x30 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x713 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x713 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x713 JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2927 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x97F JUMPI PUSH1 0x1 DUP2 PUSH17 0x100000000000000000000000000000000 DUP2 LT ISZERO PUSH2 0x2A68 JUMPI JUMPDEST PUSH2 0x2A10 PUSH2 0x2A06 PUSH2 0x29FC PUSH2 0x29F2 PUSH2 0x29E8 PUSH2 0x29DE PUSH2 0x2A1C SWAP8 PUSH1 0x4 DUP9 PUSH9 0x10000000000000000 PUSH2 0x2A17 SWAP11 LT ISZERO PUSH2 0x2A5B JUMPI JUMPDEST PUSH5 0x100000000 DUP2 LT ISZERO PUSH2 0x2A4E JUMPI JUMPDEST PUSH3 0x10000 DUP2 LT ISZERO PUSH2 0x2A41 JUMPI JUMPDEST PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x2A35 JUMPI JUMPDEST PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x2A29 JUMPI JUMPDEST LT ISZERO PUSH2 0x2A21 JUMPI JUMPDEST PUSH1 0x3 MUL PUSH1 0x1 SHR PUSH2 0x29D7 DUP2 DUP12 PUSH2 0x291D JUMP JUMPDEST ADD PUSH1 0x1 SHR SWAP1 JUMP JUMPDEST PUSH2 0x29D7 DUP2 DUP11 PUSH2 0x291D JUMP JUMPDEST PUSH2 0x29D7 DUP2 DUP10 PUSH2 0x291D JUMP JUMPDEST PUSH2 0x29D7 DUP2 DUP9 PUSH2 0x291D JUMP JUMPDEST PUSH2 0x29D7 DUP2 DUP8 PUSH2 0x291D JUMP JUMPDEST PUSH2 0x29D7 DUP2 DUP7 PUSH2 0x291D JUMP JUMPDEST DUP1 SWAP4 PUSH2 0x291D JUMP JUMPDEST DUP3 GT SWAP1 JUMP JUMPDEST SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 SHL PUSH2 0x29C7 JUMP JUMPDEST DUP2 SHR SWAP2 PUSH1 0x2 SHL SWAP2 PUSH2 0x29C0 JUMP JUMPDEST PUSH1 0x8 SHR SWAP2 DUP2 SHL SWAP2 PUSH2 0x29B6 JUMP JUMPDEST PUSH1 0x10 SHR SWAP2 PUSH1 0x8 SHL SWAP2 PUSH2 0x29AB JUMP JUMPDEST PUSH1 0x20 SHR SWAP2 PUSH1 0x10 SHL SWAP2 PUSH2 0x299F JUMP JUMPDEST PUSH1 0x40 SHR SWAP2 PUSH1 0x20 SHL SWAP2 PUSH2 0x2991 JUMP JUMPDEST POP PUSH9 0x10000000000000000 SWAP1 POP PUSH1 0x80 DUP3 SWAP1 SHR PUSH2 0x2963 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 DUP1 PUSH2 0x2A91 JUMPI POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DUP2 ADD GT PUSH2 0x713 JUMPI PUSH1 0xA PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A7 SWAP3 MSTORE ADD SLOAD PUSH1 0x30 SHR SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP2 DUP2 PUSH2 0x2ADB JUMPI POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT SWAP3 DUP3 DUP5 DUP2 ADD GT PUSH2 0x713 JUMPI PUSH1 0x20 SWAP2 DUP2 MSTORE KECCAK256 ADD ADD SLOAD PUSH1 0x30 SHR SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2B0F JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xA SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0xEA9 JUMPI PUSH1 0x1 DUP3 ADD DUP1 PUSH1 0xA SSTORE DUP3 LT ISZERO PUSH2 0x2B0F JUMPI PUSH1 0xA PUSH1 0x0 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x30 SHL PUSH6 0xFFFFFFFFFFFF NOT AND PUSH6 0xFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND OR PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0xEA9 JUMPI PUSH2 0x2BB8 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x2AF7 JUMP JUMPDEST PUSH2 0x2BE4 JUMPI DUP2 MLOAD PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD MLOAD PUSH1 0x30 SHL PUSH6 0xFFFFFFFFFFFF NOT AND PUSH6 0xFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xA SLOAD SWAP2 SWAP3 SWAP2 DUP1 ISZERO PUSH2 0x2CFB JUMPI PUSH2 0x2C12 PUSH2 0x2C3C SWAP2 PUSH2 0x28F3 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH6 0xFFFFFFFFFFFF SWAP1 DUP2 DUP5 AND SWAP2 DUP4 AND DUP1 DUP4 GT PUSH2 0x2CD1 JUMPI DUP7 SWAP3 SUB PUSH2 0x2C86 JUMPI PUSH2 0x2C7F SWAP3 POP SWAP1 PUSH6 0xFFFFFFFFFFFF PUSH6 0xFFFFFFFFFFFF NOT DUP4 SLOAD SWAP3 PUSH1 0x30 SHL AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x30 SHR SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH2 0x2CCC SWAP1 PUSH2 0x2CA5 PUSH2 0x2C97 PUSH2 0x19CA JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2B25 JUMP JUMPDEST PUSH2 0x2C7F JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x2520601D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP PUSH2 0x2D32 SWAP1 PUSH2 0x2D0B PUSH2 0x2C97 PUSH2 0x19CA JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2B25 JUMP JUMPDEST PUSH1 0x0 SWAP2 SWAP1 JUMP JUMPDEST DUP1 SLOAD SWAP3 SWAP4 SWAP3 DUP1 ISZERO PUSH2 0x2DE7 JUMPI PUSH2 0x2D4F PUSH2 0x2D5C SWAP2 PUSH2 0x28F3 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SLOAD SWAP3 PUSH6 0xFFFFFFFFFFFF SWAP2 DUP3 DUP6 AND SWAP3 DUP2 AND DUP1 DUP5 GT PUSH2 0x2CD1 JUMPI DUP8 SWAP4 SUB PUSH2 0x2DA0 JUMPI POP PUSH2 0x2C7F SWAP3 POP SWAP1 PUSH6 0xFFFFFFFFFFFF PUSH6 0xFFFFFFFFFFFF NOT DUP4 SLOAD SWAP3 PUSH1 0x30 SHL AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2CCC SWAP2 PUSH2 0x2DC0 PUSH2 0x2DB2 PUSH2 0x19CA JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2B96 JUMP JUMPDEST POP SWAP1 PUSH2 0x2D32 SWAP2 PUSH2 0x2DF8 PUSH2 0x2DB2 PUSH2 0x19CA JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2B96 JUMP JUMPDEST SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x2E2D JUMPI POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 DUP1 DUP3 AND SWAP1 DUP1 DUP4 XOR PUSH1 0x1 SHR DUP3 ADD DUP1 SWAP3 GT PUSH2 0x713 JUMPI PUSH1 0xA PUSH1 0x0 MSTORE PUSH6 0xFFFFFFFFFFFF DUP1 DUP4 PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD SLOAD AND SWAP1 DUP6 AND LT PUSH1 0x0 EQ PUSH2 0x2E88 JUMPI POP SWAP2 JUMPDEST SWAP1 PUSH2 0x2E21 JUMP JUMPDEST SWAP3 SWAP2 POP PUSH2 0x2E94 SWAP1 PUSH2 0x2902 JUMP JUMPDEST SWAP1 PUSH2 0x2E82 JUMP JUMPDEST SWAP1 SWAP2 JUMPDEST DUP4 DUP2 LT PUSH2 0x2EAA JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 DUP1 DUP3 AND SWAP1 DUP1 DUP4 XOR PUSH1 0x1 SHR DUP3 ADD DUP1 SWAP3 GT PUSH2 0x713 JUMPI DUP2 PUSH1 0x20 PUSH1 0x0 DUP7 DUP2 MSTORE DUP3 PUSH6 0xFFFFFFFFFFFF SWAP3 DUP4 SWAP3 KECCAK256 ADD SLOAD AND SWAP1 DUP8 AND LT PUSH1 0x0 EQ PUSH2 0x2EED JUMPI POP POP SWAP3 JUMPDEST SWAP2 SWAP1 PUSH2 0x2E9D JUMP JUMPDEST SWAP1 SWAP5 SWAP3 POP PUSH2 0x2EFB SWAP2 POP PUSH2 0x2902 JUMP JUMPDEST SWAP1 PUSH2 0x2EE6 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2F0D JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xF DUP3 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x2F68 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x2F5D JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2F51 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x2F48 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2F7E JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x10 DUP3 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x2FD9 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x2FCE JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2FC2 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x2FB9 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP4 PUSH1 0x40 SWAP5 PUSH1 0x1F NOT SWAP4 PUSH1 0x20 DUP7 MSTORE DUP2 PUSH1 0x20 DUP8 ADD MSTORE DUP7 DUP7 ADD CALLDATACOPY PUSH1 0x0 DUP6 DUP3 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x713 JUMPI JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x3063 JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xEA9 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x3057 PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP5 ADD AND ADD DUP5 PUSH2 0x19A7 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x30B5 JUMPI PUSH1 0x15 SLOAD PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP2 SUB SWAP1 DUP2 GT PUSH2 0x713 JUMPI DUP1 DUP3 MUL SWAP2 DUP3 DIV SUB PUSH2 0x713 JUMPI PUSH8 0xDE0B6B3A7640000 SWAP1 DIV SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP2 DUP2 SWAP1 DUP5 ISZERO PUSH2 0x315A JUMPI JUMPDEST AND SWAP1 DUP2 ISZERO PUSH2 0x30FF JUMPI JUMPDEST PUSH2 0x19D7 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH2 0x3108 DUP4 PUSH2 0x2849 JUMP JUMPDEST SWAP4 PUSH2 0x3112 NUMBER PUSH2 0x28A8 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 DUP7 DUP1 PUSH2 0x3138 PUSH2 0x2A7F JUMP JUMPDEST AND SWAP2 AND SWAP1 SUB SWAP6 DUP7 GT PUSH2 0x713 JUMPI PUSH2 0x19D7 SWAP6 PUSH2 0x3151 SWAP2 PUSH2 0x2BFA JUMP JUMPDEST POP POP SWAP4 POP PUSH2 0x30DA JUMP JUMPDEST SWAP1 POP PUSH2 0x3165 DUP4 PUSH2 0x2849 JUMP JUMPDEST SWAP1 PUSH2 0x316F NUMBER PUSH2 0x28A8 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP1 PUSH2 0x3195 PUSH2 0x2A7F JUMP JUMPDEST AND SWAP2 AND ADD SWAP3 DUP4 GT PUSH2 0x713 JUMPI DUP4 SWAP3 PUSH2 0x31AB SWAP2 PUSH2 0x2BFA JUMP JUMPDEST POP POP PUSH2 0x30D1 JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP 0xC6 GAS PUSH28 0xB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2 0xA8 0xDE 0xC2 0xBA 0xCD 0xD2 CREATE JUMPDEST MSIZE 0xDE CALLVALUE 0xDA SWAP12 MSTORE RETURNDATASIZE SELFDESTRUCT DUP12 0xE4 0x2E 0x5E CODESIZE 0xE8 XOR 0xC8 0x2F 0xDB SIGNEXTEND 0xAE PUSH24 0x4387A7240000000000000000000000000000000000000000 ","sourceMap":"581:7820:29:-:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;581:7820:29;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;581:7820:29;;;;;;;;;;;;;;;;;-1:-1:-1;;581:7820:29;;;;;;-1:-1:-1;;;;;581:7820:29;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;-1:-1:-1;;;;;581:7820:29;;;;;;;:::o;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;-1:-1:-1;;581:7820:29;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;581:7820:29;;;;;;;;;;;;-1:-1:-1;;581:7820:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;-1:-1:-1;;;;;581:7820:29;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;581:7820:29;1648:13:7;581:7820:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;581:7820:29;;;;;;;;;;;;:::o;:::-;-1:-1:-1;581:7820:29;1671:17:7;581:7820:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;581:7820:29;;;;;;;;;;;;:::o;:::-;-1:-1:-1;581:7820:29;2234:23;581:7820;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;581:7820:29;;;;;;;;;;;;:::o;:::-;-1:-1:-1;581:7820:29;2267:23;581:7820;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;581:7820:29;;;;;;;;;;;;:::o;:::-;-1:-1:-1;581:7820:29;2300:27;581:7820;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;581:7820:29;;;;;;;;;;;;:::o;:::-;-1:-1:-1;581:7820:29;2337:35;581:7820;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;581:7820:29;;;;;;;;;;;;:::o;:::-;-1:-1:-1;581:7820:29;3532:13:21;581:7820:29;;;;;;;;;;3532:13:21;581:7820:29;;;;;;;;;;3532:13:21;581:7820:29;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;581:7820:29;;;;;;;;;;;;:::o;:::-;-1:-1:-1;581:7820:29;3601:16:21;581:7820:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;581:7820:29;;;;;;;;;;-1:-1:-1;;;;;581:7820:29;;;;;;;1671:17:7;581:7820:29;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1671:17:7;581:7820:29;:::o;:::-;;;;-1:-1:-1;581:7820:29;;;;;1671:17:7;581:7820:29;;-1:-1:-1;;581:7820:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1671:17:7;581:7820:29;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;581:7820:29;;;;;;;2234:23;581:7820;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2234:23;581:7820;:::o;:::-;;;;-1:-1:-1;581:7820:29;;;;;2234:23;581:7820;;-1:-1:-1;;581:7820:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2234:23;581:7820;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;581:7820:29;;;;;;;2267:23;581:7820;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2267:23;581:7820;:::o;:::-;;;;-1:-1:-1;581:7820:29;;;;;2267:23;581:7820;;-1:-1:-1;;581:7820:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2267:23;581:7820;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;581:7820:29;;;;;;;2300:27;581:7820;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2300:27;581:7820;:::o;:::-;;;;-1:-1:-1;581:7820:29;;;;;2300:27;581:7820;;-1:-1:-1;;581:7820:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2300:27;581:7820;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;581:7820:29;;;;;;;2337:35;581:7820;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2337:35;581:7820;:::o;:::-;;;;-1:-1:-1;581:7820:29;;;;;2337:35;581:7820;;-1:-1:-1;;581:7820:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2337:35;581:7820;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1861:700;;;;;;;;581:7820;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;581:7820:29;;;;;;;;;;;;;;;;1648:13:7;581:7820:29;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;581:7820:29;;;;;;;;;;1648:13:7;581:7820:29;;;;;1648:13:7;581:7820:29;;:::i;:::-;3501:45:21;;;:::i;:::-;3493:53;;3567:51;;;:::i;:::-;3556:62;;581:7820:29;;;;3642:22:21;3628:36;;581:7820:29;3691:25:21;;3674:42;;3744:13;3727:30;;3792:23;;:::i;:::-;3767:48;;3847:4;3825:27;;-1:-1:-1;;;;;581:7820:29;;1273:26:0;1269:95;;581:7820:29;2464:12;1392::0;581:7820:29;2547:6;1392:12:0;581:7820:29;;1392:12:0;;;;:::i;:::-;2061:21:16;581:7820:29;2061:21:16;1857:1;;2061:21;581:7820:29;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;2464:12;;:::i;:::-;2547:6;;:::i;1269:95:0:-;581:7820:29;;-1:-1:-1;;;1322:31:0;;581:7820:29;1671:17:7;1322:31:0;;581:7820:29;;;1322:31:0;581:7820:29;;;;;-1:-1:-1;581:7820:29;;;;1648:13:7;581:7820:29;;;;-1:-1:-1;;581:7820:29;;;;;-1:-1:-1;581:7820:29;;;;;;;;;;;;;;;;;;;;;;;;;;1648:13:7;581:7820:29;;:::i;:::-;;;;;;;;1648:13:7;581:7820:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2912:187:0;3004:6;581:7820:29;;-1:-1:-1;;;;;581:7820:29;;;-1:-1:-1;;;;;;581:7820:29;;;;;;;;;;3052:40:0;-1:-1:-1;;3052:40:0;2912:187::o;6730:312:2:-;-1:-1:-1;;;;;581:7820:29;;;-1:-1:-1;581:7820:29;;;5674:10:2;581:7820:29;;;;;;;;;;;-1:-1:-1;;;;;;581:7820:29;;;;;;;7010:24:2;;581:7820:29;;;;;;-1:-1:-1;581:7820:29;;6909:48:2;-1:-1:-1;;6909:48:2;581:7820:29;;;;;7010:24:2;7761:789;-1:-1:-1;;;;;581:7820:29;;;;7761:789:2;;581:7820:29;;;;7862:10:2;;;;;:24;;7761:789;7858:686;;7761:789;;;;;;:::o;7858:686::-;7906:18;7902:315;;7858:686;8234:16;;;8230:304;;7858:686;;;;;8230:304;-1:-1:-1;;;;;581:7820:29;;;;;8010:20:2;581:7820:29;;;;;-1:-1:-1;;;;;;;;;;;8475:44:2;8309:143;;8408:26;;;;:::i;:::-;8309:143;;:::i;:::-;581:7820:29;;;-1:-1:-1;;;;;581:7820:29;;;;;;;;;;;;;8475:44:2;8230:304;;;;;7902:315;-1:-1:-1;;;;;581:7820:29;;;;;8010:20:2;581:7820:29;;;;;8089:26:2;;;:::i;:::-;581:7820:29;;1020:12:27;;;14374:24:24;14370:103;;581:7820:29;;-1:-1:-1;10447:8:26;;;:63;;;8311:38;10447:63;9309:25:2;-1:-1:-1;;;;;;;;;;;10447:63:26;-1:-1:-1;9309:25:2;:::i;:::-;1020:12:27;;581:7820:29;8311:38:26;;:::i;:::-;581:7820:29;;;-1:-1:-1;;;;;581:7820:29;;;;;;;;;;;;;8156:46:2;7902:315;;;;10447:63:26;581:7820:29;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;14441:109:26;8311:38;14441:109;;;;9309:25:2;14441:109:26;;;;;581:7820:29;;;9309:25:2;:::i;581:7820:29:-;;:::i;14370:103:24:-;581:7820:29;;-1:-1:-1;;;14421:41:24;;14452:2;14421:41;;;581:7820:29;1020:12:27;581:7820:29;;;;;;14421:41:24;7862:24:2;7876:10;;;;7862:24;;9069:273;581:7820:29;1020:12:27;;;14374:24:24;14370:103;;581:7820:29;;-1:-1:-1;10447:8:26;;;:63;;9309:25:2;8311:38:26;10447:63;-1:-1:-1;9309:25:2;:::i;8311:38:26:-;9282:53:2;;9069:273::o;10447:63:26:-;581:7820:29;;;;;;;;;;;8311:38:26;14441:109;;;;9309:25:2;14441:109:26;;;;;581:7820:29;;;9309:25:2;:::i;9069:273::-;581:7820:29;1020:12:27;;14374:24:24;14370:103;;7533:17:2;581:7820:29;-1:-1:-1;10447:8:26;;;:63;;9309:25:2;8311:38:26;10447:63;-1:-1:-1;9309:25:2;:::i;:::-;1020:12:27;;581:7820:29;8311:38:26;:::i;10447:63::-;581:7820:29;;;;;;;;;;;8311:38:26;14441:109;;;7533:17:2;9309:25;14441:109:26;;;;;581:7820:29;;;9309:25:2;:::i;581:7820:29:-;;;;;;;;;;;;7439:208:7;;-1:-1:-1;;;;;581:7820:29;;7509:21:7;;7505:91;;6214:21;;581:7820:29;6214:21:7;581:7820:29;6214:21:7;:::i;:::-;;1857:1:16;;6214:21:7;-1:-1:-1;;;;;581:7820:29;;7528:1:7;581:7820:29;;;;;;;;;;;;;;;1857:1:16;;581:7820:29;;;;7064:25:7;;581:7820:29;7064:25:7;6214:21;581:7820:29;-1:-1:-1;;;;;2616:12:10;;2612:94;;2756:5;;;;;:::i;:::-;6981:15:29;581:7820;-1:-1:-1;;;;;581:7820:29;;;;;;;6957:17;581:7820;;;;;1857:1:16;7439:208:7:o;2612:94:10:-;581:7820:29;;-1:-1:-1;;;2655:36:10;;;;;581:7820:29;;;;-1:-1:-1;;;;;581:7820:29;;;;;;1322:31:0;7505:91:7;581:7820:29;;-1:-1:-1;;;7553:32:7;;7528:1;7553:32;;;581:7820:29;;;7553:32:7;2887:340:17;;581:7820:29;;3032:2:17;3010:24;;;3006:215;3032:2;;;3057:20;;;;;;:::i;3006:215::-;-1:-1:-1;;;;;581:7820:29;;;;;;;3532:13:21;581:7820:29;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3532:13:21;581:7820:29;1390:66:17;3168:42;:::o;581:7820:29:-;;;;-1:-1:-1;581:7820:29;;;;;3532:13:21;581:7820:29;;-1:-1:-1;;581:7820:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3532:13:21;581:7820:29;1390:66:17;3168:42;:::o;581:7820:29:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2887:340:17;;581:7820:29;;3032:2:17;3010:24;;;3006:215;3032:2;;;3057:20;;;;;;:::i;3006:215::-;-1:-1:-1;;;;;581:7820:29;;;;;;;3601:16:21;581:7820:29;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3601:16:21;581:7820:29;1390:66:17;3168:42;:::o;581:7820:29:-;;;;-1:-1:-1;581:7820:29;;;;;3601:16:21;581:7820:29;;-1:-1:-1;;581:7820:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3601:16:21;581:7820:29;1390:66:17;3168:42;:::o;581:7820:29:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1708:286:17;1854:2;581:7820:29;;1840:16:17;1836:72;;581:7820:29;;;;;;;;;;;1949:36:17;1708:286;:::o;581:7820:29:-;;;;;;;;;;1949:36:17;1708:286;:::o;1836:72::-;581:7820:29;;;1879:18:17;;;;;;;581:7820:29;1879:18:17;;;581:7820:29;;;;;;;;;;;;;;;;;;:::i;:::-;1854:2:17;581:7820:29;-1:-1:-1;;581:7820:29;;;1879:18:17;;;;4213:179:21;4326:11;581:7820:29;4339:14:21;581:7820:29;;;4304:80:21;;;;581:7820:29;2079:95:21;581:7820:29;;;2079:95:21;;581:7820:29;2079:95:21;;;581:7820:29;4355:13:21;2079:95;;;581:7820:29;4378:4:21;2079:95;;;581:7820:29;2079:95:21;4304:80;;2079:95;581:7820:29;;;;;;;;;;;;;;;;;;4294:91:21;;4213:179;:::o;4174:218:24:-;-1:-1:-1;;;;;2192:17:10;4254:25:24;;;4250:105;;581:7820:29;4174:218:24;:::o;4250:105::-;581:7820:29;;;;14421:41:24;;;;4302:42;;2192:17:10;4302:42:24;;;581:7820:29;;;;;4302:42:24;581:7820:29;-1:-1:-1;;581:7820:29;;;;;;;;:::o;:::-;7533:17:2;581:7820:29;;;;;;;;;;;;7533:17:2;581:7820:29;;;;;;7533:17:2;-1:-1:-1;581:7820:29;;;;;;;;;;;-1:-1:-1;;581:7820:29;;;;;;;-1:-1:-1;;;;;;;;;;;581:7820:29;;;;:::o;:::-;;;;-1:-1:-1;581:7820:29;;;;;-1:-1:-1;581:7820:29;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;581:7820:29;;;;;;;;;;;;;;;;;-1:-1:-1;;581:7820:29;;;;;;;;;;;;;:::o;11659:922:26:-;7533:17:2;581:7820:29;11659:922:26;;;11866:7;;;;11938;11918:28;11938:7;;:::i;:::-;7533:17:2;14441:109:26;;-1:-1:-1;;;;;;;;;;;14441:109:26;;14291:265;11918:28;581:7820:29;;;;;;;;;;;;12105:13:26;;;12101:89;;12253:14;;;;;12287:19;;;581:7820:29;;;;;;;;;;;;;;;;;12287:19:26;581:7820:29;;12425:25:26;;:::o;12249:163::-;581:7820:29;;12345:52:26;581:7820:29;12355:41:26;581:7820:29;;:::i;:::-;;;;;;;;12355:41:26;-1:-1:-1;;;;;581:7820:29;;12355:41:26;;;581:7820:29;12345:52:26;:::i;:::-;12249:163;;12101:89;581:7820:29;;-1:-1:-1;;;12145:30:26;;;;;11862:713;581:7820:29;12481:52:26;581:7820:29;12491:41:26;581:7820:29;;:::i;12491:41:26:-;-1:-1:-1;;;;;581:7820:29;;12491:41:26;;;581:7820:29;12345:52:26;:::i;12481:::-;11872:1;12547:17;;:::o;11659:922::-;581:7820:29;;11659:922:26;;;11866:7;;;;11938;11918:28;11938:7;;:::i;:::-;11918:28;14441:109;;;;;;14291:265;;11918:28;581:7820:29;;;;;;;;;;;;12105:13:26;;;12101:89;;12253:14;;;;;12287:19;;;;581:7820:29;;;;;;;;;;;;;;;;;12249:163:26;581:7820:29;;;12345:52:26;581:7820:29;12355:41:26;581:7820:29;;:::i;:::-;;;;;;;;12355:41:26;-1:-1:-1;;;;;581:7820:29;;12355:41:26;;;581:7820:29;12345:52:26;:::i;11862:713::-;581:7820:29;;12481:52:26;581:7820:29;12491:41:26;581:7820:29;;:::i;12491:41:26:-;-1:-1:-1;;;;;581:7820:29;;12491:41:26;;;581:7820:29;12345:52:26;:::i;7276:399:2:-;;7444:26;;;:::i;:::-;581:7820:29;;1020:12:27;;14374:24:24;14370:103;;7419:17:2;581:7820:29;-1:-1:-1;10447:8:26;;;:63;;8311:38;10447:63;9309:25:2;7661:6;10447:63:26;-1:-1:-1;9309:25:2;:::i;8311:38:26:-;-1:-1:-1;;;;;;;581:7820:29;;;;7495:16:2;;7491:110;;10447:63:26;5674:10:2;581:7820:29;;;;-1:-1:-1;581:7820:29;;;;;;;;;;;;7661:6:2;:::i;7491:110::-;7527:63;7563:26;;;:::i;:::-;7527:63;:::i;:::-;7491:110;;;;10447:63:26;581:7820:29;;;;;;;;;;;;;7661:6:2;14441:109:26;8311:38;14441:109;;;7419:17:2;9309:25;14441:109:26;;;;;581:7820:29;;;9309:25:2;:::i;581:7820:29:-;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;581:7820:29;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;581:7820:29;;;;;;;;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":967,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_13133":{"entryPoint":945,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_string_calldata":{"entryPoint":3346,"id":null,"parameterSlots":1,"returnSlots":2},"abi_decode_uint8":{"entryPoint":4830,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint8_13187":{"entryPoint":4814,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_address_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_bytes32_address_address_uint256_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_string":{"entryPoint":743,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_calldata":{"entryPoint":12259,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":7832,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_string_storage_13131":{"entryPoint":7397,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_string_storage_13132":{"entryPoint":7562,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_string_storage_13136":{"entryPoint":7697,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_string_storage_13153":{"entryPoint":7967,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_string_storage_13157":{"entryPoint":8102,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_string_string_string_string_string_uint256_uint256_uint256_string":{"entryPoint":2302,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_struct_Checkpoint208":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_and_zero_memory_struct_struct_Checkpoint208":{"entryPoint":8953,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory":{"entryPoint":6602,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_string_storage_13169":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_push_from_struct_Checkpoint208_to_array_struct_Checkpoint208_storage_dyn_ptr":{"entryPoint":11158,"id":null,"parameterSlots":2,"returnSlots":0},"array_push_from_struct_Checkpoint208_to_array_struct_Checkpoint208_storage_dyn_ptr_30149":{"entryPoint":11045,"id":null,"parameterSlots":1,"returnSlots":0},"checked_add_uint256":{"entryPoint":10512,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256_13249":{"entryPoint":10498,"id":null,"parameterSlots":1,"returnSlots":1},"checked_mul_uint256":{"entryPoint":12299,"id":null,"parameterSlots":1,"returnSlots":1},"checked_sub_uint256":{"entryPoint":10483,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":12033,"id":null,"parameterSlots":2,"returnSlots":0},"clean_up_bytearray_end_slots_string_storage_13199":{"entryPoint":12146,"id":null,"parameterSlots":2,"returnSlots":0},"cleanup_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"external_fun_CLOCK_MODE":{"entryPoint":2132,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_DOMAIN_SEPARATOR":{"entryPoint":1531,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_agentConfigJSON":{"entryPoint":3858,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_agentName":{"entryPoint":1816,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_allowance":{"entryPoint":5886,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_approve":{"entryPoint":989,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_archetype":{"entryPoint":1038,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_authorizedRevenueSources":{"entryPoint":4170,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_balanceOf":{"entryPoint":3174,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_checkpoints":{"entryPoint":5979,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_claimRevenue":{"entryPoint":2625,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_claimedRevenue":{"entryPoint":1074,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_clock":{"entryPoint":4543,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_contractBalance":{"entryPoint":4233,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_decimals":{"entryPoint":1503,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_delegate":{"entryPoint":3009,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_delegateBySig":{"entryPoint":4846,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_delegates":{"entryPoint":2950,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_depositRevenue":{"entryPoint":1852,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_eip712Domain":{"entryPoint":3894,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_emergencyWithdraw":{"entryPoint":5824,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getAgentInfo":{"entryPoint":2434,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getClaimableRevenue":{"entryPoint":2590,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getPastTotalSupply":{"entryPoint":4300,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getPastVotes":{"entryPoint":1566,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getVotes":{"entryPoint":4623,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_metadataURI":{"entryPoint":807,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_name":{"entryPoint":879,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_nonces":{"entryPoint":3800,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_numCheckpoints":{"entryPoint":3045,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_owner":{"entryPoint":4261,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_permit":{"entryPoint":5072,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceOwnership":{"entryPoint":3230,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_revenuePerToken":{"entryPoint":915,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setAgentConfigJSON":{"entryPoint":5455,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setMetadataURI":{"entryPoint":3420,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setRevenueSource":{"entryPoint":1162,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_symbol":{"entryPoint":4587,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_totalDistributedRevenue":{"entryPoint":4754,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_totalRevenue":{"entryPoint":4784,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_totalSupply":{"entryPoint":1132,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transfer":{"entryPoint":4716,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferFrom":{"entryPoint":1290,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferOwnership":{"entryPoint":6182,"id":null,"parameterSlots":0,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7339,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":12328,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":6567,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_13204":{"entryPoint":6455,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_24916":{"entryPoint":6483,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_24918":{"entryPoint":6511,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_24925":{"entryPoint":6539,"id":null,"parameterSlots":1,"returnSlots":0},"fun__approve":{"entryPoint":8667,"id":1427,"parameterSlots":3,"returnSlots":0},"fun_approve":{"entryPoint":8897,"id":1427,"parameterSlots":3,"returnSlots":0},"fun_balanceOf":{"entryPoint":null,"id":1062,"parameterSlots":1,"returnSlots":1},"fun_checkOwner":{"entryPoint":6365,"id":84,"parameterSlots":0,"returnSlots":0},"fun_delegate":{"entryPoint":6707,"id":531,"parameterSlots":2,"returnSlots":0},"fun_domainSeparatorV4":{"entryPoint":9507,"id":4335,"parameterSlots":0,"returnSlots":1},"fun_getClaimableRevenue":{"entryPoint":12392,"id":11318,"parameterSlots":1,"returnSlots":1},"fun_hashTypedDataV4":{"entryPoint":9789,"id":4372,"parameterSlots":1,"returnSlots":1},"fun_insert":{"entryPoint":11576,"id":8992,"parameterSlots":3,"returnSlots":2},"fun_insert_24932":{"entryPoint":11258,"id":8992,"parameterSlots":2,"returnSlots":2},"fun_latest":{"entryPoint":10953,"id":8817,"parameterSlots":1,"returnSlots":1},"fun_latest_24931":{"entryPoint":10879,"id":8817,"parameterSlots":0,"returnSlots":1},"fun_moveDelegateVotes":{"entryPoint":6858,"id":664,"parameterSlots":3,"returnSlots":0},"fun_nonReentrantAfter":{"entryPoint":null,"id":2109,"parameterSlots":0,"returnSlots":0},"fun_push":{"entryPoint":7244,"id":736,"parameterSlots":2,"returnSlots":2},"fun_recover":{"entryPoint":9092,"id":4162,"parameterSlots":4,"returnSlots":1},"fun_sqrt":{"entryPoint":10557,"id":5690,"parameterSlots":1,"returnSlots":1},"fun_throwError":{"entryPoint":9292,"id":4211,"parameterSlots":2,"returnSlots":0},"fun_toStringWithFallback":{"entryPoint":9854,"id":2306,"parameterSlots":1,"returnSlots":1},"fun_toStringWithFallback_13173":{"entryPoint":10127,"id":2306,"parameterSlots":1,"returnSlots":1},"fun_toUint208":{"entryPoint":10313,"id":6341,"parameterSlots":1,"returnSlots":1},"fun_toUint48":{"entryPoint":10408,"id":6901,"parameterSlots":1,"returnSlots":1},"fun_transfer":{"entryPoint":8237,"id":1206,"parameterSlots":3,"returnSlots":0},"fun_transferVotingUnits":{"entryPoint":12475,"id":586,"parameterSlots":3,"returnSlots":0},"fun_tryRecover":{"entryPoint":9116,"id":4126,"parameterSlots":4,"returnSlots":3},"fun_unsafeAccess":{"entryPoint":null,"id":9111,"parameterSlots":2,"returnSlots":1},"fun_unsafeAccess_30150":{"entryPoint":null,"id":9111,"parameterSlots":1,"returnSlots":1},"fun_upperBinaryLookup":{"entryPoint":11930,"id":9044,"parameterSlots":4,"returnSlots":1},"fun_upperBinaryLookup_24917":{"entryPoint":11807,"id":9044,"parameterSlots":3,"returnSlots":1},"fun_useCheckedNonce":{"entryPoint":8978,"id":1999,"parameterSlots":2,"returnSlots":0},"fun_useNonce":{"entryPoint":null,"id":1974,"parameterSlots":1,"returnSlots":1},"fun_validateTimepoint":{"entryPoint":6617,"id":347,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address_13147":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address_13159":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address_13160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address_13212":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address_13218":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address_13229":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6433,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_storage_split_offset_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_uint256_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"storage_array_index_access_struct_Checkpoint208_dyn":{"entryPoint":10999,"id":null,"parameterSlots":2,"returnSlots":2},"update_storage_value_offsett_uint208_to_uint208":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256_13150":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256_13161":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_enum_RecoverError":{"entryPoint":9260,"id":null,"parameterSlots":1,"returnSlots":0},"wrapping_div_uint256":{"entryPoint":10525,"id":null,"parameterSlots":2,"returnSlots":1},"write_to_memory_uint208":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_uint48":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"4233":[{"length":32,"start":9564}],"4235":[{"length":32,"start":9751}],"4237":[{"length":32,"start":9517}],"4239":[{"length":32,"start":9643}],"4241":[{"length":32,"start":9681}],"4244":[{"length":32,"start":3921}],"4247":[{"length":32,"start":3962}]},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c806303ee438c146102e257806306fdde03146102dd578063084278ec146102d8578063095ea7b3146102d35780630e4b2285146102ce578063139ba769146102c957806318160ddd146102c45780631f454923146102bf57806323b872dd146102ba578063313ce567146102b55780633644e515146102b05780633a46b1a8146102ab5780633c19804e146102a657806344e43cb8146102a15780634bf5d7e91461029c5780634eea6d79146102975780634f4dac6f14610242578063564f4f7614610292578063587cde1e1461028d5780635c19a95c146102885780636fcfff451461028357806370a082311461027e578063715018a614610279578063750521f5146102745780637ecebe001461026f57806381a2b38f1461026a57806384b0196e14610265578063881e1cff146102605780638b7afe2e1461025b5780638da5cb5b146102565780638e539e8c1461025157806391ddadf41461024c57806395d89b41146102475780639a6f99f9146102425780639ab24eb01461023d578063a9059cbb14610238578063b20a6f3614610233578063bf2d9e0b1461022e578063c3cda52014610229578063d505accf14610224578063d5f6aeb41461021f578063db2e21bc1461021a578063dd62ed3e14610215578063f1127ed8146102105763f2fde38b1461020b57600080fd5b611826565b61175b565b6116fe565b6116c0565b61154f565b6113d0565b6112ee565b6112b0565b611292565b61126c565b61120f565b610a1e565b6111eb565b6111bf565b6110cc565b6110a5565b611089565b61104a565b610f36565b610f12565b610ed8565b610d5c565b610c9e565b610c66565b610be5565b610bc1565b610b86565b610a41565b610982565b610854565b61073c565b610718565b61061e565b6105fb565b6105df565b61050a565b61048a565b61046c565b610432565b61040e565b6103dd565b610393565b61036f565b610327565b919082519283825260005b848110610313575050601f19601f8460006020809697860101520116010190565b6020818301810151848301820152016102f2565b3461036a57600060031936011261036a576103666040516103528161034b81611ce5565b03826119a7565b6040519182916020835260208301906102e7565b0390f35b600080fd5b3461036a57600060031936011261036a576103666040516103528161034b81611d8a565b3461036a57600060031936011261036a576020601554604051908152f35b600435906001600160a01b038216820361036a57565b602435906001600160a01b038216820361036a57565b3461036a57604060031936011261036a576104036103f96103b1565b60243590336121db565b602060405160018152f35b3461036a57600060031936011261036a576103666040516103528161034b81611e11565b3461036a57602060031936011261036a576001600160a01b036104536103b1565b1660005260136020526020604060002054604051908152f35b3461036a57600060031936011261036a576020600254604051908152f35b3461036a57604060031936011261036a576104a36103b1565b6024359081151580920361036a5760206001600160a01b037f7390412ce304891b69b7a6d7722b373a8172b465ce957518d396801bc35e0872926104e56118dd565b16928360005260168252604060002060ff1981541660ff8316179055604051908152a2005b3461036a57606060031936011261036a576105236103b1565b61052b6103c7565b604435906001600160a01b0383166000526001602052610562336040600020906001600160a01b0316600052602052604060002090565b54926000198410610584575b610578935061202d565b60405160018152602090f35b8284106105a05761059b83610578950333836122c1565b61056e565b6040517ffb8f41b20000000000000000000000000000000000000000000000000000000081523360048201526024810185905260448101849052606490fd5b3461036a57600060031936011261036a57602060405160128152f35b3461036a57600060031936011261036a576020610616612523565b604051908152f35b3461036a57604060031936011261036a576001600160a01b0361063f6103b1565b1660009081526009602052604081209061065a6024356119d9565b918054829381600581116106be575b50906020946106789284612e9a565b806106a45750505b79ffffffffffffffffffffffffffffffffffffffffffffffffffff60405191168152f35b916106b08492936128f3565b92815220015460301c610680565b946106c88661293d565b8603958611610713576020956106789385875265ffffffffffff80838a8a20015416908516106000146107015750915b91925094610669565b92915061070d90612902565b906106f8565b611c95565b3461036a57600060031936011261036a576103666040516103528161034b81611e98565b600060031936011261036a5761077661077261076b336001600160a01b03166000526016602052604060002090565b5460ff1690565b1590565b8061082a575b610800573461078757005b61079b61079634601154612910565b601155565b600254806107d5575b5060405134815233907ff3a9b3760e99454de4c494f7ed29f5204ab92febacb0acf52ea04ad4a9d2246690602090a2005b6107f56107ed6107fa926107e83461300b565b61291d565b601554612910565b601555565b386107a4565b60046040517f614d358c000000000000000000000000000000000000000000000000000000008152fd5b5061084c610840600b546001600160a01b031690565b6001600160a01b031690565b33141561077c565b3461036a57600060031936011261036a5761086e436128a8565b65ffffffffffff8061087f436128a8565b169116036108d45761036660405161089681611937565b601d81527f6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c7400000060208201526040519182916020835260208301906102e7565b60046040517f6ff07140000000000000000000000000000000000000000000000000000000008152fd5b95979491936109456109619461093761097f9c9a97610929610953968c6101208091528d01906102e7565b908b820360208d01526102e7565b9089820360408b01526102e7565b9087820360608901526102e7565b9085820360808701526102e7565b9460a084015260c083015260e08201526101008184039101526102e7565b90565b3461036a57600060031936011261036a57604080516109a48161034b81611d8a565b6103668251926109be846109b781611f1f565b03856119a7565b6002546011546012549183516109d78161034b81611e98565b84516109e68161034b81611e11565b8551916109fd836109f681611ce5565b03846119a7565b865196610a1488610a0d81611fa6565b03896119a7565b51998a998a6108fe565b3461036a57602060031936011261036a576020610616610a3c6103b1565b613068565b3461036a57600080600319360112610b83576002600c5414610b59576002600c55610a6b33613068565b8015610b2f57336000908152601360205260409020610a8b828254612910565b905560155433600090815260146020526040902055610ab4610aaf82601254612910565b601255565b8180808084335af1610ac4613028565b5015610b055760405190815233907fc15f451120b13b6b40c6ad6203614ab3088308bef9150c0d6f46ea79bf46422490602090a2610b026001600c55565b80f35b60046040517f90b8ec18000000000000000000000000000000000000000000000000000000008152fd5b60046040517f02a1c5ba000000000000000000000000000000000000000000000000000000008152fd5b60046040517f3ee5aeb5000000000000000000000000000000000000000000000000000000008152fd5b80fd5b3461036a57602060031936011261036a5760206001600160a01b0380610baa6103b1565b166000526008825260406000205416604051908152f35b3461036a57602060031936011261036a57610be3610bdd6103b1565b33611a33565b005b3461036a57602060031936011261036a576001600160a01b03610c066103b1565b16600052600960205260406000205463ffffffff90818111610c2e5760209160405191168152f35b604490604051907f6dfcc650000000000000000000000000000000000000000000000000000000008252602060048301526024820152fd5b3461036a57602060031936011261036a576020610616610c846103b1565b6001600160a01b0316600052600060205260406000205490565b3461036a57600080600319360112610b8357610cb86118dd565b806001600160a01b03600b547fffffffffffffffffffffffff00000000000000000000000000000000000000008116600b55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b90602060031983011261036a5760043567ffffffffffffffff9283821161036a578060238301121561036a57816004013593841161036a576024848301011161036a576024019190565b3461036a57610d6a36610d12565b610d726118dd565b8015610eae5767ffffffffffffffff8111610ea957610d9b81610d96600f54611cab565b612f01565b600091601f8211600114610e0857817f1c306e70c05992619e2128ad1ef88df75f36c9476282e59f51401b2abaa42e4e93600091610dfd575b508260011b906000198460031b1c191617600f555b610df860405192839283612fe3565b0390a1005b905081013538610dd4565b600f6000527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac802601f198316845b818110610e91575093837f1c306e70c05992619e2128ad1ef88df75f36c9476282e59f51401b2abaa42e4e9510610e77575b5050600182811b01600f55610de9565b60001960f88560031b161c19908301351690553880610e67565b83860135835560209586019560019093019201610e35565b611921565b60046040517feec403f0000000000000000000000000000000000000000000000000000000008152fd5b3461036a57602060031936011261036a576001600160a01b03610ef96103b1565b1660005260076020526020604060002054604051908152f35b3461036a57600060031936011261036a576103666040516103528161034b81611fa6565b3461036a57600080600319360112610b8357610ffc90610f757f000000000000000000000000000000000000000000000000000000000000000061267e565b610f9e7f000000000000000000000000000000000000000000000000000000000000000061278f565b9160405191610fac83611953565b8183526040519485947f0f000000000000000000000000000000000000000000000000000000000000008652610fee60209360e08589015260e08801906102e7565b9086820360408801526102e7565b904660608601523060808601528260a086015284820360c08601528080855193848152019401925b82811061103357505050500390f35b835185528695509381019392810192600101611024565b3461036a57602060031936011261036a576001600160a01b0361106b6103b1565b166000526016602052602060ff604060002054166040519015158152f35b3461036a57600060031936011261036a57602047604051908152f35b3461036a57600060031936011261036a5760206001600160a01b03600b5416604051908152f35b3461036a57602060031936011261036a576110e86004356119d9565b600a54906000829160058411611152575b6111039350612e1f565b60008161111857505060405160008152602090f35b600a6111256020936128f3565b91527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8015460301c610680565b919261115d8161293d565b81039081116107135761110393600a835265ffffffffffff80837fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8015416908516106000146111ad5750916110f9565b9291506111b990612902565b906110f9565b3461036a57600060031936011261036a5760206111db436128a8565b65ffffffffffff60405191168152f35b3461036a57600060031936011261036a576103666040516103528161034b81611f1f565b3461036a57602060031936011261036a576001600160a01b036112306103b1565b166000526009602052602079ffffffffffffffffffffffffffffffffffffffffffffffffffff6112636040600020612ac9565b16604051908152f35b3461036a57604060031936011261036a576104036112886103b1565b602435903361202d565b3461036a57600060031936011261036a576020601254604051908152f35b3461036a57600060031936011261036a576020601154604051908152f35b6064359060ff8216820361036a57565b6084359060ff8216820361036a57565b3461036a5760c060031936011261036a576113076103b1565b604435906024356113166112ce565b83421161139f57611393610be39461139a926040519060208201927fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf84526001600160a01b038816604084015286606084015260808301526080825261137b8261196f565b61138e60a435936084359351902061263d565b612384565b9182612312565b611a33565b602484604051907f4683af0e0000000000000000000000000000000000000000000000000000000082526004820152fd5b3461036a5760e060031936011261036a576113e96103b1565b6113f16103c7565b604435906064356114006112de565b81421161151e579061149d6114be926114ab611438886001600160a01b03166000526007602052604060002080549060018201905590565b9360405193849160208301968a8a8d8a91959493909260a09360c08401977f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c985526001600160a01b038092166020860152166040840152606083015260808201520152565b03601f1981018452836119a7565b61138e60c4359360a4359351902061263d565b6001600160a01b03808516908216036114db5750610be3926121db565b6040517f4b800e460000000000000000000000000000000000000000000000000000000081526001600160a01b0391821660048201529084166024820152604490fd5b602482604051907f627913020000000000000000000000000000000000000000000000000000000082526004820152fd5b3461036a5761155d36610d12565b6115656118dd565b80156116965767ffffffffffffffff8111610ea95761158e81611589601054611cab565b612f72565b600091601f82116001146115f557817f732d2e87dcc1907685c097f7373a47d8c7cd8ef98b659b5f2d4272b26aab48a7936000916115ea575b508260011b906000198460031b1c191617601055610df860405192839283612fe3565b9050810135386115c7565b60106000527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae672601f198316845b81811061167e575093837f732d2e87dcc1907685c097f7373a47d8c7cd8ef98b659b5f2d4272b26aab48a79510611664575b5050600182811b01601055610de9565b60001960f88560031b161c19908301351690553880611654565b83860135835560209586019560019093019201611622565b60046040517f3d9e4cad000000000000000000000000000000000000000000000000000000008152fd5b3461036a57600080600319360112610b83576116da6118dd565b80808080476001600160a01b03600b54165af16116f5613028565b5015610b055780f35b3461036a57604060031936011261036a57602061175261171c6103b1565b6001600160a01b0361172c6103c7565b9116600052600183526040600020906001600160a01b0316600052602052604060002090565b54604051908152f35b3461036a57604060031936011261036a576117746103b1565b6024359063ffffffff8216820361036a57610366916001600160a01b036117c39261179d6122f9565b506117a66122f9565b5016600052600960205260406000206117bd6122f9565b50612af7565b50604051906117d182611937565b5465ffffffffffff8116825260301c602082015260405191829182919091602079ffffffffffffffffffffffffffffffffffffffffffffffffffff81604084019565ffffffffffff8151168552015116910152565b3461036a57602060031936011261036a5761183f6103b1565b6118476118dd565b6001600160a01b038091169081156118ac57600b54827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600b55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b60246040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152fd5b6001600160a01b03600b541633036118f157565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff821117610ea957604052565b6020810190811067ffffffffffffffff821117610ea957604052565b60a0810190811067ffffffffffffffff821117610ea957604052565b60c0810190811067ffffffffffffffff821117610ea957604052565b90601f601f19910116810190811067ffffffffffffffff821117610ea957604052565b604051906119d782611937565b565b65ffffffffffff6119e9436128a8565b16808210156119fc575061097f906128a8565b60449250604051917fecd3f81e00000000000000000000000000000000000000000000000000000000835260048301526024820152fd5b6119d791611ac86001600160a01b03927fffffffffffffffffffffffff0000000000000000000000000000000000000000848216948560005260086020526040600020958654968288169788938816948591161790557f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f600080a46001600160a01b0316600052600060205260406000205490565b915b91906001600160a01b0392838216938116908482141580611c43575b611af2575b5050505050565b81611b8e575b505082611b07575b8080611aeb565b7fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72491611b52611b4c611b58936001600160a01b03166000526009602052604060002090565b91612849565b90611c4c565b6040805179ffffffffffffffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152a2388080611b00565b611bab906001600160a01b03166000526009602052604060002090565b611bb484612849565b611bbd436128a8565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff918280611be486612ac9565b169116900392828411610713577fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72493611c3992611c2092612d38565b6040805192851683529316602082015291829190820190565b0390a23880611af8565b50831515611ae6565b90611c56436128a8565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff918280611c7d86612ac9565b16911601918211611c9557611c9192612d38565b9091565b634e487b7160e01b600052601160045260246000fd5b90600182811c92168015611cdb575b6020831014611cc557565b634e487b7160e01b600052602260045260246000fd5b91607f1691611cba565b600f5460009291611cf582611cab565b80825291600190818116908115611d6c5750600114611d1357505050565b91929350600f6000527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac802916000925b848410611d5457505060209250010190565b80546020858501810191909152909301928101611d42565b9050602094955060ff1991509291921683830152151560051b010190565b60035460009291611d9a82611cab565b80825291600190818116908115611d6c5750600114611db857505050565b9192935060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b916000925b848410611df957505060209250010190565b80546020858501810191909152909301928101611de7565b600e5460009291611e2182611cab565b80825291600190818116908115611d6c5750600114611e3f57505050565b91929350600e6000527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd916000925b848410611e8057505060209250010190565b80546020858501810191909152909301928101611e6e565b600d5460009291611ea882611cab565b80825291600190818116908115611d6c5750600114611ec657505050565b91929350600d6000527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5916000925b848410611f0757505060209250010190565b80546020858501810191909152909301928101611ef5565b60045460009291611f2f82611cab565b80825291600190818116908115611d6c5750600114611f4d57505050565b9192935060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b916000925b848410611f8e57505060209250010190565b80546020858501810191909152909301928101611f7c565b60105460009291611fb682611cab565b80825291600190818116908115611d6c5750600114611fd457505050565b9192935060106000527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae672916000925b84841061201557505060209250010190565b80546020858501810191909152909301928101612003565b90916001600160a01b038083169081156121aa57841690811561217957612067846001600160a01b03166000526000602052604060002090565b54838110612130579261212d94926120f4928261211398960361209d866001600160a01b03166000526000602052604060002090565b556120bb866001600160a01b03166000526000602052604060002090565b8054840190556040518381527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602090a383836130bb565b6015549384916001600160a01b03166000526014602052604060002090565b556001600160a01b03166000526014602052604060002090565b55565b6040517fe450d38c0000000000000000000000000000000000000000000000000000000081526001600160a01b0386166004820152602481019190915260448101849052606490fd5b60246040517fec442f0500000000000000000000000000000000000000000000000000000000815260006004820152fd5b60246040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260006004820152fd5b906001600160a01b039182811692831561229057821693841561225f57806122557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259461223d6020956001600160a01b03166000526001602052604060002090565b906001600160a01b0316600052602052604060002090565b55604051908152a3565b60246040517f94280d6200000000000000000000000000000000000000000000000000000000815260006004820152fd5b60246040517fe602df0500000000000000000000000000000000000000000000000000000000815260006004820152fd5b906001600160a01b03808316156122905781161561225f5761223d61212d926001600160a01b03166000526001602052604060002090565b6040519061230682611937565b60006020838281520152565b90612339826001600160a01b03166000526007602052604060002080549060018201905590565b809103612344575050565b604492506001600160a01b03604051927f752d88c00000000000000000000000000000000000000000000000000000000084521660048301526024820152fd5b9161097f93916123939361239c565b9092919261244c565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841161242057926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa156124145780516001600160a01b0381161561240b57918190565b50809160019190565b604051903d90823e3d90fd5b50505060009160039190565b6004111561243657565b634e487b7160e01b600052602160045260246000fd5b6124558161242c565b8061245e575050565b6124678161242c565b600181036124995760046040517ff645eedf000000000000000000000000000000000000000000000000000000008152fd5b6124a28161242c565b600281036124dc576040517ffce698f700000000000000000000000000000000000000000000000000000000815260048101839052602490fd5b806124e860039261242c565b146124f05750565b6040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004810191909152602490fd5b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016301480612614575b1561257e577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815261260e8161198b565b51902090565b507f00000000000000000000000000000000000000000000000000000000000000004614612555565b604290612648612523565b90604051917f19010000000000000000000000000000000000000000000000000000000000008352600283015260228201522090565b60ff81146126d45760ff811690601f82116126aa57604051916126a083611937565b8252602082015290565b60046040517fb3512b0c000000000000000000000000000000000000000000000000000000008152fd5b506040516005548160006126e783611cab565b8083529260019081811690811561276d575060011461270e575b5061097f925003826119a7565b6005600090815291507f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b848310612752575061097f935050810160200138612701565b81935090816020925483858901015201910190918492612739565b6020935061097f95925060ff1991501682840152151560051b82010138612701565b60ff81146127b15760ff811690601f82116126aa57604051916126a083611937565b506040516006548160006127c483611cab565b8083529260019081811690811561276d57506001146127ea575061097f925003826119a7565b6006600090815291507ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f5b84831061282e575061097f935050810160200138612701565b81935090816020925483858901015201910190918492612815565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff90818111612870571690565b604490604051907f6dfcc65000000000000000000000000000000000000000000000000000000000825260d060048301526024820152fd5b65ffffffffffff908181116128bb571690565b604490604051907f6dfcc650000000000000000000000000000000000000000000000000000000008252603060048301526024820152fd5b90600019820191821161071357565b906001820180921161071357565b9190820180921161071357565b8115612927570490565b634e487b7160e01b600052601260045260246000fd5b600181111561097f57600181700100000000000000000000000000000000811015612a68575b612a10612a066129fc6129f26129e86129de612a1c9760048868010000000000000000612a179a1015612a5b575b640100000000811015612a4e575b62010000811015612a41575b610100811015612a35575b6010811015612a29575b1015612a21575b60030260011c6129d7818b61291d565b0160011c90565b6129d7818a61291d565b6129d7818961291d565b6129d7818861291d565b6129d7818761291d565b6129d7818661291d565b809361291d565b821190565b900390565b60011b6129c7565b811c9160021b916129c0565b60081c91811b916129b6565b60101c9160081b916129ab565b60201c9160101b9161299f565b60401c9160201b91612991565b50680100000000000000009050608082901c612963565b600a5460009080612a91575050600090565b8060001981011161071357600a7fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a79252015460301c90565b805460009181612adb57505050600090565b6000199282848101116107135760209181522001015460301c90565b8054821015612b0f5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b600a549068010000000000000000821015610ea9576001820180600a55821015612b0f57600a60005280516020919091015160301b65ffffffffffff191665ffffffffffff91909116177fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a890910155565b805468010000000000000000811015610ea957612bb891600182018155612af7565b612be45781516020929092015160301b65ffffffffffff191665ffffffffffff92909216919091179055565b634e487b7160e01b600052600060045260246000fd5b600a549192918015612cfb57612c12612c3c916128f3565b600a6000527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80190565b9081549165ffffffffffff90818416918316808311612cd157869203612c8657612c7f92509065ffffffffffff65ffffffffffff1983549260301b169116179055565b60301c9190565b5050612ccc90612ca5612c976119ca565b65ffffffffffff9092168252565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff85166020820152612b25565b612c7f565b60046040517f2520601d000000000000000000000000000000000000000000000000000000008152fd5b50612d3290612d0b612c976119ca565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff84166020820152612b25565b60009190565b80549293928015612de757612d4f612d5c916128f3565b8260005260206000200190565b9182549265ffffffffffff91828516928116808411612cd157879303612da05750612c7f92509065ffffffffffff65ffffffffffff1983549260301b169116179055565b915050612ccc91612dc0612db26119ca565b65ffffffffffff9093168352565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff86166020830152612b96565b5090612d3291612df8612db26119ca565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff85166020830152612b96565b905b828110612e2d57505090565b90918082169080831860011c820180921161071357600a60005265ffffffffffff80837fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a801541690851610600014612e885750915b90612e21565b929150612e9490612902565b90612e82565b90915b838110612eaa5750505090565b9091928082169080831860011c82018092116107135781602060008681528265ffffffffffff9283922001541690871610600014612eed575050925b9190612e9d565b90949250612efb9150612902565b90612ee6565b601f8111612f0d575050565b600090600f82527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac802906020601f850160051c83019410612f68575b601f0160051c01915b828110612f5d57505050565b818155600101612f51565b9092508290612f48565b601f8111612f7e575050565b600090601082527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae672906020601f850160051c83019410612fd9575b601f0160051c01915b828110612fce57505050565b818155600101612fc2565b9092508290612fb9565b90601f83604094601f1993602086528160208701528686013760008582860101520116010190565b90670de0b6b3a76400009182810292818404149015171561071357565b3d15613063573d9067ffffffffffffffff8211610ea957604051916130576020601f19601f84011601846119a7565b82523d6000602084013e565b606090565b6001600160a01b0316600052600060205260406000205480156130b55760155460146020526040600020548103908111610713578082029182040361071357670de0b6b3a7640000900490565b50600090565b6001600160a01b0390811692918190841561315a575b169081156130ff575b6119d79360005260086020528060406000205416916000526040600020541690611aca565b61310883612849565b93613112436128a8565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff958680613138612a7f565b1691169003958611610713576119d79561315191612bfa565b505093506130da565b905061316583612849565b9061316f436128a8565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff928380613195612a7f565b169116019283116107135783926131ab91612bfa565b50506130d156fea164736f6c6343000814000a","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3EE438C EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x84278EC EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xE4B2285 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x139BA769 EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x1F454923 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x3C19804E EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x44E43CB8 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x4BF5D7E9 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x4EEA6D79 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x4F4DAC6F EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x564F4F76 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x750521F5 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x81A2B38F EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x881E1CFF EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x8B7AFE2E EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x91DDADF4 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x9A6F99F9 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0xB20A6F36 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xBF2D9E0B EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xD5F6AEB4 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x210 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1826 JUMP JUMPDEST PUSH2 0x175B JUMP JUMPDEST PUSH2 0x16FE JUMP JUMPDEST PUSH2 0x16C0 JUMP JUMPDEST PUSH2 0x154F JUMP JUMPDEST PUSH2 0x13D0 JUMP JUMPDEST PUSH2 0x12EE JUMP JUMPDEST PUSH2 0x12B0 JUMP JUMPDEST PUSH2 0x1292 JUMP JUMPDEST PUSH2 0x126C JUMP JUMPDEST PUSH2 0x120F JUMP JUMPDEST PUSH2 0xA1E JUMP JUMPDEST PUSH2 0x11EB JUMP JUMPDEST PUSH2 0x11BF JUMP JUMPDEST PUSH2 0x10CC JUMP JUMPDEST PUSH2 0x10A5 JUMP JUMPDEST PUSH2 0x1089 JUMP JUMPDEST PUSH2 0x104A JUMP JUMPDEST PUSH2 0xF36 JUMP JUMPDEST PUSH2 0xF12 JUMP JUMPDEST PUSH2 0xED8 JUMP JUMPDEST PUSH2 0xD5C JUMP JUMPDEST PUSH2 0xC9E JUMP JUMPDEST PUSH2 0xC66 JUMP JUMPDEST PUSH2 0xBE5 JUMP JUMPDEST PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0xB86 JUMP JUMPDEST PUSH2 0xA41 JUMP JUMPDEST PUSH2 0x982 JUMP JUMPDEST PUSH2 0x854 JUMP JUMPDEST PUSH2 0x73C JUMP JUMPDEST PUSH2 0x718 JUMP JUMPDEST PUSH2 0x61E JUMP JUMPDEST PUSH2 0x5FB JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST PUSH2 0x50A JUMP JUMPDEST PUSH2 0x48A JUMP JUMPDEST PUSH2 0x46C JUMP JUMPDEST PUSH2 0x432 JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST PUSH2 0x36F JUMP JUMPDEST PUSH2 0x327 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x313 JUMPI POP POP PUSH1 0x1F NOT PUSH1 0x1F DUP5 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP7 SWAP8 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x2F2 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x366 PUSH1 0x40 MLOAD PUSH2 0x352 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1CE5 JUMP JUMPDEST SUB DUP3 PUSH2 0x19A7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2E7 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x366 PUSH1 0x40 MLOAD PUSH2 0x352 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1D8A JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x15 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x36A JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x36A JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x403 PUSH2 0x3F9 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x21DB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x366 PUSH1 0x40 MLOAD PUSH2 0x352 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1E11 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x453 PUSH2 0x3B1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x4A3 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x7390412CE304891B69B7A6D7722B373A8172B465CE957518D396801BC35E0872 SWAP3 PUSH2 0x4E5 PUSH2 0x18DD JUMP JUMPDEST AND SWAP3 DUP4 PUSH1 0x0 MSTORE PUSH1 0x16 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x60 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x523 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x52B PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x562 CALLER PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP3 PUSH1 0x0 NOT DUP5 LT PUSH2 0x584 JUMPI JUMPDEST PUSH2 0x578 SWAP4 POP PUSH2 0x202D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 DUP5 LT PUSH2 0x5A0 JUMPI PUSH2 0x59B DUP4 PUSH2 0x578 SWAP6 SUB CALLER DUP4 PUSH2 0x22C1 JUMP JUMPDEST PUSH2 0x56E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH2 0x616 PUSH2 0x2523 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x63F PUSH2 0x3B1 JUMP JUMPDEST AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x65A PUSH1 0x24 CALLDATALOAD PUSH2 0x19D9 JUMP JUMPDEST SWAP2 DUP1 SLOAD DUP3 SWAP4 DUP2 PUSH1 0x5 DUP2 GT PUSH2 0x6BE JUMPI JUMPDEST POP SWAP1 PUSH1 0x20 SWAP5 PUSH2 0x678 SWAP3 DUP5 PUSH2 0x2E9A JUMP JUMPDEST DUP1 PUSH2 0x6A4 JUMPI POP POP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST SWAP2 PUSH2 0x6B0 DUP5 SWAP3 SWAP4 PUSH2 0x28F3 JUMP JUMPDEST SWAP3 DUP2 MSTORE KECCAK256 ADD SLOAD PUSH1 0x30 SHR PUSH2 0x680 JUMP JUMPDEST SWAP5 PUSH2 0x6C8 DUP7 PUSH2 0x293D JUMP JUMPDEST DUP7 SUB SWAP6 DUP7 GT PUSH2 0x713 JUMPI PUSH1 0x20 SWAP6 PUSH2 0x678 SWAP4 DUP6 DUP8 MSTORE PUSH6 0xFFFFFFFFFFFF DUP1 DUP4 DUP11 DUP11 KECCAK256 ADD SLOAD AND SWAP1 DUP6 AND LT PUSH1 0x0 EQ PUSH2 0x701 JUMPI POP SWAP2 JUMPDEST SWAP2 SWAP3 POP SWAP5 PUSH2 0x669 JUMP JUMPDEST SWAP3 SWAP2 POP PUSH2 0x70D SWAP1 PUSH2 0x2902 JUMP JUMPDEST SWAP1 PUSH2 0x6F8 JUMP JUMPDEST PUSH2 0x1C95 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x366 PUSH1 0x40 MLOAD PUSH2 0x352 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1E98 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x776 PUSH2 0x772 PUSH2 0x76B CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x82A JUMPI JUMPDEST PUSH2 0x800 JUMPI CALLVALUE PUSH2 0x787 JUMPI STOP JUMPDEST PUSH2 0x79B PUSH2 0x796 CALLVALUE PUSH1 0x11 SLOAD PUSH2 0x2910 JUMP JUMPDEST PUSH1 0x11 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 PUSH2 0x7D5 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0xF3A9B3760E99454DE4C494F7ED29F5204AB92FEBACB0ACF52EA04AD4A9D22466 SWAP1 PUSH1 0x20 SWAP1 LOG2 STOP JUMPDEST PUSH2 0x7F5 PUSH2 0x7ED PUSH2 0x7FA SWAP3 PUSH2 0x7E8 CALLVALUE PUSH2 0x300B JUMP JUMPDEST PUSH2 0x291D JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH2 0x2910 JUMP JUMPDEST PUSH1 0x15 SSTORE JUMP JUMPDEST CODESIZE PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x614D358C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP PUSH2 0x84C PUSH2 0x840 PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLER EQ ISZERO PUSH2 0x77C JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x86E NUMBER PUSH2 0x28A8 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF DUP1 PUSH2 0x87F NUMBER PUSH2 0x28A8 JUMP JUMPDEST AND SWAP2 AND SUB PUSH2 0x8D4 JUMPI PUSH2 0x366 PUSH1 0x40 MLOAD PUSH2 0x896 DUP2 PUSH2 0x1937 JUMP JUMPDEST PUSH1 0x1D DUP2 MSTORE PUSH32 0x6D6F64653D626C6F636B6E756D6265722666726F6D3D64656661756C74000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x6FF0714000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP6 SWAP8 SWAP5 SWAP2 SWAP4 PUSH2 0x945 PUSH2 0x961 SWAP5 PUSH2 0x937 PUSH2 0x97F SWAP13 SWAP11 SWAP8 PUSH2 0x929 PUSH2 0x953 SWAP7 DUP13 PUSH2 0x120 DUP1 SWAP2 MSTORE DUP14 ADD SWAP1 PUSH2 0x2E7 JUMP JUMPDEST SWAP1 DUP12 DUP3 SUB PUSH1 0x20 DUP14 ADD MSTORE PUSH2 0x2E7 JUMP JUMPDEST SWAP1 DUP10 DUP3 SUB PUSH1 0x40 DUP12 ADD MSTORE PUSH2 0x2E7 JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x60 DUP10 ADD MSTORE PUSH2 0x2E7 JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x2E7 JUMP JUMPDEST SWAP5 PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x2E7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH2 0x9A4 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1D8A JUMP JUMPDEST PUSH2 0x366 DUP3 MLOAD SWAP3 PUSH2 0x9BE DUP5 PUSH2 0x9B7 DUP2 PUSH2 0x1F1F JUMP JUMPDEST SUB DUP6 PUSH2 0x19A7 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x11 SLOAD PUSH1 0x12 SLOAD SWAP2 DUP4 MLOAD PUSH2 0x9D7 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1E98 JUMP JUMPDEST DUP5 MLOAD PUSH2 0x9E6 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1E11 JUMP JUMPDEST DUP6 MLOAD SWAP2 PUSH2 0x9FD DUP4 PUSH2 0x9F6 DUP2 PUSH2 0x1CE5 JUMP JUMPDEST SUB DUP5 PUSH2 0x19A7 JUMP JUMPDEST DUP7 MLOAD SWAP7 PUSH2 0xA14 DUP9 PUSH2 0xA0D DUP2 PUSH2 0x1FA6 JUMP JUMPDEST SUB DUP10 PUSH2 0x19A7 JUMP JUMPDEST MLOAD SWAP10 DUP11 SWAP10 DUP11 PUSH2 0x8FE JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH2 0x616 PUSH2 0xA3C PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x3068 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB83 JUMPI PUSH1 0x2 PUSH1 0xC SLOAD EQ PUSH2 0xB59 JUMPI PUSH1 0x2 PUSH1 0xC SSTORE PUSH2 0xA6B CALLER PUSH2 0x3068 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB2F JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xA8B DUP3 DUP3 SLOAD PUSH2 0x2910 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x15 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0xAB4 PUSH2 0xAAF DUP3 PUSH1 0x12 SLOAD PUSH2 0x2910 JUMP JUMPDEST PUSH1 0x12 SSTORE JUMP JUMPDEST DUP2 DUP1 DUP1 DUP1 DUP5 CALLER GAS CALL PUSH2 0xAC4 PUSH2 0x3028 JUMP JUMPDEST POP ISZERO PUSH2 0xB05 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0xC15F451120B13B6B40C6AD6203614AB3088308BEF9150C0D6F46EA79BF464224 SWAP1 PUSH1 0x20 SWAP1 LOG2 PUSH2 0xB02 PUSH1 0x1 PUSH1 0xC SSTORE JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x2A1C5BA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0xBAA PUSH2 0x3B1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x8 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0xBE3 PUSH2 0xBDD PUSH2 0x3B1 JUMP JUMPDEST CALLER PUSH2 0x1A33 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xC06 PUSH2 0x3B1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH4 0xFFFFFFFF SWAP1 DUP2 DUP2 GT PUSH2 0xC2E JUMPI PUSH1 0x20 SWAP2 PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH2 0x616 PUSH2 0xC84 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB83 JUMPI PUSH2 0xCB8 PUSH2 0x18DD JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xB SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND PUSH1 0xB SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x36A JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP3 GT PUSH2 0x36A JUMPI DUP1 PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x36A JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP4 DUP5 GT PUSH2 0x36A JUMPI PUSH1 0x24 DUP5 DUP4 ADD ADD GT PUSH2 0x36A JUMPI PUSH1 0x24 ADD SWAP2 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH2 0xD6A CALLDATASIZE PUSH2 0xD12 JUMP JUMPDEST PUSH2 0xD72 PUSH2 0x18DD JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEAE JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xEA9 JUMPI PUSH2 0xD9B DUP2 PUSH2 0xD96 PUSH1 0xF SLOAD PUSH2 0x1CAB JUMP JUMPDEST PUSH2 0x2F01 JUMP JUMPDEST PUSH1 0x0 SWAP2 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0xE08 JUMPI DUP2 PUSH32 0x1C306E70C05992619E2128AD1EF88DF75F36C9476282E59F51401B2ABAA42E4E SWAP4 PUSH1 0x0 SWAP2 PUSH2 0xDFD JUMPI JUMPDEST POP DUP3 PUSH1 0x1 SHL SWAP1 PUSH1 0x0 NOT DUP5 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xF SSTORE JUMPDEST PUSH2 0xDF8 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x2FE3 JUMP JUMPDEST SUB SWAP1 LOG1 STOP JUMPDEST SWAP1 POP DUP2 ADD CALLDATALOAD CODESIZE PUSH2 0xDD4 JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 PUSH1 0x1F NOT DUP4 AND DUP5 JUMPDEST DUP2 DUP2 LT PUSH2 0xE91 JUMPI POP SWAP4 DUP4 PUSH32 0x1C306E70C05992619E2128AD1EF88DF75F36C9476282E59F51401B2ABAA42E4E SWAP6 LT PUSH2 0xE77 JUMPI JUMPDEST POP POP PUSH1 0x1 DUP3 DUP2 SHL ADD PUSH1 0xF SSTORE PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0xF8 DUP6 PUSH1 0x3 SHL AND SHR NOT SWAP1 DUP4 ADD CALLDATALOAD AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0xE67 JUMP JUMPDEST DUP4 DUP7 ADD CALLDATALOAD DUP4 SSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0xE35 JUMP JUMPDEST PUSH2 0x1921 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xEEC403F000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xEF9 PUSH2 0x3B1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x366 PUSH1 0x40 MLOAD PUSH2 0x352 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1FA6 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB83 JUMPI PUSH2 0xFFC SWAP1 PUSH2 0xF75 PUSH32 0x0 PUSH2 0x267E JUMP JUMPDEST PUSH2 0xF9E PUSH32 0x0 PUSH2 0x278F JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0xFAC DUP4 PUSH2 0x1953 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 DUP7 MSTORE PUSH2 0xFEE PUSH1 0x20 SWAP4 PUSH1 0xE0 DUP6 DUP10 ADD MSTORE PUSH1 0xE0 DUP9 ADD SWAP1 PUSH2 0x2E7 JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH2 0x2E7 JUMP JUMPDEST SWAP1 CHAINID PUSH1 0x60 DUP7 ADD MSTORE ADDRESS PUSH1 0x80 DUP7 ADD MSTORE DUP3 PUSH1 0xA0 DUP7 ADD MSTORE DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP1 DUP1 DUP6 MLOAD SWAP4 DUP5 DUP2 MSTORE ADD SWAP5 ADD SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x1033 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1024 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x106B PUSH2 0x3B1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 SELFBALANCE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xB SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x10E8 PUSH1 0x4 CALLDATALOAD PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 PUSH1 0x0 DUP3 SWAP2 PUSH1 0x5 DUP5 GT PUSH2 0x1152 JUMPI JUMPDEST PUSH2 0x1103 SWAP4 POP PUSH2 0x2E1F JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1118 JUMPI POP POP PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0xA PUSH2 0x1125 PUSH1 0x20 SWAP4 PUSH2 0x28F3 JUMP JUMPDEST SWAP2 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD SLOAD PUSH1 0x30 SHR PUSH2 0x680 JUMP JUMPDEST SWAP2 SWAP3 PUSH2 0x115D DUP2 PUSH2 0x293D JUMP JUMPDEST DUP2 SUB SWAP1 DUP2 GT PUSH2 0x713 JUMPI PUSH2 0x1103 SWAP4 PUSH1 0xA DUP4 MSTORE PUSH6 0xFFFFFFFFFFFF DUP1 DUP4 PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD SLOAD AND SWAP1 DUP6 AND LT PUSH1 0x0 EQ PUSH2 0x11AD JUMPI POP SWAP2 PUSH2 0x10F9 JUMP JUMPDEST SWAP3 SWAP2 POP PUSH2 0x11B9 SWAP1 PUSH2 0x2902 JUMP JUMPDEST SWAP1 PUSH2 0x10F9 JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH2 0x11DB NUMBER PUSH2 0x28A8 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x366 PUSH1 0x40 MLOAD PUSH2 0x352 DUP2 PUSH2 0x34B DUP2 PUSH2 0x1F1F JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1230 PUSH2 0x3B1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1263 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x2AC9 JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x403 PUSH2 0x1288 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x202D JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x36A JUMPI JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x36A JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0xC0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x1307 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD PUSH2 0x1316 PUSH2 0x12CE JUMP JUMPDEST DUP4 TIMESTAMP GT PUSH2 0x139F JUMPI PUSH2 0x1393 PUSH2 0xBE3 SWAP5 PUSH2 0x139A SWAP3 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x40 DUP5 ADD MSTORE DUP7 PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x80 DUP3 MSTORE PUSH2 0x137B DUP3 PUSH2 0x196F JUMP JUMPDEST PUSH2 0x138E PUSH1 0xA4 CALLDATALOAD SWAP4 PUSH1 0x84 CALLDATALOAD SWAP4 MLOAD SWAP1 KECCAK256 PUSH2 0x263D JUMP JUMPDEST PUSH2 0x2384 JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x2312 JUMP JUMPDEST PUSH2 0x1A33 JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x4683AF0E00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0xE0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x13E9 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x13F1 PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD PUSH2 0x1400 PUSH2 0x12DE JUMP JUMPDEST DUP2 TIMESTAMP GT PUSH2 0x151E JUMPI SWAP1 PUSH2 0x149D PUSH2 0x14BE SWAP3 PUSH2 0x14AB PUSH2 0x1438 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 SSTORE SWAP1 JUMP JUMPDEST SWAP4 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP2 PUSH1 0x20 DUP4 ADD SWAP7 DUP11 DUP11 DUP14 DUP11 SWAP2 SWAP6 SWAP5 SWAP4 SWAP1 SWAP3 PUSH1 0xA0 SWAP4 PUSH1 0xC0 DUP5 ADD SWAP8 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND PUSH1 0x20 DUP7 ADD MSTORE AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0x19A7 JUMP JUMPDEST PUSH2 0x138E PUSH1 0xC4 CALLDATALOAD SWAP4 PUSH1 0xA4 CALLDATALOAD SWAP4 MLOAD SWAP1 KECCAK256 PUSH2 0x263D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP1 DUP3 AND SUB PUSH2 0x14DB JUMPI POP PUSH2 0xBE3 SWAP3 PUSH2 0x21DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP3 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH2 0x155D CALLDATASIZE PUSH2 0xD12 JUMP JUMPDEST PUSH2 0x1565 PUSH2 0x18DD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1696 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xEA9 JUMPI PUSH2 0x158E DUP2 PUSH2 0x1589 PUSH1 0x10 SLOAD PUSH2 0x1CAB JUMP JUMPDEST PUSH2 0x2F72 JUMP JUMPDEST PUSH1 0x0 SWAP2 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x15F5 JUMPI DUP2 PUSH32 0x732D2E87DCC1907685C097F7373A47D8C7CD8EF98B659B5F2D4272B26AAB48A7 SWAP4 PUSH1 0x0 SWAP2 PUSH2 0x15EA JUMPI JUMPDEST POP DUP3 PUSH1 0x1 SHL SWAP1 PUSH1 0x0 NOT DUP5 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x10 SSTORE PUSH2 0xDF8 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x2FE3 JUMP JUMPDEST SWAP1 POP DUP2 ADD CALLDATALOAD CODESIZE PUSH2 0x15C7 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 PUSH1 0x1F NOT DUP4 AND DUP5 JUMPDEST DUP2 DUP2 LT PUSH2 0x167E JUMPI POP SWAP4 DUP4 PUSH32 0x732D2E87DCC1907685C097F7373A47D8C7CD8EF98B659B5F2D4272B26AAB48A7 SWAP6 LT PUSH2 0x1664 JUMPI JUMPDEST POP POP PUSH1 0x1 DUP3 DUP2 SHL ADD PUSH1 0x10 SSTORE PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0xF8 DUP6 PUSH1 0x3 SHL AND SHR NOT SWAP1 DUP4 ADD CALLDATALOAD AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x1654 JUMP JUMPDEST DUP4 DUP7 ADD CALLDATALOAD DUP4 SSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x3D9E4CAD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB83 JUMPI PUSH2 0x16DA PUSH2 0x18DD JUMP JUMPDEST DUP1 DUP1 DUP1 DUP1 SELFBALANCE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xB SLOAD AND GAS CALL PUSH2 0x16F5 PUSH2 0x3028 JUMP JUMPDEST POP ISZERO PUSH2 0xB05 JUMPI DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH1 0x20 PUSH2 0x1752 PUSH2 0x171C PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x172C PUSH2 0x3C7 JUMP JUMPDEST SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x1 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x1774 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x36A JUMPI PUSH2 0x366 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x17C3 SWAP3 PUSH2 0x179D PUSH2 0x22F9 JUMP JUMPDEST POP PUSH2 0x17A6 PUSH2 0x22F9 JUMP JUMPDEST POP AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x17BD PUSH2 0x22F9 JUMP JUMPDEST POP PUSH2 0x2AF7 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 PUSH2 0x17D1 DUP3 PUSH2 0x1937 JUMP JUMPDEST SLOAD PUSH6 0xFFFFFFFFFFFF DUP2 AND DUP3 MSTORE PUSH1 0x30 SHR PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 SWAP2 PUSH1 0x20 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 PUSH1 0x40 DUP5 ADD SWAP6 PUSH6 0xFFFFFFFFFFFF DUP2 MLOAD AND DUP6 MSTORE ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x36A JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x36A JUMPI PUSH2 0x183F PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x1847 PUSH2 0x18DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH2 0x18AC JUMPI PUSH1 0xB SLOAD DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR PUSH1 0xB SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xB SLOAD AND CALLER SUB PUSH2 0x18F1 JUMPI JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEA9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEA9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEA9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEA9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH1 0x1F NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEA9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x19D7 DUP3 PUSH2 0x1937 JUMP JUMPDEST JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF PUSH2 0x19E9 NUMBER PUSH2 0x28A8 JUMP JUMPDEST AND DUP1 DUP3 LT ISZERO PUSH2 0x19FC JUMPI POP PUSH2 0x97F SWAP1 PUSH2 0x28A8 JUMP JUMPDEST PUSH1 0x44 SWAP3 POP PUSH1 0x40 MLOAD SWAP2 PUSH32 0xECD3F81E00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x19D7 SWAP2 PUSH2 0x1AC8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP5 DUP3 AND SWAP5 DUP6 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP6 DUP7 SLOAD SWAP7 DUP3 DUP9 AND SWAP8 DUP9 SWAP4 DUP9 AND SWAP5 DUP6 SWAP2 AND OR SWAP1 SSTORE PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST SWAP2 JUMPDEST SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 DUP3 AND SWAP4 DUP2 AND SWAP1 DUP5 DUP3 EQ ISZERO DUP1 PUSH2 0x1C43 JUMPI JUMPDEST PUSH2 0x1AF2 JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x1B8E JUMPI JUMPDEST POP POP DUP3 PUSH2 0x1B07 JUMPI JUMPDEST DUP1 DUP1 PUSH2 0x1AEB JUMP JUMPDEST PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP2 PUSH2 0x1B52 PUSH2 0x1B4C PUSH2 0x1B58 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x2849 JUMP JUMPDEST SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE LOG2 CODESIZE DUP1 DUP1 PUSH2 0x1B00 JUMP JUMPDEST PUSH2 0x1BAB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1BB4 DUP5 PUSH2 0x2849 JUMP JUMPDEST PUSH2 0x1BBD NUMBER PUSH2 0x28A8 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP1 PUSH2 0x1BE4 DUP7 PUSH2 0x2AC9 JUMP JUMPDEST AND SWAP2 AND SWAP1 SUB SWAP3 DUP3 DUP5 GT PUSH2 0x713 JUMPI PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP4 PUSH2 0x1C39 SWAP3 PUSH2 0x1C20 SWAP3 PUSH2 0x2D38 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP6 AND DUP4 MSTORE SWAP4 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP2 DUP3 SWAP2 SWAP1 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG2 CODESIZE DUP1 PUSH2 0x1AF8 JUMP JUMPDEST POP DUP4 ISZERO ISZERO PUSH2 0x1AE6 JUMP JUMPDEST SWAP1 PUSH2 0x1C56 NUMBER PUSH2 0x28A8 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP1 PUSH2 0x1C7D DUP7 PUSH2 0x2AC9 JUMP JUMPDEST AND SWAP2 AND ADD SWAP2 DUP3 GT PUSH2 0x1C95 JUMPI PUSH2 0x1C91 SWAP3 PUSH2 0x2D38 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1CDB JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1CC5 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1CBA JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1CF5 DUP3 PUSH2 0x1CAB JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1D6C JUMPI POP PUSH1 0x1 EQ PUSH2 0x1D13 JUMPI POP POP POP JUMP JUMPDEST SWAP2 SWAP3 SWAP4 POP PUSH1 0xF PUSH1 0x0 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x1D54 JUMPI POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP6 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1D42 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP5 SWAP6 POP PUSH1 0xFF NOT SWAP2 POP SWAP3 SWAP2 SWAP3 AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1D9A DUP3 PUSH2 0x1CAB JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1D6C JUMPI POP PUSH1 0x1 EQ PUSH2 0x1DB8 JUMPI POP POP POP JUMP JUMPDEST SWAP2 SWAP3 SWAP4 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x1DF9 JUMPI POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP6 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1DE7 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1E21 DUP3 PUSH2 0x1CAB JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1D6C JUMPI POP PUSH1 0x1 EQ PUSH2 0x1E3F JUMPI POP POP POP JUMP JUMPDEST SWAP2 SWAP3 SWAP4 POP PUSH1 0xE PUSH1 0x0 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x1E80 JUMPI POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP6 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1E6E JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1EA8 DUP3 PUSH2 0x1CAB JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1D6C JUMPI POP PUSH1 0x1 EQ PUSH2 0x1EC6 JUMPI POP POP POP JUMP JUMPDEST SWAP2 SWAP3 SWAP4 POP PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x1F07 JUMPI POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP6 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1F2F DUP3 PUSH2 0x1CAB JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1D6C JUMPI POP PUSH1 0x1 EQ PUSH2 0x1F4D JUMPI POP POP POP JUMP JUMPDEST SWAP2 SWAP3 SWAP4 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x1F8E JUMPI POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP6 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1F7C JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1FB6 DUP3 PUSH2 0x1CAB JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1D6C JUMPI POP PUSH1 0x1 EQ PUSH2 0x1FD4 JUMPI POP POP POP JUMP JUMPDEST SWAP2 SWAP3 SWAP4 POP PUSH1 0x10 PUSH1 0x0 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x2015 JUMPI POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP6 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x2003 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x21AA JUMPI DUP5 AND SWAP1 DUP2 ISZERO PUSH2 0x2179 JUMPI PUSH2 0x2067 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD DUP4 DUP2 LT PUSH2 0x2130 JUMPI SWAP3 PUSH2 0x212D SWAP5 SWAP3 PUSH2 0x20F4 SWAP3 DUP3 PUSH2 0x2113 SWAP9 SWAP7 SUB PUSH2 0x209D DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH2 0x20BB DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 ADD SWAP1 SSTORE PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 SWAP1 LOG3 DUP4 DUP4 PUSH2 0x30BB JUMP JUMPDEST PUSH1 0x15 SLOAD SWAP4 DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP2 AND SWAP3 DUP4 ISZERO PUSH2 0x2290 JUMPI DUP3 AND SWAP4 DUP5 ISZERO PUSH2 0x225F JUMPI DUP1 PUSH2 0x2255 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP5 PUSH2 0x223D PUSH1 0x20 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND ISZERO PUSH2 0x2290 JUMPI DUP2 AND ISZERO PUSH2 0x225F JUMPI PUSH2 0x223D PUSH2 0x212D SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2306 DUP3 PUSH2 0x1937 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 DUP3 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x2339 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 SSTORE SWAP1 JUMP JUMPDEST DUP1 SWAP2 SUB PUSH2 0x2344 JUMPI POP POP JUMP JUMPDEST PUSH1 0x44 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP3 PUSH32 0x752D88C000000000000000000000000000000000000000000000000000000000 DUP5 MSTORE AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 PUSH2 0x97F SWAP4 SWAP2 PUSH2 0x2393 SWAP4 PUSH2 0x239C JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x244C JUMP JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x2420 JUMPI SWAP3 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0xFF PUSH1 0x80 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x2414 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x240B JUMPI SWAP2 DUP2 SWAP1 JUMP JUMPDEST POP DUP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x2436 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2455 DUP2 PUSH2 0x242C JUMP JUMPDEST DUP1 PUSH2 0x245E JUMPI POP POP JUMP JUMPDEST PUSH2 0x2467 DUP2 PUSH2 0x242C JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x2499 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0x24A2 DUP2 PUSH2 0x242C JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x24DC JUMPI PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x24E8 PUSH1 0x3 SWAP3 PUSH2 0x242C JUMP JUMPDEST EQ PUSH2 0x24F0 JUMPI POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS EQ DUP1 PUSH2 0x2614 JUMPI JUMPDEST ISZERO PUSH2 0x257E JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP3 MSTORE PUSH32 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH2 0x260E DUP2 PUSH2 0x198B JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST POP PUSH32 0x0 CHAINID EQ PUSH2 0x2555 JUMP JUMPDEST PUSH1 0x42 SWAP1 PUSH2 0x2648 PUSH2 0x2523 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x26D4 JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x26AA JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x26A0 DUP4 PUSH2 0x1937 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x5 SLOAD DUP2 PUSH1 0x0 PUSH2 0x26E7 DUP4 PUSH2 0x1CAB JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x276D JUMPI POP PUSH1 0x1 EQ PUSH2 0x270E JUMPI JUMPDEST POP PUSH2 0x97F SWAP3 POP SUB DUP3 PUSH2 0x19A7 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 JUMPDEST DUP5 DUP4 LT PUSH2 0x2752 JUMPI POP PUSH2 0x97F SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x2701 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x2739 JUMP JUMPDEST PUSH1 0x20 SWAP4 POP PUSH2 0x97F SWAP6 SWAP3 POP PUSH1 0xFF NOT SWAP2 POP AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x2701 JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x27B1 JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x26AA JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x26A0 DUP4 PUSH2 0x1937 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x6 SLOAD DUP2 PUSH1 0x0 PUSH2 0x27C4 DUP4 PUSH2 0x1CAB JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x276D JUMPI POP PUSH1 0x1 EQ PUSH2 0x27EA JUMPI POP PUSH2 0x97F SWAP3 POP SUB DUP3 PUSH2 0x19A7 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F JUMPDEST DUP5 DUP4 LT PUSH2 0x282E JUMPI POP PUSH2 0x97F SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x2701 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x2815 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP2 GT PUSH2 0x2870 JUMPI AND SWAP1 JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0xD0 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH6 0xFFFFFFFFFFFF SWAP1 DUP2 DUP2 GT PUSH2 0x28BB JUMPI AND SWAP1 JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x30 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x713 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x713 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x713 JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2927 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x97F JUMPI PUSH1 0x1 DUP2 PUSH17 0x100000000000000000000000000000000 DUP2 LT ISZERO PUSH2 0x2A68 JUMPI JUMPDEST PUSH2 0x2A10 PUSH2 0x2A06 PUSH2 0x29FC PUSH2 0x29F2 PUSH2 0x29E8 PUSH2 0x29DE PUSH2 0x2A1C SWAP8 PUSH1 0x4 DUP9 PUSH9 0x10000000000000000 PUSH2 0x2A17 SWAP11 LT ISZERO PUSH2 0x2A5B JUMPI JUMPDEST PUSH5 0x100000000 DUP2 LT ISZERO PUSH2 0x2A4E JUMPI JUMPDEST PUSH3 0x10000 DUP2 LT ISZERO PUSH2 0x2A41 JUMPI JUMPDEST PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x2A35 JUMPI JUMPDEST PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x2A29 JUMPI JUMPDEST LT ISZERO PUSH2 0x2A21 JUMPI JUMPDEST PUSH1 0x3 MUL PUSH1 0x1 SHR PUSH2 0x29D7 DUP2 DUP12 PUSH2 0x291D JUMP JUMPDEST ADD PUSH1 0x1 SHR SWAP1 JUMP JUMPDEST PUSH2 0x29D7 DUP2 DUP11 PUSH2 0x291D JUMP JUMPDEST PUSH2 0x29D7 DUP2 DUP10 PUSH2 0x291D JUMP JUMPDEST PUSH2 0x29D7 DUP2 DUP9 PUSH2 0x291D JUMP JUMPDEST PUSH2 0x29D7 DUP2 DUP8 PUSH2 0x291D JUMP JUMPDEST PUSH2 0x29D7 DUP2 DUP7 PUSH2 0x291D JUMP JUMPDEST DUP1 SWAP4 PUSH2 0x291D JUMP JUMPDEST DUP3 GT SWAP1 JUMP JUMPDEST SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 SHL PUSH2 0x29C7 JUMP JUMPDEST DUP2 SHR SWAP2 PUSH1 0x2 SHL SWAP2 PUSH2 0x29C0 JUMP JUMPDEST PUSH1 0x8 SHR SWAP2 DUP2 SHL SWAP2 PUSH2 0x29B6 JUMP JUMPDEST PUSH1 0x10 SHR SWAP2 PUSH1 0x8 SHL SWAP2 PUSH2 0x29AB JUMP JUMPDEST PUSH1 0x20 SHR SWAP2 PUSH1 0x10 SHL SWAP2 PUSH2 0x299F JUMP JUMPDEST PUSH1 0x40 SHR SWAP2 PUSH1 0x20 SHL SWAP2 PUSH2 0x2991 JUMP JUMPDEST POP PUSH9 0x10000000000000000 SWAP1 POP PUSH1 0x80 DUP3 SWAP1 SHR PUSH2 0x2963 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 DUP1 PUSH2 0x2A91 JUMPI POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DUP2 ADD GT PUSH2 0x713 JUMPI PUSH1 0xA PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A7 SWAP3 MSTORE ADD SLOAD PUSH1 0x30 SHR SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP2 DUP2 PUSH2 0x2ADB JUMPI POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT SWAP3 DUP3 DUP5 DUP2 ADD GT PUSH2 0x713 JUMPI PUSH1 0x20 SWAP2 DUP2 MSTORE KECCAK256 ADD ADD SLOAD PUSH1 0x30 SHR SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2B0F JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xA SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0xEA9 JUMPI PUSH1 0x1 DUP3 ADD DUP1 PUSH1 0xA SSTORE DUP3 LT ISZERO PUSH2 0x2B0F JUMPI PUSH1 0xA PUSH1 0x0 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x30 SHL PUSH6 0xFFFFFFFFFFFF NOT AND PUSH6 0xFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND OR PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0xEA9 JUMPI PUSH2 0x2BB8 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x2AF7 JUMP JUMPDEST PUSH2 0x2BE4 JUMPI DUP2 MLOAD PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD MLOAD PUSH1 0x30 SHL PUSH6 0xFFFFFFFFFFFF NOT AND PUSH6 0xFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xA SLOAD SWAP2 SWAP3 SWAP2 DUP1 ISZERO PUSH2 0x2CFB JUMPI PUSH2 0x2C12 PUSH2 0x2C3C SWAP2 PUSH2 0x28F3 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH6 0xFFFFFFFFFFFF SWAP1 DUP2 DUP5 AND SWAP2 DUP4 AND DUP1 DUP4 GT PUSH2 0x2CD1 JUMPI DUP7 SWAP3 SUB PUSH2 0x2C86 JUMPI PUSH2 0x2C7F SWAP3 POP SWAP1 PUSH6 0xFFFFFFFFFFFF PUSH6 0xFFFFFFFFFFFF NOT DUP4 SLOAD SWAP3 PUSH1 0x30 SHL AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x30 SHR SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH2 0x2CCC SWAP1 PUSH2 0x2CA5 PUSH2 0x2C97 PUSH2 0x19CA JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2B25 JUMP JUMPDEST PUSH2 0x2C7F JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x2520601D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP PUSH2 0x2D32 SWAP1 PUSH2 0x2D0B PUSH2 0x2C97 PUSH2 0x19CA JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2B25 JUMP JUMPDEST PUSH1 0x0 SWAP2 SWAP1 JUMP JUMPDEST DUP1 SLOAD SWAP3 SWAP4 SWAP3 DUP1 ISZERO PUSH2 0x2DE7 JUMPI PUSH2 0x2D4F PUSH2 0x2D5C SWAP2 PUSH2 0x28F3 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SLOAD SWAP3 PUSH6 0xFFFFFFFFFFFF SWAP2 DUP3 DUP6 AND SWAP3 DUP2 AND DUP1 DUP5 GT PUSH2 0x2CD1 JUMPI DUP8 SWAP4 SUB PUSH2 0x2DA0 JUMPI POP PUSH2 0x2C7F SWAP3 POP SWAP1 PUSH6 0xFFFFFFFFFFFF PUSH6 0xFFFFFFFFFFFF NOT DUP4 SLOAD SWAP3 PUSH1 0x30 SHL AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2CCC SWAP2 PUSH2 0x2DC0 PUSH2 0x2DB2 PUSH2 0x19CA JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2B96 JUMP JUMPDEST POP SWAP1 PUSH2 0x2D32 SWAP2 PUSH2 0x2DF8 PUSH2 0x2DB2 PUSH2 0x19CA JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2B96 JUMP JUMPDEST SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x2E2D JUMPI POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 DUP1 DUP3 AND SWAP1 DUP1 DUP4 XOR PUSH1 0x1 SHR DUP3 ADD DUP1 SWAP3 GT PUSH2 0x713 JUMPI PUSH1 0xA PUSH1 0x0 MSTORE PUSH6 0xFFFFFFFFFFFF DUP1 DUP4 PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD SLOAD AND SWAP1 DUP6 AND LT PUSH1 0x0 EQ PUSH2 0x2E88 JUMPI POP SWAP2 JUMPDEST SWAP1 PUSH2 0x2E21 JUMP JUMPDEST SWAP3 SWAP2 POP PUSH2 0x2E94 SWAP1 PUSH2 0x2902 JUMP JUMPDEST SWAP1 PUSH2 0x2E82 JUMP JUMPDEST SWAP1 SWAP2 JUMPDEST DUP4 DUP2 LT PUSH2 0x2EAA JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 DUP1 DUP3 AND SWAP1 DUP1 DUP4 XOR PUSH1 0x1 SHR DUP3 ADD DUP1 SWAP3 GT PUSH2 0x713 JUMPI DUP2 PUSH1 0x20 PUSH1 0x0 DUP7 DUP2 MSTORE DUP3 PUSH6 0xFFFFFFFFFFFF SWAP3 DUP4 SWAP3 KECCAK256 ADD SLOAD AND SWAP1 DUP8 AND LT PUSH1 0x0 EQ PUSH2 0x2EED JUMPI POP POP SWAP3 JUMPDEST SWAP2 SWAP1 PUSH2 0x2E9D JUMP JUMPDEST SWAP1 SWAP5 SWAP3 POP PUSH2 0x2EFB SWAP2 POP PUSH2 0x2902 JUMP JUMPDEST SWAP1 PUSH2 0x2EE6 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2F0D JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xF DUP3 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x2F68 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x2F5D JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2F51 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x2F48 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2F7E JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x10 DUP3 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x2FD9 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x2FCE JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2FC2 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x2FB9 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP4 PUSH1 0x40 SWAP5 PUSH1 0x1F NOT SWAP4 PUSH1 0x20 DUP7 MSTORE DUP2 PUSH1 0x20 DUP8 ADD MSTORE DUP7 DUP7 ADD CALLDATACOPY PUSH1 0x0 DUP6 DUP3 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x713 JUMPI JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x3063 JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xEA9 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x3057 PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP5 ADD AND ADD DUP5 PUSH2 0x19A7 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x30B5 JUMPI PUSH1 0x15 SLOAD PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP2 SUB SWAP1 DUP2 GT PUSH2 0x713 JUMPI DUP1 DUP3 MUL SWAP2 DUP3 DIV SUB PUSH2 0x713 JUMPI PUSH8 0xDE0B6B3A7640000 SWAP1 DIV SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP2 DUP2 SWAP1 DUP5 ISZERO PUSH2 0x315A JUMPI JUMPDEST AND SWAP1 DUP2 ISZERO PUSH2 0x30FF JUMPI JUMPDEST PUSH2 0x19D7 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH2 0x3108 DUP4 PUSH2 0x2849 JUMP JUMPDEST SWAP4 PUSH2 0x3112 NUMBER PUSH2 0x28A8 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 DUP7 DUP1 PUSH2 0x3138 PUSH2 0x2A7F JUMP JUMPDEST AND SWAP2 AND SWAP1 SUB SWAP6 DUP7 GT PUSH2 0x713 JUMPI PUSH2 0x19D7 SWAP6 PUSH2 0x3151 SWAP2 PUSH2 0x2BFA JUMP JUMPDEST POP POP SWAP4 POP PUSH2 0x30DA JUMP JUMPDEST SWAP1 POP PUSH2 0x3165 DUP4 PUSH2 0x2849 JUMP JUMPDEST SWAP1 PUSH2 0x316F NUMBER PUSH2 0x28A8 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP1 PUSH2 0x3195 PUSH2 0x2A7F JUMP JUMPDEST AND SWAP2 AND ADD SWAP3 DUP4 GT PUSH2 0x713 JUMPI DUP4 SWAP3 PUSH2 0x31AB SWAP2 PUSH2 0x2BFA JUMP JUMPDEST POP POP PUSH2 0x30D1 JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"581:7820:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;-1:-1:-1;581:7820:29;;;;;;;;-1:-1:-1;;581:7820:29;;-1:-1:-1;581:7820:29;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;581:7820:29;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;581:7820:29;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;581:7820:29;;;;;;1201:30;581:7820;;;;;;;;;;;-1:-1:-1;;;;;581:7820:29;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;581:7820:29;;;;;;:::o;:::-;;;;;-1:-1:-1;;581:7820:29;;;;;8823:4:7;581:7820:29;;:::i;:::-;;;735:10:13;;8823:4:7;:::i;:::-;581:7820:29;;;8823:4:7;581:7820:29;;;;;;;;-1:-1:-1;;581:7820:29;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;581:7820:29;;;;;-1:-1:-1;;;;;581:7820:29;;:::i;:::-;;-1:-1:-1;581:7820:29;985:49;581:7820;;;;-1:-1:-1;581:7820:29;;;;;;;;;;;;;-1:-1:-1;;581:7820:29;;;;;;2908:12:7;581:7820:29;;;;;;;;;;;;-1:-1:-1;;581:7820:29;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;6275:43:29;1500:62:0;;;:::i;:::-;581:7820:29;;;-1:-1:-1;581:7820:29;6215:24;581:7820;;;-1:-1:-1;581:7820:29;-1:-1:-1;;581:7820:29;;;;;;;;;;;;;;6275:43;581:7820;;;;;;-1:-1:-1;;581:7820:29;;;;;;;:::i;:::-;;;:::i;:::-;;;;-1:-1:-1;;;;;581:7820:29;;-1:-1:-1;581:7820:29;3638:11:7;581:7820:29;;3638:27:7;735:10:13;581:7820:29;-1:-1:-1;581:7820:29;;-1:-1:-1;;;;;581:7820:29;;;;;;;;;;3638:27:7;581:7820:29;10561:36:7;-1:-1:-1;;10561:36:7;;10557:309;;581:7820:29;4967:5:7;;;;:::i;:::-;581:7820:29;;3638:11:7;581:7820:29;;;;;10557:309:7;10617:24;;;10613:130;;10835:5;581:7820:29;4967:5:7;581:7820:29;;735:10:13;10835:5:7;;:::i;:::-;10557:309;;10613:130;581:7820:29;;10668:60:7;;;735:10:13;581:7820:29;10668:60:7;;581:7820:29;;;;;;;;;;;;;;;10668:60:7;581:7820:29;;;;;-1:-1:-1;;581:7820:29;;;;;;;;2761:2:7;581:7820:29;;;;;;;;-1:-1:-1;;581:7820:29;;;;;;2744:20:9;;:::i;:::-;581:7820:29;;;;;;;;;;;-1:-1:-1;;581:7820:29;;;;;-1:-1:-1;;;;;581:7820:29;;:::i;:::-;;-1:-1:-1;581:7820:29;;;4411:20:2;581:7820:29;;;;;;4459:29:2;581:7820:29;;4459:29:2;:::i;:::-;581:7820:29;;;9738:15:26;9763:18;;9802:1;9796:7;;9792:234;;581:7820:29;10050:53:26;;581:7820:29;10050:53:26;;;;;:::i;:::-;10121:8;;;:63;;;581:7820:29;;;;;;;;10121:63:26;10169:7;;;;;;:::i;:::-;14441:109;;;;;581:7820:29;;;10121:63:26;;9792:234;9839:14;;;;:::i;:::-;581:7820:29;;;;;;;;14441:109:26;10050:53;14441:109;;;;581:7820:29;14441:109:26;;;;;;581:7820:29;;;;;9871:48:26;9867:149;581:7820:29;;;9939:10:26;9867:149;;9792:234;;;;;;9867:149;9994:7;;;;;;:::i;:::-;9867:149;;;581:7820:29;;:::i;:::-;;;;;-1:-1:-1;;581:7820:29;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;581:7820:29;;;;;4301:37;4302:36;;4327:10;-1:-1:-1;;;;;581:7820:29;;;4302:24;581:7820;;;;;;;4302:36;581:7820;;;;;4302:36;4301:37;;581:7820;4301:37;:62;;;581:7820;4297:127;;4446:9;4442:376;;581:7820;4442:376;4475:25;;4446:9;4475:25;581:7820;4475:25;:::i;:::-;;581:7820;;4475:25;2908:12:7;581:7820:29;4641:10;4637:100;;4442:376;-1:-1:-1;581:7820:29;;4446:9;581:7820;;4327:10;;4768:39;;581:7820;;4768:39;581:7820;4637:100;4671:51;4690:32;4671:51;4446:9;4691:21;4446:9;4691:21;:::i;:::-;4690:32;:::i;:::-;4671:51;581:7820;4671:51;:::i;:::-;;581:7820;;4671:51;4637:100;;;4297:127;581:7820;;;4386:27;;;;4301:62;581:7820;4342:21;581:7820;1710:6:0;581:7820:29;-1:-1:-1;;;;;581:7820:29;;;;-1:-1:-1;;;;;581:7820:29;;;4342:21;4327:10;4342:21;;4301:62;;581:7820;;;;;-1:-1:-1;;581:7820:29;;;;;1002:31:27;1020:12;1002:31;:::i;:::-;581:7820:29;1020:12:27;1002:31;1020:12;1002:31;:::i;:::-;581:7820:29;;;3169:29:2;3165:93;;581:7820:29;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;3165:93:2:-;581:7820:29;;;3221:26:2;;;;581:7820:29;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;-1:-1:-1;;581:7820:29;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;2908:12:7;581:7820:29;8303:12;581:7820;8329:23;581:7820;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;-1:-1:-1;;581:7820:29;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;581:7820:29;;;;;1899:1:16;2702:7;581:7820:29;2702:18:16;2698:86;;1899:1;2702:7;581:7820:29;4980:31;5000:10;4980:31;:::i;:::-;5025:14;;5021:47;;5000:10;581:7820;;;;5087:14;581:7820;;;;;5087:39;581:7820;;;5087:39;:::i;:::-;581:7820;;5168:15;581:7820;5000:10;581:7820;;;;5136:17;581:7820;;;;;;5193:36;;581:7820;5193:36;581:7820;5193:36;:::i;:::-;;581:7820;;5193:36;5000:10;;;;;;5267:46;;;;:::i;:::-;;5327:8;5323:37;;581:7820;;;;;5000:10;;5384:37;;581:7820;;5384:37;2531:1:16;1857;3068:21;581:7820:29;2888:208:16;2531:1;581:7820:29;;5323:37;581:7820;;;5344:16;;;;5021:47;581:7820;;;5048:20;;;;2698:86:16;581:7820:29;;;2743:30:16;;;;581:7820:29;;;;;;;;-1:-1:-1;;581:7820:29;;;;;;-1:-1:-1;;;;;581:7820:29;;;:::i;:::-;;-1:-1:-1;581:7820:29;5674:10:2;581:7820:29;;;-1:-1:-1;581:7820:29;;;;;;;;;;;;;;-1:-1:-1;;581:7820:29;;;;;5903:9:2;581:7820:29;;:::i;:::-;735:10:13;5903:9:2;:::i;:::-;581:7820:29;;;;;;-1:-1:-1;;581:7820:29;;;;;-1:-1:-1;;;;;581:7820:29;;:::i;:::-;;-1:-1:-1;581:7820:29;8741:20:2;581:7820:29;;;-1:-1:-1;581:7820:29;;;15374:24:24;;;;15370:103;;581:7820:29;;;;;;;;;15370:103:24;581:7820:29;;;;15421:41:24;;;;581:7820:29;;15421:41:24;;581:7820:29;;;;;15421:41:24;581:7820:29;;;;;-1:-1:-1;;581:7820:29;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;581:7820:29;3076:9:7;581:7820:29;3076:9:7;581:7820:29;;;3076:9:7;581:7820:29;;2985:116:7;;581:7820:29;;;;;;-1:-1:-1;;581:7820:29;;;;;1500:62:0;;:::i;:::-;581:7820:29;-1:-1:-1;;;;;3004:6:0;581:7820:29;;;;3004:6:0;581:7820:29;;3052:40:0;;;;581:7820:29;;;;;-1:-1:-1;;581:7820:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;3517:33:29;;3513:66;;581:7820;;;;;;;;3589:29;581:7820;;:::i;:::-;;:::i;:::-;-1:-1:-1;581:7820:29;;;;;;;;;3633:31;581:7820;-1:-1:-1;581:7820:29;;;;;;;;;-1:-1:-1;;581:7820:29;;;;;;;3589:29;581:7820;;3633:31;581:7820;;3633:31;;;;;:::i;:::-;;;;581:7820;;;;;;;;;;;3589:29;581:7820;;;-1:-1:-1;;581:7820:29;;;;;;;;;;;;3633:31;581:7820;;;;;;;;;;;;3589:29;581:7820;;;;-1:-1:-1;;581:7820:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3513:66::-;581:7820;;;3559:20;;;;581:7820;;;;;-1:-1:-1;;581:7820:29;;;;;-1:-1:-1;;;;;581:7820:29;;:::i;:::-;;-1:-1:-1;581:7820:29;624:7:14;581:7820:29;;;;-1:-1:-1;581:7820:29;;;;;;;;;;;;;-1:-1:-1;;581:7820:29;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;581:7820:29;;;;;;6198:5:21;:41;:5;:41;:::i;:::-;6653:47;:8;:47;:::i;:::-;581:7820:29;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;5689:13:21;;581:7820:29;;;;5724:4:21;581:7820:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;581:7820:29;;;;;;;;;;;;;;;;;-1:-1:-1;;581:7820:29;;;;;-1:-1:-1;;;;;581:7820:29;;:::i;:::-;;-1:-1:-1;581:7820:29;1278:56;581:7820;;;;;-1:-1:-1;581:7820:29;;;;;;;;;;;;;;;;-1:-1:-1;;581:7820:29;;;;;;7643:21;581:7820;;;;;;;;;;;-1:-1:-1;;581:7820:29;;;;;;-1:-1:-1;;;;;1710:6:0;581:7820:29;;;;;;;;;;;;;-1:-1:-1;;581:7820:29;;;;;5270:29:2;581:7820:29;;5270:29:2;:::i;:::-;5234:17;581:7820:29;9738:15:26;-1:-1:-1;9763:18:26;9796:7;9802:1;9796:7;;9792:234;;581:7820:29;10050:53:26;;;;:::i;:::-;-1:-1:-1;10121:8:26;;;-1:-1:-1;;581:7820:29;;-1:-1:-1;581:7820:29;;;;;10121:63:26;5234:17:2;10169:7:26;581:7820:29;10169:7:26;;:::i;:::-;14441:109;;;;581:7820:29;;;10121:63:26;;9792:234;9839:14;;;;;:::i;:::-;581:7820:29;;;;;;;10050:53:26;14441:109;5234:17:2;14441:109:26;;581:7820:29;14441:109:26;;;;581:7820:29;;;;;9871:48:26;9867:149;581:7820:29;;;9939:10:26;9867:149;9792:234;;9867:149;9994:7;;;;;;:::i;:::-;9867:149;9792:234;;581:7820:29;;;;;-1:-1:-1;;581:7820:29;;;;;;1002:31:27;1020:12;1002:31;:::i;:::-;581:7820:29;;;;;;;;;;;;;-1:-1:-1;;581:7820:29;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;581:7820:29;;;;;-1:-1:-1;;;;;581:7820:29;;:::i;:::-;;-1:-1:-1;581:7820:29;3868:20:2;581:7820:29;;;;3868:38:2;581:7820:29;-1:-1:-1;581:7820:29;3868:38:2;:::i;:::-;581:7820:29;;;;;;;;;;;;-1:-1:-1;;581:7820:29;;;;;3440:5:7;581:7820:29;;:::i;:::-;;;735:10:13;;3440:5:7;:::i;581:7820:29:-;;;;;-1:-1:-1;;581:7820:29;;;;;;941:38;581:7820;;;;;;;;;;;;-1:-1:-1;;581:7820:29;;;;;;908:27;581:7820;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;581:7820:29;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;6185:15:2;;:24;6181:91;;6298:168;6535:9;581:7820:29;6501:5:2;581:7820:29;;;6352:57:2;581:7820:29;6352:57:2;;581:7820:29;2063:71:2;581:7820:29;;-1:-1:-1;;;;;581:7820:29;;;2063:71:2;;581:7820:29;2063:71:2;581:7820:29;2063:71:2;;581:7820:29;;2063:71:2;;581:7820:29;;6352:57:2;;;;;:::i;:::-;6325:86;581:7820:29;;;;;;;6342:68:2;;6325:86;:::i;:::-;6298:168;:::i;:::-;6501:5;;;:::i;:::-;6535:9;:::i;6181:91::-;581:7820:29;;;;6232:29:2;;;;581:7820:29;6232:29:2;;581:7820:29;6232:29:2;581:7820:29;;;;;-1:-1:-1;;581:7820:29;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;1886:15:9;;:26;1882:97;;2071:16;2020:78;2181:28;2071:16;2020:78;2071:16;;-1:-1:-1;;;;;581:7820:29;-1:-1:-1;581:7820:29;1121:7:14;581:7820:29;;;-1:-1:-1;581:7820:29;;;;;;;;;759:395:14;;2071:16:9;581:7820:29;;;2020:78:9;;;581:7820:29;2020:78:9;;;;;;;1024:95;;;;;;;;;;;581:7820:29;1024:95:9;581:7820:29;;-1:-1:-1;;;;;581:7820:29;;;1024:95:9;;;581:7820:29;;1024:95:9;;;581:7820:29;1024:95:9;;;581:7820:29;1024:95:9;;;581:7820:29;1024:95:9;581:7820:29;1024:95:9;2020:78;;-1:-1:-1;;2020:78:9;;;;;;:::i;:::-;2125:28;581:7820:29;;;;;;;2010:89:9;;2125:28;:::i;2181:::-;-1:-1:-1;;;;;581:7820:29;;;;;;2223:15:9;2219:88;;8823:4:7;;;;:::i;2219:88:9:-;581:7820:29;;2261:35:9;;;-1:-1:-1;;;;;581:7820:29;;;;2261:35:9;;581:7820:29;;;;1024:95:9;;;581:7820:29;1024:95:9;;10668:60:7;1882:97:9;581:7820:29;;;;1935:33:9;;;;581:7820:29;1935:33:9;;581:7820:29;1935:33:9;581:7820:29;;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;3855:37:29;;3851:70;;581:7820;;;;;;;;3931:37;581:7820;;:::i;:::-;;:::i;:::-;-1:-1:-1;581:7820:29;;;;;;;;;3983:38;581:7820;-1:-1:-1;581:7820:29;;;;;;;;;-1:-1:-1;;581:7820:29;;;;;;;3931:37;581:7820;3983:38;581:7820;;3983:38;;;;;:::i;581:7820::-;;;;;;;;;;3931:37;581:7820;;;-1:-1:-1;;581:7820:29;;;;;;;;;;;;3983:38;581:7820;;;;;;;;;;;;3931:37;581:7820;;;;-1:-1:-1;;581:7820:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3851:70;581:7820;;;3901:20;;;;581:7820;;;;;;-1:-1:-1;;581:7820:29;;;;;1500:62:0;;:::i;:::-;7353:21:29;;;;;-1:-1:-1;;;;;1710:6:0;581:7820:29;;7403:41;;;;:::i;:::-;;7458:8;7454:37;;581:7820;;;;;;;-1:-1:-1;;581:7820:29;;;;;;3638:27:7;581:7820:29;;:::i;:::-;-1:-1:-1;;;;;581:7820:29;;:::i;:::-;;;-1:-1:-1;581:7820:29;3638:11:7;581:7820:29;;;-1:-1:-1;581:7820:29;;-1:-1:-1;;;;;581:7820:29;;;;;;;;;;3638:27:7;581:7820:29;;;;;;;;;;;;-1:-1:-1;;581:7820:29;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;11454:22:26;581:7820:29;;;:::i;:::-;;;;:::i;:::-;;;-1:-1:-1;581:7820:29;9019:20:2;581:7820:29;;;-1:-1:-1;581:7820:29;;;:::i;:::-;;11454:22:26;:::i;:::-;581:7820:29;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;581:7820:29;;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;581:7820:29;;;2627:22:0;;;2623:91;;3004:6;581:7820:29;;;;;;3004:6:0;581:7820:29;;3052:40:0;-1:-1:-1;3052:40:0;;581:7820:29;2623:91:0;581:7820:29;;;2672:31:0;;;-1:-1:-1;581:7820:29;2672:31:0;;581:7820:29;2672:31:0;1796:162;-1:-1:-1;;;;;1710:6:0;581:7820:29;;735:10:13;1855:23:0;1851:101;;1796:162::o;1851:101::-;581:7820:29;;;1901:40:0;;;735:10:13;1901:40:0;;;581:7820:29;1901:40:0;581:7820:29;-1:-1:-1;;;581:7820:29;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;2079:95:21;581:7820:29;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;581:7820:29;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;:::o;3415:273:2:-;581:7820:29;1002:31:27;1020:12;1002:31;:::i;:::-;581:7820:29;3550:29:2;;;;3546:90;;3653:28;;;;:::i;3546:90::-;581:7820:29;;;;;3588:48:2;;;;;;;581:7820:29;;;;;3588:48:2;6730:312;7010:24;6730:312;3137:18:10;-1:-1:-1;;;;;581:7820:29;;;;;;;-1:-1:-1;581:7820:29;5674:10:2;581:7820:29;;;-1:-1:-1;581:7820:29;;;;;;;;;;;;;;;;;;;;6909:48:2;-1:-1:-1;6909:48:2;;-1:-1:-1;;;;;581:7820:29;3076:9:7;581:7820:29;3076:9:7;581:7820:29;;;3076:9:7;581:7820:29;;2985:116:7;;3137:18:10;7010:24:2;7761:789;;;-1:-1:-1;;;;;581:7820:29;;;;;;;7862:10:2;;;;;:24;;;7761:789;7858:686;;7761:789;;;;;;:::o;7858:686::-;7906:18;7902:315;;7858:686;8234:16;;;8230:304;;7858:686;;;;;8230:304;8475:44;8336:24;8408:26;8336:24;8309:143;8336:24;-1:-1:-1;;;;;581:7820:29;;;8010:20:2;581:7820:29;;;;;;;8336:24:2;8408:26;;:::i;:::-;8309:143;;:::i;:::-;581:7820:29;;;;;;;;;;;;;;;;;8475:44:2;8230:304;;;;;7902:315;8010:26;;-1:-1:-1;;;;;581:7820:29;;;8010:20:2;581:7820:29;;;;;;;8010:26:2;8089;;;:::i;:::-;1002:31:27;1020:12;1002:31;:::i;:::-;581:7820:29;9312:14:2;;;;;;:::i;:::-;581:7820:29;;;;;;;;;;;8156:46:2;8311:38:26;8156:46:2;8311:38:26;;;;:::i;:::-;581:7820:29;;;;;;;;;;;;;;;;;;;;;;8156:46:2;;;;7902:315;;;;7862:24;7876:10;;;;7862:24;;9069:273;;1002:31:27;1020:12;1002:31;:::i;:::-;581:7820:29;9312:14:2;;;;;;:::i;:::-;581:7820:29;;;;;;;;;8311:38:26;;;:::i;:::-;9282:53:2;;9069:273::o;581:7820:29:-;-1:-1:-1;;;581:7820:29;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;581:7820:29;;;;;;;;;;;;;;;;3145:12;581:7820;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;3145:12;-1:-1:-1;581:7820:29;;;-1:-1:-1;581:7820:29;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;581:7820:29;;;;;;;;;;;;;;;;;:::o;:::-;1837:5:7;581:7820:29;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;1837:5:7;-1:-1:-1;581:7820:29;;;-1:-1:-1;581:7820:29;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;2951:10;581:7820;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;2951:10;-1:-1:-1;581:7820:29;;;-1:-1:-1;581:7820:29;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;2746:10;581:7820;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;2746:10;-1:-1:-1;581:7820:29;;;-1:-1:-1;581:7820:29;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;581:7820:29;;;-1:-1:-1;581:7820:29;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;8366:16;581:7820;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;8366:16;-1:-1:-1;581:7820:29;;;-1:-1:-1;581:7820:29;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;5374:300:7;;;-1:-1:-1;;;;;581:7820:29;;;5457:18:7;;;5453:86;;581:7820:29;;5552:16:7;;;5548:86;;6288:15;;-1:-1:-1;;;;;581:7820:29;5473:1:7;581:7820:29;5473:1:7;581:7820:29;;;5473:1:7;581:7820:29;;;6288:15:7;581:7820:29;6321:19:7;;;6317:115;;581:7820:29;6812:21;581:7820;;2756:5:10;581:7820:29;;6757:23;581:7820;;;6552:15:7;;-1:-1:-1;;;;;581:7820:29;5473:1:7;581:7820:29;5473:1:7;581:7820:29;;;5473:1:7;581:7820:29;;;6552:15:7;581:7820:29;7002:13:7;;-1:-1:-1;;;;;581:7820:29;5473:1:7;581:7820:29;5473:1:7;581:7820:29;;;5473:1:7;581:7820:29;;;7002:13:7;581:7820:29;;;;;;;;;;;7064:25:7;;581:7820:29;;7064:25:7;2756:5:10;;;:::i;:::-;6783:15:29;581:7820;6757:23;;;-1:-1:-1;;;;;581:7820:29;;;5136:17;581:7820;;;;;;;6757:23;581:7820;-1:-1:-1;;;;;581:7820:29;;;5136:17;581:7820;;;;;;;6812:21;581:7820;5374:300:7:o;6317:115::-;581:7820:29;;6367:50:7;;;-1:-1:-1;;;;;581:7820:29;;6367:50:7;;;581:7820:29;;;;;;;;;;;;;;;;10668:60:7;5548:86;581:7820:29;;;5591:32:7;;;5473:1;5591:32;;;581:7820:29;5591:32:7;5453:86;581:7820:29;;;5498:30:7;;;5473:1;5498:30;;;581:7820:29;5498:30:7;9682:432;;-1:-1:-1;;;;;581:7820:29;;;;9794:19:7;;;9790:89;;581:7820:29;;9892:21:7;;;9888:90;;9987:18;:27;10066:31;9987:18;;581:7820:29;9987:18:7;-1:-1:-1;;;;;581:7820:29;;;9987:11:7;581:7820:29;;;;;;;9987:18:7;581:7820:29;-1:-1:-1;;;;;581:7820:29;;;;;;;;;;9987:27:7;581:7820:29;;;;;;10066:31:7;9682:432::o;9888:90::-;581:7820:29;;;9936:31:7;;;-1:-1:-1;9936:31:7;;;581:7820:29;9936:31:7;9790:89;581:7820:29;;;9836:32:7;;;9811:1;9836:32;;;581:7820:29;9836:32:7;9682:432;;-1:-1:-1;;;;;581:7820:29;;;9794:19:7;9790:89;;581:7820:29;;9892:21:7;9888:90;;9987:18;:27;:18;-1:-1:-1;;;;;581:7820:29;;;9987:11:7;581:7820:29;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;581:7820:29;;;;;;;:::o;1265:222:14:-;;1366:16;;-1:-1:-1;;;;;581:7820:29;-1:-1:-1;581:7820:29;1121:7:14;581:7820:29;;;-1:-1:-1;581:7820:29;;;;;;;;;759:395:14;;1366:16;1396;;;1392:89;;1265:222;;:::o;1392:89::-;581:7820:29;;;-1:-1:-1;;;;;581:7820:29;;1435:35:14;;;;581:7820:29;1435:35:14;;;581:7820:29;;;;;1435:35:14;6887:260:20;;7105:8;6887:260;;7051:25;6887:260;7051:25;:::i;:::-;7105:8;;;;;:::i;5203:1551::-;;;6283:66;6270:79;;6266:164;;581:7820:29;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6541:24:20;;;;;;;;;;;;;;-1:-1:-1;;;;;581:7820:29;;6579:20:20;6575:113;;6698:49;;5203:1551;:::o;6575:113::-;6615:62;;;6541:24;6615:62;;:::o;6541:24::-;581:7820:29;;;;;;;;;;6266:164:20;6365:54;;;6381:1;6365:54;6385:30;6365:54;;:::o;581:7820:29:-;;-1:-1:-1;581:7820:29;;;:::o;:::-;-1:-1:-1;;;581:7820:29;;;;;;;;7280:532:20;581:7820:29;;;:::i;:::-;7366:29:20;;;7411:7;;:::o;7362:444::-;581:7820:29;;;:::i;:::-;7471:29:20;7462:38;;7471:29;;7523:23;581:7820:29;;7523:23:20;;;;7458:348;581:7820:29;;;:::i;:::-;7576:35:20;7567:44;;7576:35;;581:7820:29;;7634:46:20;;;;;;581:7820:29;;;;;10668:60:7;7563:243:20;581:7820:29;;7710:30:20;581:7820:29;;:::i;:::-;7701:39:20;7697:109;;7563:243;7280:532::o;7697:109::-;581:7820:29;;7763:32:20;;;;;;581:7820:29;;;;;;10668:60:7;3945:262:21;-1:-1:-1;;;;;4038:11:21;581:7820:29;4029:4:21;4021:28;:63;;;3945:262;4017:184;;;4107:22;4100:29;:::o;4017:184::-;581:7820:29;;4304:80:21;;;581:7820:29;2079:95:21;581:7820:29;;4326:11:21;581:7820:29;2079:95:21;;581:7820:29;4339:14:21;2079:95;;;581:7820:29;4355:13:21;2079:95;;;581:7820:29;4029:4:21;2079:95;;;581:7820:29;2079:95:21;4304:80;;;;;:::i;:::-;581:7820:29;4294:91:21;;4160:30;:::o;4021:63::-;4070:14;;4053:13;:31;4021:63;;5017:176;3993:249:22;5017:176:21;5153:20;;:::i;:::-;3993:249:22;;;;;;;;;;;;;;;;5017:176:21;:::o;3368:267:17:-;1390:66;3491:46;;1390:66;;;2625:40;;2679:11;2688:2;2679:11;;2675:69;;581:7820:29;;;;;;:::i;:::-;2324:106:17;;2311:2;581:7820:29;;2324:106:17;3553:22;:::o;2675:69::-;2713:20;581:7820:29;;2713:20:17;;;;3487:142;-1:-1:-1;581:7820:29;;6225:13:21;581:7820:29;;-1:-1:-1;581:7820:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1390:66:17;;;;;;;:::i;581:7820:29:-;6225:13:21;-1:-1:-1;581:7820:29;;;-1:-1:-1;;581:7820:29;;;;;;;-1:-1:-1;1390:66:17;;-1:-1:-1;;581:7820:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1390:66:17;581:7820:29;;;-1:-1:-1;;581:7820:29;;;;;;;;;6225:13:21;581:7820:29;;;;;;;3368:267:17;1390:66;3491:46;;1390:66;;;2625:40;;2679:11;2688:2;2679:11;;2675:69;;581:7820:29;;;;;;:::i;3487:142:17:-;-1:-1:-1;581:7820:29;;6683:16:21;581:7820:29;;-1:-1:-1;581:7820:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1390:66:17;;;;;;;:::i;581:7820:29:-;6683:16:21;-1:-1:-1;581:7820:29;;;-1:-1:-1;;581:7820:29;;;;;;;-1:-1:-1;1390:66:17;;-1:-1:-1;;581:7820:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4174:218:24;581:7820:29;4254:25:24;;;;4250:105;;581:7820:29;4174:218:24;:::o;4250:105::-;581:7820:29;;;;4302:42:24;;;;4333:3;4302:42;;;581:7820:29;;;;;4302:42:24;14296:213;581:7820:29;14374:24:24;;;;14370:103;;581:7820:29;14296:213:24;:::o;14370:103::-;581:7820:29;;;;14421:41:24;;;;14452:2;14421:41;;;581:7820:29;;;;;14421:41:24;581:7820:29;;-1:-1:-1;;581:7820:29;;;;;;;:::o;:::-;;10000:1:26;581:7820:29;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;-1:-1:-1;;;581:7820:29;;;;;;;;20567:5181:23;20733:1;20728:6;;;20724:53;;20733:1;21704:14;21772:8;21765:16;;;21761:92;;20567:5181;25314:18;25204;25094;24985;24874;24765;25703:28;21870:15;22385:6;21870:15;21877:7;25724:6;21870:15;;;21866:90;;20567:5181;21980:7;21973:15;;;21969:90;;20567:5181;22083:7;22076:15;;;22072:89;;20567:5181;22185:6;22178:14;;;22174:87;;20567:5181;22285:6;22278:14;;;22274:87;;20567:5181;22378:14;;22374:61;;20567:5181;22861:1;581:7820:29;20733:1:23;581:7820:29;24771:6:23;;;;:::i;:::-;581:7820:29;;;;;24765:18:23;24880:6;;;;:::i;24874:18::-;24991:6;;;;:::i;24985:18::-;25100:6;;;;:::i;25094:18::-;25210:6;;;;:::i;25204:18::-;25320:6;;;;:::i;25314:18::-;25724:6;;;:::i;:::-;25719:11;;;581:7820:29;25703:28:23;581:7820:29;;20567:5181:23;:::o;22374:61::-;20733:1;581:7820:29;22374:61:23;;22274:87;581:7820:29;;;;;22274:87:23;;;22174;581:7820:29;;;;;22174:87:23;;;22072:89;581:7820:29;;;;;22072:89:23;;;21969:90;581:7820:29;;;;;21969:90:23;;;21866;581:7820:29;;;;;21866:90:23;;;21761:92;-1:-1:-1;581:7820:29;;-1:-1:-1;581:7820:29;;;;21761:92:23;;10311:206:26;7419:17:2;581:7820:29;10406:17:26;;10447:8;;;:63;;10406:17;10311:206;:::o;10447:63::-;581:7820:29;-1:-1:-1;;581:7820:29;;;;;7419:17:2;14441:109:26;;;;581:7820:29;;;10311:206:26;:::o;:::-;581:7820:29;;10406:17:26;;10447:8;;;:63;;;10406:17;10311:206;:::o;10447:63::-;-1:-1:-1;;581:7820:29;;;;;;;;14441:109:26;;;;;;;581:7820:29;;;10311:206:26;:::o;581:7820:29:-;;;;;;;;-1:-1:-1;581:7820:29;;-1:-1:-1;581:7820:29;;;-1:-1:-1;581:7820:29;:::o;:::-;-1:-1:-1;;;581:7820:29;;;;;;;;;7419:17:2;581:7820:29;;;;;;;;;;;;7419:17:2;581:7820:29;;;;;;7419:17:2;-1:-1:-1;581:7820:29;;;;;;;;;;;-1:-1:-1;;581:7820:29;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;581:7820:29;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;581:7820:29;;;;;;;;11659:922:26;7419:17:2;581:7820:29;11659:922:26;;;11866:7;;;;11938;11918:28;11938:7;;:::i;:::-;7419:17:2;14441:109:26;;;;14291:265;;11918:28;581:7820:29;;;;;;;;;;;;12105:13:26;;;12101:89;;12253:14;;;;;12287:19;;;581:7820:29;;-1:-1:-1;;581:7820:29;;;;;;;;;;;;12287:19:26;581:7820:29;;12425:25:26;;:::o;12249:163::-;581:7820:29;;12345:52:26;581:7820:29;12355:41:26;581:7820:29;;:::i;:::-;;;;;;;;12355:41:26;581:7820:29;;;12355:41:26;;;581:7820:29;12345:52:26;:::i;:::-;12249:163;;12101:89;12145:30;581:7820:29;;12145:30:26;;;;11862:713;581:7820:29;12481:52:26;581:7820:29;12491:41:26;581:7820:29;;:::i;12491:41:26:-;581:7820:29;;;12491:41:26;;;581:7820:29;12345:52:26;:::i;12481:::-;11872:1;12547:17;;:::o;11659:922::-;581:7820:29;;11659:922:26;;;11866:7;;;;11938;11918:28;11938:7;;:::i;:::-;11918:28;14441:109;;;;;;14291:265;;11918:28;581:7820:29;;;;;;;;;;;;12105:13:26;;;12101:89;;12253:14;;;;;12287:19;;;;581:7820:29;;-1:-1:-1;;581:7820:29;;;;;;;;;;;;12249:163:26;581:7820:29;;;12345:52:26;581:7820:29;12355:41:26;581:7820:29;;:::i;:::-;;;;;;;;12355:41:26;581:7820:29;;;12355:41:26;;;581:7820:29;12345:52:26;:::i;11862:713::-;581:7820:29;;12481:52:26;581:7820:29;12491:41:26;581:7820:29;;:::i;12491:41:26:-;581:7820:29;;;12491:41:26;;;581:7820:29;12345:52:26;:::i;12931:433::-;;13114:10;;;;;;13346:11;;12931:433;:::o;13107:230::-;5967:5:23;;;;;5977;;;;581:7820:29;;;;;;;;;5234:17:2;-1:-1:-1;14441:109:26;581:7820:29;14441:109:26;;;;581:7820:29;;;;;-1:-1:-1;13191:136:26;581:7820:29;;;13250:10:26;13191:136;;13107:230;;;13191:136;13305:7;;;;;;:::i;:::-;13191:136;;;12931:433;;;13114:10;;;;;;13346:11;;;12931:433;:::o;13107:230::-;5967:5:23;;;;;;5977;;;;581:7820:29;;;;;;;;;13140:37:26;14441:109;-1:-1:-1;14441:109:26;;;581:7820:29;;14441:109:26;;;;;581:7820:29;;;;;-1:-1:-1;13191:136:26;581:7820:29;;;13250:10:26;;13191:136;;13107:230;;;;13191:136;13305:7;;;;;;;;:::i;:::-;13191:136;;;581:7820:29;;;;;;;;:::o;:::-;-1:-1:-1;581:7820:29;3589:29;581:7820;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;581:7820:29;;;;;;;;;;;;:::o;:::-;-1:-1:-1;581:7820:29;3931:37;581:7820;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;581:7820:29;;;;;;;;;;-1:-1:-1;;581:7820:29;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1191:4::-;;;;;;;;;;;;;;;;;;:::o;581:7820::-;;;;;;;;;;;;;;;;;-1:-1:-1;;581:7820:29;;;;;;;:::i;:::-;;;;-1:-1:-1;581:7820:29;;;;:::o;:::-;;;:::o;5515:318::-;-1:-1:-1;;;;;581:7820:29;3076:9:7;581:7820:29;3076:9:7;581:7820:29;;;3076:9:7;581:7820:29;;5651:12;;5647:26;;5722:15;581:7820;5740:17;581:7820;;;3076:9:7;581:7820:29;;;;;;;;;1191:4;;;;;;;;;;581:7820;;5515:318;:::o;5647:26::-;5665:8;3076:9:7;5665:8:29;:::o;7276:399:2:-;-1:-1:-1;;;;;581:7820:29;;;;7276:399:2;581:7820:29;;7379:18:2;;7375:107;;7276:399;581:7820:29;7495:16:2;;;7491:110;;7276:399;7661:6;581:7820:29;7395:1:2;581:7820:29;5674:10:2;581:7820:29;;;;7395:1:2;581:7820:29;;;;7395:1:2;581:7820:29;;7395:1:2;581:7820:29;;;7661:6:2;;:::i;7491:110::-;7563:26;;;:::i;:::-;1020:12:27;1002:31;1020:12;1002:31;:::i;:::-;581:7820:29;9312:14:2;;;;;:::i;:::-;581:7820:29;;;;;;;;;;7661:6:2;8311:38:26;;;;:::i;:::-;7491:110:2;;;;;;7375:107;7444:26;;;;;:::i;:::-;1020:12:27;1002:31;1020:12;1002:31;:::i;:::-;581:7820:29;9312:14:2;;;;;:::i;:::-;581:7820:29;;;;;;;;;8311:38:26;;;;;:::i;:::-;7375:107:2;;;"},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","DOMAIN_SEPARATOR()":"3644e515","agentConfigJSON()":"81a2b38f","agentName()":"3c19804e","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","archetype()":"0e4b2285","authorizedRevenueSources(address)":"881e1cff","balanceOf(address)":"70a08231","checkpoints(address,uint32)":"f1127ed8","claimRevenue()":"564f4f76","claimedRevenue(address)":"139ba769","clock()":"91ddadf4","contractBalance()":"8b7afe2e","decimals()":"313ce567","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","depositRevenue()":"44e43cb8","eip712Domain()":"84b0196e","emergencyWithdraw()":"db2e21bc","getAgentInfo()":"4eea6d79","getClaimableRevenue(address)":"4f4dac6f","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","metadataURI()":"03ee438c","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","owner()":"8da5cb5b","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceOwnership()":"715018a6","revenuePerToken()":"084278ec","setAgentConfigJSON(string)":"d5f6aeb4","setMetadataURI(string)":"750521f5","setRevenueSource(address,bool)":"1f454923","symbol()":"95d89b41","totalDistributedRevenue()":"b20a6f36","totalRevenue()":"bf2d9e0b","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","unclaimedRevenue(address)":"9a6f99f9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"agentName_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"archetype_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadataURI_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"agentConfigJSON_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededSafeSupply\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"clock\",\"type\":\"uint48\"}],\"name\":\"ERC5805FutureLookup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC6372InconsistentClock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAgentConfig\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMetadataURI\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoClaimableRevenue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedRevenueSource\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newAgentConfigJSON\",\"type\":\"string\"}],\"name\":\"AgentConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newMetadataURI\",\"type\":\"string\"}],\"name\":\"MetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RevenueClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"RevenueDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"authorized\",\"type\":\"bool\"}],\"name\":\"RevenueSourceAuthorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"agentConfigJSON\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"agentName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"archetype\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedRevenueSources\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"_key\",\"type\":\"uint48\"},{\"internalType\":\"uint208\",\"name\":\"_value\",\"type\":\"uint208\"}],\"internalType\":\"struct Checkpoints.Checkpoint208\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRevenue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimedRevenue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositRevenue\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAgentInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"agentName_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"archetype_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadataURI_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRevenue_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDistributedRevenue_\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"agentConfigJSON_\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getClaimableRevenue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"metadataURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revenuePerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newAgentConfigJSON\",\"type\":\"string\"}],\"name\":\"setAgentConfigJSON\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newMetadataURI\",\"type\":\"string\"}],\"name\":\"setMetadataURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"authorized\",\"type\":\"bool\"}],\"name\":\"setRevenueSource\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDistributedRevenue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRevenue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"unclaimedRevenue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token representing ownership in an AI creative agent Features revenue distribution and governance capabilities\",\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20ExceededSafeSupply(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded, introducing a risk of votes overflowing.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"ERC5805FutureLookup(uint256,uint48)\":[{\"details\":\"Lookup to future votes is not available.\"}],\"ERC6372InconsistentClock()\":[{\"details\":\"The clock was incorrectly modified.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Machine-readable description of the clock as specified in ERC-6372.\"},\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"agentConfigJSON()\":{\"details\":\"Returns the complete agent configuration JSON\"},\"agentName()\":{\"details\":\"Returns the agent's creative name\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"archetype()\":{\"details\":\"Returns the agent's archetype (e.g., \\\"Digital Painter\\\", \\\"Music Producer\\\")\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"claimRevenue()\":{\"details\":\"Claims accumulated revenue for the caller\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\"},\"contractBalance()\":{\"details\":\"Returns contract's ETH balance\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"depositRevenue()\":{\"details\":\"Deposits revenue to be distributed among token holders Can be called by authorized sources (e.g., royalty contracts, licensing)\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"emergencyWithdraw()\":{\"details\":\"Emergency withdrawal function (onlyOwner)\"},\"getAgentInfo()\":{\"details\":\"Returns comprehensive agent info\"},\"getClaimableRevenue(address)\":{\"details\":\"Returns claimable revenue for a specific address\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"metadataURI()\":{\"details\":\"Returns the metadata URI (IPFS hash containing agent config)\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setAgentConfigJSON(string)\":{\"details\":\"Updates the agent configuration JSON (onlyOwner)\"},\"setMetadataURI(string)\":{\"details\":\"Updates the metadata URI (onlyOwner)\"},\"setRevenueSource(address,bool)\":{\"details\":\"Authorizes or deauthorizes a revenue source\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unclaimedRevenue(address)\":{\"details\":\"Returns total unclaimed revenue for an address\"}},\"title\":\"AgentToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AgentToken.sol\":\"AgentToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0x3f91c79d6f55db9e4fc36e1cfe6a483a7b0f5be60fecbd979555071673746d47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b1e3c64cbeb2757a2a1a45c69f7f3984a93b0eadd1016341b64f9d94f89d7c4\",\"dweb:/ipfs/QmP1Mj14U4vMTFa2rv2nodMbWSCov2ac9Md8W2aUcgYdKX\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x62dc9346044aabf22d78541bd495aa6ca05a7f5100aed26196ba35d40b59fcb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5221df4501c74cd4493fee1a0f0788e02c4dc78c3c601e9f557f557c5a53ea92\",\"dweb:/ipfs/QmZpzyYY9dKLrgvYhXSHT93jwqb1UGvtGNMQk5dpECY5pa\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x0c60057e7351874f086db8dc9291b7ada9ad62cb7725befd2991430d04a74572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33cdfd1fc36410d45046f88ff9864350146b194736c32834baa38d99b843ffbe\",\"dweb:/ipfs/QmdVmqgFKjgEBURy4KUwWDA6J1LEg1BKcHcXsx4nkeHAD2\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0x93ce66a307d66cb14e95dbc8f20641cedf48b2d060bf3bda431d62a4493e6e8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10d4122ee13fd8dcd2f468a86031665345d2dfdda76993d1f51201bdeb746f9d\",\"dweb:/ipfs/QmWxbbYEgyDCjwT4ZtNwujJwB4vdnR2qEKwL2Zrz9JoSDU\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0x36776530f012618bc7526ceb28e77b85e582cb12d9b9466a71d4bd6bf952e4cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f867d046908497287d8a67643dd5d7e38c4027af4ab0a74ffbe1d6790c383c6\",\"dweb:/ipfs/QmQ7s9gMP1nkwThFmoDifnGgpUMsMe5q5ZrAxGDsNnRGza\"]},\"contracts/AgentToken.sol\":{\"keccak256\":\"0xa628c8bbd1c5b5d758dd8bfae54b94f2a68c74907e42611ce831d37bc136d608\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a82c89aad534e69bdb40a061ecaf63b85ba051242b64e7b668c0e55a8cc26eb\",\"dweb:/ipfs/Qmf3jkp4LNjKkm6QF37eZ571Nfu3ctKrwTDXWekNmFxTWZ\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":984,"contract":"contracts/AgentToken.sol:AgentToken","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":990,"contract":"contracts/AgentToken.sol:AgentToken","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":992,"contract":"contracts/AgentToken.sol:AgentToken","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":994,"contract":"contracts/AgentToken.sol:AgentToken","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":996,"contract":"contracts/AgentToken.sol:AgentToken","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":4249,"contract":"contracts/AgentToken.sol:AgentToken","label":"_nameFallback","offset":0,"slot":"5","type":"t_string_storage"},{"astId":4251,"contract":"contracts/AgentToken.sol:AgentToken","label":"_versionFallback","offset":0,"slot":"6","type":"t_string_storage"},{"astId":1946,"contract":"contracts/AgentToken.sol:AgentToken","label":"_nonces","offset":0,"slot":"7","type":"t_mapping(t_address,t_uint256)"},{"astId":270,"contract":"contracts/AgentToken.sol:AgentToken","label":"_delegatee","offset":0,"slot":"8","type":"t_mapping(t_address,t_address)"},{"astId":275,"contract":"contracts/AgentToken.sol:AgentToken","label":"_delegateCheckpoints","offset":0,"slot":"9","type":"t_mapping(t_address,t_struct(Trace208)8592_storage)"},{"astId":278,"contract":"contracts/AgentToken.sol:AgentToken","label":"_totalCheckpoints","offset":0,"slot":"10","type":"t_struct(Trace208)8592_storage"},{"astId":8,"contract":"contracts/AgentToken.sol:AgentToken","label":"_owner","offset":0,"slot":"11","type":"t_address"},{"astId":2063,"contract":"contracts/AgentToken.sol:AgentToken","label":"_status","offset":0,"slot":"12","type":"t_uint256"},{"astId":10948,"contract":"contracts/AgentToken.sol:AgentToken","label":"_agentName","offset":0,"slot":"13","type":"t_string_storage"},{"astId":10950,"contract":"contracts/AgentToken.sol:AgentToken","label":"_archetype","offset":0,"slot":"14","type":"t_string_storage"},{"astId":10952,"contract":"contracts/AgentToken.sol:AgentToken","label":"_metadataURI","offset":0,"slot":"15","type":"t_string_storage"},{"astId":10954,"contract":"contracts/AgentToken.sol:AgentToken","label":"_agentConfigJSON","offset":0,"slot":"16","type":"t_string_storage"},{"astId":10956,"contract":"contracts/AgentToken.sol:AgentToken","label":"totalRevenue","offset":0,"slot":"17","type":"t_uint256"},{"astId":10958,"contract":"contracts/AgentToken.sol:AgentToken","label":"totalDistributedRevenue","offset":0,"slot":"18","type":"t_uint256"},{"astId":10962,"contract":"contracts/AgentToken.sol:AgentToken","label":"claimedRevenue","offset":0,"slot":"19","type":"t_mapping(t_address,t_uint256)"},{"astId":10966,"contract":"contracts/AgentToken.sol:AgentToken","label":"lastClaimSnapshot","offset":0,"slot":"20","type":"t_mapping(t_address,t_uint256)"},{"astId":10971,"contract":"contracts/AgentToken.sol:AgentToken","label":"revenuePerToken","offset":0,"slot":"21","type":"t_uint256"},{"astId":10975,"contract":"contracts/AgentToken.sol:AgentToken","label":"authorizedRevenueSources","offset":0,"slot":"22","type":"t_mapping(t_address,t_bool)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(Checkpoint208)8597_storage)dyn_storage":{"base":"t_struct(Checkpoint208)8597_storage","encoding":"dynamic_array","label":"struct Checkpoints.Checkpoint208[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_struct(Trace208)8592_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct Checkpoints.Trace208)","numberOfBytes":"32","value":"t_struct(Trace208)8592_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Checkpoint208)8597_storage":{"encoding":"inplace","label":"struct Checkpoints.Checkpoint208","members":[{"astId":8594,"contract":"contracts/AgentToken.sol:AgentToken","label":"_key","offset":0,"slot":"0","type":"t_uint48"},{"astId":8596,"contract":"contracts/AgentToken.sol:AgentToken","label":"_value","offset":6,"slot":"0","type":"t_uint208"}],"numberOfBytes":"32"},"t_struct(Trace208)8592_storage":{"encoding":"inplace","label":"struct Checkpoints.Trace208","members":[{"astId":8591,"contract":"contracts/AgentToken.sol:AgentToken","label":"_checkpoints","offset":0,"slot":"0","type":"t_array(t_struct(Checkpoint208)8597_storage)dyn_storage"}],"numberOfBytes":"32"},"t_uint208":{"encoding":"inplace","label":"uint208","numberOfBytes":"26"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint48":{"encoding":"inplace","label":"uint48","numberOfBytes":"6"}}}}}}}}